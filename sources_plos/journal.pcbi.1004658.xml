<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article article-type="research-article" dtd-version="3.0" xml:lang="en" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1004658</article-id>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-15-01390</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Sequence alignment</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Sequence alignment</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Biological databases</subject><subj-group><subject>Sequence databases</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Sequence databases</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Sequence databases</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Marker genes</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Marker genes</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Database searching</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>DNA sequencing</subject><subj-group><subject>Gene sequencing</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>DNA sequencing</subject><subj-group><subject>Gene sequencing</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Computational techniques</subject><subj-group><subject>Split-decomposition method</subject><subj-group><subject>Multiple alignment calculation</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>DNA sequencing</subject><subj-group><subject>Next-generation sequencing</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>DNA sequencing</subject><subj-group><subject>Next-generation sequencing</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Computational biology</subject><subj-group><subject>Genome analysis</subject><subj-group><subject>Transcriptome analysis</subject><subj-group><subject>Next-generation sequencing</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Genomics</subject><subj-group><subject>Genome analysis</subject><subj-group><subject>Transcriptome analysis</subject><subj-group><subject>Next-generation sequencing</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Heuristic alignment procedure</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Molecular biology techniques</subject><subj-group><subject>Sequencing techniques</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Heuristic alignment procedure</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Bioinformatics</subject><subj-group><subject>Software-aided sequence analysis</subject><subj-group><subject>Heuristic alignment procedure</subject></subj-group></subj-group></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>NINJA-OPS: Fast Accurate Marker Gene Alignment Using Concatenated Ribosomes</article-title>
<alt-title alt-title-type="running-head">NINJA-OPS: Fast Accurate Marker Gene Alignment</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Al-Ghalith</surname>
<given-names>Gabriel A.</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Montassier</surname>
<given-names>Emmanuel</given-names>
</name>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
<xref ref-type="aff" rid="aff003"><sup>3</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Ward</surname>
<given-names>Henry N.</given-names>
</name>
<xref ref-type="aff" rid="aff004"><sup>4</sup></xref>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<name name-style="western">
<surname>Knights</surname>
<given-names>Dan</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff003"><sup>3</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
</contrib-group>
<aff id="aff001"><label>1</label> <addr-line>Biomedical Informatics and Computational Biology, University of Minnesota, Minneapolis, Minnesota, United States of America</addr-line></aff>
<aff id="aff002"><label>2</label> <addr-line>University of Nantes, Nantes, France</addr-line></aff>
<aff id="aff003"><label>3</label> <addr-line>Department of Computer Science and Engineering, University of Minnesota, Minneapolis, Minnesota, United States of America</addr-line></aff>
<aff id="aff004"><label>4</label> <addr-line>Lawrence University, Appleton, Wisconsin, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Eisen</surname>
<given-names>Jonathan A.</given-names>
</name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1"><addr-line>University of California Davis, UNITED STATES</addr-line></aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<fn fn-type="con" id="contrib001">
<p>Conceived and designed the experiments: GAA DK. Performed the experiments: GAA EM DK. Analyzed the data: GAA EM DK. Contributed reagents/materials/analysis tools: GAA HNW DK. Wrote the paper: GAA EM DK.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">dknights@umn.edu</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<day>28</day>
<month>1</month>
<year>2016</year>
</pub-date>
<pub-date pub-type="collection">
<month>1</month>
<year>2016</year>
</pub-date>
<volume>12</volume>
<issue>1</issue>
<elocation-id>e1004658</elocation-id>
<history>
<date date-type="received">
<day>1</day>
<month>9</month>
<year>2015</year>
</date>
<date date-type="accepted">
<day>12</day>
<month>11</month>
<year>2015</year>
</date>
</history>
<permissions>
<copyright-year>2016</copyright-year>
<copyright-holder>Al-Ghalith et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1004658"/>
<abstract>
<p>The explosion of bioinformatics technologies in the form of next generation sequencing (NGS) has facilitated a massive influx of genomics data in the form of short reads. Short read mapping is therefore a fundamental component of next generation sequencing pipelines which routinely match these short reads against reference genomes for contig assembly. However, such techniques have seldom been applied to microbial marker gene sequencing studies, which have mostly relied on novel heuristic approaches. We propose NINJA Is Not Just Another OTU-Picking Solution (NINJA-OPS, or NINJA for short), a fast and highly accurate novel method enabling reference-based marker gene matching (picking Operational Taxonomic Units, or OTUs). NINJA takes advantage of the Burrows-Wheeler (BW) alignment using an artificial reference chromosome composed of concatenated reference sequences, the “concatesome,” as the BW input. Other features include automatic support for paired-end reads with arbitrary insert sizes. NINJA is also free and open source and implements several pre-filtering methods that elicit substantial speedup when coupled with existing tools. We applied NINJA to several published microbiome studies, obtaining accuracy similar to or better than previous reference-based OTU-picking methods while achieving an order of magnitude or more speedup and using a fraction of the memory footprint. NINJA is a complete pipeline that takes a FASTA-formatted input file and outputs a QIIME-formatted taxonomy-annotated BIOM file for an entire MiSeq run of human gut microbiome 16S genes in under 10 minutes on a dual-core laptop.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author Summary</title>
<p>The analysis of the microbial communities in and around us is a growing field of study, partly because of its major implications for human health, and partly because high-throughput DNA sequencing technology has only recently emerged to enable us to quantitatively study them. One of the most fundamental steps in analyzing these microbial communities is matching the microbial marker genes in environmental samples with existing databases to determine which microbes are present. The current techniques for doing this analysis are either slow or closed-source. We present an alternative technique that takes advantage of a high-speed Burrows-Wheeler alignment procedure combined with rapid filtering and parsing of the data to remove bottlenecks in the pipeline. We achieve an order-of-magnitude speedup over conventional techniques without sacrificing accuracy or memory use, and in some cases improving both significantly. Thus our method allows more biologists to process their own sequencing data without specialized computing resources, and it obtains more accurate and even optimal taxonomic annotation for their marker gene sequencing data.</p>
</abstract>
<funding-group>
<funding-statement>This work was funded by NIH R01AI121383 and the Robert Tournut award of the French National Society of Gastroenterology (EM). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="5"/>
<table-count count="0"/>
<page-count count="14"/>
</counts>
<custom-meta-group>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>The software described in this article is available here: <ext-link ext-link-type="uri" xlink:href="http://ninja-ops.ninja/" xlink:type="simple">http://ninja-ops.ninja/</ext-link> and here: <ext-link ext-link-type="uri" xlink:href="https://github.com/GabeAl/NINJA-OPS" xlink:type="simple">https://github.com/GabeAl/NINJA-OPS</ext-link>.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<disp-quote>
<p>This is a <italic>PLOS Computational Biology</italic> Methods paper</p>
</disp-quote>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>The advent of next-generation sequencing technologies, combined with major advances in molecular and bioinformatics techniques, have enabled rapid growth in the culture-independent sequencing of amplified marker genes (amplicons) from environmental microbial communities. The major benefit of amplicon sequencing is that it allows reasonable resolution of taxonomic composition in these communities at a fraction of the cost of deep metagenomic sequencing. Once these sequences are generated, a common analysis approach is to bin them by sequence identity into operational taxonomic units (OTUs)[<xref ref-type="bibr" rid="pcbi.1004658.ref001">1</xref>–<xref ref-type="bibr" rid="pcbi.1004658.ref004">4</xref>]. For environments containing a large fraction of novel taxa, one must rely on unsupervised (“de novo”) clustering of amplicons to convert the raw reads to features representing organisms belonging to distinct evolutionary clades. On the other hand, in habitats with mostly well-characterized microbes, we have the option of matching the generated amplicon sequences to reference databases containing example marker genes from known taxa [<xref ref-type="bibr" rid="pcbi.1004658.ref005">5</xref>]. A hybrid approach may also be used, where sequences are first compared to a reference database, with subsequent de novo clustering of those that failed to match. As the number of published culture-independent amplicon-based surveys of microbial communities continues to grow, our ability to rely on reference sequences also increases. However, although the crucial analysis step of mapping generated amplicons to reference marker genes has received much attention from the microbial bioinformatics field, with a variety of solutions proposed [<xref ref-type="bibr" rid="pcbi.1004658.ref006">6</xref>–<xref ref-type="bibr" rid="pcbi.1004658.ref010">10</xref>], there is much room for improvement in terms of speed, accuracy, memory footprint, and openness of code. NINJA-OPS, our portable, open-source OTU picking pipeline, realizes these goals.</p>
<p>Originally conceived as a means to make data more compressible, the Burrows-Wheeler transform (BWT) [<xref ref-type="bibr" rid="pcbi.1004658.ref011">11</xref>] is a lossless, reversible transformation that effectively positions series of like characters close to each other in a way that can easily be undone to recover the original data. It involves creating a circular suffix array, sorting the final column lexicographically, and storing that column as the transformed data for later compression. This algorithm also has the interesting property of enabling rapid substring search, with O(1) order of growth in finding exact string matches. As long as there is an efficient indexing scheme that stores the indices of the transformed bases into the original string, the BWT can be used for fast database substring search amounting to binary searching (or looking up via rank matrix) the transformed reference string representation and mapping back to the original, and has hence been employed in a number of commonly used DNA alignment tools [<xref ref-type="bibr" rid="pcbi.1004658.ref011">11</xref>–<xref ref-type="bibr" rid="pcbi.1004658.ref014">14</xref>]. Although these tools are approximate methods due to the high additional computational cost of performing optimal local or global alignment search when mismatches occur, they are generally fast and widely used in the genome-enabled research community (<ext-link ext-link-type="uri" xlink:href="http://bowtie-bio.sourceforge.net/bowtie2/other_tools.shtml" xlink:type="simple">http://bowtie-bio.sourceforge.net/bowtie2/other_tools.shtml</ext-link>).</p>
<p>Here we demonstrate that BWT-enabled DNA alignment can be effectively used for accurate and fast assignment of marker-gene sequences to a reference database. We present the NINJA-OPS pipeline utilizing several novel contributions to achieve an order of magnitude speedup and higher accuracy when compared to commonly used approaches (or up to two orders of magnitude when combined with denoising). To test the accuracy and efficacy of our approach, we perform closed-reference OTU-picking on a wide range of biological data sets from varied environments.</p>
<p>Accuracy was evaluated using an optimal aligner which produces a BLAST-style %ID for each query sequence against the reference sequence chosen by the OTU picking method. Speed was assessed as the elapsed time from parsing the correctly-formatted input FASTA file, which is accelerated by NINJA’s fast C parser and simple format requirements, until the alignment (against a pre-generated database) has terminated. However, it may be useful to note that NINJA also significantly speeds up the subsequent steps of tallying reads, incorporating taxonomic annotations, and producing an OTU table in sparse BIOM 1.0 format, as well as other steps prior to the alignment such as reverse complementing and trimming reads. Hence, the NINJA pipeline accelerates many stages of the OTU-picking pipeline in addition to the alignment step.</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Methods</title>
<sec id="sec003">
<title>Pipeline overview</title>
<p>The pipeline follows three stages: filtering, aligning, and parsing. After forming the concatenated reference string, called the “concatesome,” from the individual references, NINJA applies a powerful filtering step which uses a 3-way radix quicksort on string pointers to rapidly de-duplicate millions of reads, construct a sample dictionary, and output a reduced-size filtered FASTA file and sample dictionary (<xref ref-type="fig" rid="pcbi.1004658.g001">Fig 1</xref>). The program implements this lossless filtering approach as well as a lossy variant, making use of singleton filtering as well as statistical profiling over the entire set of reads to exclude reads with a user-defined number of duplicates or rare segments (k-mers) appearing below a user-defined threshold of prevalence. The lossy filtering, which is not enabled by default, is intended to identify reads with probable read error independently, and speeds up the resulting alignment by excluding such reads from the BWT aligner. This adds an additional speedup because BWT string matching spends a disproportionate amount of search effort to align erroneous or low-identity reads. Because choice of k (from 8 to 14) and prevalence threshold are highly domain- and dataset-specific, it is difficult to issue a general recommendation for this setting. Although we have found k = 8 to k = 14 at a threshold of 0.05%-0.01% to be a safe minimum for 16S data, user experimentation is recommended.</p>
<fig id="pcbi.1004658.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004658.g001</object-id>
<label>Fig 1</label>
<caption>
<title>Schematic of the NINJA pipeline.</title>
<p>NINJA core programs are represented by pentagons, data files by cylinders, processes within a program as lists, index operations as rounded rectangles, and other swappable programs by other shapes. The entire upper-left branch of the schematic (from input references to bowtie-build and TaxMap) does not need to be performed if using an existing database, such as that supplied with NINJA. The python wrapper encompasses the remaining two branches (bottom and right) for convenience. In general, Ninja_prep prepares the concatesome, Ninja_filter prepares the reads for alignment, bowtie2 (or any BWT-enabled aligner) performs the alignment, and Ninja_parse merges the various pieces into a complete OTU table.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.g001" xlink:type="simple"/>
</fig>
<p>The NINJA filter step also performs reverse-complementing and sequence length trimming at the same time as the other filtering steps. Because of this simultaneous multi-step filtering, no intermediate files are created prior to the alignment stage, and all filtering steps are performed rapidly in optimized C code on data structures already in memory. This takes a fraction of the time used by other filtering pipelines which perform sequential operations often written in general-purpose scripting languages and generate numerous large intermediate files after each step. Using the base NINJA filter parameters, the entire filtering process itself takes approximately 10–20% of the time it takes to align the resulting filtered file when using all optional filtering steps.</p>
<p>Next, the filtered reads are aligned against a reference database containing the (the concatesome) via any BWT-derived short read aligner such as BWA[<xref ref-type="bibr" rid="pcbi.1004658.ref011">11</xref>], Bowtie[<xref ref-type="bibr" rid="pcbi.1004658.ref013">13</xref>]/Bowtie2[<xref ref-type="bibr" rid="pcbi.1004658.ref012">12</xref>], hpg-aligner [<xref ref-type="bibr" rid="pcbi.1004658.ref015">15</xref>], SOAP2 [<xref ref-type="bibr" rid="pcbi.1004658.ref016">16</xref>]—or, more broadly, any read aligner whatsoever capable of outputting to headerless SAM format[<xref ref-type="bibr" rid="pcbi.1004658.ref017">17</xref>] and suppressing unmatched input reads. Utilizing SAM is much faster than BAM (binary compressed SAM) after deduplication, as the alignment step is not I/O bound and the overhead of BAM’s additional compression/decompression step can be significant. We have chosen to standardize NINJA around Bowtie2 for our tests and publish the command line options for Bowtie2 as we have found it to be suitable for the purposes of BLAST-identity-based OTU picking. Following alignment, the resulting SAM file is fed to the NINJA parsing step, which takes in the sample dictionary metadata as well as an optional taxonomy map to rapidly re-assign each de-duplicated read to the biological sample(s) in which it originally occurred, add taxonomy annotation to each picked OTU, bin all reads by their matched OTU into a sample-by-OTU matrix (OTU table), and output the result in sparse BIOM 1.0 format or a tab-delimited human-readable legacy QIIME format. This can also be incorporated into an open-reference OTU-picking pipeline.</p>
</sec>
<sec id="sec004">
<title>Burrows-Wheeler transform</title>
<p>The BWT has received a lot of attention in the alignment of short reads to a reference genome, and now enjoys routine use in clinical and other settings as a well-vetted technique for mapping short DNA reads to a longer reference, where it is known as Burrows-Wheeler alignment. The BWT is based on the principle that a long string of text can be reversibly transformed to reduce the complexity of substring queries to effectively two binary searches into the transformed representation of the original string, which is then converted back to indices into the original reference string with a short walk-back (the BW Last-First, or LF walk) or lookup. The efficacy of this approach in matching short reads to a reference database of numerous short reference marker genes has remained largely unexplored [<xref ref-type="bibr" rid="pcbi.1004658.ref001">1</xref>].</p>
<sec id="sec005">
<title>Forming the concatesome</title>
<p>We concatenate the reference gene sequences to form a single long string. Although this synthetic chromosome is highly repetitive, the BWT effectively enables alignment against all identical reference prefixes simultaneously, which are narrowed down as alignment progresses and differences (or errors) accrue. This enables us to leverage the advantages of the BW technique for amplicon matching and evaluate its quality and speed compared to some of the current heuristic techniques[<xref ref-type="bibr" rid="pcbi.1004658.ref007">7</xref>][<xref ref-type="bibr" rid="pcbi.1004658.ref018">18</xref>][<xref ref-type="bibr" rid="pcbi.1004658.ref019">19</xref>] that have emerged specifically to address the marker-gene matching problem in microbial metagenomics. This step also exists in varying forms and efficiencies in recent versions of some BWT-based read aligners. It is performed by NINJA in a rapid and unified way, enabling drop-in replacement of any BWT-based algorithm, by joining reference sequences them into a single long sequence and recording the location of each OTU in the new longer sequence. The concatesome is output as a new single-line FASTA file, and the original indices are output as an index table of OTU names and IDs. The concatesome serves as the reference for the BWT-enabled aligner to construct its database. For bowtie2, which we have used as the pipeline’s BWT aligner for the subsequent analyses, this is accomplished with the bowtie-build command.</p>
</sec>
<sec id="sec006">
<title>K-mer-based denoising</title>
<p>NINJA’s filter step implements a variant of 3-way radix quicksort [<xref ref-type="bibr" rid="pcbi.1004658.ref020">20</xref>] that achieves high binning and de-duplication performance on amplicon datasets using minimal RAM. This is due to its general high performance on strings combined with a median pivot scheme and increasing performance on data with larger numbers of duplicates, which is especially true for amplicon datasets. Trimming is implemented in <italic>C</italic> and is performed before deduplication during the parsing process by halting the read pointer and skipping to the next sequence, speeding up the parse and using less memory. Trimming at this stage can also speed up the subsequent deduplication by feeding shorter sequences to the sorting algorithm. Additionally, reads that are uniformly trimmed (preferably informed by average quality score prior to running NINJA) are more likely to have identical matches, resulting in a more condensed deduplicated output file and faster subsequent alignment. Reverse complementing is performed after any trimming at the time of output file writing by populating the write buffer in reverse with the result of a lookup performed on each sequential character in the read.</p>
<p>The k-mer-based lossy filtering step is performed by incrementing an array of counters indexed by the integer representation of each <italic>k</italic>-mer formed as the read head slides across each base in the read. Formally, each <italic>k</italic>-mer is represented as a binary string with 2<italic>k</italic> bits constructed as follows:
<disp-formula id="pcbi.1004658.e001">
<alternatives>
<graphic id="pcbi.1004658.e001g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004658.e001" xlink:type="simple"/>
<mml:math display="block" id="M1">
<mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>A</mml:mi><mml:mo>:</mml:mo><mml:mn>00</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>C</mml:mi><mml:mo>:</mml:mo><mml:mn>01</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>G</mml:mi><mml:mo>:</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>T</mml:mi><mml:mo>:</mml:mo><mml:mn>11</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow>
</mml:math>
</alternatives>
</disp-formula></p>
<p>The array of counters is of length 2<sup>2<italic>k</italic></sup>, and contains the number of instances observed of a given <italic>k</italic>-mer in the query DNA sequences. We use <italic>k</italic> = 8 by default (adjustable at compile-time with a practical maximum of 14), giving a counter array of length 2<sup>16</sup>, occupying up to 2<sup>16</sup> × 64 bits or 4 MB of RAM.</p>
<p>The counter is incremented per k-mer per read to represent the number of that k-mer’s duplicates in the dataset. The resulting count array after all sequences are parsed forms the empirical <italic>k</italic>-mer frequency distribution across all input reads. For amplicon data, the sorted frequency distribution resembles an exponential curve, with a small number of <italic>k</italic>-mers well represented and others with fewer occurrences (and many with none, depending on k-mer size). With sufficient number of input reads, the likelihood of observing a k-mer of a given rareness can be estimated from the area under the empirical frequency distribution. By checking the number of occurrences of a given k-mer against the empirical duplicate count at that probability threshold, we can determine if a given k-mer is an outlier and hence discard the read. The user can modify the stringency of outlier calling by setting a different observation frequency cutoff. We have found empirically that k-mers (with k = 8 to k = 14) appearing less often than 0.5%-0.1% (parameter D 0.0001 when calling the underlying ninja_filter executable) provide a reasonably safe threshold for low-strength 16S amplicon denoising, but the user is encouraged to evaluate various thresholds in context of the sequencing technology used, as well as read depth, community diversity, and experimental biases.</p>
</sec>
<sec id="sec007">
<title>Singleton-based denoising</title>
<p>The k-mer-based filtering provides a highly flexible and sensitive approach to denoising, but we have also implemented a very simple denoising step, which is to exclude all singleton (or doubleton, etc.) sequences from the alignment step. This is based on the premise that any sequences that appears twice or more is highly unlikely to have been the result of sequencing error, while sequences that appear exactly once are likely erroneous or so rare that they are just at the detection threshold. In several data sets we have found that this eliminates approximately 10% of the total sequences due to high likelihood that they contain errors. The resulting OTU assignments are generally unchanged when excluding singletons (<xref ref-type="supplementary-material" rid="pcbi.1004658.s001">S1 Fig</xref>), and yet the runtime achieves an additional 3-10x speedup over the non-denoised approach. We recommend these settings (parameter “-d 2”) for most users unless they have very low read counts.</p>
</sec>
<sec id="sec008">
<title>Alignment</title>
<p>We have conducted most of our testing using bowtie2 as the BWT-enabled aligner for NINJA. To perform OTU-picking in a manner consistent with current tools, a custom set of command-line parameters was used. We sought to maintain concordance with various USEARCH operating assumptions which have become the standard for marker gene sequencing (as used in the QIIME pipeline). The primary criterion used for matching should be percent identity, which weights all matches in an alignment 1, and mismatches of any type 0. The sum of all such scores across the alignment, spanning the length of the query sequence, is divided by the total length of that alignment. Matches to ambiguous bases are also not penalized, nor are sequential gaps weighted any differently than single gaps (no affine penalty). Further, once a reasonable match has been identified in the database matching these criteria, the search terminates. The following options for bowtie2 target this behavior:
<disp-formula id="pcbi.1004658.e002">
<alternatives>
<graphic id="pcbi.1004658.e002g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004658.e002" xlink:type="simple"/>
<mml:math display="block" id="M2">
<mml:mrow><mml:mi>-</mml:mi><mml:mi>-</mml:mi><mml:mtext>np</mml:mtext><mml:mspace width="0.25em"/><mml:mn>0</mml:mn><mml:mspace width="0.2em"/><mml:mi>-</mml:mi><mml:mi>-</mml:mi><mml:mtext>mp</mml:mtext><mml:mspace width="0.25em"/><mml:mi>"</mml:mi><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mi>"</mml:mi><mml:mspace width="0.2em"/><mml:mi>-</mml:mi><mml:mi>-</mml:mi><mml:mtext>rdg</mml:mtext><mml:mspace width="0.25em"/><mml:mi>"</mml:mi><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mi>"</mml:mi><mml:mspace width="0.2em"/><mml:mi>-</mml:mi><mml:mi>-</mml:mi><mml:mtext>rfg</mml:mtext><mml:mspace width="0.25em"/><mml:mi>"</mml:mi><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mi>"</mml:mi><mml:mspace width="0.2em"/><mml:mi>-</mml:mi><mml:mi>-</mml:mi><mml:mtext>score-min</mml:mtext><mml:mspace width="0.25em"/><mml:mi>"</mml:mi><mml:mtext>L</mml:mtext><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>-</mml:mi><mml:mn>0.03</mml:mn><mml:mi>"</mml:mi><mml:mspace width="0.25em"/><mml:mi>-</mml:mi><mml:mtext>k</mml:mtext><mml:mspace width="0.25em"/><mml:mn>1</mml:mn><mml:mspace width="0.2em"/><mml:mi>-</mml:mi><mml:mi>-</mml:mi><mml:mtext>norc</mml:mtext></mml:mrow>
</mml:math>
</alternatives>
</disp-formula></p>
<p>The percent ID is specified by setting the third argument to the minimum scoring function (—score-min) as %ID/100–1. In this case, to match with 97% ID, the parameter is set to 97/100–1 = -0.03. It is recommended that users not modify other parameters of bowtie2 pertaining to scoring criteria or output format, to maintain compatibility with the %ID match criterion and downstream NINJA parsing. It is further recommended to use the included python wrapper so that all steps from reading the formatted FASTA to OTU table creation are performed automatically for the user with a single command.</p>
<p>Additionally, for compatibility with NINJA and to save space, reads that fail to align are suppressed and no headers are printed to the output SAM file and the concatesome built with bowtie2-build is used as the reference database. The input sequences are the result of the filtering step. Full examples of the bowtie2 command are given in the online documentation. By default, we include presets for fast or very sensitive matching. Very sensitive matching typically improves the quality of matches noticeably at the expense of a 3-6x longer running time.</p>
</sec>
<sec id="sec009">
<title>Parsing</title>
<p>The final step in NINJA-OPS combines parsing the alignments, assigning OTU identity and taxonomy, and tallying OTU counts in each sample as an output OTU table (in BIOM 1.0 or <bold>legacy</bold> QIIME format). This is performed by NINJA-OPS using the information provided in sample dictionary generated by the filtering step, as well as the alignment data produced by the aligner and (optionally) a user-supplied table of OTU taxonomic assignments (which is also provided pre-compiled with NINJA-OPS). This parsing step is I/O bound and runs in under a second on our test computer and dataset.</p>
</sec>
<sec id="sec010">
<title>Comparison</title>
<p>To compare NINJA-OPS against USEARCH 8 (an earlier version of USEARCH is used in the QIIME pipeline [<xref ref-type="bibr" rid="pcbi.1004658.ref001">1</xref>]), we built the USEARCH database using the same multiple reference FASTA used to create the concatesome, the Greengenes 97% OTU representative sequence database. We performed single-strand alignment with the following fast USEARCH settings, which correspond to the stringency used for USEARCH in the QIIME pipeline:
<disp-formula id="pcbi.1004658.e003">
<alternatives>
<graphic id="pcbi.1004658.e003g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004658.e003" xlink:type="simple"/>
<mml:math display="block" id="M3">
<mml:mrow><mml:mtext>-usearch</mml:mtext><mml:mi>_</mml:mi><mml:mtext>global input.fna</mml:mtext><mml:mspace width="0.25em"/><mml:mtext>-db db.udb -id</mml:mtext><mml:mspace width="0.25em"/><mml:mn>0.97</mml:mn><mml:mspace width="0.25em"/><mml:mtext>-blast</mml:mtext><mml:mn>6</mml:mn><mml:mtext>out hits.b</mml:mtext><mml:mn>6</mml:mn><mml:mspace width="0.25em"/><mml:mtext>-strand plus -maxaccepts</mml:mtext><mml:mspace width="0.25em"/><mml:mn>1</mml:mn><mml:mspace width="0.25em"/><mml:mtext>-maxrejects</mml:mtext><mml:mspace width="0.25em"/><mml:mn>32</mml:mn><mml:mspace width="0.25em"/><mml:mtext>-threads</mml:mtext><mml:mspace width="0.25em"/><mml:mn>1</mml:mn></mml:mrow>
</mml:math>
</alternatives>
</disp-formula></p>
</sec>
</sec>
</sec>
<sec id="sec011" sec-type="results">
<title>Results</title>
<p>Benchmarks for this article were performed on a 2013 MacBook Air (MacBook Air 6,2) with a dual-core Core i7 CPU and 256GB SSD.</p>
<sec id="sec012">
<title>Preparation step</title>
<p>The runtime performance of the database generation is significantly longer than is practical to perform on the fly. This step only needs to be performed once for each reference database. Although ninja_prep performs the concatenation of references rapidly (it is I/O bound on the Macbook’s SSD), the BWT program may spend a long time generating the BW index. For bowtie2 on our test machine, this takes over half an hour (with a maximum of one thread) on the Greengenes 97% OTU representative sequence database. For this reason, it is best to store and use pre-compiled databases for all subsequent alignments, and NINJA-OPS is distributed with a number of pre-compiled databases for commonly performed 16S bacterial marker-gene OTU matching.</p>
</sec>
<sec id="sec013">
<title>Filter step</title>
<p>NINJA filtering takes approximately 10–15% of the alignment time. For our 1.6 million read 175bp test data, without additional processing, filtering runs in 3.5 seconds and outputs a de-duplicated FASTA file approximately 1/5 the size of the original.</p>
</sec>
<sec id="sec014">
<title>Alignment step</title>
<p>Bowtie2 with the settings mentioned in methods aligns the entire test dataset of 1.6 million 175bp reads in under 40 seconds on a single thread of the test laptop. Performance for the default and maximum-fidelity (“max”) NINJA presets were measured (<xref ref-type="fig" rid="pcbi.1004658.g002">Fig 2</xref>). The “max” preset not only demonstrates higher accuracy than either the default preset or USEARCH, but also retains significantly more reads. The “fast” preset displays similar accuracy characteristics to “default,” but misses about 2% of the alignments detected by the latter, usually of the lowest identity. Total pipeline runtime on the same dataset decreases to less than 10 seconds when using the recommended singleton-based denoising option (parameter “D 2”), in combination with default preset. In addition, the speedup versus USEARCH 8 was measured using the default preset without denoising (“D 0”) across different datasets (<xref ref-type="supplementary-material" rid="pcbi.1004658.s002">S2 Fig</xref>). RAM usage during alignment was 205MB in all cases, while that of USEARCH 8 was 720MB. Using multiple threads during alignment decreases the running time further, but speedup is sublinear, having somewhat more advantage in datasets with longer reads or higher error rates (and hence more difficult alignments).</p>
<fig id="pcbi.1004658.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004658.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Benchmark of runtimes for NINJA compared to USEARCH 8 in a single-threaded environment.</title>
<p>Multi-threaded alignments are faster. For NINJA only, this represents the entire time from parsing the initial FASTA file to the completion of the OTU table. The sortMeRNA program took substantially longer than USEARCH 8 (approx. 8000s; bar not shown to preserve scale).</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.g002" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec015">
<title>Parse step</title>
<p>Parsing with ninja_parse takes roughly 0.2–3 seconds on datasets in the size range included here (0.5–2 million sequences). Outputting to legacy tab-delimited format instead of BIOM increases the runtime by a second or two. A Python-based convenience wrapper distributed with NINJA adds additional overhead if the user requests a fasta file containing the sequences that failed to match the database.</p>
</sec>
<sec id="sec016">
<title>Accuracy</title>
<p>To assess the accuracy of the alignments found by NINJA, and to compare them to existing tools, we calculated the optimal alignment, using a semi-global version of the Smith-Waterman algorithm, of each query sequence with the reference sequence assigned by a given tool. We found that NINJA (default preset) generally finds higher-accuracy matches than USEARCH 8 (Mann-Whitney U test p &lt; 2.2e-16) (Figs <xref ref-type="fig" rid="pcbi.1004658.g003">3</xref> and <xref ref-type="fig" rid="pcbi.1004658.g004">4</xref>). In a published dataset containing healthy subjects and patients with Crohn’s disease the two methods produced the same list of differentiated genera across disease conditions with occasional disagreements about the direction of the association (<xref ref-type="supplementary-material" rid="pcbi.1004658.s003">S3 Fig</xref>). NINJA produced a comparable percentage of matches with default preset to USEARCH (<xref ref-type="supplementary-material" rid="pcbi.1004658.s004">S4 Fig</xref>), and generally comparable taxonomic assignments despite some interesting differences (<xref ref-type="supplementary-material" rid="pcbi.1004658.s005">S5 Fig</xref>).</p>
<fig id="pcbi.1004658.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004658.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Comparison of NINJA and USEARCH 8 best match accuracy using all unique matches.</title>
<p>These histograms show the distribution of matches by algorithm, where NINJA match proportion is in red, USEARCH in blue, and the overlap in purple. The right-most bars in each histogram show more red than purple, indicating NINJA aligned more reads at higher accuracy than USEARCH in the corresponding bins. The thick vertical bars correspond to the average alignment accuracy, and the thin curves represent the interpolated distribution. A Student’s t-test on the mean alignment accuracy shows NINJA’s mean ID was 98.9%, while USEARCH 8 produced 98.7% with p-value &lt; 2.2e-16. For USEARCH 8, fast settings are used (corresponding to the defaults in the QIIME pipeline). Total number of unique sequences mapped are 168,761, 170,063, and 169,313, for NINJA [default], NINJA [max], and USEARCH 8, respectively.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.g003" xlink:type="simple"/>
</fig>
<fig id="pcbi.1004658.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004658.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Alignment accuracy of NINJA vs USEARCH 8 (where both reported a match).</title>
<p>Each point on the graph represents a sequence for which both tools found a valid alignment. A point’s position along the X axis corresponds to alignment score (in %ID) for the match chosen by USEARCH 8, and its position on the Y axis corresponds to the alignment score against the match chosen by NINJA. Points along the diagonal represent sequences for which both tools picked the same quality match. Points above the diagonal correspond to sequences for which NINJA produced more accurate hits, and points below the diagonal represent sequences for which USEARCH 8 produced more accurate hits. Note the presence of a line at the top of the graph showing a number of sequences for which NINJA selected a perfect match from the database while USEARCH 8 could not.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.g004" xlink:type="simple"/>
</fig>
</sec>
</sec>
<sec id="sec017" sec-type="conclusions">
<title>Discussion</title>
<p>Our tool leverages a combination of several novel approaches to accomplish an order of magnitude speedup over existing methods without compromising accuracy, and in many cases NINJA-OPS is more accurate than popular existing tools. In combination with a recommended denoising step, the pipeline achieves up to two orders of magnitude speedup over USEARCH 8. The key innovation of this tool is our use of a single long reference genome, or concatesome, composed of concatenated marker genes. This approach allows NINJA to leverage the benefits of the Burrows-Wheeler transform (<xref ref-type="fig" rid="pcbi.1004658.g005">Fig 5</xref>). The code is available at <ext-link ext-link-type="uri" xlink:href="http://ninja-ops.ninja/" xlink:type="simple">http://ninja-ops.ninja</ext-link> (or <ext-link ext-link-type="uri" xlink:href="https://github.com/GabeAl/NINJA-OPS" xlink:type="simple">https://github.com/GabeAl/NINJA-OPS</ext-link>).</p>
<fig id="pcbi.1004658.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004658.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Burrows-Wheeler transform on concatenated sequences.</title>
<p>Example of the Burrows-Wheeler transform on both small sequences (top) and a concatenated longer sequence (bottom). The concatenated sequence is more easily searchable using the LF walk. NINJA forms a BWT-compatible concatesome that can be used interchangeably among various BWT-based aligners as an artificial reference chromosome. This concatenated sequence serves as a reference against which environmentally-obtained marker sequences are aligned.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.g005" xlink:type="simple"/>
</fig>
<sec id="sec018">
<title>Deduplication and NINJA-filter</title>
<p>Optimizations within NINJA-OPS include tweaks to the parsing and filtering programs to increase the throughput of the processes leading up to the alignment. Deduplication is a viable strategy in marker-gene sequencing contexts because samples usually consist of fewer taxa than there are reads, and in fact are often dominated by a few highly abundant species. This results in a large number of identical reads which can be filtered out to reduce the alignment time. In human gut datasets which are quality-trimmed (or where the marker gene reads are of approximately equal length), this may result in losslessly discarding 80% of the reads as duplicates, depending on the microbial community sampled, which can speed up the downstream alignment step substantially (<xref ref-type="supplementary-material" rid="pcbi.1004658.s006">S6 Fig</xref>). A sequence-to-sample(s) dictionary keeps track of the abundance of each sequence in each sample to ensure that each original sequence is properly accounted for wherever it was originally found. By default, NINJA-filter also performs read compaction (parameter “-d 1"), which normalizes for variation in read lengths within a dataset by treating reads which are subsets of longer reads as copies of the longer reads. This increases consistency of OTU calling as well as decreasing runtime. This behavior can easily be disabled (parameter “-d 0”).</p>
<p>An optional beneficial feature during the filter step is the ability to perform lossy denoising. NINJA performs this in two ways. The first and most straightforward for amplicon reads is to discard singleton reads (parameter “-d 2”); that is, reads that have no identical match in the entire list of queries, or which are not perfectly contained in a longer read. This can be extended as the user desires from singletons to doublets and so on (parameter “-d 3”, “-d 4”, etc.). The second form of denoising is discarding reads judged to be erroneous by breaking each read into its component overlapping k-mers and comparing each of these k-mers to the counts of that k-mer in an empirical distribution of all k-mers in the body of input reads. Reads with k-mers that fail to meet user-defined criteria for support (appearing under a certain % in the dataset) are discarded completely from subsequent analysis. The resulting speedup for the downstream alignment is often much greater than the proportion of reads discarded, because Burrows-Wheeler alignment programs expend a disproportionately large amount of effort attempting to align erroneous reads that will not match the database compared to non-erroneous reads which will often find perfect (or near-perfect) matches in a well-populated database. The BW substring search is designed for perfect substring searches, so it performs most efficiently in aligning reads that have few to no mismatches with a subsequence of the database. This is also why NINJA and BWT tools perform most effectively when the alignment identity is high (%ID in the mid-to upper-90’s, with taxonomic resolutions at the level of genus or finer). Performance of BWT-based tools is expected to increase as the diversity of available reference sequences increases, because the probability of finding a perfect match likewise increases.</p>
<p>One early concern as we were considering how to most effectively construct the concatesome was that some reads would align by chance to the boundary between two concatenated marker genes, which would produce a meaningless mapping. However, in practice, such an occurrence is exceedingly unlikely to occur in end-to-end marker gene alignments at genus-level or greater resolution due to the high identity expected over the entire length of the input read. This is even more true of marker gene alignment, where reads are much more similar to each other than in shotgun data, and the possible sites of alignment seeding are likewise similar, with significantly less randomness than would produce alignments with the boundary region by chance. The prevalence of such reads in our 16S test data is accordingly less than 1 in 1,000,000 reads aligned. Furthermore, in the unlikely event that such an alignment does occur, it is trivial to discard it in the final parsing step by testing whether the index at the end of the alignment is equal to or greater than the starting index of the subsequent marker gene. NINJA-OPS automatically discards reads that map to junctions between concatenated marker genes.</p>
<p>An interesting finding that corroborates past findings [<xref ref-type="bibr" rid="pcbi.1004658.ref021">21</xref>] is that the commonly used bowtie, bowtie2, and BWA alignment tools do not scale linearly with increasing read length. However, due to the ability to substitute alternative BWT-based alignment programs for the alignment step, it is possible to use alternatively optimized variants such as HPG Aligner, which uses uncompressed suffix arrays instead of “traditional” BWT but shares many of the same characteristics with the added benefit of better scaling for longer reads. GPU-accelerated variants of the original algorithm are also available [<xref ref-type="bibr" rid="pcbi.1004658.ref022">22</xref>]. Additionally, NINJA-OPS is not restricted to the domain of 16S OTU picking, although it is distributed with a pre-built 16S database. Marker genes such as ITS for fungal identification [<xref ref-type="bibr" rid="pcbi.1004658.ref024">24</xref>], bacterial <italic>rpoB</italic> [<xref ref-type="bibr" rid="pcbi.1004658.ref025">25</xref>], and the recently proposed <italic>Cpn</italic>60 universal bacterial barcode [<xref ref-type="bibr" rid="pcbi.1004658.ref026">26</xref>] are easily incorporated into NINJA-OPS simply by compiling the included “ninja_prep.c” and running it on an appropriately-formatted FASTA file containing the desired marker sequences, followed by the BWT-based aligner’s database generation step. Further, NINJA-OPS can be incorporated as a preliminary step in another pipeline; for instance, NINJA-OPS can be used to group reads prior to de novo assembly [<xref ref-type="bibr" rid="pcbi.1004658.ref027">27</xref>]. This flexibility of the pipeline in allowing substitution of the aligner itself, as well as the marker gene database used, makes NINJA-OPS applicable for situations and optimizations beyond what were envisioned at the time of writing, and enable the pipeline to keep pace with emerging technologies in the sequencing and computing spheres alike.</p>
</sec>
</sec>
<sec id="sec019">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1004658.s001" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.s001" xlink:type="simple">
<label>S1 Fig</label>
<caption>
<title>Comparison of taxon abundance with singleton filtering (D2) vs no singleton filtering (D1) by taxonomic level.</title>
<p>The plots show, from left to right, the scatterplot of log abundances of all matched taxa in a dataset of 6.5 million 225-base-pair sequences at progressively higher taxonomic specificity, along with best fit lines for each. The axes correspond to log abundance within the dataset, and each dot to an arbitrary taxon abundance in the singleton denoised (Y-axis) and non-denoised (X-axis) OTU tables. The left plot shows the family-level concordance (Pearson = 0.9901727, Spearman = 0.9848349), the middle shows genus-level concordance (Pearson = 0.9845869, Spearman = 0.974338), and the right shows species-level concordance (Pearson = 0.9789319, Spearman = 0.9604182).</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004658.s002" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.s002" xlink:type="simple">
<label>S2 Fig</label>
<caption>
<title>The amount of speedup relative to USEARCH 8 using NINJA’s default preset without denoising.</title>
<p>The speedup varies by dataset. Note that the Gevers dataset [<xref ref-type="bibr" rid="pcbi.1004658.ref023">23</xref>], for which the default NINJA preset is over 21 times faster, is fairly representative of human gut communities.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004658.s003" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.s003" xlink:type="simple">
<label>S3 Fig</label>
<caption>
<title>Significantly expressed taxa in an IBD dataset (q-value &lt; 0.05).</title>
<p>Top left: shows concordance between NINJA and QIIME 1.8 (USEARCH/UClust). This is the most typical case. Top right: diverging trends between groups. Despite being significantly different across groups, directionality of the trend is inverted between Control and IC/UC groups for the two methods. Bottom left: preservation of general trends but difference in taxonomic abundance of [Ruminococcus]. Bottom right: NINJA reports significance difference in [Eubacterium] expression while QIIME+USEARCH/Uclust does not.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004658.s004" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.s004" xlink:type="simple">
<label>S4 Fig</label>
<caption>
<title>Proportion of successful database matching.</title>
<p>The percentage of reads NINJA (default preset, no denoising, “D 0”) successfully maps to the database are compared to USEARCH 8. There is very little difference in numbers of reads mapped to the database across datasets.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004658.s005" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.s005" xlink:type="simple">
<label>S5 Fig</label>
<caption>
<title>Comparison of genus-level taxonomic concordance between Ninja (X-axis) and USEARCH 8 (Y-axis).</title>
<p>Each point represents a genus-level assignment, with coordinates along each axis corresponding to the total number of reads mapped to that particular genus by either Ninja (X-axis) or USEARCH 8 (Y-axis). Distance from the diagonal represents discordance of taxon calls.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004658.s006" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.s006" xlink:type="simple">
<label>S6 Fig</label>
<caption>
<title>Speedup of the alignment step after filtering (without denoising).</title>
<p>Filtering can provide upwards of 2.5x improvement in alignment performance, depending on the dataset. Smaller or more unique datasets see more modest improvements. Datasets with communities of redundant sequences benefit the most. This benchmark was performed without denoising or read compaction (parameter “D 0”). Using NINJA-OPS with denoising or read compaction provides a substantially greater speedup.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004658.s007" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004658.s007" xlink:type="simple">
<label>S7 Fig</label>
<caption>
<title>QR code for the NINJA-OPS download website.</title>
<p>This Quick Response (QR) code, stylized to resemble a gapped multiple alignment of DNA sequences (including clip art from public domain at <ext-link ext-link-type="uri" xlink:href="http://www.wpclipart.com/" xlink:type="simple">http://www.wpclipart.com</ext-link>), is a functional QR code provided for convenient linking to the NINJA-OPS source code and pre-built binaries hosted at <ext-link ext-link-type="uri" xlink:href="http://ninja-ops.ninja/" xlink:type="simple">http://ninja-ops.ninja</ext-link>, and for convenient sharing and distribution of the tool in poster presentations, slide shows, and other visual presentations.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="pcbi.1004658.ref001"><label>1</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Caporaso</surname> <given-names>JG</given-names></name>, <name name-style="western"><surname>Kuczynski</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Stombaugh</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Bittinger</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Bushman</surname> <given-names>FD</given-names></name>, <name name-style="western"><surname>Costello</surname> <given-names>EK</given-names></name>, <etal>et al</etal>. <article-title>QIIME allows analysis of high-throughput community sequencing data</article-title>. <source>Nat Methods</source>. <year>2010</year>;<volume>7</volume>: <fpage>335</fpage>–<lpage>336</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nmeth.f.303" xlink:type="simple">10.1038/nmeth.f.303</ext-link></comment> <object-id pub-id-type="pmid">20383131</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref002"><label>2</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Huttenhower</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Gevers</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Knight</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Abubucker</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Badger</surname> <given-names>JH</given-names></name>, <name name-style="western"><surname>Chinwalla</surname> <given-names>AT</given-names></name>, <etal>et al</etal>. <article-title>Structure, function and diversity of the healthy human microbiome</article-title>. <source>Nature</source>. <year>2012</year>;<volume>486</volume>: <fpage>207</fpage>–<lpage>214</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nature11234" xlink:type="simple">10.1038/nature11234</ext-link></comment> <object-id pub-id-type="pmid">22699609</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref003"><label>3</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Sunagawa</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Mende</surname> <given-names>DR</given-names></name>, <name name-style="western"><surname>Zeller</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Izquierdo-Carrasco</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Berger</surname> <given-names>SA</given-names></name>, <name name-style="western"><surname>Kultima</surname> <given-names>JR</given-names></name>, <etal>et al</etal>. <article-title>Metagenomic species profiling using universal phylogenetic marker genes</article-title>. <source>Nat Methods</source>. <year>2013</year>;<volume>10</volume>: <fpage>1196</fpage>–<lpage>1199</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nmeth.2693" xlink:type="simple">10.1038/nmeth.2693</ext-link></comment> <object-id pub-id-type="pmid">24141494</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref004"><label>4</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Stahringer</surname> <given-names>SS</given-names></name>, <name name-style="western"><surname>Clemente</surname> <given-names>JC</given-names></name>, <name name-style="western"><surname>Corley</surname> <given-names>RP</given-names></name>, <name name-style="western"><surname>Hewitt</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Knights</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Walters</surname> <given-names>WA</given-names></name>, <etal>et al</etal>. <article-title>Nurture trumps nature in a longitudinal survey of salivary bacterial communities in twins from early adolescence to early adulthood</article-title>. <source>Genome Res. Cold Spring Harbor Lab</source>; <year>2012</year>;<volume>22</volume>: <fpage>2146</fpage>–<lpage>2152</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004658.ref005"><label>5</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Caporaso</surname> <given-names>JG</given-names></name>, <name name-style="western"><surname>Lauber</surname> <given-names>CL</given-names></name>, <name name-style="western"><surname>Costello</surname> <given-names>EK</given-names></name>, <name name-style="western"><surname>Berg-Lyons</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Gonzalez</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Stombaugh</surname> <given-names>J</given-names></name>, <etal>et al</etal>. <article-title>Moving pictures of the human microbiome</article-title>. <source>Genome Biol</source>. BioMed Central Ltd; <year>2011</year>;<volume>12</volume>: <fpage>R50</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1186/gb-2011-12-5-r50" xlink:type="simple">10.1186/gb-2011-12-5-r50</ext-link></comment> <object-id pub-id-type="pmid">21624126</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref006"><label>6</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Schloss</surname> <given-names>PD</given-names></name>, <name name-style="western"><surname>Westcott</surname> <given-names>SL</given-names></name>, <name name-style="western"><surname>Ryabin</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Hall</surname> <given-names>JR</given-names></name>, <name name-style="western"><surname>Hartmann</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Hollister</surname> <given-names>EB</given-names></name>, <etal>et al</etal>. <article-title>Introducing mothur: open-source, platform-independent, community-supported software for describing and comparing microbial communities</article-title>. <source>Appl Environ Microbiol</source>. <year>2009</year>;<volume>75</volume>: <fpage>7537</fpage>–<lpage>7541</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1128/AEM.01541-09" xlink:type="simple">10.1128/AEM.01541-09</ext-link></comment> <object-id pub-id-type="pmid">19801464</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref007"><label>7</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Edgar</surname> <given-names>RC</given-names></name>. <article-title>Search and clustering orders of magnitude faster than BLAST</article-title>. <source>Bioinformatics</source>. <year>2010</year>;<volume>26</volume>: <fpage>2460</fpage>–<lpage>2461</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btq461" xlink:type="simple">10.1093/bioinformatics/btq461</ext-link></comment> <object-id pub-id-type="pmid">20709691</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref008"><label>8</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Li</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Godzik</surname> <given-names>A</given-names></name>. <article-title>Cd-hit: a fast program for clustering and comparing large sets of protein or nucleotide sequences</article-title>. <source>Bioinformatics</source>. <year>2006</year>;<volume>22</volume>: <fpage>1658</fpage>–<lpage>1659</lpage>. <object-id pub-id-type="pmid">16731699</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref009"><label>9</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wang</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Yao</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Sun</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Mai</surname> <given-names>V</given-names></name>. <article-title>M-pick, a modularity-based method for OTU picking of 16S rRNA sequences</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>;<volume>14</volume>: <fpage>43</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1186/1471-2105-14-43" xlink:type="simple">10.1186/1471-2105-14-43</ext-link></comment> <object-id pub-id-type="pmid">23387433</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref010"><label>10</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Schloss</surname> <given-names>PD</given-names></name>, <name name-style="western"><surname>Westcott</surname> <given-names>SL</given-names></name>. <article-title>Assessing and improving methods used in operational taxonomic unit-based approaches for 16S rRNA gene sequence analysis</article-title>. <source>Appl Environ Microbiol</source>. <year>2011</year>;<volume>77</volume>: <fpage>3219</fpage>–<lpage>3226</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1128/AEM.02810-10" xlink:type="simple">10.1128/AEM.02810-10</ext-link></comment> <object-id pub-id-type="pmid">21421784</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref011"><label>11</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Li</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Durbin</surname> <given-names>R</given-names></name>. <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>: <fpage>1754</fpage>–<lpage>1760</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btp324" xlink:type="simple">10.1093/bioinformatics/btp324</ext-link></comment> <object-id pub-id-type="pmid">19451168</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref012"><label>12</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Langmead</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Salzberg</surname> <given-names>SL</given-names></name>. <article-title>Fast gapped-read alignment with Bowtie 2</article-title>. <source>Nat Methods</source>. <year>2012</year>;<volume>9</volume>: <fpage>357</fpage>–<lpage>359</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nmeth.1923" xlink:type="simple">10.1038/nmeth.1923</ext-link></comment> <object-id pub-id-type="pmid">22388286</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref013"><label>13</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Langmead</surname> <given-names>B</given-names></name>. <article-title>Aligning short sequencing reads with Bowtie</article-title>. <source>Curr Protoc Bioinformatics</source>. <year>2010</year>;Chapter 11: Unit 11.7.</mixed-citation></ref>
<ref id="pcbi.1004658.ref014"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Martínez H, Tárraga J, Medina I, Barrachina S, Castillo M, Dopazo J, et al. A Dynamic Pipeline for RNA Sequencing on Multicore Processors. Proceedings of the 20th European MPI Users’ Group Meeting. New York, NY, USA: ACM; 2013. pp. 235–240.</mixed-citation></ref>
<ref id="pcbi.1004658.ref015"><label>15</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Martínez</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Tárraga</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Medina</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Barrachina</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Castillo</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Dopazo</surname> <given-names>J</given-names></name>, <etal>et al</etal>. <article-title>Concurrent and Accurate RNA Sequencing on Multicore Platforms</article-title>. <source>arXiv [q-bio.GN]</source>. <year>2013</year>.</mixed-citation></ref>
<ref id="pcbi.1004658.ref016"><label>16</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Li</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Yu</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Li</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Lam T-</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Yiu S-</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Kristiansen</surname> <given-names>K</given-names></name>, <etal>et al</etal>. <article-title>SOAP2: an improved ultrafast tool for short read alignment</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>: <fpage>1966</fpage>–<lpage>1967</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btp336" xlink:type="simple">10.1093/bioinformatics/btp336</ext-link></comment> <object-id pub-id-type="pmid">19497933</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref017"><label>17</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Li</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Handsaker</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Wysoker</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Fennell</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Ruan</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Homer</surname> <given-names>N</given-names></name>, <etal>et al</etal>. <article-title>The Sequence Alignment/Map format and SAMtools</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>: <fpage>2078</fpage>–<lpage>2079</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btp352" xlink:type="simple">10.1093/bioinformatics/btp352</ext-link></comment> <object-id pub-id-type="pmid">19505943</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref018"><label>18</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hildebrand</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Tito</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Voigt</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Bork</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Raes</surname> <given-names>J</given-names></name>. <article-title>Correction: LotuS: an efficient and user-friendly OTU processing pipeline</article-title>. <source>Microbiome</source>. <year>2014</year>;<volume>2</volume>: <fpage>37</fpage>.</mixed-citation></ref>
<ref id="pcbi.1004658.ref019"><label>19</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kopylova</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Noé</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Touzet</surname> <given-names>H</given-names></name>. <article-title>SortMeRNA: fast and accurate filtering of ribosomal RNAs in metatranscriptomic data</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>28</volume>: <fpage>3211</fpage>–<lpage>3217</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/bts611" xlink:type="simple">10.1093/bioinformatics/bts611</ext-link></comment> <object-id pub-id-type="pmid">23071270</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref020"><label>20</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Bentley</surname> <given-names>JL</given-names></name>, <name name-style="western"><surname>Sedgewick</surname> <given-names>R</given-names></name>. <article-title>Fast algorithms for sorting and searching strings</article-title>. <source>SODA</source>. <year>1997</year>. pp. <fpage>360</fpage>–<lpage>369</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004658.ref021"><label>21</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tárraga</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Arnau</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Martínez</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Moreno</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Cazorla</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Salavert-Torres</surname> <given-names>J</given-names></name>, <etal>et al</etal>. <article-title>Acceleration of short and long DNA read mapping without loss of accuracy using suffix array</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>: <fpage>3396</fpage>–<lpage>3398</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btu553" xlink:type="simple">10.1093/bioinformatics/btu553</ext-link></comment> <object-id pub-id-type="pmid">25143289</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref022"><label>22</label><mixed-citation publication-type="other" xlink:type="simple">Zhao Z, Yin J, Xiong W. GPU-accelerated Burrow-Wheeler Transform for genomic data. Biomedical Engineering and Informatics (BMEI), 2012 5th International Conference on. 2012. pp. 889–892.</mixed-citation></ref>
<ref id="pcbi.1004658.ref023"><label>23</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gevers</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Kugathasan</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Denson</surname> <given-names>LA</given-names></name>, <name name-style="western"><surname>Vázquez-Baeza</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Van Treuren</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Ren</surname> <given-names>B</given-names></name>, <etal>et al</etal>. <article-title>The treatment-naive microbiome in new-onset Crohn’s disease</article-title>. <source>Cell Host Microbe</source>. <year>2014</year>;<volume>15</volume>: <fpage>382</fpage>–<lpage>392</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.chom.2014.02.005" xlink:type="simple">10.1016/j.chom.2014.02.005</ext-link></comment> <object-id pub-id-type="pmid">24629344</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref024"><label>24</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Schoch</surname> <given-names>CL</given-names></name>, <name name-style="western"><surname>Seifert</surname> <given-names>KA</given-names></name>, <name name-style="western"><surname>Huhndorf</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Robert</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Spouge</surname> <given-names>JL</given-names></name>, <name name-style="western"><surname>Levesque</surname> <given-names>CA</given-names></name>, <etal>et al</etal>. <article-title>Nuclear ribosomal internal transcribed spacer (ITS) region as a universal DNA barcode marker for Fungi</article-title>. <source>Proc Natl Acad Sci U S A</source>. <year>2012</year>;<volume>109</volume>: <fpage>6241</fpage>–<lpage>6246</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1073/pnas.1117018109" xlink:type="simple">10.1073/pnas.1117018109</ext-link></comment> <object-id pub-id-type="pmid">22454494</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref025"><label>25</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Mollet</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Drancourt</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Raoult</surname> <given-names>D</given-names></name>. <article-title>rpoB sequence analysis as a novel basis for bacterial identification</article-title>. <source>Mol Microbiol</source>. <year>1997</year>;<volume>26</volume>: <fpage>1005</fpage>–<lpage>1011</lpage>. <object-id pub-id-type="pmid">9426137</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref026"><label>26</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Links</surname> <given-names>MG</given-names></name>, <name name-style="western"><surname>Dumonceaux</surname> <given-names>TJ</given-names></name>, <name name-style="western"><surname>Hemmingsen</surname> <given-names>SM</given-names></name>, <name name-style="western"><surname>Hill</surname> <given-names>JE</given-names></name>. <article-title>The chaperonin-60 universal target is a barcode for bacteria that enables de novo assembly of metagenomic sequence data</article-title>. <source>PLoS One</source>. <year>2012</year>;<volume>7</volume>: <fpage>e49755</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1371/journal.pone.0049755" xlink:type="simple">10.1371/journal.pone.0049755</ext-link></comment> <object-id pub-id-type="pmid">23189159</object-id></mixed-citation></ref>
<ref id="pcbi.1004658.ref027"><label>27</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Links</surname> <given-names>MG</given-names></name>, <name name-style="western"><surname>Chaban</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Hemmingsen</surname> <given-names>SM</given-names></name>, <name name-style="western"><surname>Muirhead</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Hill</surname> <given-names>JE</given-names></name>. <article-title>mPUMA: a computational approach to microbiota analysis by de novo assembly of operational taxonomic units based on protein-coding barcode sequences</article-title>. <source>Microbiome</source>. <year>2013</year>;<volume>1</volume>: <fpage>23</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1186/2049-2618-1-23" xlink:type="simple">10.1186/2049-2618-1-23</ext-link></comment> <object-id pub-id-type="pmid">24451012</object-id></mixed-citation></ref>
</ref-list>
</back>
</article>