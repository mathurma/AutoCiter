<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN" "http://jats.nlm.nih.gov/publishing/1.1d3/JATS-journalpublishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.1d3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1006176</article-id>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-17-02171</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied mathematics</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Macromolecular structure analysis</subject><subj-group><subject>RNA structure</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Nucleic acids</subject><subj-group><subject>RNA</subject><subj-group><subject>RNA structure</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied mathematics</subject><subj-group><subject>Algorithms</subject><subj-group><subject>Machine learning algorithms</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject><subj-group><subject>Algorithms</subject><subj-group><subject>Machine learning algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Artificial intelligence</subject><subj-group><subject>Machine learning</subject><subj-group><subject>Machine learning algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Bioinformatics</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Sequence motif analysis</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Macromolecular structure analysis</subject><subj-group><subject>RNA structure</subject><subj-group><subject>RNA folding</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Nucleic acids</subject><subj-group><subject>RNA</subject><subj-group><subject>RNA structure</subject><subj-group><subject>RNA folding</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Artificial intelligence</subject><subj-group><subject>Machine learning</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Physics</subject><subj-group><subject>Thermodynamics</subject><subj-group><subject>Free energy</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Database searching</subject><subj-group><subject>Sequence similarity searching</subject></subj-group></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>Solving the RNA design problem with reinforcement learning</article-title>
<alt-title alt-title-type="running-head">Solving the RNA design problem with reinforcement learning</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-9566-9684</contrib-id>
<name name-style="western">
<surname>Eastman</surname>
<given-names>Peter</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Investigation</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Software</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-9373-8981</contrib-id>
<name name-style="western">
<surname>Shi</surname>
<given-names>Jade</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Ramsundar</surname>
<given-names>Bharath</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Software</role>
<xref ref-type="aff" rid="aff003"><sup>3</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Pande</surname>
<given-names>Vijay S.</given-names>
</name>
<role content-type="http://credit.casrai.org/">Funding acquisition</role>
<role content-type="http://credit.casrai.org/">Resources</role>
<role content-type="http://credit.casrai.org/">Supervision</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
</contrib-group>
<aff id="aff001"><label>1</label> <addr-line>Department of Bioengineering, Stanford University, Stanford, CA, United States of America</addr-line></aff>
<aff id="aff002"><label>2</label> <addr-line>Department of Chemistry, Stanford University, Stanford, CA, United States of America</addr-line></aff>
<aff id="aff003"><label>3</label> <addr-line>Department of Computer Science, Stanford University, Stanford, CA, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Chen</surname>
<given-names>Shi-Jie</given-names>
</name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1"><addr-line>University of Missouri, UNITED STATES</addr-line></aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>I have read the journal's policy and the authors of this manuscript have the following competing interests: VSP is an SAB member of Schrodinger, LLC and a General Partner at Andreessen Horowtiz.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">peastman@stanford.edu</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<day>21</day>
<month>6</month>
<year>2018</year>
</pub-date>
<pub-date pub-type="collection">
<month>6</month>
<year>2018</year>
</pub-date>
<volume>14</volume>
<issue>6</issue>
<elocation-id>e1006176</elocation-id>
<history>
<date date-type="received">
<day>30</day>
<month>12</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>4</day>
<month>5</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-year>2018</copyright-year>
<copyright-holder>Eastman et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1006176"/>
<abstract>
<p>We use reinforcement learning to train an agent for computational RNA design: given a target secondary structure, design a sequence that folds to that structure <italic>in silico</italic>. Our agent uses a novel graph convolutional architecture allowing a single model to be applied to arbitrary target structures of any length. After training it on randomly generated targets, we test it on the Eterna100 benchmark and find it outperforms all previous algorithms. Analysis of its solutions shows it has successfully learned some advanced strategies identified by players of the game Eterna, allowing it to solve some very difficult structures. On the other hand, it has failed to learn other strategies, possibly because they were not required for the targets in the training set. This suggests the possibility that future improvements to the training protocol may yield further gains in performance.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author summary</title>
<p>Designing RNA sequences that fold to desired structures is an important problem in bioengineering. We have applied recent advances in machine learning to address this problem. The computer learns without any human input, using only trial and error to figure out how to design RNA. It quickly discovers powerful strategies that let it solve many difficult design problems. When tested on a challenging benchmark, it outperforms all previous algorithms. We analyze its solutions and identify some of the strategies it has learned, as well as other important strategies it has failed to learn. This suggests possible approaches to further improving its performance. This work reflects a paradigm shift taking place in computer science, which has the potential to transform computational biology. Instead of relying on experts to design algorithms by hand, computers can use artificial intelligence to learn their own algorithms directly. The resulting methods often work better than the ones designed by humans.</p>
</abstract>
<funding-group>
<award-group id="award001">
<funding-source>
<institution-wrap>
<institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100000002</institution-id>
<institution>National Institutes of Health</institution>
</institution-wrap>
</funding-source>
<award-id>R01 GM062868</award-id>
<principal-award-recipient>
<name name-style="western">
<surname>Pande</surname>
<given-names>Vijay S.</given-names>
</name>
</principal-award-recipient>
</award-group>
<award-group id="award002">
<funding-source>
<institution>National Institutes of Health (US)</institution>
</funding-source>
<award-id>U19 AI109662</award-id>
<principal-award-recipient>
<name name-style="western">
<surname>Pande</surname>
<given-names>Vijay S.</given-names>
</name>
</principal-award-recipient>
</award-group>
<funding-statement>This work was supported by US National Institutes of Health (<ext-link ext-link-type="uri" xlink:href="https://www.nih.gov/" xlink:type="simple">https://www.nih.gov/</ext-link>) grants RO1 GM062868 and U19 AI109662. BR was supported by the Fannie and John Hertz Foundation. We acknowledge the generous support of Dr. Anders G. Frøseth for our work on machine learning. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="3"/>
<table-count count="1"/>
<page-count count="15"/>
</counts>
<custom-meta-group>
<custom-meta>
<meta-name>PLOS Publication Stage</meta-name>
<meta-value>vor-update-to-uncorrected-proof</meta-value>
</custom-meta>
<custom-meta>
<meta-name>Publication Update</meta-name>
<meta-value>2018-07-03</meta-value>
</custom-meta>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>All relevant data are within the paper and its Supporting Information files.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<sec id="sec002">
<title>The RNA design problem</title>
<p>Re-engineering and <italic>de novo</italic> design of RNA molecules to perform novel biological functions have been major focuses of modern bioengineering research [<xref ref-type="bibr" rid="pcbi.1006176.ref001">1</xref>–<xref ref-type="bibr" rid="pcbi.1006176.ref005">5</xref>]. The function of an RNA molecule is determined by the structure into which it folds, which is in turn determined by the sequence of nucleotides that comprise it. Designing RNA molecules to perform specific functions therefore requires solving the inverse folding problem for RNA: given a target structure, design a sequence that folds into that structure. Here, we are specifically interested in solving the <italic>computational</italic> RNA design problem: given a target structure, design a sequence that folds into the target as judged by an <italic>in silico</italic> structure predictor. Current state-of-the-art structure prediction software such as ViennaRNA [<xref ref-type="bibr" rid="pcbi.1006176.ref006">6</xref>] can predict the experimental minimum free energy structure with high accuracy, and has been a key step in designing RNA molecules for several real-life biological applications [<xref ref-type="bibr" rid="pcbi.1006176.ref007">7</xref>–<xref ref-type="bibr" rid="pcbi.1006176.ref010">10</xref>]. Therefore, solving the computational RNA design problem will likely provide valuable insights into solving real-life RNA design problems.</p>
<p>Significant progress has been made in developing machine-based algorithms for computational RNA design. One of the initial algorithms, RNAInverse [<xref ref-type="bibr" rid="pcbi.1006176.ref011">11</xref>], uses a simple adaptive walk in which random single or pair mutations are performed on a sequence, and a mutation is accepted if it improves the structural similarity between the current and the target structure. A subsequent algorithm RNA-SSD [<xref ref-type="bibr" rid="pcbi.1006176.ref012">12</xref>] first performs hierarchical decomposition of the structure into substructures to reduce the size of the search space before performing adaptive walk. INFO-RNA [<xref ref-type="bibr" rid="pcbi.1006176.ref013">13</xref>] first generates an initial guess of the sequence using dynamic programming to estimate the minimum energy sequence for a target structure, and then performs a stochastic search using simulated annealing. DSS-Opt [<xref ref-type="bibr" rid="pcbi.1006176.ref014">14</xref>] and NUPACK [<xref ref-type="bibr" rid="pcbi.1006176.ref015">15</xref>] both attempt to optimize more complex objective functions that explicitly punish incorrectly-pairing bases. DSS-Opt employs a gradient-based approach on the full sequence to optimize an objective function that includes both a free energy component and a “negative design term” to punish incorrectly paired bases. On the other hand, NUPACK first performs hierarchical decomposition on the target, and then for each substructure, computes a thermodynamic ensemble of structures given the current sequence. It then perturbs the sequence to optimize the “ensemble defect”, which is the average number of incorrectly paired bases across all structures in the ensemble, weighted by their thermodynamic populations. Finally, MODENA [<xref ref-type="bibr" rid="pcbi.1006176.ref016">16</xref>] generates an ensemble of initial guesses using a genetic algorithm, and then performs stochastic search using either crossover moves, in which pieces of two candidate solutions at the same position are swapped with each other, or single-point mutations. These solutions are then judged using an objective function with components for both energetic stability and target structure similarity.</p>
<p>Eterna [<xref ref-type="bibr" rid="pcbi.1006176.ref017">17</xref>] takes a very different approach to the problem. It is an online open laboratory that presents the inverse folding problem as a game, and asks players to create sequences that fold to specific structures. Some of the top players develop exceptional skill at this task, and can successfully find solutions for structures that none of the algorithms described above can solve.</p>
<p>The Eterna100 benchmark [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>] is a collection of 100 target structures ("puzzles") created by players of the Eterna game. They were chosen to cover a wide range of difficulty levels, and to exhibit a variety of challenging structural elements. They are ordered inversely with respect to the overall number of correctly proposed solutions by Eterna players, with the second half being significantly more difficult to solve than the first half. A test of the above algorithms on the Eterna100 benchmark resulted in several of the algorithms performing poorly, with RNAInverse and RNA-SSD predicting valid sequences for only 28/100 and 27/100 structures respectively. Even the best-performing algorithm, MODENA, could only succeed on 54/100 structures.</p>
<p>A common weakness of several existing computational algorithms, including RNAInverse, RNA-SSD, INFO-RNA, NUPACK, and MODENA, is that they rely at least partially on purely stochastic search: random mutations are made to a sequence and beneficial mutations (e.g. that improve structural similarity to the target or reduce the structure’s energy) are accepted. This procedure successfully predicts sequences for short nucleotide chains and simple RNA structures due to the small space of possible mutations. However, this method fails for longer chains or more complex structures in which sampling the entire space of possible mutations is prohibitively expensive. One way to reduce the size of the search space is to first decompose the full structure into substructures and independently optimize each substructure, as was done in RNA-SSD. However, for target structures in which accurate determination of the sequence of one part of the structure requires global knowledge about the entire structure, hierarchical decomposition is not feasible. For example, the "Mutated Chicken Feet" structure from the Eterna100 contains three symmetric branches in which each branch must be assigned a sequence that is different from the other two, and thus cannot be solved by independently considering each branch. Alternatively, target structures that possess easily accessible off-pathway local minima to obstruct the search, or lack on-pathway local minima to positively guide the search, present additional challenges for these algorithms.</p>
<p>One possible means to address the weaknesses of purely stochastic search is to incorporate prior information into the model. Most commonly this is done by performing free energy calculations to find an energetically favorable candidate sequence for a given target that is closer to a valid sequence, thereby reducing the number of search steps. Algorithms such as INFO-RNA use this strategy, in which it first performs base-by-base free energy calculations over the target structure to generate the minimum energy sequence for the target. This sequence is then used as a starting point for the subsequent stochastic search. This method results in significantly increased performance on the Eterna100, with INFO-RNA succeeding on 50/100 structures as opposed to RNAInverse’s 28/100. Nevertheless, this strategy proves infeasible in many cases because the sequence that minimizes the energy for a target structure is not guaranteed to fold into that structure, or even a structure close to it. For many of the more complex puzzles in the second half of the Eterna100, the sequence which minimizes the energy of the target possesses a global energy minimum that is structurally very different from the target, making it very difficult to refine this solution into a correct one through stochastic search. Algorithms such as DSS-Opt and NUPACK attempt to mitigate this issue by using more complex objective functions that punish incorrectly paired bases. This allows for some level of control in avoiding sequences that fold into structures very different from the target structure, leading to respectable performance on the Eterna100, with DSS-Opt and NUPACK succeeding on 47/100 and 48/100 structures respectively. Most notably, both DSS-Opt and NUPACK manage to succeed on some structures unsolvable by INFO-RNA, such as "Misfolded Aptamer 6", demonstrating the advantages of utilizing a more complex objective function for certain structures. Nevertheless, the performance of all the algorithms substantially decreases as puzzle complexity increases, as all perform very poorly on the second half of the Eterna100, solving at maximum only about 25% of the puzzles.</p>
</sec>
<sec id="sec003">
<title>Reinforcement learning</title>
<p>In the last decade, machine learning has had remarkable success at solving a variety of challenging computational problems including computer vision [<xref ref-type="bibr" rid="pcbi.1006176.ref019">19</xref>], speech recognition [<xref ref-type="bibr" rid="pcbi.1006176.ref020">20</xref>], machine translation [<xref ref-type="bibr" rid="pcbi.1006176.ref021">21</xref>], and others. Instead of designing an algorithm by hand, one constructs a very flexible mathematical model (usually a neural network), then optimizes the parameters of the model until it produces the desired output for a set of training data.</p>
<p>Reinforcement learning (RL) is a branch of machine learning that deals with problems where an agent performs a series of actions to reach a goal. In the past, RL has proven extremely effective at training agents to perform a variety of difficult tasks, from video game playing [<xref ref-type="bibr" rid="pcbi.1006176.ref022">22</xref>] to robotic arm control [<xref ref-type="bibr" rid="pcbi.1006176.ref023">23</xref>]. Most recently, AlphaGo Zero achieved superhuman performance in the game of Go by learning the game purely through self-play [<xref ref-type="bibr" rid="pcbi.1006176.ref024">24</xref>]. Given these remarkable results, we reasoned that RL might be able to train a competent agent for RNA design. Similar to how an agent for Go can learn the optimal move to make given one of many unique board positions, we hypothesized that an RNA design agent could also learn the optimal design choice given one of many unique target RNA structures.</p>
<p>Reinforcement learning describes a problem in terms of an agent (e.g. a player of the game Eterna) interacting with an environment (e.g. an RNA molecule). At each step, the agent observes the current state of the environment (the current RNA sequence), and selects an action to perform (a change to the sequence). The action is selected by following a policy represented by a neural network. Whenever the agent makes progress toward its goal, it receives a reward. The policy network is trained by having the agent perform the task over and over, adjusting the network parameters to maximize the expected future rewards.</p>
<p>Remarkably, this simple process can sometimes produce algorithms that outperform the very best algorithms crafted by expert programmers. In this work, we apply it to the RNA inverse folding problem, training a policy network that outperforms all previous algorithms on the Eterna100 benchmark.</p>
</sec>
</sec>
<sec id="sec004" sec-type="materials|methods">
<title>Methods</title>
<sec id="sec005">
<title>Overview</title>
<p>We formulate the inverse folding problem as a reinforcement learning problem. The current state corresponds to a candidate sequence. The agent takes actions that modify the type of a single base, or in some cases two paired bases. We train a policy network to select actions that eventually lead to a sequence with the desired secondary structure. When the target structure is achieved (that is, when the agent finds any sequence that is predicted to fold to the target structure), the agent receives a fixed positive reward. All other actions receive a reward of 0.</p>
<p>The input to the policy network is an N×4 tensor, where N is the number of bases, giving the current sequence in one-hot encoding. The network's output is an N×4 tensor containing action probabilities. Each element is the probability of changing one of the N bases to one of the four possible types. At each step, an action is randomly chosen based on the probabilities generated by the network. Note that 25% of all actions simply say that a base should have the same type it already has. To avoid wasting time on unproductive actions, the probabilities of these actions are forced to be 0.</p>
<p>If an action modifies a base that is supposed to be paired in the target structure, the type of its desired partner is checked and, if necessary, modified as well to ensure the two bases are capable of forming a pair. If their types are not one of GC, AU, or GU, the target partner is modified so they can form a GC or AU pair.</p>
</sec>
<sec id="sec006">
<title>Network architecture</title>
<p>Our goal is to train a single model that can be applied to RNA sequences of any length. This requires that the set of parameters defining the model must be independent of sequence length. We achieve this by building the model entirely out of convolutional layers.</p>
<p>More precisely, each layer takes as input a tensor of shape N×C<sub>in</sub> and produces one of shape N×C<sub>out</sub>,where C<sub>in</sub> and C<sub>out</sub> are the numbers of channels per base. At the network's input (the current sequence) and output (action probabilities), the number of channels is 4. At all other points in the network, it is set to 80. The network is built up out of the following types of layers.</p>
<p><italic>Single base convolution (conv1)</italic>: The output is computed independently for every base. Each output channel is a linear combination of the input channels for that same base.</p>
<p><italic>Seven base convolution (conv7)</italic>: The output for each base is a linear combination of the inputs for seven bases, followed by a ReLU activation. The seven bases include:</p>
<list list-type="bullet">
<list-item><p>The five consecutive bases centered at that base</p></list-item>
<list-item><p>The base with which that base should be paired in the target structure</p></list-item>
<list-item><p>The base with which that base is actually paired in the structure formed by the current sequence</p></list-item>
</list>
<p>For example, suppose that base 7 is supposed to be paired with base 18 in the target structure, but is actually paired with base 15 in the structure to which the current sequence folds. The output for base 7 would be calculated from the inputs for bases 5, 6, 7, 8, 9, 18, and 15.</p>
<p>It is possible for some of these bases not to exist, such as if the target base is at the end of the chain, or if it is not paired in the target structure. In that case, the corresponding inputs are set to 0.</p>
<p>The <italic>conv7</italic> layer can be viewed as a type of graph convolution, although it is unusual in that the graph structure may change at every step, as it explores sequences that fold to different structures. Also note that the connections formed within <italic>conv7</italic> layers are the only way in which the network receives information about the target structure.</p>
<p>Instead of using a simple convolutional network, we combine multiple layers to form residual blocks. The output of each block is computed as</p>
<p><bold>y</bold> = <bold>x</bold> + conv1(conv7(<bold>x</bold>))</p>
<p>Networks composed of residual blocks have been shown to be easier to train and to produce better results than simple convolutional networks [<xref ref-type="bibr" rid="pcbi.1006176.ref025">25</xref>].</p>
<p>The full network is shown in <xref ref-type="fig" rid="pcbi.1006176.g001">Fig 1</xref>. It consists of a single <italic>conv7</italic> layer that increases the number of channels from 4 to 80, followed by three residual blocks. A final <italic>conv1</italic> layer with softmax activation computes the action probabilities. In addition, a dense (fully connected) layer computes an estimate of the state value function, which is used by the training algorithm [<xref ref-type="bibr" rid="pcbi.1006176.ref026">26</xref>]. It outputs an estimate of the total future reward starting from a given state. The number of parameters in the dense layer depends on the length of the sequence, which means it is necessarily specific to a particular sequence length. It is only used during training, however. Therefore, all training sequences must have the same length, but once training is complete, the policy network can be applied to sequences of any length.</p>
<fig id="pcbi.1006176.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006176.g001</object-id>
<label>Fig 1</label>
<caption>
<title>The architecture of the policy network.</title>
<p>The shape of each layer's output is given in parentheses, where N is the number of bases in the sequence. "Conv1" and "Conv7" indicate single base convolution and seven base convolution layers, as described in the text. "Dense" indicates a dense (fully connected) layer, where every output depends on every input.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006176.g001" xlink:type="simple"/>
</fig>
<p>The numbers, types, and widths of the layers in the network were chosen by experimentation, although no exhaustive hyperparameter search was performed. Our goal was to find the smallest network such that further increases in size had little benefit. For example, using 80 output channels was found to give significantly better results than 64, but 100 output channels worked no better than 80. A more rigorous hyperparameter search might improve our results somewhat, but would probably not dramatically change the model's performance.</p>
</sec>
<sec id="sec007">
<title>Training procedure</title>
<p>We require a set of target structures to use for training. We created them by randomly generating 100,000 RNA sequences of length 32, then computing the structure each one folds to. This yielded a total of 46,188 unique structures, none of which appears in the Eterna100 benchmark. The majority of them (34,264) occurred only a single time among the 100,000 sequences. Another 6158 structures occurred twice, and 5766 structures occurred three or more times. The number of times a structure occurred gives an indication of its difficulty: if many sequences fold to a structure, it will be much easier to find one than if only few sequences do. Only the structures were used in training, not the sequences. Any sequence that folded to a target structure was accepted as a valid solution.</p>
<p>The network was trained using the Asynchronous Advantage Actor-Critic (A3C) algorithm [<xref ref-type="bibr" rid="pcbi.1006176.ref026">26</xref>]. A different target structure was randomly chosen for every episode. Training was run for a total of 1.5 million steps. The learning rate was initially set to 10<sup>−5</sup>, then decreased by a factor of 0.8 after every 100,000 steps.</p>
<p>The first half million steps used only the easier structures for training (those which occurred three or more times). For the final 1 million steps, all structures were used except for 500 of the most difficult ones (ones that occurred only a single time), which were set aside for use as a validation set. Every 100,000 steps, the current network was used to solve all of the validation structures and the total number of steps requires was recorded. If this was less than the previous best validation score, the network parameters were saved as the new best network.</p>
<p>The model and training procedure were implemented using DeepChem 1.3.1 [<xref ref-type="bibr" rid="pcbi.1006176.ref027">27</xref>] and Tensorflow 1.3 [<xref ref-type="bibr" rid="pcbi.1006176.ref028">28</xref>]. ViennaRNA 2.3.5 [<xref ref-type="bibr" rid="pcbi.1006176.ref006">6</xref>] was used to compute the folded structures for sequences.</p>
</sec>
<sec id="sec008">
<title>Testing procedure</title>
<p>The trained model was tested on the Eterna100 benchmark by following procedures that, as closely as possible, match those used in [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>]. For each puzzle, a random sequence was initially chosen, then modified by performing actions chosen by the policy network until a solution was reached. 24 hours were allowed for each attempt, and up to five attempts were made for each puzzle. Each attempt ran on a single Intel Xeon E5-2680 v2 CPU.</p>
</sec>
</sec>
<sec id="sec009" sec-type="conclusions">
<title>Results and discussion</title>
<p>In total, our method successfully solved 60 of the 100 puzzles. For comparison, of the six algorithms tested in [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>], the best benchmark score was for MODENA which solved 54 puzzles. Our method thus outperforms all previous algorithms. Full results are shown in <xref ref-type="table" rid="pcbi.1006176.t001">Table 1</xref>.</p>
<table-wrap id="pcbi.1006176.t001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006176.t001</object-id>
<label>Table 1</label> <caption><title>Puzzles in the Eterna100 benchmark.</title> <p>The ones our method succeeding in solving are marked with an X.</p></caption>
<alternatives>
<graphic id="pcbi.1006176.t001g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006176.t001" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<tbody>
<tr>
<td align="left">1. Simple Hairpin</td>
<td align="center">X</td>
<td align="left">51. medallion</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">2. Arabidopsis Thaliana 6 RNA—Difficulty Level 0</td>
<td align="center">X</td>
<td align="left">52. [RNA] Repetitious Sequences 8/10</td>
<td align="center"/>
</tr>
<tr>
<td align="left">3. Prion Pseudoknot—Difficulty Level 0</td>
<td align="center">X</td>
<td align="left">53. Documenting repetitious behavior</td>
<td align="center"/>
</tr>
<tr>
<td align="left">4. Human Integrated Adenovirus—Difficulty Level 0</td>
<td align="center">X</td>
<td align="left">54. 7 multiloop</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">5. The Gammaretrovirus Signal—Difficulty Level 0</td>
<td align="center">X</td>
<td align="left">55. Kyurem 7</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">6. Saccharomyces Cerevisiae—Difficulty Level 0</td>
<td align="center">X</td>
<td align="left">56. JF1</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">7. Fractal 2</td>
<td align="center">X</td>
<td align="left">57. multilooping fun</td>
<td align="center"/>
</tr>
<tr>
<td align="left">8. G-C Placement</td>
<td align="center">X</td>
<td align="left">58. Multiloop…</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">9. The Sun</td>
<td align="center">X</td>
<td align="left">59. hard Y</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">10. Frog Foot</td>
<td align="center">X</td>
<td align="left">60. Mat—Elements &amp; Sections</td>
<td align="center"/>
</tr>
<tr>
<td align="left">11. InfoRNA test 16</td>
<td align="center">X</td>
<td align="left">61. Chicken feet</td>
<td align="center"/>
</tr>
<tr>
<td align="left">12. Mat—Martian 2</td>
<td align="center">X</td>
<td align="left">62. Bug 18</td>
<td align="center"/>
</tr>
<tr>
<td align="left">13. square</td>
<td align="center">X</td>
<td align="left">63. Fractal star x5</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">14. Six legd turtle 2</td>
<td align="center">X</td>
<td align="left">64. Crop circle 2</td>
<td align="center"/>
</tr>
<tr>
<td align="left">15. Small and Easy 6</td>
<td align="center">X</td>
<td align="left">65. Branching Loop</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">16. Fractile</td>
<td align="center">X</td>
<td align="left">66. Bug 38</td>
<td align="center"/>
</tr>
<tr>
<td align="left">17. Six legd Turtle</td>
<td align="center">X</td>
<td align="left">67. Simple Single Bond</td>
<td align="center"/>
</tr>
<tr>
<td align="left">18. snoRNA SNORD64</td>
<td align="center">X</td>
<td align="left">68. Taraxacum officinale</td>
<td align="center"/>
</tr>
<tr>
<td align="left">19. Chalk Outline</td>
<td align="center">X</td>
<td align="left">69. Headless Bug on Windshield</td>
<td align="center"/>
</tr>
<tr>
<td align="left">20. InfoRNA bulge test 9</td>
<td align="center">X</td>
<td align="left">70. Pokeball</td>
<td align="center"/>
</tr>
<tr>
<td align="left">21. Tilted Russian Cross</td>
<td align="center">X</td>
<td align="left">71. Variation of a crop circle</td>
<td align="center"/>
</tr>
<tr>
<td align="left">22. This is ACTUALLY Small And Easy 6</td>
<td align="center">X</td>
<td align="left">72. Loop next to a Multiloop</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">23. Shortie 4</td>
<td align="center">X</td>
<td align="left">73. Snowflake 4</td>
<td align="center"/>
</tr>
<tr>
<td align="left">24. Shape Test</td>
<td align="center">X</td>
<td align="left">74. Mat—Cuboid</td>
<td align="center"/>
</tr>
<tr>
<td align="left">25. The Minitsry</td>
<td align="center">X</td>
<td align="left">75. Misfolded Aptamer 6</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">26. stickshift</td>
<td align="center">X</td>
<td align="left">76. Snowflake 3</td>
<td align="center"/>
</tr>
<tr>
<td align="left">27. U</td>
<td align="center">X</td>
<td align="left">77. Hard Y and a bit more</td>
<td align="center"/>
</tr>
<tr>
<td align="left">28. Still Life (Sunflower In A Vase)</td>
<td align="center">X</td>
<td align="left">78. Mat—Lot 2–2 B</td>
<td align="center"/>
</tr>
<tr>
<td align="left">29. Quasispecies 2–2 Loop Challenge</td>
<td align="center">X</td>
<td align="left">79. Shapes and Energy</td>
<td align="center"/>
</tr>
<tr>
<td align="left">30. Corner bulge training</td>
<td align="center">X</td>
<td align="left">80. Spiral of 5's</td>
<td align="center"/>
</tr>
<tr>
<td align="left">31. Spiral</td>
<td align="center">X</td>
<td align="left">81. Campfire</td>
<td align="center"/>
</tr>
<tr>
<td align="left">32. InfoRNA bulge test</td>
<td align="center">X</td>
<td align="left">82. Anemone</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">33. Worm 1</td>
<td align="center"/>
<td align="left">83. Fractal 3</td>
<td align="center"/>
</tr>
<tr>
<td align="left">34. just down to 1 bulge</td>
<td align="center">X</td>
<td align="left">84. Kyurem 5</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">35. Iron Cross</td>
<td align="center"/>
<td align="left">85. Snowflake Necklace (or v2.0)</td>
<td align="center"/>
</tr>
<tr>
<td align="left">36. loops and stems</td>
<td align="center">X</td>
<td align="left">86. Methaqualone C16H14N2O Structural Representation</td>
<td align="center"/>
</tr>
<tr>
<td align="left">37. Water Strider</td>
<td align="center">X</td>
<td align="left">87. Cat's Toy 2</td>
<td align="center"/>
</tr>
<tr>
<td align="left">38. The Turtle(s) Move(s)</td>
<td align="center"/>
<td align="left">88. Zigzag Semicircle</td>
<td align="center"/>
</tr>
<tr>
<td align="left">39. Adenine</td>
<td align="center">X</td>
<td align="left">89. Short String 4</td>
<td align="center"/>
</tr>
<tr>
<td align="left">40. Tripod5</td>
<td align="center">X</td>
<td align="left">90. Gladius</td>
<td align="center"/>
</tr>
<tr>
<td align="left">41. Shortie 6</td>
<td align="center">X</td>
<td align="left">91. Thunderbolt</td>
<td align="center"/>
</tr>
<tr>
<td align="left">42. Runner</td>
<td align="center">X</td>
<td align="left">92. Mutated chicken feet</td>
<td align="center"/>
</tr>
<tr>
<td align="left">43. Recoil</td>
<td align="center">X</td>
<td align="left">93. Chicken Tracks</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">44. [CloudBeta] An Arm and a Leg 1.0</td>
<td align="center">X</td>
<td align="left">94. Looking Back Again</td>
<td align="center"/>
</tr>
<tr>
<td align="left">45. [CloudBeta] 5 Adjacent Stack Multi-Branch Loop</td>
<td align="center">X</td>
<td align="left">95. Multilooping 6</td>
<td align="center">X</td>
</tr>
<tr>
<td align="left">46. Triple Y</td>
<td align="center">X</td>
<td align="left">96. Cesspool</td>
<td align="center"/>
</tr>
<tr>
<td align="left">47. Misfolded Aptamer</td>
<td align="center">X</td>
<td align="left">97. Hoglafractal</td>
<td align="center"/>
</tr>
<tr>
<td align="left">48. Flower power</td>
<td align="center">X</td>
<td align="left">98. Bullseye</td>
<td align="center"/>
</tr>
<tr>
<td align="left">49. Kudzu</td>
<td align="center">X</td>
<td align="left">99. Shooting Star</td>
<td align="center"/>
</tr>
<tr>
<td align="left">50. "1,2,3and4bulges"</td>
<td align="center"/>
<td align="left">100. Teslagon</td>
<td align="center"/>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>We observed that nearly all of the puzzles fell into two categories: ones the algorithm solves quickly and easily, and ones that it simply is not capable of solving (or that require much longer than 24 hours to solve). Of the 60 puzzles it successfully solved, the majority (38) required less than one minute, and nearly all (56) required less than three hours. Running for the full 24 hours yielded only two additional solutions. Running another four tests for each of the remaining puzzles yielded solutions to only two more. This suggests it is well past the point of diminishing returns, and simply running the algorithm longer, or speeding up the computation by any small constant factor, would be unlikely to significantly improve the success rate.</p>
<p>All else being equal, one would expect the difficulty and required computation time to increase with sequence length. <xref ref-type="fig" rid="pcbi.1006176.g002">Fig 2</xref> shows the relationship between these factors. It is clear that computation time does increase with sequence length, but there also is enormous variation. The numbers of steps required to solve two puzzles of the same length may differ by many orders of magnitude. Our method successfully solves some of the very longest puzzles, yet fails to solve some very short ones. In total, it solves 71% (47 of 66) of the puzzles shorter than 150 bases, and 38% (13 of 34) of the ones longer than 150 bases. This suggests sequence length is one factor affecting difficulty, but other factors are equally or more important.</p>
<fig id="pcbi.1006176.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006176.g002</object-id>
<label>Fig 2</label>
<caption>
<title/>
<p>Difficulty of solving puzzles as measured by (a) clock time or (b) steps, versus sequence length. Blue dots represent the 58 puzzles that were successfully solved on the first attempt. Red dots represent the 42 puzzles on which it gave up after running for 24 hours. (Two more of them were eventually solved on later attempts.) Longer sequences take more time per step, so fewer steps can be completed in 24 hours.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006176.g002" xlink:type="simple"/>
</fig>
<p>On the other hand, the method's performance on each puzzle very closely matches how difficult that puzzle is for human players. The puzzles are ordered by the number of human players who successfully solved each one. Our method solves every one of the first 32 puzzles, and 46 of the first 50, but only 14 of the final 50. That is, it easily solves all the puzzles that are easy for expert human players, but fails to solve most of the ones that are difficult for expert humans. This suggests the intriguing possibility that the strategies learned by the policy network may be very similar to the strategies followed by human players.</p>
<p>Anderson-Lee et al. identified a set of structural elements that make puzzles difficult to solve [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>]. We now consider how well our method handles each of those elements.</p>
<sec id="sec010">
<title>Short stems</title>
<p>Structures with short stems are in general challenging for design due to their energetic instability [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>]. Furthermore, as the number of stems increases, the design difficulty also increases due to the higher probability of mispairing between stems [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>]. We observe that our model is competent at addressing these structural challenges. For example, our model can quickly solve both Shortie 4 and Shortie 6 from the Eterna100, which consist of two and four length-2 stems respectively. Shortie 4 took 1390 steps and 2.2 seconds to solve, whereas Shortie 6 required 121,113 steps and a little more than 4 minutes. This is consistent with the fact that Shortie 6, having a larger number of stems, is more difficult to solve. To address the issue of mispairing between stems, our model introduces asymmetries in the stem base pairing patterns, such that stems 1 and 2 are composed of alternating GC/CG pairs, whereas stems 3 and 4 contain non-alternating CG/CG pairs, as shown in <xref ref-type="fig" rid="pcbi.1006176.g003">Fig 3</xref>. The application of different sequences to symmetric structural elements is also a common strategy employed by human players to solve difficult puzzles with high symmetry [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>]. Furthermore, our model also chose to mutate the first base at the 5' end of the 4-loop of stem 4 to G, which corresponds to a human-developed strategy that stabilizes stems, named "boosting" by Eterna players. From this observation, we initially believed that our model had learned how to boost 4-loops during training. However, this is not the case, as the model also makes a deceptively boost-like G-mutation at the 3' end of the 4-loop of stem 3, which does not actually stabilize the structure (the correct move would have been to mutate the first base at the 5' end to G). Therefore, we believe that the boost made at stem 4 was not due to the model learning this strategy, but rather due to random chance because of the relatively small size of the puzzle and the large number of steps taken to solve it.</p>
<fig id="pcbi.1006176.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006176.g003</object-id>
<label>Fig 3</label>
<caption>
<title/>
<p>Examples of puzzles with short stems solved by our model: Shortie 6 (a), and Kyurem 7 (b). The Shortie 6 solution strategy involved introducing asymmetric base pairing patterns of GC/CG for stems 1 and 2 and CG/CG for stems 3 and 4. Upon first glance, it seems that the model has successfully learned how to boost 4-loops, since it makes G-mutations at edge bases of the 4-loops at stems 3 and 4. However, while stem 4 is boosted correctly, the G-mutation in the 4-loop of stem 3 is actually in the wrong position and does not stabilize the loop. Kyurem 7 is significantly more difficult due to the presence of two multiloops joining the short stems, but our model successfully proposes asymmetric stem designs around each multiloop to stabilize the structure. Multiloop 1 consists of three stems with a common pattern of alternating GC/AU pairs, whereas multiloop 2 consists of stems composed of almost entirely GC pairs, except for the single AU closing pair in the third stem. Mutations to all but four base pairs in Kyurem 7, highlighted in red, result in misfolding of the structure, indicating the need for precise design of the stem base pairings.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006176.g003" xlink:type="simple"/>
</fig>
<p>To further investigate whether the model had learned how to boost, we chose 124 structures at random from the validation set that contained 4-loops and examined the distribution of bases at the boosting position. We observed that the boost position has an identity of G in only 19 (15%) of the solutions, suggesting that the model has not learned that boosting is a favorable move. To address the alternative possibility that the model is intentionally not boosting the 4-loop and instead choosing an alternative strategy incompatible with boosting, for all structures in which the boost position was not G, we manually mutated this base to G and then compared the predicted free energy of this boosted sequence to that of the original sequence. We observe that the boost stabilizes the structure an overwhelming majority of the time (98.2% of the structures) by an average of -0.67 ± 0.58 kcal/mol. Therefore, we conclude that the model is not making design choices incompatible with boosting, but rather has not learned the boosting strategy. This is likely because the structures in the training set are small enough that boosting if often not necessary for stabilizing the structure. Indeed, of the 19 predicted solutions with G in the boost position, removing the boost by mutating the G to A did not affect the predicted structure in all but 3 cases, confirming that for the large majority of structures, boosting is not necessary to the solution. In the future, expanding the training set to include longer sequences to make boosting a necessary stabilization move may allow the model to learn this strategy.</p>
<p>In addition to the Shortie puzzles, our model most notably also succeeds in solving both Kyurem 7 and Kyurem 5 very quickly, two structures which none of the algorithms previously benchmarked could solve. These structures are noted for being particularly difficult due to the presence of multiple short stems connected by multiloop junctions, which significantly increases the probability of mispairing between stems. Kyurem 5, the easier of the two puzzles, took our algorithm 821 steps and 7.7 seconds to solve, whereas Kyurem 7 took 4563 steps and 36.4 seconds. Like its solution strategy for Shortie 6, we notice that our model makes asymmetric design choices for Kyurem 7 with respect to the stems surrounding the two multiloops. It assigns the three length-3 stems around the first multiloop a common motif of alternating GC/AU/CG pairs, whereas for the stems around the second multiloop, except for the closing AU pair at (47,67), the model assigns only GC pairs. Previously, it was shown that stabilization of a given stem for Kyurem 7 requires not only making stabilizing mutations within that stem, but also making precise mutations to multiple nearby stems [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>]. Thus, such asymmetric design of stems to prevent inter-stem mispairing is likely necessary for stabilizing the structure. We also observe that our proposed sequence is indeed very sensitive to small perturbations. Taking each base pair in the sequence and either swapping the bases or mutating the pair to GC, both common design moves, almost always resulted in the sequence misfolding into a different structure. Only perturbations of four base pairs: (15,20), (36,44), (37,43), or (51,60) did not result in misfolding.</p>
<p>Finally, in a striking contrast with previous computational algorithms, we note that our model can solve both Kyurem 7 and Kyurem 5 much faster than Shortie 6, which is designed to be a less difficult puzzle. This raises the possibility that perhaps our model is not learning design strategies in a progressive manner, i.e. simple to advanced, but is somehow first learning advanced strategies, leaving a gap in its knowledge base that makes it more difficult to solve easier puzzles.</p>
</sec>
<sec id="sec011">
<title>Bulges and internal loops</title>
<p>The presence of bulges and internal loops are known to destabilize structures, as they result in a smaller overall amount of base pairing and encourage mispairing to form more stable stems [<xref ref-type="bibr" rid="pcbi.1006176.ref018">18</xref>]. Likewise, our model's performance noticeably decreases as the number of bulges or internal loops increase. For example, our model can solve the relatively easy "Just down to 1 bulge" extremely quickly in only 11.9 seconds, but fails for its more difficult counterpart "1,2,3and4bulges". This is consistent with the performance of previous computational algorithms: "1,2,3and4bulges" was only solvable by MODENA, whereas "Just down to 1 bulge" was solvable by 4 of 6 algorithms. Likewise, our model succeeds in solving "Loop next to a multiloop", which consists of two internal loops stabilized by a short stem, in about 25 minutes, but fails for structures such as "Crop circle 2", which consists of five internal loops stabilized by short stems. This is consistent with the performance of previous computational algorithms, as "Loop next to a multiloop" was solvable by RNA-SSD, but "Crop circle 2" was unsolvable by any algorithm. We expect that structures such as "Crop circle 2", due to their complexity and uniqueness, will pose challenges for our model, as such motifs have not been encountered during training.</p>
</sec>
<sec id="sec012">
<title>Symmetric structural elements</title>
<p>As discussed above, structures with high symmetry introduce opportunities for mispairing between symmetric elements, contributing to design difficulty. Our model shows varied success at solving puzzles with this characteristic. Although it can readily handle simple puzzles with symmetric elements such as Shortie 6 and Fractal 2, it fails for more complicated puzzles such as Mutated Chicken Feet, which consists of three symmetric branches of consecutive short stems linked by bulges and multiloops, a combination of several factors that make design difficult. The unique combination of different structural elements comprising this puzzle poses a significant challenge to our current model, since it is distinct from anything encountered in the training set.</p>
</sec>
<sec id="sec013">
<title>Infrequently occurring structural patterns</title>
<p>Unusual structural patterns that arise infrequently in nature also present challenges for current design algorithms. For example, in the "Hard Y" puzzle, the presence of two consecutive small bulges in a structure, named the "zigzag", significantly increases the difficulty of the puzzle and renders it unsolvable for any of the previously benchmarked computational algorithms. Remarkably, we observed that our model could propose a valid sequence to stabilize the zigzag and solve "Hard Y" in a little under 10 minutes. However, given the relatively long timescale taken to solve hard Y compared to puzzles of even significantly longer length such as the Kyurem puzzles, it is possible that our model did not actually learn the solution strategy for the zigzag during training, but instead arrived at the solution primarily by random search after intelligently solving the remainder of the puzzle.</p>
</sec>
<sec id="sec014">
<title>Overcomplicating the design strategy</title>
<p>Many computational algorithms approach the RNA design problem by first initializing to a random sequence of bases and then performing some form of stochastic search, such as RNAInverse and RNA-SSD. This random initialization can overcomplicate the solution process for certain structures. For example, "This is actually small and easy 6", which is a chain of 400 unpaired bases, was solvable only by NUPACK and DSS-Opt out of the six methods tested. A trivial solution that is easily identifiable by humans is to simply set every position in the sequence to the same base, but many computational algorithms fail to arrive at this solution due to the random initialization of the sequence, leading to many unintended base pairs. We expected our model, which also randomly initializes the sequence, to struggle with this structure. However, our model was able to solve this puzzle remarkably quickly in less than 5000 steps despite the structure's length. This indicates that the model is not making random moves, but has learned during training how to break unwanted base pairs and is making intelligent mutation choices to fix a bad initial sequence.</p>
<p>In summary, we observe that our model is very competent at stabilizing short stems, even in the presence of additional destabilizing structural motifs such as multiloops or structural symmetry, by introducing precise asymmetric base pairing patterns for the stems. The two representative puzzles with these characteristics unsolvable by any previous computational algorithm, Kyurem 5 and Kyurem 7, were both solved very quickly by our model.</p>
<p>On the other hand, our model seems to struggle with structures containing large numbers of bulges or internal loops. Although it solves the relatively simple "Just down to 1 bulge", our model fails for the more difficult "1,2,3,and4bulges" and "Crop circle 2". We hypothesize that the model's poor performance on these structures is because stabilization of them requires the application of strategies the model did not learn during training. For example, "1,2,3,and4bulges" possesses an unusual structural motif of a 4-loop connected to a length-1 stem that to our knowledge must be boosted to stabilize the structure. Likewise, "Crop circle 2" requires the internal loops to be simultaneously boosted in one of few specific ways. Because our model did not learn the boosting strategy during training, it expectedly fails for structures where boosting is necessary for stabilization. As a future study, increasing the length of the structures in the training set may allow for sampling of more complicated structures for which boosting is a necessary stabilization move. This would allow the model to consistently sample positive rewards for boosting during training and learn the strategy.</p>
</sec>
<sec id="sec015" sec-type="conclusions">
<title>Conclusion</title>
<p>In this study, we train an agent for RNA design using reinforcement learning and a training set of randomly generated secondary structures. We observe that the agent can learn effective design strategies fully autonomously with no human input. Remarkably, our trained agent outperforms any previous computational algorithm, solving 60/100 of the Eterna100. Due to the limited length and complexity of our current training set, the model is unable to learn certain stabilizing strategies such as boosting, hindering its performance on more difficult structures for which these strategies are necessary. Expanding the length of the training sequences may allow the model to sample more complex structural motifs and learn more advanced strategies to improve its performance. We plan to investigate this possibility in future work.</p>
</sec>
</sec>
<sec id="sec016">
<title>Supporting information</title>
<supplementary-material id="pcbi.1006176.s001" mimetype="text/csv" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006176.s001" xlink:type="simple">
<label>S1 Solutions</label>
<caption>
<title>Solutions to the Eterna100 puzzles found by our method.</title>
<p>(CSV)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006176.s002" mimetype="application/zip" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006176.s002" xlink:type="simple">
<label>S1 Source code</label>
<caption>
<title>Source code and data to reproduce the results of this paper.</title>
<p>(ZIP)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="pcbi.1006176.ref001"><label>1</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Goldberg</surname> <given-names>MS</given-names></name>, <name name-style="western"><surname>Xing</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Ren</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Orsulic</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Bhatia</surname> <given-names>SN</given-names></name>, <name name-style="western"><surname>Sharp</surname> <given-names>PA</given-names></name>. <article-title>Nanoparticle-mediated delivery of siRNA targeting Parp1 extends survival of mice bearing tumors derived from Brca1-deficient ovarian cancer cells</article-title>. <source>Proc Natl Acad Sci</source>. <year>2011</year>;<volume>108</volume>: <fpage>745</fpage>–<lpage>750</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1073/pnas.1016538108" xlink:type="simple">10.1073/pnas.1016538108</ext-link></comment> <object-id pub-id-type="pmid">21187397</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref002"><label>2</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Win</surname> <given-names>MN</given-names></name>, <name name-style="western"><surname>Smolke</surname> <given-names>CD</given-names></name>. <article-title>Higher-Order Cellular Information Processing with Synthetic RNA Devices</article-title>. <source>Science</source>. <year>2008</year>;<volume>322</volume>: <fpage>456</fpage>–<lpage>460</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1126/science.1160311" xlink:type="simple">10.1126/science.1160311</ext-link></comment> <object-id pub-id-type="pmid">18927397</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref003"><label>3</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Delebecque</surname> <given-names>CJ</given-names></name>, <name name-style="western"><surname>Lindner</surname> <given-names>AB</given-names></name>, <name name-style="western"><surname>Silver</surname> <given-names>PA</given-names></name>, <name name-style="western"><surname>Aldaye</surname> <given-names>FA</given-names></name>. <article-title>Organization of Intracellular Reactions with Rationally Designed RNA Assemblies</article-title>. <source>Science</source>. <year>2011</year>;<volume>333</volume>: <fpage>470</fpage>–<lpage>474</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1126/science.1206938" xlink:type="simple">10.1126/science.1206938</ext-link></comment> <object-id pub-id-type="pmid">21700839</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref004"><label>4</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hao</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Li</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Tian</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Jiang</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Wang</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Mao</surname> <given-names>C</given-names></name>. <article-title>Construction of RNA nanocages by re-engineering the packaging RNA of Phi29 bacteriophage</article-title>. <source>Nat Commun</source>. <year>2014</year>;<volume>5</volume>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/ncomms4890" xlink:type="simple">10.1038/ncomms4890</ext-link></comment> <object-id pub-id-type="pmid">24835104</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref005"><label>5</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Dixon</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Duncan</surname> <given-names>JN</given-names></name>, <name name-style="western"><surname>Geerlings</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Dunstan</surname> <given-names>MS</given-names></name>, <name name-style="western"><surname>McCarthy</surname> <given-names>JEG</given-names></name>, <name name-style="western"><surname>Leys</surname> <given-names>D</given-names></name>, <etal>et al</etal>. <article-title>Reengineering orthogonally selective riboswitches</article-title>. <source>Proc Natl Acad Sci</source>. <year>2010</year>;<volume>107</volume>: <fpage>2830</fpage>–<lpage>2835</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1073/pnas.0911209107" xlink:type="simple">10.1073/pnas.0911209107</ext-link></comment> <object-id pub-id-type="pmid">20133756</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref006"><label>6</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lorenz</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Bernhart</surname> <given-names>SH</given-names></name>, <name name-style="western"><surname>Höner zu Siederdissen</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Tafer</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Flamm</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Stadler</surname> <given-names>PF</given-names></name>, <etal>et al</etal>. <article-title>ViennaRNA Package 2.0.</article-title> <source>Algorithms Mol Biol</source>. <year>2011</year>;<volume>6</volume>: <fpage>26</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/1748-7188-6-26" xlink:type="simple">10.1186/1748-7188-6-26</ext-link></comment> <object-id pub-id-type="pmid">22115189</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref007"><label>7</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Domin</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Findeiß</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Wachsmuth</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Will</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Stadler</surname> <given-names>PF</given-names></name>, <name name-style="western"><surname>Mörl</surname> <given-names>M</given-names></name>. <article-title>Applicability of a computational design approach for synthetic riboswitches</article-title>. <source>Nucleic Acids Res</source>. <year>2017</year>;<volume>45</volume>: <fpage>4108</fpage>–<lpage>4119</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkw1267" xlink:type="simple">10.1093/nar/gkw1267</ext-link></comment> <object-id pub-id-type="pmid">27994029</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref008"><label>8</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Dotu</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Garcia-Martin</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Slinger</surname> <given-names>BL</given-names></name>, <name name-style="western"><surname>Mechery</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Meyer</surname> <given-names>MM</given-names></name>, <name name-style="western"><surname>Clote</surname> <given-names>P</given-names></name>. <article-title>Complete RNA inverse folding: computational design of functional hammerhead ribozymes</article-title>. <source>Nucleic Acids Res</source>. <year>2014</year>;<volume>42</volume>: <fpage>11752</fpage>–<lpage>11762</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gku740" xlink:type="simple">10.1093/nar/gku740</ext-link></comment> <object-id pub-id-type="pmid">25209235</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref009"><label>9</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Penchovsky</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Breaker</surname> <given-names>RR</given-names></name>. <article-title>Computational design and experimental validation of oligonucleotide-sensing allosteric ribozymes</article-title>. <source>Nat Biotechnol</source>. <year>2005</year>;<volume>23</volume>: <fpage>1424</fpage>–<lpage>1433</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nbt1155" xlink:type="simple">10.1038/nbt1155</ext-link></comment> <object-id pub-id-type="pmid">16244657</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref010"><label>10</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wachsmuth</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Findeiß</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Weissheimer</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Stadler</surname> <given-names>PF</given-names></name>, <name name-style="western"><surname>Mörl</surname> <given-names>M</given-names></name>. <article-title>De novo design of a synthetic riboswitch that regulates transcription termination</article-title>. <source>Nucleic Acids Res</source>. <year>2013</year>;<volume>41</volume>: <fpage>2541</fpage>–<lpage>2551</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gks1330" xlink:type="simple">10.1093/nar/gks1330</ext-link></comment> <object-id pub-id-type="pmid">23275562</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref011"><label>11</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hofacker</surname> <given-names>IL</given-names></name>, <name name-style="western"><surname>Fontana</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Stadler</surname> <given-names>PF</given-names></name>, <name name-style="western"><surname>Bonhoeffer</surname> <given-names>LS</given-names></name>, <name name-style="western"><surname>Tacker</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Schuster</surname> <given-names>P</given-names></name>. <article-title>Fast folding and comparison of RNA secondary structures</article-title>. <source>Monatshefte Für Chem Chem Mon</source>. <year>1994</year>;<volume>125</volume>: <fpage>167</fpage>–<lpage>188</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1007/BF00818163" xlink:type="simple">10.1007/BF00818163</ext-link></comment></mixed-citation></ref>
<ref id="pcbi.1006176.ref012"><label>12</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Andronescu</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Fejes</surname> <given-names>AP</given-names></name>, <name name-style="western"><surname>Hutter</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Hoos</surname> <given-names>HH</given-names></name>, <name name-style="western"><surname>Condon</surname> <given-names>A</given-names></name>. <article-title>A New Algorithm for RNA Secondary Structure Design</article-title>. <source>J Mol Biol</source>. <year>2004</year>;<volume>336</volume>: <fpage>607</fpage>–<lpage>624</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jmb.2003.12.041" xlink:type="simple">10.1016/j.jmb.2003.12.041</ext-link></comment> <object-id pub-id-type="pmid">15095976</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref013"><label>13</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Busch</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Backofen</surname> <given-names>R</given-names></name>. <article-title>INFO-RNA—a fast approach to inverse RNA folding</article-title>. <source>Bioinformatics</source>. <year>2006</year>;<volume>22</volume>: <fpage>1823</fpage>–<lpage>1831</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btl194" xlink:type="simple">10.1093/bioinformatics/btl194</ext-link></comment> <object-id pub-id-type="pmid">16709587</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref014"><label>14</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Matthies</surname> <given-names>MC</given-names></name>, <name name-style="western"><surname>Bienert</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Torda</surname> <given-names>AE</given-names></name>. <article-title>Dynamics in Sequence Space for RNA Secondary Structure Design</article-title>. <source>J Chem Theory Comput</source>. <year>2012</year>;<volume>8</volume>: <fpage>3663</fpage>–<lpage>3670</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1021/ct300267j" xlink:type="simple">10.1021/ct300267j</ext-link></comment> <object-id pub-id-type="pmid">26593011</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref015"><label>15</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Zadeh</surname> <given-names>JN</given-names></name>, <name name-style="western"><surname>Steenberg</surname> <given-names>CD</given-names></name>, <name name-style="western"><surname>Bois</surname> <given-names>JS</given-names></name>, <name name-style="western"><surname>Wolfe</surname> <given-names>BR</given-names></name>, <name name-style="western"><surname>Pierce</surname> <given-names>MB</given-names></name>, <name name-style="western"><surname>Khan</surname> <given-names>AR</given-names></name>, <etal>et al</etal>. <article-title>NUPACK: Analysis and design of nucleic acid systems</article-title>. <source>J Comput Chem</source>. <year>2011</year>;<volume>32</volume>: <fpage>170</fpage>–<lpage>173</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/jcc.21596" xlink:type="simple">10.1002/jcc.21596</ext-link></comment> <object-id pub-id-type="pmid">20645303</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref016"><label>16</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Taneda</surname> <given-names>A</given-names></name>. <article-title>MODENA: a multi-objective RNA inverse folding</article-title>. <source>Adv Appl Bioinforma Chem AABC</source>. <year>2010</year>;<volume>4</volume>: <fpage>1</fpage>–<lpage>12</lpage>.</mixed-citation></ref>
<ref id="pcbi.1006176.ref017"><label>17</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lee</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Kladwang</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Lee</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Cantu</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Azizyan</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Kim</surname> <given-names>H</given-names></name>, <etal>et al</etal>. <article-title>RNA design rules from a massive open laboratory</article-title>. <source>Proc Natl Acad Sci</source>. <year>2014</year>;<volume>111</volume>: <fpage>2122</fpage>–<lpage>2127</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1073/pnas.1313039111" xlink:type="simple">10.1073/pnas.1313039111</ext-link></comment> <object-id pub-id-type="pmid">24469816</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref018"><label>18</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Anderson-Lee</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Fisker</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Kosaraju</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Wu</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Kong</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Lee</surname> <given-names>J</given-names></name>, <etal>et al</etal>. <article-title>Principles for Predicting RNA Secondary Structure Design Difficulty</article-title>. <source>J Mol Biol</source>. <year>2016</year>;<volume>428</volume>: <fpage>748</fpage>–<lpage>757</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jmb.2015.11.013" xlink:type="simple">10.1016/j.jmb.2015.11.013</ext-link></comment> <object-id pub-id-type="pmid">26902426</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref019"><label>19</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Krizhevsky</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Sutskever</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Hinton</surname> <given-names>GE</given-names></name>. <chapter-title>ImageNet Classification with Deep Convolutional Neural Networks</chapter-title>. In: <name name-style="western"><surname>Pereira</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Burges</surname> <given-names>CJC</given-names></name>, <name name-style="western"><surname>Bottou</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Weinberger</surname> <given-names>KQ</given-names></name>, editors. <source>Advances in Neural Information Processing Systems 25</source>. <publisher-name>Curran Associates, Inc.</publisher-name>; <year>2012</year>. pp. <fpage>1097</fpage>–<lpage>1105</lpage>. Available: <ext-link ext-link-type="uri" xlink:href="http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf" xlink:type="simple">http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf</ext-link></mixed-citation></ref>
<ref id="pcbi.1006176.ref020"><label>20</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Graves</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Fernández</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Gomez</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Schmidhuber</surname> <given-names>J</given-names></name>. <source>Connectionist temporal classification: labelling unsegmented sequence data with recurrent neural networks</source>. ACM Press; <year>2006</year>. pp. <fpage>369</fpage>–<lpage>376</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1145/1143844.1143891" xlink:type="simple">10.1145/1143844.1143891</ext-link></comment></mixed-citation></ref>
<ref id="pcbi.1006176.ref021"><label>21</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wu</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Schuster</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Chen</surname> <given-names>Z</given-names></name>, <name name-style="western"><surname>Le</surname> <given-names>QV</given-names></name>, <name name-style="western"><surname>Norouzi</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Macherey</surname> <given-names>W</given-names></name>, <etal>et al</etal>. <article-title>Google’s Neural Machine Translation System: Bridging the Gap between Human and Machine Translation</article-title>. <source>ArXiv160908144 Cs</source>. <year>2016</year>; Available: <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1609.08144" xlink:type="simple">http://arxiv.org/abs/1609.08144</ext-link></mixed-citation></ref>
<ref id="pcbi.1006176.ref022"><label>22</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Mnih</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Kavukcuoglu</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Silver</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Graves</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Antonoglou</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Wierstra</surname> <given-names>D</given-names></name>, <etal>et al</etal>. <article-title>Playing Atari with Deep Reinforcement Learning</article-title>. <source>ArXiv13125602 Cs</source>. <year>2013</year>; Available: <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1312.5602" xlink:type="simple">http://arxiv.org/abs/1312.5602</ext-link></mixed-citation></ref>
<ref id="pcbi.1006176.ref023"><label>23</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gu</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Holly</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Lillicrap</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Levine</surname> <given-names>S</given-names></name>. <article-title>Deep Reinforcement Learning for Robotic Manipulation with Asynchronous Off-Policy Updates</article-title>. <source>ArXiv161000633 Cs</source>. <year>2016</year>; Available: <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1610.00633" xlink:type="simple">http://arxiv.org/abs/1610.00633</ext-link></mixed-citation></ref>
<ref id="pcbi.1006176.ref024"><label>24</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Silver</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Schrittwieser</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Simonyan</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Antonoglou</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Huang</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Guez</surname> <given-names>A</given-names></name>, <etal>et al</etal>. <article-title>Mastering the game of Go without human knowledge</article-title>. <source>Nature</source>. <year>2017</year>;<volume>550</volume>: <fpage>354</fpage>–<lpage>359</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nature24270" xlink:type="simple">10.1038/nature24270</ext-link></comment> <object-id pub-id-type="pmid">29052630</object-id></mixed-citation></ref>
<ref id="pcbi.1006176.ref025"><label>25</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>He</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Zhang</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Ren</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Sun</surname> <given-names>J</given-names></name>. <article-title>Deep Residual Learning for Image Recognition</article-title>. <source>ArXiv151203385 Cs</source>. <year>2015</year>; Available: <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1512.03385" xlink:type="simple">http://arxiv.org/abs/1512.03385</ext-link></mixed-citation></ref>
<ref id="pcbi.1006176.ref026"><label>26</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Mnih</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Badia</surname> <given-names>AP</given-names></name>, <name name-style="western"><surname>Mirza</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Graves</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Lillicrap</surname> <given-names>TP</given-names></name>, <name name-style="western"><surname>Harley</surname> <given-names>T</given-names></name>, <etal>et al</etal>. <article-title>Asynchronous Methods for Deep Reinforcement Learning</article-title>. <source>ArXiv160201783 Cs</source>. <year>2016</year>; Available: <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1602.01783" xlink:type="simple">http://arxiv.org/abs/1602.01783</ext-link></mixed-citation></ref>
<ref id="pcbi.1006176.ref027"><label>27</label><mixed-citation publication-type="other" xlink:type="simple">DeepChem: Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry, Materials Science and Biology [Internet]. deepchem; 2017. Available: <ext-link ext-link-type="uri" xlink:href="https://github.com/deepchem/deepchem" xlink:type="simple">https://github.com/deepchem/deepchem</ext-link></mixed-citation></ref>
<ref id="pcbi.1006176.ref028"><label>28</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Abadi</surname> <given-names>Martín</given-names></name>, <name name-style="western"><surname>Agarwal</surname> <given-names>Ashish</given-names></name>, <name name-style="western"><surname>Barham</surname> <given-names>Paul</given-names></name>, <name name-style="western"><surname>Brevdo</surname> <given-names>Eugene</given-names></name>, <name name-style="western"><surname>Chen</surname> <given-names>Zhifeng</given-names></name>, <name name-style="western"><surname>Citro</surname> <given-names>Craig</given-names></name>, <etal>et al</etal>. <source>TensorFlow: Large-Scale Machine Learning on Heterogeneous Systems</source> [Internet]. <year>2015</year>. Available: <ext-link ext-link-type="uri" xlink:href="https://www.tensorflow.org/" xlink:type="simple">https://www.tensorflow.org/</ext-link></mixed-citation></ref>
</ref-list>
</back>
</article>