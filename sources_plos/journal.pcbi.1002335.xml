<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
  <front>
    <journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
        <publisher-name>Public Library of Science</publisher-name>
        <publisher-loc>San Francisco, USA</publisher-loc>
      </publisher></journal-meta>
    <article-meta><article-id pub-id-type="publisher-id">PCOMPBIOL-D-11-00688</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1002335</article-id><article-categories>
        <subj-group subj-group-type="heading">
          <subject>Research Article</subject>
        </subj-group>
        <subj-group subj-group-type="Discipline-v2">
          <subject>Biology</subject>
          <subj-group>
            <subject>Biochemistry</subject>
            <subj-group>
              <subject>Proteins</subject>
              <subj-group>
                <subject>Protein structure</subject>
              </subj-group>
            </subj-group>
          </subj-group>
          <subj-group>
            <subject>Computational biology</subject>
            <subj-group>
              <subject>Macromolecular structure analysis</subject>
              <subj-group>
                <subject>Protein structure</subject>
              </subj-group>
            </subj-group>
            <subj-group>
              <subject>Biophysic al simulations</subject>
              <subject>Synthetic biology</subject>
            </subj-group>
          </subj-group>
          <subj-group>
            <subject>Proteomics</subject>
            <subj-group>
              <subject>Protein engineering</subject>
            </subj-group>
          </subj-group>
        </subj-group>
        <subj-group subj-group-type="Discipline-v2">
          <subject>Computer science</subject>
          <subj-group>
            <subject>Algorithms</subject>
          </subj-group>
        </subj-group>
        <subj-group subj-group-type="Discipline">
          <subject>Computational Biology</subject>
          <subject>Computer Science</subject>
          <subject>Biochemistry</subject>
        </subj-group>
      </article-categories><title-group><article-title>Protein Design Using Continuous Rotamers</article-title><alt-title alt-title-type="running-head">Protein Design Using Continuous Rotamers</alt-title></title-group><contrib-group>
        <contrib contrib-type="author" equal-contrib="yes" xlink:type="simple">
          <name name-style="western">
            <surname>Gainza</surname>
            <given-names>Pablo</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
        </contrib>
        <contrib contrib-type="author" equal-contrib="yes" xlink:type="simple">
          <name name-style="western">
            <surname>Roberts</surname>
            <given-names>Kyle E.</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Donald</surname>
            <given-names>Bruce R.</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
          <xref ref-type="aff" rid="aff2">
            <sup>2</sup>
          </xref>
          <xref ref-type="corresp" rid="cor1">
            <sup>*</sup>
          </xref>
        </contrib>
      </contrib-group><aff id="aff1"><label>1</label><addr-line>Department of Computer Science, Duke University, Durham, North Carolina, United States of America</addr-line>       </aff><aff id="aff2"><label>2</label><addr-line>Department of Biochemistry, Duke University Medical Center, Durham, North Carolina, United States of America</addr-line>       </aff><contrib-group>
        <contrib contrib-type="editor" xlink:type="simple">
          <name name-style="western">
            <surname>Teichmann</surname>
            <given-names>Sarah A.</given-names>
          </name>
          <role>Editor</role>
          <xref ref-type="aff" rid="edit1"/>
        </contrib>
      </contrib-group><aff id="edit1">MRC Laboratory of Molecular Biology, United Kingdom</aff><author-notes>
        <corresp id="cor1">* E-mail: <email xlink:type="simple">brd+plos11@cs.duke.edu</email></corresp>
        <fn fn-type="con">
          <p>Conceived and designed the experiments: PG KR BRD. Performed the experiments: PG KR BRD. Analyzed the data: PG KR BRD. Wrote the paper: PG KR BRD.</p>
        </fn>
      <fn fn-type="conflict">
        <p>The authors have declared that no competing interests exist.</p>
      </fn></author-notes><pub-date pub-type="collection">
        <month>1</month>
        <year>2012</year>
      </pub-date><pub-date pub-type="epub">
        <day>12</day>
        <month>1</month>
        <year>2012</year>
      </pub-date><volume>8</volume><issue>1</issue><elocation-id>e1002335</elocation-id><history>
        <date date-type="received">
          <day>17</day>
          <month>5</month>
          <year>2011</year>
        </date>
        <date date-type="accepted">
          <day>16</day>
          <month>11</month>
          <year>2011</year>
        </date>
      </history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2012</copyright-year><copyright-holder>Gainza et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract>
        <p>Optimizing amino acid conformation and identity is a central problem in computational protein design. Protein design algorithms must allow realistic protein flexibility to occur during this optimization, or they may fail to find the best sequence with the lowest energy. Most design algorithms implement side-chain flexibility by allowing the side chains to move between a small set of discrete, low-energy states, which we call <italic>rigid rotamers</italic>. In this work we show that allowing continuous side-chain flexibility (which we call <italic>continuous rotamers</italic>) greatly improves protein flexibility modeling. We present a large-scale study that compares the sequences and best energy conformations in 69 protein-core redesigns using a rigid-rotamer model versus a continuous-rotamer model. We show that in nearly all of our redesigns the sequence found by the continuous-rotamer model is different and has a lower energy than the one found by the rigid-rotamer model. Moreover, the sequences found by the continuous-rotamer model are more similar to the native sequences. We then show that the seemingly easy solution of sampling more rigid rotamers within the continuous region is not a practical alternative to a continuous-rotamer model: at computationally feasible resolutions, using more rigid rotamers was never better than a continuous-rotamer model and almost always resulted in higher energies. Finally, we present a new protein design algorithm based on the dead-end elimination (DEE) algorithm, which we call iMinDEE, that makes the use of continuous rotamers feasible in larger systems. iMinDEE <italic>guarantees</italic> finding the optimal answer while pruning the search space with close to the same efficiency of DEE. <bold>Availability:</bold> Software is available under the Lesser GNU Public License v3. Contact the authors for source code.</p>
      </abstract><abstract abstract-type="summary">
        <title>Author Summary</title>
        <p>Computational protein design is a promising field with many biomedical applications, such as drug design, or the redesign of new enzymes to perform nonnatural chemical reactions. An essential feature of any protein design algorithm is the ability to accurately model the flexibility that occurs in real proteins. In enzyme design, for example, an algorithm must predict how the designed protein will change during binding and catalysis. In this work we present a large-scale study of 69 protein redesigns that shows the necessity of modeling more realistic protein flexibility. Specifically, we model the continuous space around low-energy conformations of amino acid side chains, and compare it against the standard <italic>rigid</italic> approach of modeling only a small discrete set of low-energy conformations. We show that by allowing the side chains to move in the continuous space around low energy conformations <italic>during</italic> the protein design search, we obtain very different sequences that better match real protein sequences. Moreover, we propose a new protein design algorithm that, contrary to conventional wisdom, shows that we can search the continuous space around side chains with close to the same efficiency as algorithms that model only a discrete set of conformations.</p>
      </abstract><funding-group><funding-statement>This work is supported by the following grant from National Institutes of Health: R01 GM-78031 to B.R.D. Website: <ext-link ext-link-type="uri" xlink:href="http://www.nih.gov" xlink:type="simple">www.nih.gov</ext-link>. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts>
        <page-count count="15"/>
      </counts></article-meta>
  </front>
  <body>
    <sec id="s1">
      <title>Introduction</title>
      <p>Computational structure-based protein redesign is a promising field with applications for drug design <xref ref-type="bibr" rid="pcbi.1002335-Gorczynski1">[1]</xref>, biosynthesis <xref ref-type="bibr" rid="pcbi.1002335-Chen1">[2]</xref>, protein∶peptide design <xref ref-type="bibr" rid="pcbi.1002335-Roberts1">[3]</xref>, and predicting drug resistance <xref ref-type="bibr" rid="pcbi.1002335-Frey1">[4]</xref>. The goal of a structure-based protein redesign algorithm is to search over protein conformations and find the global minimum energy conformation, or GMEC, with respect to a given protein design <italic>model</italic>. The protein design <italic>model</italic> defines both the input to the algorithm and how the redesigned protein can move (the <italic>flexible space</italic>). As input the algorithm takes one or several starting protein structures, an energy function to score the designed proteins, and whether the design search allows amino acid type mutations (a <italic>mutation search</italic>). If mutations are allowed, the protein design algorithm searches protein conformations from multiple sequences to find the amino acid sequence of the GMEC.</p>
      <p>Most protein design models limit the flexible space during the search in the interest of computational feasibility. A common protein design model assumes a fixed backbone and only allows the side chains to move among a set of discrete conformations called <italic>rotamers</italic>. Rotamers are determined using theoretical calculations and the empirical observation that the side chains of amino acids in protein structures avoid most of the available conformational space and appear frequently as clusters in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e001" xlink:type="simple"/></inline-formula>-angle space <xref ref-type="bibr" rid="pcbi.1002335-Harder1">[5]</xref> (<xref ref-type="fig" rid="pcbi-1002335-g001">Figure 1A</xref>).</p>
      <fig id="pcbi-1002335-g001" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g001</object-id>
        <label>Figure 1</label>
        <caption>
          <title>Distribution of Isoleucine in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e002" xlink:type="simple"/></inline-formula>-angle space.</title>
          <p>Isoleucine has two flexible dihedral angles (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e003" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e004" xlink:type="simple"/></inline-formula> angles) and the ocurrence of isoleucine conformations across a wide set of high-quality structures <xref ref-type="bibr" rid="pcbi.1002335-Lovell1">[38]</xref> is plotted here. Panel A shows the entire <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e005" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e006" xlink:type="simple"/></inline-formula> angle space, while panels B, C, and D zoom in on the region specific to one rotamer. (A) The side chains of amino acids commonly appear almost exclusively (blue dots in the plot) within specific regions of their flexible space. (B) In a rigid-rotamer model a single conformation (the red diamond) represents that entire region. (C) In a continuous-rotamer model, a voxel models the continuous region that represents the rotamer. (D) An expanded rotamer model samples additional rigid rotamers near rotamers from the rigid-rotamer model.</p>
        </caption>
        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g001" xlink:type="simple"/>
      </fig>
      <p>Traditionally, a <italic>rigid-rotamer model</italic> is used for protein design. The rigid-rotamer model represents each empirically-determined side-chain cluster as a single discrete rotamer (usually the modal or mean value of the cluster's distribution is chosen for the rotamer conformation (<xref ref-type="fig" rid="pcbi-1002335-g001">Figure 1B</xref>)). However, protein energetics are sensitive to small changes in atom coordinates, so a single discrete conformation cannot fully describe a continuous region of side-chain conformation space. On the other hand, the <italic>continuous-rotamer model</italic> allows each rotamer to represent a region in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e007" xlink:type="simple"/></inline-formula>-angle space in order to more accurately reflect the empirically-discovered side-chain clusters (<xref ref-type="fig" rid="pcbi-1002335-g001">Figure 1C</xref>). Because both methods use different rotamer models, they obtain different GMECs; we refer to the GMEC when using a rigid-rotamer model, and the continuous-rotamer model, respectively, as the <italic>rigid GMEC</italic> and the <italic>minGMEC</italic>.</p>
      <p>Many protein design algorithms focus on finding the rigid GMEC instead of the minGMEC. These algorithms often try to account for this simplification by allowing side-chain <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e008" xlink:type="simple"/></inline-formula> angles to rotate slightly after the rigid search to optimize energy interactions, a process known as <italic>post hoc energy minimization</italic>. This is dangerous because rigid rotamers will often score poorly during a search and be discarded, even though they can potentially minimize to lower energies than the rigid GMEC. The toy example in <xref ref-type="fig" rid="pcbi-1002335-g002">Figure 2</xref> illustrates how rotamers that are part of a well-packed structure would be discarded by a rigid-rotamer search. Even though a <italic>post hoc</italic> energy minimization of the rigid-rotamer model in this example would result in a low-energy structure, the pre-minimization energy would be so high that this conformation would not be considered for minimization. Thus, rigid-rotamer methods are likely to not even consider the minGMEC as a good candidate structure.</p>
      <fig id="pcbi-1002335-g002" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g002</object-id>
        <label>Figure 2</label>
        <caption>
          <title>Toy example on the impact of rotamer minimization in protein design and DEE pruning.</title>
          <p>(A) Many protein design algorithms select a single, discrete conformation to represent each rotamer. The discrete conformation speeds up the computation, but it can result in steric clashes (shown in red). (B) Small changes in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e009" xlink:type="simple"/></inline-formula>-angle space can have profound effects on the energies of interacting rotamers, particularly in the packed core of a protein. The three hydrophobic residues in this toy example can form a well-packed core through small changes in their <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e010" xlink:type="simple"/></inline-formula> angles in this cartoon. A pruning algorithm like rigid DEE would erroneously prune the clashing rotamers since it does not account for these small changes. (C) If one rotamer, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e011" xlink:type="simple"/></inline-formula>, always results in conformations of higher energy than another, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e012" xlink:type="simple"/></inline-formula>, the rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e013" xlink:type="simple"/></inline-formula> and all the conformations that contain <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e014" xlink:type="simple"/></inline-formula> can be pruned. The rigid DEE algorithm <xref ref-type="bibr" rid="pcbi.1002335-Desmet1">[8]</xref> prunes rotamers and amino acids that are provably not part of the rigid GMEC. (D) When rotamers can minimize within their specified voxel, rotamers and amino acids that seemed poor in a rigid model might minimize to lower energy conformations than the rigid GMEC. The lowest-energy conformation in this scenario is the minGMEC. The MinDEE algorithm <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref> and iMinDEE algorithm can provably prune rotamers in the presence of minimization.</p>
        </caption>
        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g002" xlink:type="simple"/>
      </fig>
      <p>Previous work has shown the benefit of continuously minimizing rotamers <xref ref-type="bibr" rid="pcbi.1002335-Lilien1">[6]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Wang1">[7]</xref>. For example, the method described in <xref ref-type="bibr" rid="pcbi.1002335-Wang1">[7]</xref> extends post-hoc energy minimization by allowing rotamers to change during the minimization step. First, a Monte Carlo, rigid-rotamer based algorithm finds a low-energy structure. Next, one residue position at a time, rotamers for that position are continuously minimized, and the lowest energy rotamer is chosen. Thus, the method in <xref ref-type="bibr" rid="pcbi.1002335-Wang1">[7]</xref> is (a) dependent on the rigid-rotamer solution, (b) dependent on the order residue positions are minimized, and (c) does not explicitly allow concerted side-chain movements. In contrast, we use continuous rotamers instead of relying on a rigid-rotamer search. The new design search is no longer over discrete side-chain conformations. Instead, each side-chain rotamer is a continuous region of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e015" xlink:type="simple"/></inline-formula>-angle space. Therefore, our method is independent of the order in which rotamers are minimized, and allows for coordinated side-chain movements. The use of continuous rotamers guarantees that our protein design search, (i) can find the global minimum energy sequence for continuously minimized side chains, and (ii) never gets stuck in local minima. Our results show the benefits of using continuous rotamers over rigid-rotamer-based models.</p>
      <p>In this work we focus on the protein design method dead-end elimination (DEE) because it provably finds the globally optimal solution according to the protein design model. Many protein designs, however, use <italic>heuristic</italic> algorithms instead of provable algorithms. Heuristic algorithms make no guarantees on the optimality of the solution, but they are popular because of their speed. Our results are relevant to these methods as well because the optimal solution computed by DEE provides a bound on the accuracy of all possible heuristic methods. We can therefore measure precisely the limitations of any rigid-rotamer algorithm. The original DEE algorithm (referred to in this paper as <italic>rigid DEE</italic>) finds the GMEC with respect to the discrete rigid-rotamer model by pruning rotamers that provably cannot be part of the rigid GMEC <xref ref-type="bibr" rid="pcbi.1002335-Desmet1">[8]</xref>. An advancement of rigid DEE, the MinDEE algorithm <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Donald1">[10]</xref>, addresses the problem of finding the minGMEC by computing an upper and lower bound on the continuous energies of each rotamer and each pairwise rotamer interaction.</p>
      <p>In addition to finding lower bounds for each rotamer individually, MinDEE also finds energy bounds for the possible change in energetics that might occur during minimization across the entire protein. The MinDEE pruning criterion prevents the algorithm from using a rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e016" xlink:type="simple"/></inline-formula> to prune a rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e017" xlink:type="simple"/></inline-formula> if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e018" xlink:type="simple"/></inline-formula> could potentially perturb the other minimizing side chains during its minimization to make it a higher energy rotamer than <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e019" xlink:type="simple"/></inline-formula> (<xref ref-type="fig" rid="pcbi-1002335-g002">Figure 2</xref>). Even though MinDEE is a powerful technique that prunes the design conformation space by orders of magnitude, the range of potential minimization perturbations that MinDEE considers results in unrealistically loose bounds that bracket each energy interaction. These bounds represent theoretical worst cases which reduce MinDEE's capacity to prune. Therefore, MinDEE's pruning power is significantly weaker than rigid DEE.</p>
      <p>MinDEE is an integral part of the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e020" xlink:type="simple"/></inline-formula> algorithm <xref ref-type="bibr" rid="pcbi.1002335-Chen1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Lilien2">[11]</xref>, an ensemble-based algorithm that estimates the binding constant of a protein-ligand complex through a provably-accurate approximation of the partition function. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e021" xlink:type="simple"/></inline-formula> was used prospectively in drug design <xref ref-type="bibr" rid="pcbi.1002335-Gorczynski1">[1]</xref>, enzyme redesign <xref ref-type="bibr" rid="pcbi.1002335-Chen1">[2]</xref>, protein∶peptide design <xref ref-type="bibr" rid="pcbi.1002335-Roberts1">[3]</xref>, and drug resistance prediction <xref ref-type="bibr" rid="pcbi.1002335-Frey1">[4]</xref>, all with experimental validation. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e022" xlink:type="simple"/></inline-formula> approximates the partition function by evaluating only the low energy conformations that carry the largest weight in the Boltzmann-weighted partition function. The MinDEE algorithm is essential for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e023" xlink:type="simple"/></inline-formula>, since MinDEE prunes the majority of conformations that cannot minimize into low energy conformations, and therefore need not be considered by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e024" xlink:type="simple"/></inline-formula>. Therefore, improvements to the MinDEE criterion and algorithm directly improve the efficiency of MinDEE/A* and the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e025" xlink:type="simple"/></inline-formula> algorithm.</p>
      <p>In this work we show that when a protein design algorithm uses a continuous-rotamer model, the algorithm is able to find the minGMEC, which is often a much lower energy sequence than the rigid GMEC. Specifically, we show that the MinDEE algorithm is able to find lower energy sequences than those found by rigid DEE in 66 out of 69 proteins from the PDB. We also show that trying to find the minGMEC by increasing the number of rotamers in the rigid-rotamer model (<xref ref-type="fig" rid="pcbi-1002335-g001">Figure 1D</xref>) is often impractical, and still fails to find the minGMEC in most cases. In addition, we propose a simplified and improved alternative to MinDEE, which we call <italic>iMinDEE</italic>. iMinDEE uses a new technique that we call <italic>Greedy Estimation of Minimization</italic> (GEM), which allows iMinDEE to reduce the search space by orders of magnitude when compared to MinDEE. iMinDEE and MinDEE are mathematically guaranteed to compute the same results, and to check this is true, we ran both algorithms and obtained identical results. Finally, we used <italic>native sequence recovery</italic>, a commonly used metric to evaluate protein design algorithms, to show that continuous rotamers result in more biologically accurate protein redesigns. We tested how well the sequences of both the minGMEC and the rigid GMEC recapitulated the native protein sequence and found that iMinDEE significantly improves native sequence recovery over rigidDEE.</p>
    </sec>
    <sec id="s2">
      <title>Results</title>
      <p>In this work we focus on the importance of using continuous rotamers instead of rigid rotamers in protein design. First, we establish that protein design searches that use continuous rotamers find sequences lower in energy than those using rigid rotamers. Next, we present an improved and simplified DEE pruning criterion that makes continuous-rotamer protein design more computationally feasible.</p>
      <sec id="s2a">
        <title>Impact of continuous rotamers on protein design</title>
        <p>In this section we first describe the original rigid DEE <xref ref-type="bibr" rid="pcbi.1002335-Desmet1">[8]</xref> and MinDEE criteria <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, and then show an experimental comparison of the two methods. This comparison shows that MinDEE provides a substantial advantage over rigid DEE in computing low-energy sequences. Finally, we compare a rigid-rotamer protein design search using an expanded rotamer library against MinDEE with a standard rotamer library.</p>
        <sec id="s2a1">
          <title>Rigid DEE criterion</title>
          <p>The rigid DEE criterion <xref ref-type="bibr" rid="pcbi.1002335-Desmet1">[8]</xref> prunes rigid rotamers that cannot be part of the GMEC for a given protein design system. To prune a candidate rotamer, rigid DEE finds a competitor rotamer at the same residue position that can always provide a lower energy than the candidate rotamer. Let the internal energy of rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e026" xlink:type="simple"/></inline-formula> at residue position <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e027" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e028" xlink:type="simple"/></inline-formula> be <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e029" xlink:type="simple"/></inline-formula>, the pairwise energy between rotamers <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e030" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e031" xlink:type="simple"/></inline-formula> be <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e032" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e033" xlink:type="simple"/></inline-formula> be the template energy (i.e. the energy of the backbone atoms and side chain residues that are not allowed to move or mutate). The protein design system can be represented as a rotamer vector, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e034" xlink:type="simple"/></inline-formula>, which is an assignment of a rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e035" xlink:type="simple"/></inline-formula> at each design position <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e036" xlink:type="simple"/></inline-formula>. Then we define the total energy <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e037" xlink:type="simple"/></inline-formula> of the system <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e038" xlink:type="simple"/></inline-formula>:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e039" xlink:type="simple"/><label>(1)</label></disp-formula></p>
          <p>The dead-end elimination criterion states that for a rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e040" xlink:type="simple"/></inline-formula>, if there is a rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e041" xlink:type="simple"/></inline-formula> such that:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e042" xlink:type="simple"/><label>(2)</label></disp-formula>then <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e043" xlink:type="simple"/></inline-formula> is provably not part of the GMEC, and can therefore be pruned. Rigid DEE prunes rotamers in sequential iterations; the pruning of a rotamer at position <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e044" xlink:type="simple"/></inline-formula> in one iteration might enable the pruning of a rotamer at position <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e045" xlink:type="simple"/></inline-formula> in the next iteration.</p>
        </sec>
        <sec id="s2a2">
          <title>MinDEE</title>
          <p>The MinDEE criterion <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Georgiev2">[12]</xref> extends the rigid DEE criterion to provably prune only rotamers that cannot minimize to the minGMEC. MinDEE treats rotamers as a continuous range of conformations inside a voxel <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e046" xlink:type="simple"/></inline-formula> over the space defined by movements up to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e047" xlink:type="simple"/></inline-formula> degrees from the modal value. MinDEE sets bounds for the energy of each voxel through a maximum energy, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e048" xlink:type="simple"/></inline-formula>, and a minimum energy, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e049" xlink:type="simple"/></inline-formula> to be used for pruning. In the case of pairwise energies, MinDEE sets bounds for the minimum and maximum interaction energies between residues <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e050" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e051" xlink:type="simple"/></inline-formula> within the space <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e052" xlink:type="simple"/></inline-formula>: <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e053" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e054" xlink:type="simple"/></inline-formula> respectively. When energy minimization is not allowed, the energy of a fully-assigned rotamer vector <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e055" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e056" xlink:type="simple"/></inline-formula>, can be computed as a sum of independent, individual terms (Eq. (1)). When energy minimization is allowed, however, the minimized energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e057" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e058" xlink:type="simple"/></inline-formula>, cannot be pairwise-decomposed, since the minimization of one rotamer within its voxel might alter how the remaining rotamers minimize (i.e. a domino effect). <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e059" xlink:type="simple"/></inline-formula>, however, can be bounded by the sums of maxima and minima <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e060" xlink:type="simple"/></inline-formula>:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e061" xlink:type="simple"/><label>(3)</label></disp-formula><disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e062" xlink:type="simple"/><label>(4)</label></disp-formula></p>
          <p>In order to prune rotamers, possible perturbations that minimization may cause in the rest of the system must be accounted for. MinDEE accounts for possible side-chain rearrangements during minimization by including the maximum range terms: <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e063" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e064" xlink:type="simple"/></inline-formula>. The MinDEE criterion for pruning <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref> is:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e065" xlink:type="simple"/><label>(5)</label></disp-formula>If Eq. (5) holds for rotamers <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e066" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e067" xlink:type="simple"/></inline-formula>, then rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e068" xlink:type="simple"/></inline-formula> is provably not part of the minGMEC.</p>
        </sec>
        <sec id="s2a3">
          <title>MinDEE/A*</title>
          <p>MinDEE prunes rotamers that are provably not part of the minGMEC, and then the A* <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Leach1">[13]</xref> algorithm is used to enumerate rotamer vectors in order of the lower bound on their energies. During the A* search, each rotamer vector is minimized and the A* enumeration stops when the lower energy bound of the enumerated conformation is higher than the lowest minimized energy.</p>
        </sec>
        <sec id="s2a4">
          <title>Energy comparison between rigid DEE and MinDEE</title>
          <p>Both the rigid GMEC and the minGMEC were computed for 69 protein core redesigns. As a postprocessing step, the rigid-GMEC conformation was energy minimized to make the comparison fair, since many programs that use rigid rotamers minimize the rigid GMEC after rigid DEE. We will refer to the <italic>post hoc</italic> energy minimized rigid GMEC as the <italic>rigidMin</italic>. <xref ref-type="fig" rid="pcbi-1002335-g003">Figure 3</xref> shows a comparison between the energy of the minGMEC and the rigidMin, normalized to the energy of the rigid GMEC for 69 design runs. In 68 of the 69 design runs the minGMEC had a lower energy than the rigidMin, with an average energy difference of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e069" xlink:type="simple"/></inline-formula> (standard deviation<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e070" xlink:type="simple"/></inline-formula>) and a maximum energy difference of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e071" xlink:type="simple"/></inline-formula>. In only one design case, antiviral lectin scytovirin from <italic>Scytonema varium</italic> (PDB id: 2QSK) are the minGMEC and the rigidMin the same, with the same minimized energy and the same sequence. Furthermore, in 66 of the 69 design runs the minGMEC was different from the rigid GMEC. We evaluated the <italic>sequence distance</italic>, the percentage of designed residues that differ in their amino acid type between the rigid GMEC and the minGMEC, and found a sequence distance average of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e072" xlink:type="simple"/></inline-formula> (standard deviation<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e073" xlink:type="simple"/></inline-formula>). The maximum sequence distance is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e074" xlink:type="simple"/></inline-formula>. For two design runs, Cytochrome C from <italic>Shewanella oneidensis</italic> (PDB id: 1M1Q), and NapB from <italic>Haemophilus influenzae</italic> (PDB id: 1JNI), the minGMEC and the rigid GMEC have the same sequence, but different rotamers and therefore different energies. Both of these designs are small: only 4 redesigned residues for 1M1Q and 5 for 1JNI.</p>
          <fig id="pcbi-1002335-g003" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g003</object-id>
            <label>Figure 3</label>
            <caption>
              <title>Rigid GMEC vs. minGMEC.</title>
              <p>(A) Fraction of the redesigned residues that had different amino acids (AA) between the rigid GMEC and the minGMEC. In 66 out of the 69 cases the minGMEC and the rigid GMEC have different sequences. The three systems where the minGMEC has the same sequence as the rigid GMEC are marked with a bold line at zero (2QSK, 1M1Q, and 1JNI). (B) Energy of the minGMEC vs. energy of the rigidMin (the <italic>post hoc</italic> minimization of the rigid GMEC), relative to the energy of the rigid GMEC, which is set to zero for each system. In 68 of 69 cases the energy of the minGMEC is lower than that of the rigidMin. For 2QSK the rotamers of the rigid GMEC are the same as the rotamers of the minGMEC, and, therefore, the energy of the rigidMin is the same as the energy of the minGMEC. The energy of the minGMEC is shown in yellow + blue bars, while the yellow color by itself shows the energy of the rigidMin. The results of this figure are identical for iMinDEE and MinDEE since both algorithms provably find the minGMEC.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g003" xlink:type="simple"/>
          </fig>
          <p>To further illustrate these results we present the results from a representative design run, the run for Ribonuclease from <italic>Streptomyces aureofaciens</italic> (PDB id: 1LNI). The rigid GMEC (computed with DEE/A*) has an energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e075" xlink:type="simple"/></inline-formula>, the rigidMin has an energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e076" xlink:type="simple"/></inline-formula>, and the minGMEC (computed with MinDEE/A*) has an energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e077" xlink:type="simple"/></inline-formula>. Five amino acids differ between the minGMEC and the rigid GMEC: the minGMEC has D33, Y52, R69, M70, and F89; the rigid GMEC has N33, H52, N69, T70, and H89. If the rotamers from the minGMEC are returned to their rigid, modal values, the energy of this conformation is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e078" xlink:type="simple"/></inline-formula>, over <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e079" xlink:type="simple"/></inline-formula> above the minGMEC. This illustrates how a method that relies on rigid rotamers, followed by a <italic>post hoc</italic> minimization step, can miss the minGMEC.</p>
          <p>These results clearly show that if minimization is not included <italic>during</italic> the search, the true lowest-energy sequences are missed in almost every case and in many cases the minGMEC has a much different sequence than the rigid GMEC. This also shows that energetically favorable rotamers are pruned because of the inability of rigid rotamers to make small spatial adjustments. More importantly, this means that wet lab experiments based on rigid DEE results, even with <italic>post hoc</italic> energy minimization, will not test the sequences that are predicted to be the best by the energy model.</p>
        </sec>
        <sec id="s2a5">
          <title>MinDEE vs. an expanded rotamer library</title>
          <p>A seemingly simpler alternative to MinDEE is to increase the granularity of the rotamer library and use the rigid DEE algorithm. In practice, however, this is hard because the precomputation of pairwise interactions, the rigid DEE pruning stages, and the A* conformational search are computationally expensive for side chains with 3 or 4 degrees of freedom. For example, consider a rotamer library that is expanded by adding all rotamers with dihedrals <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e080" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e081" xlink:type="simple"/></inline-formula> from rotamers in the original library. In such a library an arginine residue that originally had 34 rotamers would increase to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e082" xlink:type="simple"/></inline-formula> rotamers. In this scenario, a pairwise computation between two arginine residues must consider 450 million pairs.</p>
          <p>To overcome this rotamer explosion, some protein design protocols <xref ref-type="bibr" rid="pcbi.1002335-Jiang1">[14]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Lippow1">[15]</xref> add more rotamers by altering only the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e083" xlink:type="simple"/></inline-formula> or <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e084" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e085" xlink:type="simple"/></inline-formula> angles by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e086" xlink:type="simple"/></inline-formula> standard deviation <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e087" xlink:type="simple"/></inline-formula>. We tested this approach by building two expanded rotamer libraries from the Richardson's Penultimate Rotamer Library: RL1, a rotamer library where new rotamers are added by varying each rotamer's <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e088" xlink:type="simple"/></inline-formula> angle by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e089" xlink:type="simple"/></inline-formula>; and RL2, an extension where rotamers are added by varying both <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e090" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e091" xlink:type="simple"/></inline-formula> by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e092" xlink:type="simple"/></inline-formula>. We then compared the rigid GMEC of the original rotamer library (denoted as RL0), RL1, and RL2 against the minGMEC for each system. The energetic and sequence results for these rotamer libraries are shown in <xref ref-type="fig" rid="pcbi-1002335-g004">Figure 4</xref>.</p>
          <fig id="pcbi-1002335-g004" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g004</object-id>
            <label>Figure 4</label>
            <caption>
              <title>The minGMEC vs. rigid DEE with an expanded rotamer library.</title>
              <p>Two expanded rotamer libraries were used, RL1 and RL2, and they were compared against the standard rotamer library (RL0). (A) Redesigns that failed for rigid DEE using rotamer library RL2 because of the library's large size. AA: The number of mutable amino acids. (B) Fraction of the amino acids that are different between the minGMEC of MinDEE and, respectively: the rigid GMEC of RL0 (light grey), the rigid GMEC of RL1 (grey), and the rigid GMEC of RL2 (dark grey). Those designs where the sequence of the minGMEC and the sequence of the rigid GMEC are the same are marked with a bold line at zero. (C) Energy of the rigid GMEC of RL0 (light grey + grey + dark grey) vs. the rigid GMEC of RL1 (grey + dark grey) vs. the rigid GMEC of RL2 (dark grey), relative to the energy of the minGMEC, which is set to zero for each system.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g004" xlink:type="simple"/>
          </fig>
          <p><xref ref-type="fig" rid="pcbi-1002335-g004">Figure 4</xref> shows results for only 46 proteins, much less than the 69 shown in <xref ref-type="fig" rid="pcbi-1002335-g003">Figure 3</xref>, because rigid DEE with rotamer library RL2 failed for 23 of them. The results for the 46 proteins that did finish for RL2 show that on average the RL0 rigid GMEC is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e093" xlink:type="simple"/></inline-formula> higher in energy than the minGMEC; RL1 is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e094" xlink:type="simple"/></inline-formula> above the minGMEC; and RL2 is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e095" xlink:type="simple"/></inline-formula> above the minGMEC. The amino acid sequences also vary between the expanded rotamer libraries and the minGMEC, with an average difference of 28% for RL0, 18% for RL1 and 10% for RL2.</p>
          <p>The remaining 23 systems ran out of memory on the rigid DEE runs with rotamer library RL2, either in the DEE stages, or in the A* stage. This ocurred because the rotamer library RL2 is too large, even though our protein core redesigns are restricted to at most 15 mutable residues. Two redesigns, 1L9L and 3G21, both with 15 redesigned residues, failed for both RL1 and RL2 rotamer libraries. The results for the 21 systems that failed with rotamer library RL2 but completed with rotamer library RL1 are shown in <xref ref-type="fig" rid="pcbi-1002335-g005">Figure 5</xref>.</p>
          <fig id="pcbi-1002335-g005" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g005</object-id>
            <label>Figure 5</label>
            <caption>
              <title>The minGMEC vs. rigid DEE with an expanded rotamer library for the systems that failed with rigid DEE using rotamer library RL2.</title>
              <p>These results compare the standard rotamer library (RL0) against an expanded rotamer library, RL1. (A) Fraction of the amino acids that are different between the minGMEC of MinDEE and, respectively: the rigid GMEC of RL0 (light grey), and the rigid GMEC of RL1 (grey). (B) Energy of the rigid GMEC of RL0 (light grey + grey) vs. the rigid GMEC of RL1 (grey), relative to the energy of the minGMEC, which is set to zero for each system.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g005" xlink:type="simple"/>
          </fig>
        </sec>
      </sec>
      <sec id="s2b">
        <title>Greedy Estimation of Minimization (GEM)</title>
        <p>The MinDEE algorithm is guaranteed to find the GMEC when searching over continuous rotamers, which we call the minGMEC. To efficiently prune and search over continuous-rotamer conformations, the MinDEE algorithm computes lower and upper bounds on the pairwise energies of continuous rotamers (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e096" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e097" xlink:type="simple"/></inline-formula>, as defined above). In practice, however, these maximum and minimum bounds can be very loose. This results in a large gap between the maximum and minimum terms, which consequently makes the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e098" xlink:type="simple"/></inline-formula> terms in the MinDEE pruning criterion (Eq. 5) very large. For example, a pair of neighboring tryptophan rotamers might have a maximum energy within a voxel of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e099" xlink:type="simple"/></inline-formula>, but these can minimize and form favorable stacking to an energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e100" xlink:type="simple"/></inline-formula>. These large <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e101" xlink:type="simple"/></inline-formula> terms make it difficult to prune rotamers, resulting in much less pruning than rigid DEE.</p>
        <p>In this section we present a new criterion and algorithm, iMinDEE, which can prune rotamers much more efficiently than MinDEE and is still guaranteed to find the minGMEC. iMinDEE obtains improved pruning by removing the need to define maximum bounds on continuous-rotamer energies, which eliminates the large <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e102" xlink:type="simple"/></inline-formula> terms from the pruning criterion. Remember that the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e103" xlink:type="simple"/></inline-formula> terms from the MinDEE criteria were needed to account for all possible side-chain rearrangements that could occur during protein minimization. Instead of accounting for all potential side-chain rearrangements, iMinDEE greedily estimates how much minimization can actually occur.</p>
        <p>We refer to the overall technique that iMinDEE uses to prune rotamers as <italic>Greedy Estimation of Minimization (GEM)</italic>. The basis behind GEM is to greedily assume that protein minimization occurs independently for each rotamer pair. Rotamers are initially pruned based on this assumption, and the A* algorithm finds the best conformation in the remaining (unpruned) conformational search space. After this first run, we can check whether the assumption was wrong and if the minGMEC was pruned. Remarkably, if the minGMEC was pruned, we can provably refine our initial assumption to obtain a new pruning criterion that is guaranteed to recover the minGMEC, and the algorithm will run at most one more time.</p>
        <sec id="s2b1">
          <title>Interval MinDEE</title>
          <p>We propose an improved algorithm for continuous-rotamer pruning called <italic>Interval MinDEE (iMinDEE)</italic> which eliminates the need for defining maximum bounds on the energy terms of rotamers. Instead, iMinDEE uses an interval term, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e104" xlink:type="simple"/></inline-formula>, that accurately bounds the minimization that can occur within the protein. This allows for much tighter energy bounds than the MinDEE method and therefore much more pruning.</p>
          <p>To account for side-chain minimization the iMinDEE algorithm computes lower bounds on the internal and pairwise energies of continuous rotamers. Each continuous rotamer represents a continuous set of side-chain conformations (i.e., a set of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e105" xlink:type="simple"/></inline-formula> angles) that can be interpreted as a voxel in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e106" xlink:type="simple"/></inline-formula> angle space. Consider a pair of continuous rotamers, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e107" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e108" xlink:type="simple"/></inline-formula>. The pairwise energy <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e109" xlink:type="simple"/></inline-formula> of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e110" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e111" xlink:type="simple"/></inline-formula> varies as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e112" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e113" xlink:type="simple"/></inline-formula> each take on conformations defined by the parameter space of their voxel. To bound these pairwise energies, iMinDEE calculates the lowest-energy conformation for a rotamer pair when no other side chains are present. Unfortunately, once additional residues are added to the protein, and the entire conformation is minimized, it is no longer guaranteed that a single rotamer pair will maintain its lower bound conformation. Thus, during the design search when calculating the energy of a full protein conformation, the actual energy of a rotamer pair will always be higher than the precomputed low-energy bound. The interval term, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e114" xlink:type="simple"/></inline-formula>, in the iMinDEE pruning criteria accounts for this energy difference for all rotamer pairs.</p>
          <p>We now define the interval term. Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e115" xlink:type="simple"/></inline-formula> be any valid rotamer assignment. Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e116" xlink:type="simple"/></inline-formula> be the low-energy bound of rotamer assignment <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e117" xlink:type="simple"/></inline-formula> and let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e118" xlink:type="simple"/></inline-formula> be the total minimized energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e119" xlink:type="simple"/></inline-formula>. Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e120" xlink:type="simple"/></inline-formula> be the rotamer assignment with the lowest energy bound and let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e121" xlink:type="simple"/></inline-formula> be the rotamer assignment of the minGMEC. By definition, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e122" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e123" xlink:type="simple"/></inline-formula>. We define the interval <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e124" xlink:type="simple"/></inline-formula> as:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e125" xlink:type="simple"/><label>(6)</label></disp-formula>We now define the iMinDEE criterion:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e126" xlink:type="simple"/><label>(7)</label></disp-formula><inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e127" xlink:type="simple"/></inline-formula> is the lower bound on the energy of rotamer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e128" xlink:type="simple"/></inline-formula>, and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e129" xlink:type="simple"/></inline-formula> is the lower bound on the pairwise energy of rotamers <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e130" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e131" xlink:type="simple"/></inline-formula>, as defined in the <italic>MinDEE</italic> section above. If Eq. (7) holds, then <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e132" xlink:type="simple"/></inline-formula> is provably not part of the minGMEC.</p>
          <p><bold>Proposition 1.</bold> <italic>When </italic><italic>Eq. (7)</italic><italic> holds, rotamer </italic><inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e133" xlink:type="simple"/></inline-formula><italic> can be provably pruned from the search space because it cannot be part of the minimized global minimum energy conformation (minGMEC).</italic></p>
          <p>The proof for Proposition 1 is given in <xref ref-type="supplementary-material" rid="pcbi.1002335.s002">Text S1</xref>.</p>
          <p>The smaller the value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e134" xlink:type="simple"/></inline-formula>, the greater the pruning by iMinDEE. However, determining the optimal value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e135" xlink:type="simple"/></inline-formula> would require computing the optimal rotamer assignment <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e136" xlink:type="simple"/></inline-formula>, so finding the optimal <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e137" xlink:type="simple"/></inline-formula> is as hard as solving the problem of finding the minGMEC. Instead, we find an approximation for the optimal value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e138" xlink:type="simple"/></inline-formula> as outlined below.</p>
        </sec>
        <sec id="s2b2">
          <title>Greedy estimation of a good approximation for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e139" xlink:type="simple"/></inline-formula></title>
          <p>In this section we detail the GEM technique to find a valid approximation for the optimal value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e140" xlink:type="simple"/></inline-formula>. The algorithm is sound, must only be repeated at most once, and guarantees that iMinDEE finds the minGMEC. First, we choose an initial approximation for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e141" xlink:type="simple"/></inline-formula>, called <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e142" xlink:type="simple"/></inline-formula> (in our implementation we found setting <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e143" xlink:type="simple"/></inline-formula> worked well). Next, we prune the rotamer library using the iMinDEE criterion (Eq. (7)) substituting <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e144" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e145" xlink:type="simple"/></inline-formula>. After pruning, we use A* to enumerate protein conformations in order of their lower energy bound and compute the minimized energy of the enumerated conformations. Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e146" xlink:type="simple"/></inline-formula> be the lowest energy conformation found during the enumeration. Since <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e147" xlink:type="simple"/></inline-formula> was only an initial guess for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e148" xlink:type="simple"/></inline-formula>, it is possible that the optimal value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e149" xlink:type="simple"/></inline-formula> is greater than <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e150" xlink:type="simple"/></inline-formula>. If that is the case, then <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e151" xlink:type="simple"/></inline-formula>, where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e152" xlink:type="simple"/></inline-formula> is the minGMEC that we are trying to find. To check the validity of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e153" xlink:type="simple"/></inline-formula> we define a second approximation to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e154" xlink:type="simple"/></inline-formula> called <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e155" xlink:type="simple"/></inline-formula>:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e156" xlink:type="simple"/><label>(8)</label></disp-formula>Using the proposition below, we can determine whether <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e157" xlink:type="simple"/></inline-formula> was a valid approximation for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e158" xlink:type="simple"/></inline-formula>. If it was not, then <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e159" xlink:type="simple"/></inline-formula> is guaranteed to be a valid approximation for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e160" xlink:type="simple"/></inline-formula>. Finally, we can repeat the pruning and A* steps using <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e161" xlink:type="simple"/></inline-formula> instead of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e162" xlink:type="simple"/></inline-formula>, and are guaranteed to find the minGMEC during this A* search.</p>
          <p><bold>Proposition 2.</bold> <italic>If </italic><inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e163" xlink:type="simple"/></inline-formula><italic> then </italic><inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e164" xlink:type="simple"/></inline-formula><italic> and the search can stop; otherwise the search must be repeated once using </italic><inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e165" xlink:type="simple"/></inline-formula><italic> to find the minGMEC.</italic></p>
          <p><italic>Proof.</italic> First consider if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e166" xlink:type="simple"/></inline-formula>. Then using the definitions of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e167" xlink:type="simple"/></inline-formula> and the fact that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e168" xlink:type="simple"/></inline-formula>:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e169" xlink:type="simple"/></disp-formula><inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e170" xlink:type="simple"/></inline-formula> satisfies Eq. (6), which means that the pruning criterion is valid and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e171" xlink:type="simple"/></inline-formula>. Now consider if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e172" xlink:type="simple"/></inline-formula>. In this case the pruning criterion used was not correct so the design can be rerun using <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e173" xlink:type="simple"/></inline-formula> instead of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e174" xlink:type="simple"/></inline-formula>. By definition we know that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e175" xlink:type="simple"/></inline-formula> so as in the first case the pruning criterion is valid and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e176" xlink:type="simple"/></inline-formula>.</p>
          <p><xref ref-type="fig" rid="pcbi-1002335-g006">Figure 6</xref> illustrates how the entire algorithm works. The algorithm repeats at most once and is guaranteed to find the minGMEC. Even though iMinDEE must go through two phases of pruning and A* enumeration, this is a constant factor increase in runtime, and in practice iMinDEE is still much faster than MinDEE. By removing the maximum energy bounds (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e177" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e178" xlink:type="simple"/></inline-formula> in Eq. (5)) from the MinDEE criterion, the iMinDEE criterion is able to prune significantly more than MinDEE (See <xref ref-type="fig" rid="pcbi-1002335-g007">Figure 7</xref>).</p>
          <fig id="pcbi-1002335-g006" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g006</object-id>
            <label>Figure 6</label>
            <caption>
              <title>iMinDEE algorithm illustration.</title>
              <p>The A* branch-and-bound algorithm completely searches the conformation space and enumerates conformations in order of their low-energy bound. Because the search is complete, a large conformational search space can be computationally infeasible for A*. Therefore, a pre-A* pruning of the conformational search space with the MinDEE algorithm or iMinDEE algorithm can make the A* search feasible. (A) The entire MinDEE conformation space in the order that the A* algorithm would enumerate the conformations. A* enumerates conformations until it can prove the minGMEC (denoted as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e179" xlink:type="simple"/></inline-formula>) has been found, but unpruned high energy conformations slow down the search. The first conformation enumerated by A*, corresponding to the conformation with the lowest energy bound, is denoted <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e180" xlink:type="simple"/></inline-formula>, and the lower bound on its energy is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e181" xlink:type="simple"/></inline-formula>. The minGMEC, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e182" xlink:type="simple"/></inline-formula>, is marked by a green dot and its energy is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e183" xlink:type="simple"/></inline-formula>. (B) Instead of MinDEE, we can use iMinDEE to prune conformations with energy bounds that are higher than the lowest energy bound by more than the initial <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e184" xlink:type="simple"/></inline-formula> value. We then select the lowest minimized energy found so far (i.e. as opposed to lowest energy <italic>bound</italic>) and use that to compute the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e185" xlink:type="simple"/></inline-formula> value. The conformation with the lowest minimized energy is denoted <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e186" xlink:type="simple"/></inline-formula> with a blue dot and its energy is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e187" xlink:type="simple"/></inline-formula>. (C) The iMinDEE search is repeated if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e188" xlink:type="simple"/></inline-formula>. Since <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e189" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e190" xlink:type="simple"/></inline-formula> meets the condition of Eq. (6), and the search will not need to be repeated again. By setting <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e191" xlink:type="simple"/></inline-formula>, we can use the iMinDEE criterion (Eq. (7)) to prune rotamers, and the iMinDEE algorithm will provably find the minGMEC.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g006" xlink:type="simple"/>
          </fig>
          <fig id="pcbi-1002335-g007" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g007</object-id>
            <label>Figure 7</label>
            <caption>
              <title>Comparison of rotamer pruning with rigid DEE, MinDEE and iMinDEE.</title>
              <p>For each tested protein, this chart shows what percentage of rotamers were pruned by each criterion. In all cases pruning with rigid DEE pruned at least as much as iMinDEE, and pruning with iMinDEE was significantly better than MinDEE.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g007" xlink:type="simple"/>
          </fig>
        </sec>
      </sec>
      <sec id="s2c">
        <title>Analysis of iMinDEE</title>
        <p>iMinDEE is mathematically guaranteed to compute the same result as the original MinDEE, but can do so much more efficiently. To show the benefit of our approach, we implemented iMinDEE and applied it to the 69 protein core redesigns. We show that iMinDEE significantly reduces the conformation search space compared to the original MinDEE criterion. In many cases iMinDEE is nearly as efficient as rigid DEE, while still guaranteeing to compute the minGMEC. Finally, we analyze the meaning and impact of the interval term, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e192" xlink:type="simple"/></inline-formula>, in the iMinDEE criterion.</p>
        <sec id="s2c1">
          <title>Comparison between rigid DEE, MinDEE, and iMinDEE pruning</title>
          <p>The protein design runs analyzed with rigid DEE and MinDEE in the previous section were conducted using the iMinDEE criterion. <xref ref-type="fig" rid="pcbi-1002335-g007">Figure 7</xref> shows a comparison between the percentage of rotamers pruned by rigid DEE, iMinDEE and MinDEE. In all cases pruning is significantly higher for iMinDEE compared with MinDEE, and in some cases iMinDEE pruning is as efficient, or nearly as efficient, as rigid DEE. We again select the mid-ranking (in terms of iMinDEE pruning) Ribonuclease (1LNI) design run to look at the results in more detail. The Ribonuclease structure has 15 residues with a SASA of less than 5% that were selected as mutable. This results in a search space of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e193" xlink:type="simple"/></inline-formula> conformations. The MinDEE algorithm prunes 40% of all rotamers, which reduces the number of conformations to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e194" xlink:type="simple"/></inline-formula>. In contrast, iMinDEE prunes 83% of all rotamers and reduces the search space to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e195" xlink:type="simple"/></inline-formula>. Rigid DEE prunes 93% of all rotamers and reduces the search space to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e196" xlink:type="simple"/></inline-formula>. This means that the remaining search space that is input into A* is 5.5 billion times smaller when iMinDEE is used than when MinDEE is used.</p>
          <p>Rigid DEE is not directly comparable with MinDEE/iMinDEE because, as <xref ref-type="fig" rid="pcbi-1002335-g003">Figure 3</xref> shows, it almost always finds a different (and worse) answer than MinDEE. We feel, however, that a comparison of pruning is necessary since rigid DEE is the standard in the field, and potential adopters of iMinDEE might feel reluctant to migrate if it results in considerable performance penalties. Results of the pruning comparison show that in most cases iMinDEE prunes with close to the same efficiency as rigid DEE while maintaining the guarantees of MinDEE.</p>
        </sec>
        <sec id="s2c2">
          <title>Analysis of the interval term</title>
          <p>The interval term <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e197" xlink:type="simple"/></inline-formula> in the iMinDEE pruning criteria accounts for potential side-chain rearrangements that can occur when one rotamer is changed to another rotamer. Since the optimal value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e198" xlink:type="simple"/></inline-formula> cannot be computed efficiently, the iMinDEE algorithm uses the computed value <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e199" xlink:type="simple"/></inline-formula> (Eq. (8)) during the final round of pruning. When we determine that a design system has a high <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e200" xlink:type="simple"/></inline-formula> value, by definition this means that the difference between the rotamer pair bounds and the actual minimized energy of the protein system is large. Thus, the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e201" xlink:type="simple"/></inline-formula> value is intrinsic to each design system, and is a good indication of whether the system can be tractably designed or not.</p>
          <p><xref ref-type="fig" rid="pcbi-1002335-g008">Figure 8</xref> shows the relationship between <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e202" xlink:type="simple"/></inline-formula> and pruning power of iMinDEE for our protein design test set. Clearly, as the value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e203" xlink:type="simple"/></inline-formula> decreases iMinDEE can prune more rotamers. Ten <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e204" xlink:type="simple"/></inline-formula> <italic>outlier</italic> systems that had pruning levels at or below 50% are labeled in <xref ref-type="fig" rid="pcbi-1002335-g008">Figure 8</xref> (PDB ids: 1X6I, 3FIL, 1UCR, 3I2Z, 1T8K, 2BWF, 1R6J, 1CC8, 1XMK, and 2CS7). Since the pruning for these <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e205" xlink:type="simple"/></inline-formula> outliers was low, our iMinDEE/A* implementation was unable to compute the minGMEC for four of these runs (1X6I, 1XMK, 1CC8, and 2CS7). Because we were not able to compute the minGMEC for these four runs, they are not included in <xref ref-type="fig" rid="pcbi-1002335-g003">Figures 3</xref>, <xref ref-type="fig" rid="pcbi-1002335-g004">4</xref>, and <xref ref-type="fig" rid="pcbi-1002335-g005">5</xref>. These four runs also ran out of memory in the rigid DEE/A* runs with rotamer library RL2, and the runs for 1X6I and 2CS7 ran out of memory with rotamer library RL1.</p>
          <fig id="pcbi-1002335-g008" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g008</object-id>
            <label>Figure 8</label>
            <caption>
              <title>Pruning vs <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e206" xlink:type="simple"/></inline-formula> value.</title>
              <p>Most systems have small <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e207" xlink:type="simple"/></inline-formula> values. Some outliers have larger <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e208" xlink:type="simple"/></inline-formula> values, and in consequence, iMinDEE loses pruning efficiency in these systems.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g008" xlink:type="simple"/>
          </fig>
          <p>A close examination of all ten <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e209" xlink:type="simple"/></inline-formula> outlier structures showed a common pattern: in the absence of neighboring rotamers, rotamer pairs would minimize into conformations that were incompatible with other rotamers when all rotamers were minimized together. Interestingly, eight of these structures have trouble spots where a single rotamer is responsible for most of the gap between the energy lower bound and minimized energy. To analyze this graphically (<xref ref-type="fig" rid="pcbi-1002335-g009">Figure 9</xref>) we chose the most outlying design run, which was of the <italic>S. pneumoniae</italic> PhtA histidine triad domain (PDB id: 2CS7). This structure has one trouble spot involving Arg44 and its pairwise interactions with residues Trp3, Tyr11, and Met40. Arg44 clashes with each of its neighbors in its rigid-rotamer conformation, but each pairwise clash can be solved through minimization. When all rotamers are present, however, solving the clash with one pair results in Arg44 moving to clash with another rotamer. The result is that iMinDEE will enumerate all the conformations that contain the four mutants, because they have a good lower bound, but none of them can result in a good global conformation because the Arg44 clashes with all of its neighbors when they are all present. This suggests that using a higher-order bounds computation might be able to resolve this particular case.</p>
          <fig id="pcbi-1002335-g009" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g009</object-id>
            <label>Figure 9</label>
            <caption>
              <title>iMinDEE predicts residues Trp3 (rotamer 3), Tyr11 (rotamer 1), Met40 (rotamer 8), and Arg44 (rotamer 15) in the structure of the PhtA histidine triad domain (PDB ID: 2CS7) to achieve a low-energy conformation.</title>
              <p>iMinDEE precomputes low-energy bounds between all pairs of possible rotamers in structure 2CS7. This figure illustrates the lower bound between the pairs (A) Met40 and Arg44, (B) Trp3 and Arg44, and (C) Tyr11 and Arg44. Favorable vdW contacts are shown in green and blue dots, and a small steric overlap is shown in red in pane (C). All of these pairs have favorable, low energies and iMinDEE predicts all conformations containing the 4 rotamers shown in this chart to be among the lowest energy structures. (D) When all four are placed in the same conformation, however, the result is a biophysically impossible steric clash, shown by red and purple dots.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g009" xlink:type="simple"/>
          </fig>
          <p>When we ran rigid DEE with rotamer library RL2 (Section “MinDEE vs. a finer rotamer library,” above), the design runs for all of the ten <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e210" xlink:type="simple"/></inline-formula> outlier systems (1X6I, 3FIL, 1UCR, 3I2Z, 1T8K, 2BWF, 1R6J, 1CC8, 1XMK, and 2CS7) failed to complete because they ran out of memory. In addition to the ten <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e211" xlink:type="simple"/></inline-formula> outliers, rigid DEE/A* with RL2 could not compute the rigid GMEC in 17 other cases (<xref ref-type="fig" rid="pcbi-1002335-g004">Figure 4A</xref>) and these systems often have high <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e212" xlink:type="simple"/></inline-formula> values. Therefore, rigid DEE with an expanded rotamer library is both unable to reach the energy of the minGMEC (<xref ref-type="fig" rid="pcbi-1002335-g004">Figure 4</xref>), and unable to perform better than iMinDEE even in cases where iMinDEE has little pruning. Since iMinDEE was able to compute the minGMEC for the 23 systems that failed with rigid DEE/A* and RL2 (<xref ref-type="fig" rid="pcbi-1002335-g004">Figure 4A</xref>), this further emphasizes the benefit of iMinDEE over expanded rotamer techniques.</p>
        </sec>
        <sec id="s2c3">
          <title>Native sequence recovery using continuous rotamers</title>
          <p>There is evidence suggesting that the sequences of native proteins optimize the stability of their backbone structure <xref ref-type="bibr" rid="pcbi.1002335-Kuhlman1">[16]</xref>. Using this hypothesis, a common way to evaluate protein design algorithms is to see how well the low-energy sequence found by the algorithm compares with the native protein sequence. While it is most likely true that some residues are optimized for function instead of stability <xref ref-type="bibr" rid="pcbi.1002335-Raha1">[17]</xref>, native sequence recovery still remains a valuable tool to determine the biological relevance of new protein design algorithms. Therefore, to analyze the benefits of continuous rotamers for protein design, we compared the native sequence recovery of iMinDEE with that of rigid DEE.</p>
          <p>For the native sequence recovery tests, we chose to design those proteins from our initial test set of 69 proteins that had no co-factors or non-amino acid ligands interacting with core residues. It is expected that side chains interacting with co-factors or ligands are involved in binding and catalysis, and are not necessarily optimized for the unbound structure. Therefore, sequence recovery is not applicable to these functional residues, because their identity is determined by more than just <italic>apo</italic> energetic structural stability. 43 protein structures remained after removing those with interacting co-factors and ligands, which resulted in a total of 527 residue positions to be redesigned. We redesigned each protein system with both rigid DEE and iMinDEE, using the same energy parameters for both algorithms. We then compared both the rigid GMEC computed by rigid DEE, and the minGMEC computed by iMinDEE, vs. the native sequence.</p>
          <p>To better understand the sequence recovery results, we analyzed the percentage and type of residue positions that were <bold>not</bold> recovered by each method. Over all the designed sequences, rigid DEE failed to recover <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e213" xlink:type="simple"/></inline-formula> of the designed native residues, while iMinDEE failed to recover <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e214" xlink:type="simple"/></inline-formula>, a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e215" xlink:type="simple"/></inline-formula> reduction in non-recovered residues. This improvement is highly significant, but the results are more illustrative if we specifically analyze the recovery of large residues and residues with more than one flexible dihedral. If we consider all 13 amino acids with more than one flexible dihedral, rigid DEE failed to recover <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e216" xlink:type="simple"/></inline-formula> while iMinDEE failed to recover <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e217" xlink:type="simple"/></inline-formula> of native residues, a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e218" xlink:type="simple"/></inline-formula> reduction in non-recovered amino acid positions (<xref ref-type="fig" rid="pcbi-1002335-g010">Figure 10A</xref>). If the bulkiest residues (those with a mass over 130 Da: Trp, Phe, Tyr, Arg, Met, and His) are considered, rigid DEE failed to recover <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e219" xlink:type="simple"/></inline-formula> while iMinDEE only failed to recover <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e220" xlink:type="simple"/></inline-formula>, a one-half reduction in non-recovered residues. (<xref ref-type="fig" rid="pcbi-1002335-g010">Figure 10B</xref>). In <xref ref-type="supplementary-material" rid="pcbi.1002335.s001">Table S1</xref> we show a summary of recovered residue positions classified by each amino acid type.</p>
          <fig id="pcbi-1002335-g010" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.1002335.g010</object-id>
            <label>Figure 10</label>
            <caption>
              <title>Summary of native sequence recovery results.</title>
              <p>The recovery of native amino acid sequence by rigid DEE (the rigid GMEC) and by iMinDEE (the minGMEC) are shown. (A) Summary of amino acid side chains that contain more than one flexible dihedral angle (asp, lys, ile, trp, phe, gln, asn, leu, tyr, glu, arg, met, and his) that were <italic>not</italic> recovered by the rigid GMEC (pie chart above) and the minGMEC (pie chart below). For comparison, the recovered amino acids with more than one flexible dihedral angle are shown in grey. Residues that were not recovered are colored by their amino acid type. (B) Percentage of residues <italic>not</italic> recovered by the rigid GMEC (yellow) and the minGMEC (orange), categorized by amino acid mass. The first group (All AA) shows the total percentage of non-recovered residue positions of all amino acid types. The second group (100–130 Da) shows the percentages of non-recovered residue positions of amino acid types with a mass between 100 Da and 130 Da, and the third group shows the percentages of non-recovered residue positions of amino acid types with a mass over 130 Da.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.g010" xlink:type="simple"/>
          </fig>
        </sec>
      </sec>
    </sec>
    <sec id="s3">
      <title>Discussion</title>
      <p>We show here and in previous work <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Georgiev3">[18]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Georgiev4">[19]</xref> that rotamers pruned by rigid DEE can often minimize below the rigid GMEC. Specifically, in 68 of our test systems (<xref ref-type="fig" rid="pcbi-1002335-g003">Figure 3</xref>), MinDEE finds different rotamers for the minGMEC than for the rigid GMEC, as well as different amino acid sequences (in some cases differing in over half of the amino acids) in 66 of the designed protein cores. This demonstrates the importance of using continuous rotamers to find the true minimum energy conformation given the input energy function. In addition, we have developed a new algorithm, iMinDEE, which greatly increases the efficiency of searching over continuous rotamers during protein design.</p>
      <p>Stable wild-type proteins have well-packed cores, and mutations that decrease core packing can result in unstable or misfolded proteins <xref ref-type="bibr" rid="pcbi.1002335-Kellis1">[20]</xref>–<xref ref-type="bibr" rid="pcbi.1002335-Sheffler1">[22]</xref>. This is important for our designs because all of the residues that we selected are part of the protein core and have low solvent accessibility (see <xref ref-type="sec" rid="s4"><italic>Materials and Methods</italic></xref>). In nearly all of our designs the mutated side chains of the minGMEC have a larger volume than those of the rigid GMEC (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e221" xlink:type="simple"/></inline-formula> on average, as high as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e222" xlink:type="simple"/></inline-formula>). In an average example, 1ZZK with 12 redesigned amino acids and a volume difference of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e223" xlink:type="simple"/></inline-formula>, the rigid GMEC and the minGMEC differ in four amino acids: three residues are larger in the minGMEC (M20, M47, I70 in the minGMEC vs. V20, T47, T70 in the rigid GMEC ), and just one residue is smaller (A73 in the minGMEC vs. S73 in the rigid GMEC). Rigid DEE selects a sequence with much smaller amino acid side chains because it cannot find a low energy conformation for the minGMEC sequence. Since overpacking of the minGMEC is unlikely because all of the minGMEC conformations have good vdW potential energies, this increase in volume supports better packing of the minGMEC with respect to the rigid GMEC. Therefore, we believe that modeling continuous rotamers in protein design will reduce the misfolding and increase the stability of predicted proteins.</p>
      <p>To further evaluate the biological relevance of our results we performed native sequence recovery with rigid DEE and iMinDEE. iMinDEE obtained significant improvements over rigid DEE in sequence recovery. This shows the importance of fully exploring the protein structural landscape to find the lowest energy structures according to the energy function. Previously, sequence recovery has been used to demonstrate the importance of incorporating desolvation penalties into a protein design energy function <xref ref-type="bibr" rid="pcbi.1002335-Hu1">[23]</xref>. These penalties are usually considered essential for protein design because they account for the hydrophobic effect, which drives protein folding <xref ref-type="bibr" rid="pcbi.1002335-Lazaridis1">[24]</xref>. Interestingly, our results show that the increase in sequence recovery obtained using continuous rotamers is comparable to the increase in sequence recovery obtained by incorporating implicit solvation <xref ref-type="bibr" rid="pcbi.1002335-Hu1">[23]</xref>. This implies that accurately modeling continuous rotamers is as vital to computing accurate designs as incorporating sophisticated energy terms.</p>
      <p>It is informative to categorize our sequence recovery results by amino acid mass: (i) <italic>small-mass</italic> amino acids with a mass less than 100 Da (Val, Ala, Gly, and Ser); (ii) <italic>medium-mass</italic> amino acids, with a mass between 100 Da and 130 Da (Asp, Lys, Ile, Gln, Asn, Leu, Glu, Thr); and <italic>large-mass</italic> amino acids, with a mass over 130 Da (Trp, Phe, Tyr, Arg, Met, His). Our results show that, in a rigid-rotamer model, the large-mass residues are recovered significantly less frequently than the small-mass residues. We show that rigid DEE recovered 83.55% of the small-mass residues, but only 45.56% of the large-mass residues. By using a continuous-rotamer model the difference in native sequence recovery of the large-mass residues vs. the small-mass residues is much smaller. iMinDEE recovered 86.54% of the small-mass amino acids and 71.11% of the large-mass amino acids. This further demonstrates that continuous rotamers are necessary to model large amino acids because they are sensitive to small changes in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e224" xlink:type="simple"/></inline-formula> angles.</p>
      <p>One might think that increasing the size and resolution of the rotamer library would allow rigid DEE to find the minGMEC. Although this is true in the limit, it is impractical to systematically increase the size of the rotamer library because the side chains of amino acids have many degrees of freedom. If flexibility is handled through more sampling, the protein designer must determine on an <italic>ad hoc</italic> basis what additional sampling should be done within the limits of computational feasibility to allow an angle to deviate from ideal rotamer values. We show in this work that increasing the rotamer library by diversifying the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e225" xlink:type="simple"/></inline-formula>, or <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e226" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e227" xlink:type="simple"/></inline-formula> dihedrals still fails to find sequences identical to the minGMEC, and in many cases causes the search to become intractable.</p>
      <p>With the introduction of iMinDEE we show that continuous rotamers can efficiently be searched to find the minGMEC. Our pruning results (<xref ref-type="fig" rid="pcbi-1002335-g007">Figure 7</xref>) show that iMinDEE always prunes significantly more rotamers than MinDEE. This increase in pruning greatly reduces the number of protein conformations that A* must search through to find the minGMEC. Remarkably, iMinDEE often prunes close to as many rotamers as rigid DEE. The comparison between iMinDEE/MinDEE and rigid DEE pruning is somewhat complex to interpret since rigid DEE pruning is often incorrect relative to the MinDEE criterion, and the minGMEC is in most cases pruned by rigid DEE. It could also be argued that MinDEE intrinsically should not prune as much as rigid DEE, because its correctness criterion is more stringent (i.e. minimization-aware). Nevertheless, we show that the pruning of MinDEE can be greatly increased while still maintaining correctness. Both MinDEE and iMinDEE have identical outputs, and both guarantee not to prune the minGMEC, and yet iMinDEE prunes orders of magnitude more conformations in all cases.</p>
      <p>Pruning with iMinDEE for each design system is greatly affected by the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e228" xlink:type="simple"/></inline-formula> value for that system. The results in <xref ref-type="fig" rid="pcbi-1002335-g008">Figure 8</xref> show that the performance of iMinDEE can be improved by reducing the value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e229" xlink:type="simple"/></inline-formula>. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e230" xlink:type="simple"/></inline-formula> is defined as the difference between <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e231" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e232" xlink:type="simple"/></inline-formula> (Eq. (8)). Hence, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e233" xlink:type="simple"/></inline-formula> can potentially be reduced either by finding a conformation <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e234" xlink:type="simple"/></inline-formula> with a lower energy, or by improving the lower bound on the energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e235" xlink:type="simple"/></inline-formula> (see <xref ref-type="fig" rid="pcbi-1002335-g006">Figure 6</xref>). First, to find a low-energy conformation for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e236" xlink:type="simple"/></inline-formula>, the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e237" xlink:type="simple"/></inline-formula> parameter of the iMinDEE algorithm must be chosen with care. While a large <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e238" xlink:type="simple"/></inline-formula> can lead to very little pruning during the first iMinDEE pruning step, a very small <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e239" xlink:type="simple"/></inline-formula> could prevent a low-energy minimized conformation (i.e. a low energy conformation <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e240" xlink:type="simple"/></inline-formula>, see <xref ref-type="fig" rid="pcbi-1002335-g006">Figure 6</xref>) from being found. This would cause <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e241" xlink:type="simple"/></inline-formula> to have a high energy and make <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e242" xlink:type="simple"/></inline-formula> needlessly large. Second, to improve the lower bound on the energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e243" xlink:type="simple"/></inline-formula> requires improving all of the rotamer energy bounds. The example in <xref ref-type="fig" rid="pcbi-1002335-g009">Figure 9</xref> shows a case where a poor lower bound on the energy of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e244" xlink:type="simple"/></inline-formula> can arise because iMinDEE decomposes the system into rotamer pairs and uses bounds on these pairs to compute the total lower energy bound. One way to prevent this would be to compute lower bounds in a four-wise manner (Arg44 would compute the lower bound with all combinations of neighbors), but this would increase the complexity of the problem by forcing <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e245" xlink:type="simple"/></inline-formula> bounds computations (where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e246" xlink:type="simple"/></inline-formula> is the number of rotamers per residue, and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e247" xlink:type="simple"/></inline-formula> the number of mutable residues). If a four-wise bounds computation solved this specific case, there might be other cases where a higher-order, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e248" xlink:type="simple"/></inline-formula>-wise computation might be necessary. However, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e249" xlink:type="simple"/></inline-formula> is most likely effectively bounded by a small constant. Improving these bounds as well as choosing an optimal <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e250" xlink:type="simple"/></inline-formula> for each design system represents an interesting future research direction.</p>
      <p>Our results suggest that the optimal value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e251" xlink:type="simple"/></inline-formula> (Eq. (6)) measures the difficulty of accurately designing a given protein system for any pairwise-energy based design algorithm. First, we observed that larger <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e252" xlink:type="simple"/></inline-formula> values resulted in less iMinDEE pruning (<xref ref-type="fig" rid="pcbi-1002335-g008">Figure 8</xref>). We also found that rigid DEE with RL2 fails to complete the design search for proteins where iMinDEE computed a large <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e253" xlink:type="simple"/></inline-formula> value. These results suggest that large <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e254" xlink:type="simple"/></inline-formula>-value systems represent difficult design problems for any pairwise-energy based design algorithm. However, since the value computed for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e255" xlink:type="simple"/></inline-formula> is dependent on the value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e256" xlink:type="simple"/></inline-formula> chosen in the iMinDEE algorithm (as described above), it is likely that the optimal value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e257" xlink:type="simple"/></inline-formula>, which is approximated by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e258" xlink:type="simple"/></inline-formula>, reflects the intrinsic difficulty of a design problem. Therefore, we believe that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e259" xlink:type="simple"/></inline-formula>, which can be approximated by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e260" xlink:type="simple"/></inline-formula>, measures an intrinsic degree of difficulty of any design run.</p>
      <p>Our previous work, the Backbone DEE (BD) <xref ref-type="bibr" rid="pcbi.1002335-Georgiev3">[18]</xref> and Backrub DEE (BRDEE) <xref ref-type="bibr" rid="pcbi.1002335-Georgiev4">[19]</xref> algorithms, showed that we can provably incorporate backbone flexibility into protein design, similar to how MinDEE incorporates side-chain flexibility. Therefore, we can expect an analysis of continuous versus rigid backbone flexibility to yield similar results to those presented here, and that the iMinDEE algorithm presented here can be extended to improve the pruning efficiency of the BD and BRDEE algorithms.</p>
      <sec id="s3a">
        <title>Relevance for non-DEE/A*-based protein design methods</title>
        <p>In this work we show that incorporating continuous rotamers into protein design algorithms can lead to substantially improved design predictions. We used the DEE/A* framework to demonstrate these gains, but our results are applicable to any design method that uses a similar protein design model. As defined in the <xref ref-type="sec" rid="s1"><italic>Introduction</italic></xref>, the protein design model defines both the input to the algorithm (i.e. energy function and rotamer library) and how the redesigned protein can move (i.e. rigid rotamers or continuous rotamers). Imagine we use the same protein design model, but use different algorithms. Because rigid DEE/A* is guaranteed to find the best sequence according to the protein design model, any design method that uses rigid rotamers, such as Faster <xref ref-type="bibr" rid="pcbi.1002335-Desmet2">[25]</xref>, Monte Carlo <xref ref-type="bibr" rid="pcbi.1002335-Kuhlman2">[26]</xref>, or simulated annealing <xref ref-type="bibr" rid="pcbi.1002335-Kaufmann1">[27]</xref>, will never find a lower energy sequence than the rigid GMEC found by DEE/A*. Therefore, the energies of the conformations computed by DEE/A* will always be as low or lower than those computed by non-DEE/A*-based methods using the same protein design model. Hence, our DEE-based results provide a bound on the performance of the other methods. Similarly, the iMinDEE/A* algorithms provide a bound on how well any algorithm based on <italic>continuous rotamers</italic> can perform. By using these bounds, we can precisely measure the consequences of using rigid rotamers to approximate continuous rotamers, and obtain general results that are applicable to all other algorithms using either rigid or continuous rotamers. We can therefore guarantee that the limitations of rigid rotamers are as important for other protein design methods as they are for rigid DEE/A*.</p>
        <p>The main consequence of using rigid rotamers in the design search is that the search for side-chain conformations that result in low energy protein structures will not be accurate. Our results show that improving the accuracy and realism of the modeled protein flexibility can greatly improve the results of the design search. In our work we used a simple energy function in which every term can be related to physical phenomena, and found that by switching from rigid to continuous rotamers we could discover lower energy sequences and observe large gains in sequence recovery. This demonstrates that if all sequences and structures are not adequately searched to find the lowest energy ones, the most biologically-relevant results are missed. Unfortunately, the importance of accurately searching for the true lowest energy structure and sequence is sometimes overlooked and the inaccuracies are attributed instead to the energy function. Protein design energy functions are constantly improved through careful crafting to better correlate designs with retrospective biological results. Many improvements to energy functions are made through the introduction of complex statistical terms based on structural bioinformatics data and other additional parameters<xref ref-type="bibr" rid="pcbi.1002335-Dehouck1">[28]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Kortemme1">[29]</xref>. If the rigid-rotamer search inaccuracies are wrongly attributed to imperfections in the energy function, the results will be used to incorrectly modify the energy function. Therefore, to avoid over-fitting the energy function, accurate flexibility, such as continuous rotamers, should be used during the design process.</p>
        <p>It is often assumed in the protein design field that even if the minGMEC and the rigid GMEC are different, minimizing and reranking the top <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e261" xlink:type="simple"/></inline-formula> results from a rigid approach can lead to finding the minGMEC <xref ref-type="bibr" rid="pcbi.1002335-Huggins1">[30]</xref>. Several of our results suggest that this is very likely to not be the case, and the minGMEC would never even be considered by any rigid-rotamer method. First, the enormous difference in sequence and amino acid composition between the rigid GMEC and the minGMEC is striking: in some cases the difference is over 60%. Second, the side chains of the amino acids in the rigid GMEC tend to have a smaller volume than the side chains of the minGMEC, suggesting that unavoidable clashes in a rigid-rotamer model would make the rotamers of the minGMEC unable to sterically fit in a rigid-rotamer environment. We analyzed the conformations of the minGMEC in all of our 69 designs and found that if the continuous rotamers were replaced by their closest (i.e. in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e262" xlink:type="simple"/></inline-formula>-angle space) rigid-rotamer counterpart at each position, most of the designs would obtain high-energy steric clashes (up to 1000 kcal/mol higher than the rigid GMEC). Even when the rigid-rotamer library was expanded, the new library could not capture the low-energy sequences of the continuous rotamers. Thus, contrary to conventional wisdom, rigid rotamers are always a severely limited approximation to continuous rotamers.</p>
        <p>Any protein design algorithm that switches from using rigid rotamers to continuous rotamers will expand the side-chain search space it explores. As the sequence and conformation space increases, it is always desirable to quickly and efficiently reduce the space to make the search more tractable. In this work we presented the novel iMinDEE pruning condition which can reduce the conformational space by many orders of magnitude. After iMinDEE pruning we search the remaining conformational space with the A* search algorithm. We use A* as the search algorithm because it is guaranteed to find the optimal answer, but any search algorithm can be used in combination with iMinDEE. In fact, an approach analogous to using iMinDEE with a different continuous-rotamer search algorithm is frequently used in rigid-rotamer protein design protocols. Rigid DEE was used as a filter for Monte Carlo searches <xref ref-type="bibr" rid="pcbi.1002335-Dahiyat1">[31]</xref> or for the FASTER algorithm <xref ref-type="bibr" rid="pcbi.1002335-Desmet2">[25]</xref>. iMinDEE can therefore have considerable impact for any protein design algorithm that uses continuous rotamers.</p>
      </sec>
    </sec>
    <sec id="s4" sec-type="materials|methods">
      <title>Materials and Methods</title>
      <sec id="s4a">
        <title>Protein test sets</title>
        <p>Crystal structures of protein chains with a maximum percentage sequence identity of 10% and a maximum resolution of 1.3 Å were chosen using the PISCES protein culling server <xref ref-type="bibr" rid="pcbi.1002335-Wang2">[32]</xref>. In addition, the protein chains were restricted to have a maximum length of 100 residues. The protein crystal structures were gathered from the PDB and further curated by adding hydrogens <xref ref-type="bibr" rid="pcbi.1002335-Word1">[33]</xref> and removing waters and ions. Residues with missing side chains were either removed entirely or the missing atoms were added using the King software package <xref ref-type="bibr" rid="pcbi.1002335-Chen2">[34]</xref>. In total, 69 protein structures were selected for the test set.</p>
      </sec>
      <sec id="s4b">
        <title>Design runs</title>
        <p>For each protein in the test set, a redesign to find low energy sequences for the initial backbone (a mutation search) was conducted. Each mutation search was designed so that approximately 12–15 core residues of the protein would be mutable. Core residues were chosen by finding all residues with a side-chain relative solvent accessible surface area (SASA) less than either 5%, 10%, or 20%. SASA values were determined with the program NACCESS <xref ref-type="bibr" rid="pcbi.1002335-Hubbard1">[35]</xref>. If a protein had less than 12 residues with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e263" xlink:type="simple"/></inline-formula>20% SASA, only these residues were allowed to mutate. Each mutable residue was allowed to take on its wild-type identity and several other amino acid types. The mutant amino acid types were determined by finding the 5–7 most likely amino acid type substitutions based on the BLOSUM62 matrix <xref ref-type="bibr" rid="pcbi.1002335-Henikoff1">[36]</xref>. The AMBER <xref ref-type="bibr" rid="pcbi.1002335-Pearlman1">[37]</xref> energy function and the Richardson's Penultimate Rotamer Library <xref ref-type="bibr" rid="pcbi.1002335-Lovell1">[38]</xref> were used as input to the algorithm. Each design run consisted of three steps: (1) A pairwise energy matrix precomputation between all pairs of side chains <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, and a minimum energy bound matrix precomputation for MinDEE <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref> and iMinDEE; (2) Several rounds of DEE/MinDEE/iMinDEE pruning to reduce the search space; and (3) An A* conformational search <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Leach1">[13]</xref> of the remaining space. Each design was run in an Intel Xeon machine with at least 4 GB of dedicated RAM and at least 2.50 Ghz of processor speed.</p>
      </sec>
      <sec id="s4c">
        <title>DEE pruning</title>
        <p>The protein design runs were done using rigid DEE, MinDEE, and iMinDEE. All three algorithms performed an initial steric filter to prune rotamers that could not minimize away from a clash with the template. Implementations of Goldstein DEE <xref ref-type="bibr" rid="pcbi.1002335-Goldstein1">[39]</xref>, Goldstein Pairs, and Split Flags <xref ref-type="bibr" rid="pcbi.1002335-Pierce1">[40]</xref> were used for all three algorithms, while Bounds Pruning <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Gordon1">[41]</xref> was used for rigid DEE and MinBounds Pruning for MinDEE and iMinDEE <xref ref-type="bibr" rid="pcbi.1002335-Georgiev1">[9]</xref>. iMinDEE was run with an initial interval value <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e264" xlink:type="simple"/></inline-formula> for all the mutation searches. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e265" xlink:type="simple"/></inline-formula> was chosen based on the minimum difference between the lowest-energy bound and the lowest minimized energy found in the first run.</p>
      </sec>
      <sec id="s4d">
        <title>Energy function</title>
        <p>To evaluate molecular energetics we used an energy function very similar to the energy function used for our previously described, empirically successful protein designs <xref ref-type="bibr" rid="pcbi.1002335-Chen1">[2]</xref>–<xref ref-type="bibr" rid="pcbi.1002335-Frey1">[4]</xref>. The energy function is composed of the following energy terms: (1) attractive-repulsive van der Waals forces, and coulombic electrostatics with a distance-dependent dielectric from the AMBER energy function <xref ref-type="bibr" rid="pcbi.1002335-Pearlman1">[37]</xref>; (2) implicit solvation terms from the Lazardis Karplus EEF1 solvation model to account for the hydrophobic effect <xref ref-type="bibr" rid="pcbi.1002335-Lazaridis1">[24]</xref>; and (3) entropic penalties <xref ref-type="bibr" rid="pcbi.1002335-Donald1">[10]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Abagyan1">[42]</xref> and reference energies <xref ref-type="bibr" rid="pcbi.1002335-Lippow1">[15]</xref> to account for entropy and energetics of the unfolded protein state. The total energy for a protein structure was calculated by computing a linear combination of all the energy terms, using weightings for the terms as described below.</p>
        <p>The weighting of each energy term is important for accurate results and most successful protein designs perform some training of the energy parameters <xref ref-type="bibr" rid="pcbi.1002335-Roberts1">[3]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Kuhlman1">[16]</xref>, <xref ref-type="bibr" rid="pcbi.1002335-Kortemme1">[29]</xref>. We trained our energy function by performing protein core redesigns on 9 structures from the PDB database that were not in the set of 69 structures used in this study. The structures for the training set (PDB ids: 1fus, 1ifc, 1lkk, 1plc, 1poa, 1rro, 1whi, 2rhe, and 2trx) were selected from the Richardson's Top 100 database of high-quality curated protein structures <xref ref-type="bibr" rid="pcbi.1002335-Word2">[43]</xref>. All of them were reprotonated according to the PDB v3 <xref ref-type="bibr" rid="pcbi.1002335-Word1">[33]</xref> standard and energy minimized with Sander <xref ref-type="bibr" rid="pcbi.1002335-Pearlman1">[37]</xref>. Residues with less than 20% SASA were selected to mutate; the low-SASA residues were split into groups of 10–15 highly-interacting residues each.</p>
        <p>Training was performed by redesigning each group of low-SASA residues with rigid DEE/A* and allowing each amino acid to be mutated to the same 5–7 amino acids allowed in the design runs, which were based on the BLOSUM62 matrix <xref ref-type="bibr" rid="pcbi.1002335-Henikoff1">[36]</xref>. In addition, each wild-type rotamer was added to the rotamer library. Each redesign was first run using 21 different coarse parameter combinations of solvation and dielectric constant defined by a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e266" xlink:type="simple"/></inline-formula> grid with solvation<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e267" xlink:type="simple"/></inline-formula> and dielectric constant<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e268" xlink:type="simple"/></inline-formula>. The optimal value found was solvation<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e269" xlink:type="simple"/></inline-formula> and dielectric<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e270" xlink:type="simple"/></inline-formula>. We then set solvation to 0.5 and dielectric to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e271" xlink:type="simple"/></inline-formula> and performed a local minimization by scaling atom radii. Scaling down the radii of atoms decreases the effect of the repulsive term in the van der Waals energy term. We used scales<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e272" xlink:type="simple"/></inline-formula>. The optimal atom radii scaling factor was determined to be <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e273" xlink:type="simple"/></inline-formula>.</p>
      </sec>
      <sec id="s4e">
        <title>Native sequence recovery</title>
        <p>Each of the 69 protein systems used in our runs was manually analyzed for ligands or co-factors that appeared close to core-residues. Structures with ligands or co-factors in close contact to the mutable design residues were not considered, because functional residues tend to be optimized for functionality and not to stabilize the monomeric structure <xref ref-type="bibr" rid="pcbi.1002335-Raha1">[17]</xref>. 43 protein structures remained after removing those with interacting ligands or co-factors. Each mutation search was set up so that approximately 12–15 core residues of the protein would be mutable. Core residues were chosen by finding all residues with a side-chain relative solvent accessible surface area (SASA) less than either 5%, 10%, or 20%. SASA values were determined with the program NACCESS <xref ref-type="bibr" rid="pcbi.1002335-Hubbard1">[35]</xref>. If a protein had less than 12 residues with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e274" xlink:type="simple"/></inline-formula> SASA, only these residues were allowed to mutate. Each mutable residue was allowed to take on its wild-type identity and 5–7 other amino acid types. The mutant amino acid types were determined by finding the 5–7 most likely amino acid type substitutions based on the BLOSUM62 matrix <xref ref-type="bibr" rid="pcbi.1002335-Henikoff1">[36]</xref>. The native rotamers were not included in the native sequence recovery experiments. Native sequence recovery was then performed on the 43 proteins with PDB ids: 1lni, 1ok0, 1psr, 1t8k, 1u2h, 1usm, 1wxc, 1zzk, 2cov, 2fhz, 2hs1, 2r2z, 3d3b, 3dnj, 1l9l, 1r6j, 1u07, 1ucs, 1vbw, 1y6x, 2hin, 2j8b, 2p5k, 2wj5, 3g21, 3hfo, 3jtz, 1aho, 1f94, 1oai, 1vfy, 2b97, 2cc6, 2cg7, 2dsx, 2fma, 2gom, 2hba, 2hlr, 2ic6, 3g36, 3i2z, and 1i27.</p>
      </sec>
    </sec>
    <sec id="s5">
      <title>Supporting Information</title>
      <supplementary-material id="pcbi.1002335.s001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.s001" xlink:type="simple">
        <label>Table S1</label>
        <caption>
          <p>Summary of native residue positions recovered by each method categorized by amino acid type. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e275" xlink:type="simple"/></inline-formula> Total number of wild-type instances of each amino acid type in the native sequences of the redesigned proteins. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e276" xlink:type="simple"/></inline-formula> Total number of residue positions recovered in the rigid GMEC computed by rigid DEE. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e277" xlink:type="simple"/></inline-formula> Percentage of residue positions recovered in the rigid GMEC computed by rigid DEE. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e278" xlink:type="simple"/></inline-formula> Total number of residue positions recovered in the minGMEC computed by iMinDEE. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1002335.e279" xlink:type="simple"/></inline-formula> Percentage of residue positions recovered in the minGMEC computed by iMinDEE.</p>
          <p>(PDF)</p>
        </caption>
      </supplementary-material>
      <supplementary-material id="pcbi.1002335.s002" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002335.s002" xlink:type="simple">
        <label>Text S1</label>
        <caption>
          <p>Proof of Proposition 1.</p>
          <p>(PDF)</p>
        </caption>
      </supplementary-material>
    </sec>
  </body>
  <back>
    <ack>
      <p>The authors would like to thank Dr. Ivelin Georgiev and Mr. Daniel Keedy for helpful discussions, and Mr. J. MacMaster, Ms. Swati Jain, Mr. Chittu Tripathy, and all members of the Donald Lab for commenting on the manuscript. We also thank the anonymous reviewers for helpful comments.</p>
    </ack>
    <ref-list>
      <title>References</title>
      <ref id="pcbi.1002335-Gorczynski1">
        <label>1</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Gorczynski</surname><given-names>MJ</given-names></name><name name-style="western"><surname>Grembecka</surname><given-names>J</given-names></name><name name-style="western"><surname>Zhou</surname><given-names>Y</given-names></name><name name-style="western"><surname>Kong</surname><given-names>Y</given-names></name><name name-style="western"><surname>Roudaia</surname><given-names>L</given-names></name><etal/></person-group>             <year>2007</year>             <article-title>Allosteric inhibition of the protein-protein interaction between the leukemia-associated proteins Runx1 and CBF<italic>β</italic>.</article-title>             <source>Chem Biol</source>             <volume>14</volume>             <fpage>1186</fpage>             <lpage>97</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Chen1">
        <label>2</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>C</given-names></name><name name-style="western"><surname>Georgiev</surname><given-names>I</given-names></name><name name-style="western"><surname>Anderson</surname><given-names>A</given-names></name><name name-style="western"><surname>Donald</surname><given-names>B</given-names></name></person-group>             <year>2009</year>             <article-title>Computational structure-based redesign of enzyme activity.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>106</volume>             <fpage>3764</fpage>             <lpage>3769</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Roberts1">
        <label>3</label>
        <element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Roberts</surname><given-names>KE</given-names></name><name name-style="western"><surname>Cushing</surname><given-names>PR</given-names></name><name name-style="western"><surname>Boisguerin</surname><given-names>P</given-names></name><name name-style="western"><surname>Madden</surname><given-names>DR</given-names></name><name name-style="western"><surname>Donald</surname><given-names>BR</given-names></name></person-group>             <year>2011</year>             <article-title>Design of protein- protein interactions with a novel ensemble-based scoring algorithm.</article-title>             <source>Research in Com- putational Molecular Biology. volume 6577 of <italic>Lecture Notes in Computer Science</italic></source>             <publisher-loc>Heidelberg</publisher-loc>             <publisher-name>Springer Berlin</publisher-name>             <fpage>361</fpage>             <lpage>376</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Frey1">
        <label>4</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Frey</surname><given-names>KM</given-names></name><name name-style="western"><surname>Georgiev</surname><given-names>I</given-names></name><name name-style="western"><surname>Donald</surname><given-names>BR</given-names></name><name name-style="western"><surname>Anderson</surname><given-names>AC</given-names></name></person-group>             <year>2010</year>             <article-title>Predicting resistance mutations using protein design algorithms.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>107</volume>             <fpage>13707</fpage>             <lpage>13712</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Harder1">
        <label>5</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Harder</surname><given-names>T</given-names></name><name name-style="western"><surname>Boomsma</surname><given-names>W</given-names></name><name name-style="western"><surname>Paluszewski</surname><given-names>M</given-names></name><name name-style="western"><surname>Frellsen</surname><given-names>J</given-names></name><name name-style="western"><surname>Johansson</surname><given-names>K</given-names></name><etal/></person-group>             <year>2010</year>             <article-title>Beyond rotamers: a generative, probabilistic model of side chains in proteins.</article-title>             <source>BMC Bioinformatics</source>             <volume>11</volume>             <fpage>306</fpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Lilien1">
        <label>6</label>
        <element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Lilien</surname><given-names>RH</given-names></name><name name-style="western"><surname>Stevens</surname><given-names>BW</given-names></name><name name-style="western"><surname>Anderson</surname><given-names>AC</given-names></name><name name-style="western"><surname>Donald</surname><given-names>BR</given-names></name></person-group>             <year>2004</year>             <article-title>A novel ensemble-based scoring and search algorithm for protein redesign, and its application to modify the substrate specificity of the gramicidin synthetase a phenylalanine adenylation enzyme.</article-title>           <source>In: Proceedings of the Eighth Annual International Conference on Research in Computational Molecular Biology</source> <comment>27–31 March 2004; San Diego, California, United States. RECOMB 2004. ACM Press. pp 46–57</comment>        </element-citation>
      </ref>
      <ref id="pcbi.1002335-Wang1">
        <label>7</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>C</given-names></name><name name-style="western"><surname>Schueler-Furman</surname><given-names>O</given-names></name><name name-style="western"><surname>Baker</surname><given-names>D</given-names></name></person-group>             <year>2005</year>             <article-title>Improved side-chain modeling for protein-protein docking.</article-title>             <source>Protein Sci</source>             <volume>14</volume>             <fpage>1328</fpage>             <lpage>1339</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Desmet1">
        <label>8</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Desmet</surname><given-names>J</given-names></name><name name-style="western"><surname>de Maeyer</surname><given-names>M</given-names></name><name name-style="western"><surname>Hazes</surname><given-names>B</given-names></name><name name-style="western"><surname>Laster</surname><given-names>I</given-names></name></person-group>             <year>1992</year>             <article-title>The dead-end elimination theorem and its use in protein side chain positioning.</article-title>             <source>Nature</source>             <volume>356</volume>             <fpage>539</fpage>             <lpage>542</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Georgiev1">
        <label>9</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Georgiev</surname><given-names>I</given-names></name><name name-style="western"><surname>Lilien</surname><given-names>RH</given-names></name><name name-style="western"><surname>Donald</surname><given-names>BR</given-names></name></person-group>             <year>2008</year>             <article-title>The minimized dead-end elimination criterion and its application to protein redesign in a hybrid scoring and search algorithm for computing partition functions over molecular ensembles.</article-title>             <source>J Comput Chem</source>             <volume>29</volume>             <fpage>1527</fpage>             <lpage>42</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Donald1">
        <label>10</label>
        <element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Donald</surname><given-names>BR</given-names></name></person-group>             <year>2011</year>             <source>Algorithms in Structural Molecular Biology</source>             <publisher-loc>Cambridge, , MA</publisher-loc>             <publisher-name>MIT Press</publisher-name>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Lilien2">
        <label>11</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Lilien</surname><given-names>R</given-names></name><name name-style="western"><surname>Stevens</surname><given-names>B</given-names></name><name name-style="western"><surname>Anderson</surname><given-names>A</given-names></name><name name-style="western"><surname>Donald</surname><given-names>B</given-names></name></person-group>             <year>2005</year>             <article-title>A novel ensemble-based scoring and search algorithm for protein redesign and its application to modify the substrate specificity of the gramicidin synthetase a phenylalanine adenylation enzyme.</article-title>             <source>J Comput Biol</source>             <volume>12</volume>             <fpage>740</fpage>             <lpage>761</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Georgiev2">
        <label>12</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Georgiev</surname><given-names>I</given-names></name><name name-style="western"><surname>Lilien</surname><given-names>RH</given-names></name><name name-style="western"><surname>Donald</surname><given-names>BR</given-names></name></person-group>             <year>2006</year>             <article-title>Improved pruning algorithms and divide-and-conquer strategies for dead-end elimination, with application to protein design.</article-title>             <source>Bioinformatics</source>             <volume>22</volume>             <fpage>e174</fpage>             <lpage>183</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Leach1">
        <label>13</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Leach</surname><given-names>AR</given-names></name><name name-style="western"><surname>Lemon</surname><given-names>AP</given-names></name></person-group>             <year>1998</year>             <article-title>Exploring the conformational space of protein side chains using dead-end elimination and the A* algorithm.</article-title>             <source>Proteins</source>             <volume>33</volume>             <fpage>227</fpage>             <lpage>239</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Jiang1">
        <label>14</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Jiang</surname><given-names>L</given-names></name><name name-style="western"><surname>Kuhlman</surname><given-names>B</given-names></name><name name-style="western"><surname>Kortemme</surname><given-names>T</given-names></name><name name-style="western"><surname>Baker</surname><given-names>D</given-names></name></person-group>             <year>2005</year>             <article-title>A solvated rotamer approach to modeling water-mediated hydrogen bonds at protein-protein interfaces.</article-title>             <source>Proteins</source>             <volume>58</volume>             <fpage>893</fpage>             <lpage>904</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Lippow1">
        <label>15</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Lippow</surname><given-names>SM</given-names></name><name name-style="western"><surname>Wittrup</surname><given-names>KD</given-names></name><name name-style="western"><surname>Tidor</surname><given-names>B</given-names></name></person-group>             <year>2007</year>             <article-title>Computational design of antibody-affinity improve- ment beyond in vivo maturation.</article-title>             <source>Nat Biotechnol</source>             <volume>25</volume>             <fpage>1171</fpage>             <lpage>1176</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Kuhlman1">
        <label>16</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Kuhlman</surname><given-names>B</given-names></name><name name-style="western"><surname>Baker</surname><given-names>D</given-names></name></person-group>             <year>2000</year>             <article-title>Native protein sequences are close to optimal for their structures.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>97</volume>             <fpage>10383</fpage>             <lpage>10388</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Raha1">
        <label>17</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Raha</surname><given-names>K</given-names></name><name name-style="western"><surname>Wollacott</surname><given-names>AM</given-names></name><name name-style="western"><surname>Italia</surname><given-names>MJ</given-names></name><name name-style="western"><surname>Desjarlais</surname><given-names>JR</given-names></name></person-group>             <year>2000</year>             <article-title>Prediction of amino acid sequence from structure.</article-title>             <source>Protein Sci</source>             <volume>9</volume>             <fpage>1106</fpage>             <lpage>1119</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Georgiev3">
        <label>18</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Georgiev</surname><given-names>I</given-names></name><name name-style="western"><surname>Donald</surname><given-names>B</given-names></name></person-group>             <year>2007</year>             <article-title>Dead-end elimination with backbone exibility.</article-title>             <source>Bioinformatics</source>             <volume>23</volume>             <fpage>i185</fpage>             <lpage>i194</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Georgiev4">
        <label>19</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Georgiev</surname><given-names>I</given-names></name><name name-style="western"><surname>Keedy</surname><given-names>D</given-names></name><name name-style="western"><surname>Richardson</surname><given-names>J</given-names></name><name name-style="western"><surname>Richardson</surname><given-names>D</given-names></name><name name-style="western"><surname>Donald</surname><given-names>B</given-names></name></person-group>             <year>2008</year>             <article-title>Algorithm for backrub motions in protein design.</article-title>             <source>Bioinformatics</source>             <volume>23</volume>             <fpage>i185</fpage>             <lpage>i194</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Kellis1">
        <label>20</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Kellis</surname><given-names>JT</given-names><suffix>Jr</suffix></name><name name-style="western"><surname>Nyberg</surname><given-names>K</given-names></name><name name-style="western"><surname>Fersht</surname><given-names>AR</given-names></name></person-group>             <year>1989</year>             <article-title>Energetics of complementary side-chain packing in a protein hydrophobic core.</article-title>             <source>Biochemistry</source>             <volume>28</volume>             <fpage>4914</fpage>             <lpage>4922</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Eriksson1">
        <label>21</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Eriksson</surname><given-names>AE</given-names></name><name name-style="western"><surname>Baase</surname><given-names>WA</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>XJ</given-names></name><name name-style="western"><surname>Heinz</surname><given-names>DW</given-names></name><name name-style="western"><surname>Blaber</surname><given-names>M</given-names></name><etal/></person-group>             <year>1992</year>             <article-title>Response of a protein structure to cavity-creating mutations and its relation to the hydrophobic effect.</article-title>             <source>Science</source>             <volume>255</volume>             <fpage>178</fpage>             <lpage>183</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Sheffler1">
        <label>22</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Sheffler</surname><given-names>W</given-names></name><name name-style="western"><surname>Baker</surname><given-names>D</given-names></name></person-group>             <year>2009</year>             <article-title>RosettaHoles: rapid assessment of protein core packing for structure prediction, refinement, design, and validation.</article-title>             <source>Protein Sci</source>             <volume>18</volume>             <fpage>229</fpage>             <lpage>239</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Hu1">
        <label>23</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Hu</surname><given-names>X</given-names></name><name name-style="western"><surname>Kuhlman</surname><given-names>B</given-names></name></person-group>             <year>2006</year>             <article-title>Protein design simulations suggest that side-chain conformational entropy is not a strong determinant of amino acid environmental preferences.</article-title>             <source>Proteins</source>             <volume>62</volume>             <fpage>739</fpage>             <lpage>748</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Lazaridis1">
        <label>24</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Lazaridis</surname><given-names>T</given-names></name><name name-style="western"><surname>Karplus</surname><given-names>M</given-names></name></person-group>             <year>1999</year>             <article-title>Effective energy function for proteins in solution.</article-title>             <source>Proteins</source>             <volume>35</volume>             <fpage>133</fpage>             <lpage>152</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Desmet2">
        <label>25</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Desmet</surname><given-names>J</given-names></name><name name-style="western"><surname>Spriet</surname><given-names>J</given-names></name><name name-style="western"><surname>Lasters</surname><given-names>I</given-names></name></person-group>             <year>2002</year>             <article-title>Fast and accurate side-chain topology and energy refine- ment (FASTER) as a new method for protein structure optimization.</article-title>             <source>Proteins</source>             <volume>48</volume>             <fpage>31</fpage>             <lpage>43</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Kuhlman2">
        <label>26</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Kuhlman</surname><given-names>B</given-names></name><name name-style="western"><surname>Dantas</surname><given-names>G</given-names></name><name name-style="western"><surname>Ireton</surname><given-names>GC</given-names></name><name name-style="western"><surname>Varani</surname><given-names>G</given-names></name><name name-style="western"><surname>Stoddard</surname><given-names>BL</given-names></name><etal/></person-group>             <year>2003</year>             <article-title>Design of a novel globular protein fold with atomic-level accuracy.</article-title>             <source>Science</source>             <volume>302</volume>             <fpage>1364</fpage>             <lpage>1368</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Kaufmann1">
        <label>27</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Kaufmann</surname><given-names>KW</given-names></name><name name-style="western"><surname>Lemmon</surname><given-names>GH</given-names></name><name name-style="western"><surname>DeLuca</surname><given-names>SL</given-names></name><name name-style="western"><surname>Sheehan</surname><given-names>JH</given-names></name><name name-style="western"><surname>Meiler</surname><given-names>J</given-names></name></person-group>             <year>2010</year>             <article-title>Practically useful: What the rosetta protein modeling suite can do for you.</article-title>             <source>Biochemistry</source>             <volume>49</volume>             <fpage>2987</fpage>             <lpage>2998</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Dehouck1">
        <label>28</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Dehouck</surname><given-names>Y</given-names></name><name name-style="western"><surname>Gilis</surname><given-names>D</given-names></name><name name-style="western"><surname>Rooman</surname><given-names>M</given-names></name></person-group>             <year>2006</year>             <article-title>A new generation of statistical potentials for proteins.</article-title>             <source>Biophys J</source>             <volume>90</volume>             <fpage>4010</fpage>             <lpage>4017</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Kortemme1">
        <label>29</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Kortemme</surname><given-names>T</given-names></name><name name-style="western"><surname>Morozov</surname><given-names>A</given-names></name><name name-style="western"><surname>Baker</surname><given-names>D</given-names></name></person-group>             <year>2003</year>             <article-title>An orientation-dependent hydrogen bonding poten- tial improves prediction of specificity and structure for proteins and protein-protein complexes.</article-title>             <source>J Mol Biol</source>             <volume>326</volume>             <fpage>1239</fpage>             <lpage>1259</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Huggins1">
        <label>30</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Huggins</surname><given-names>DJ</given-names></name><name name-style="western"><surname>Altman</surname><given-names>MD</given-names></name><name name-style="western"><surname>Tidor</surname><given-names>B</given-names></name></person-group>             <year>2008</year>             <article-title>Evaluation of an inverse molecular design algorithm in a model binding site.</article-title>             <source>Proteins</source>             <volume>75</volume>             <fpage>168</fpage>             <lpage>186</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Dahiyat1">
        <label>31</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Dahiyat</surname><given-names>BI</given-names></name><name name-style="western"><surname>Mayo</surname><given-names>SL</given-names></name></person-group>             <year>1997</year>             <article-title>De novo protein design: Fully automated sequence selection.</article-title>             <source>Science</source>             <volume>278</volume>             <fpage>82</fpage>             <lpage>87</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Wang2">
        <label>32</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>G</given-names></name><name name-style="western"><surname>Dunbrack</surname><given-names>RL</given-names></name></person-group>             <year>2003</year>             <article-title>PISCES: a protein sequence culling server.</article-title>             <source>Bioinformatics</source>             <volume>19</volume>             <fpage>1589</fpage>             <lpage>1591</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Word1">
        <label>33</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Word</surname><given-names>JM</given-names></name><name name-style="western"><surname>Lovell</surname><given-names>SC</given-names></name><name name-style="western"><surname>Richardson</surname><given-names>JS</given-names></name><name name-style="western"><surname>Richardson</surname><given-names>DC</given-names></name></person-group>             <year>1999</year>             <article-title>Asparagine and glutamine: using hydrogen atom contacts in the choice of side-chain amide orientation.</article-title>             <source>J Mol Biol</source>             <volume>285</volume>             <fpage>1735</fpage>             <lpage>1747</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Chen2">
        <label>34</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>VB</given-names></name><name name-style="western"><surname>Davis</surname><given-names>IW</given-names></name><name name-style="western"><surname>Richardson</surname><given-names>DC</given-names></name></person-group>             <year>2009</year>             <article-title>KING (Kinemage, next generation): A versatile interactive molecular and scientific visualization program.</article-title>             <source>Protein Sci</source>             <volume>18</volume>             <fpage>2403</fpage>             <lpage>2409</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Hubbard1">
        <label>35</label>
        <element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Hubbard</surname><given-names>S</given-names></name><name name-style="western"><surname>Thornton</surname><given-names>J</given-names></name></person-group>             <year>1993</year>             <article-title>NACCESS.</article-title>             <comment>Computer Program, Department of Biochemistry and Molecular Biology, University College London</comment>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Henikoff1">
        <label>36</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Henikoff</surname><given-names>S</given-names></name><name name-style="western"><surname>Henikoff</surname><given-names>JG</given-names></name></person-group>             <year>1992</year>             <article-title>Amino acid substitution matrices from protein blocks.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>89</volume>             <fpage>10915</fpage>             <lpage>10919</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Pearlman1">
        <label>37</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Pearlman</surname><given-names>DA</given-names></name><name name-style="western"><surname>Case</surname><given-names>DA</given-names></name><name name-style="western"><surname>Caldwell</surname><given-names>JW</given-names></name><name name-style="western"><surname>Ross</surname><given-names>WS</given-names></name><name name-style="western"><surname>Cheatham</surname><given-names>TE</given-names></name><etal/></person-group>             <year>1995</year>             <article-title>AMBER, a pack- age of computer programs for applying molecular mechanics, normal mode analysis, molecular dynamics and free energy calculations to simulate the structural and energetic properties of molecules.</article-title>             <source>Comput Phys Commun</source>             <volume>91</volume>             <fpage>1</fpage>             <lpage>41</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Lovell1">
        <label>38</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Lovell</surname><given-names>SC</given-names></name><name name-style="western"><surname>Word</surname><given-names>JM</given-names></name><name name-style="western"><surname>Richardson</surname><given-names>JS</given-names></name><name name-style="western"><surname>Richardson</surname><given-names>DC</given-names></name></person-group>             <year>2000</year>             <article-title>The penultimate rotamer library.</article-title>             <source>Proteins</source>             <volume>40</volume>             <fpage>389</fpage>             <lpage>408</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Goldstein1">
        <label>39</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Goldstein</surname><given-names>R</given-names></name></person-group>             <year>1994</year>             <article-title>Eficient rotamer elimination applied to protein side-chains and related spin glasses.</article-title>             <source>Biophys J</source>             <volume>66</volume>             <fpage>1335</fpage>             <lpage>1340</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Pierce1">
        <label>40</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Pierce</surname><given-names>NA</given-names></name><name name-style="western"><surname>Spriet</surname><given-names>JA</given-names></name><name name-style="western"><surname>Desmet</surname><given-names>J</given-names></name><name name-style="western"><surname>Mayo</surname><given-names>SL</given-names></name></person-group>             <year>2000</year>             <article-title>Conformational splitting: A more powerful criterion for dead-end elimination.</article-title>             <source>J Comput Chem</source>             <volume>21</volume>             <fpage>999</fpage>             <lpage>1009</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Gordon1">
        <label>41</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Gordon</surname><given-names>DB</given-names></name><name name-style="western"><surname>Hom</surname><given-names>GK</given-names></name><name name-style="western"><surname>Mayo</surname><given-names>SL</given-names></name><name name-style="western"><surname>Pierce</surname><given-names>NA</given-names></name></person-group>             <year>2003</year>             <article-title>Exact rotamer optimization for protein design.</article-title>             <source>J Comput Chem</source>             <volume>24</volume>             <fpage>232</fpage>             <lpage>243</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Abagyan1">
        <label>42</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Abagyan</surname><given-names>R</given-names></name><name name-style="western"><surname>Totrov</surname><given-names>M</given-names></name></person-group>             <year>1994</year>             <article-title>Biased probability monte carlo conformational searches and electrostatic calculations for peptides and proteins.</article-title>             <source>J Mol Biol</source>             <volume>235</volume>             <fpage>983</fpage>             <lpage>1002</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002335-Word2">
        <label>43</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Word</surname><given-names>J</given-names></name><name name-style="western"><surname>Lovell</surname><given-names>S</given-names></name><name name-style="western"><surname>LaBean</surname><given-names>T</given-names></name><name name-style="western"><surname>Taylor</surname><given-names>H</given-names></name><name name-style="western"><surname>Zalis</surname><given-names>M</given-names></name><etal/></person-group>             <year>1999</year>             <article-title>Visualizing and quantifying molecular goodness-of-fit: small-probe contact dots with explicit hydrogen atoms.</article-title>             <source>J Mol Biol</source>             <volume>285</volume>             <fpage>1711</fpage>             <lpage>1733</lpage>          </element-citation>
      </ref>
    </ref-list>
    
  </back>
</article>