<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="discussion" dtd-version="3.0" xml:lang="EN">
  <front>
    <journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="allenpress-id">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
        <publisher-name>Public Library of Science</publisher-name>
        <publisher-loc>San Francisco, USA</publisher-loc>
      </publisher></journal-meta>
    <article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0030129</article-id><article-id pub-id-type="publisher-id">06-PLCB-EN-0305R2</article-id><article-id pub-id-type="sici">plcb-03-08-01</article-id><article-categories>
        <subj-group subj-group-type="heading">
          <subject>Education</subject>
        </subj-group>
        <subj-group subj-group-type="Discipline">
          <subject>Computational Biology</subject>
          <subject>Computer Science</subject>
          <subject>Genetics and Genomics</subject>
          <subject>Mathematics</subject>
        </subj-group>
        <subj-group subj-group-type="System Taxonomy">
          <subject>None</subject>
        </subj-group>
      </article-categories><title-group><article-title>A Primer on Learning in Bayesian Networks for Computational Biology</article-title><alt-title alt-title-type="running-head">Learning in Bayesian Networks</alt-title></title-group><contrib-group>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Needham</surname>
            <given-names>Chris J</given-names>
          </name>
          <xref ref-type="corresp" rid="cor1">
            <sup>*</sup>
          </xref>
          <xref ref-type="fn" rid="n101"/>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Bradford</surname>
            <given-names>James R</given-names>
          </name>
          <xref ref-type="fn" rid="n101"/>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Bulpitt</surname>
            <given-names>Andrew J</given-names>
          </name>
          <xref ref-type="fn" rid="n101"/>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Westhead</surname>
            <given-names>David R</given-names>
          </name>
          <xref ref-type="fn" rid="n101"/>
        </contrib>
      </contrib-group><contrib-group>
        <contrib contrib-type="editor" xlink:type="simple">
          <name name-style="western">
            <surname>Lewitter</surname>
            <given-names>Fran</given-names>
          </name>
          <role>Editor</role>
          <xref ref-type="aff" rid="edit1"/>
        </contrib>
      </contrib-group><aff id="edit1">Whitehead Institute, United States of America</aff><author-notes>
        <fn fn-type="con" id="ack1">
          <p>CJN is the primary author of the tutorial. JRB and DRW have advised on the biological examples. AJB and DRW have contributed their pedagogical knowledge on the topic. All authors have advised on the selection and presentation of the material.</p>
        </fn>
        <fn fn-type="current-aff" id="n101">
          <p>Chris J. Needham and Andrew J. Bulpitt are with the School of Computing, University of Leeds, Leeds, United Kingdom. James R. Bradford and David R. Westhead are with the Institute of Molecular and Cellular Biology, University of Leeds, Leeds, United Kingdom.</p>
        </fn>
        <corresp id="cor1">* To whom correspondence should be addressed. E-mail: <email xlink:type="simple">chrisn@comp.leeds.ac.uk</email></corresp>
      <fn fn-type="conflict" id="ack3">
        <p> The authors have declared that no competing interests exist.</p>
      </fn></author-notes><pub-date pub-type="ppub">
        <month>8</month>
        <year>2007</year>
      </pub-date><pub-date pub-type="epub">
        <day>31</day>
        <month>8</month>
        <year>2007</year>
      </pub-date><volume>3</volume><issue>8</issue><elocation-id>e129</elocation-id><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2007</copyright-year><copyright-holder>Needham et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><funding-group><funding-statement>The authors would like to thank the Biotechnology and Biological Sciences Research Council for funding on grant BBSB16585 during which this article was written.</funding-statement></funding-group><counts>
        <page-count count="8"/>
      </counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group>
        <custom-meta>
          <meta-name>citation</meta-name>
          <meta-value>Needham CJ, Bradford JR, Bulpitt AJ, Westhead DR (2007) A primer on learning in Bayesian networks for computational biology. PLoS Comput Biol 3(8): e129. doi:<ext-link ext-link-type="doi" xlink:href="http://dx.doi.org/10.1371/journal.pcbi.0030129" xlink:type="simple">10.1371/journal.pcbi.0030129</ext-link></meta-value>
        </custom-meta>
        <custom-meta>
          <meta-name>article-logo</meta-name>
          <meta-value>tutorial_logo.jpg</meta-value>
        </custom-meta>
      </custom-meta-group></article-meta>
  </front>
  <body>
    <p><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.tutorial_logo" xlink:type="simple"/></p>
    <sec id="s1">
      <title>Introduction</title>
      <p>Bayesian networks (BNs) provide a neat and compact representation for expressing joint probability distributions (JPDs) and for inference. They are becoming increasingly important in the biological sciences for the tasks of inferring cellular networks [<xref ref-type="bibr" rid="pcbi-0030129-b001">1</xref>], modelling protein signalling pathways [<xref ref-type="bibr" rid="pcbi-0030129-b002">2</xref>], systems biology, data integration [<xref ref-type="bibr" rid="pcbi-0030129-b003">3</xref>], classification [<xref ref-type="bibr" rid="pcbi-0030129-b004">4</xref>], and genetic data analysis [<xref ref-type="bibr" rid="pcbi-0030129-b005">5</xref>]. The representation and use of probability theory makes BNs suitable for combining domain knowledge and data, expressing causal relationships, avoiding overfitting a model to training data, and learning from incomplete datasets. The probabilistic formalism provides a natural treatment for the stochastic nature of biological systems and measurements. This primer aims to introduce BNs to the computational biologist, focusing on the concepts behind methods for learning the parameters and structure of models, at a time when they are becoming the machine learning method of choice.</p>
      <p>There are many applications in biology where we wish to classify data; for example, gene function prediction. To solve such problems, a set of rules are required that can be used for prediction, but often such knowledge is unavailable, or in practice there turn out to be many exceptions to the rules or so many rules that this approach produces poor results.</p>
      <p>Machine learning approaches often produce better results, where a large number of examples (the training set) is used to adapt the parameters of a model that can then be used for performing predictions or classifications on data. There are many different types of models that may be required and many different approaches to training the models, each with its pros and cons. An excellent overview of the topic can be found in [<xref ref-type="bibr" rid="pcbi-0030129-b006">6</xref>] and [<xref ref-type="bibr" rid="pcbi-0030129-b007">7</xref>]. Neural networks, for example, are often able to learn a model from training data, but it is often difficult to extract information about the model, which with other methods can provide valuable insights into the data or problem being solved. A common problem in machine learning is overfitting, where the learned model is too complex and generalises poorly to unseen data. Increasing the size of the training dataset may reduce this; however, this assumes more training data is readily available, which is often not the case. In addition, often it is important to determine the uncertainty in the learned model parameters or even in the choice of model. This primer focuses on the use of BNs, which offer a solution to these issues. The use of Bayesian probability theory provides mechanisms for describing uncertainty and for adapting the number of parameters to the size of the data. Using a graphical representation provides a simple way to visualise the structure of a model. Inspection of models can provide valuable insights into the properties of the data and allow new models to be produced.</p>
    </sec>
    <sec id="s2">
      <title>Bayesian Networks</title>
      <p>In a graphical model representation, variables are represented by nodes that are connected together by edges representing relationships between variables. <xref ref-type="fig" rid="pcbi-0030129-g001">Figure 1</xref> provides an example of a BN describing a gene regulation network. The expression of each gene is represented by one variable of a JPD that describes how the genes are regulated by each other. Such a JPD may be complex even for just five variables; however, the graphical representation makes it clear where the regulatory relationships exist between the genes.</p>
      <fig id="pcbi-0030129-g001" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g001</object-id>
        <label>Figure 1</label>
        <caption>
          <title>An Example: Gene Regulatory Networks</title>
          <p>Gene regulatory networks provide a natural example for BN application. Genes correspond to nodes in the network, and regulatory relationships between genes are shown by directed edges. In the simple example above, gene G1 regulates G2, G3, and G5, gene G2 regulates G4 and G5, and gene G3 regulates G5. The probability distribution for the expression levels of each gene is modelled by the BN parameters. Simplification results from the fact that the probability distribution for a gene depends only on its regulators (parents) in the network. For instance, the expression levels of G4 and G5 are related only because they share a common regulator G2. In mathematical terms, they are conditionally independent given G2. Such relationships lead to factorisation of the full JPD into component conditional distributions, where each variable depends only on its parents in the network.</p>
          <p><italic>p</italic>(G1, G2, G3, G4, G5) = <italic>p</italic>(G1)<italic>p</italic>(G2|G1)<italic>p</italic>(G3|G1)<italic>p</italic>(G4|G2)<italic>p</italic>(G5|G1, G2, G3)</p>
        </caption>
        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g001" xlink:type="simple"/>
      </fig>
      <p>For BNs, the edges of the graph must form a directed acyclic graph (DAG)—a graph with no cyclic paths (no loops). This allows for efficient inference and learning. JPDs can be expressed in a compact way, reducing model size through exploiting conditional independence relationships—two variables are conditionally independent if they are independent given the state of a third variable. A benefit of BNs is that they may be interpreted as a causal model which generated the data. Thus, arrows (directed edges) in the DAG can represent causal relations/dependencies between variables. However, it must be noted that to learn a causal model from data needs more than association data, and this is discussed toward the end of this primer under the heading Causality.</p>
      <p>Bioinformatics applications of BNs have included gene clustering and the inference of cellular networks [<xref ref-type="bibr" rid="pcbi-0030129-b001">1</xref>], since they are well-suited to modelling stochastic complex biological systems, and the resulting networks can be easily understood. An excellent example of combining data and domain knowledge in the bioinformatics field is the MAGIC BN which has been designed using expert knowledge for combining information from diverse heterogeneous data sources for the classification task of gene function prediction [<xref ref-type="bibr" rid="pcbi-0030129-b003">3</xref>].</p>
      <sec id="s2a">
        <title/>
        <sec id="s2a1">
          <title>Conditional probability distributions (model parameters).</title>
          <p>The relationships between variables are encoded by conditional probability distributions (CPDs) of the form <italic>p</italic>(<italic>B|A</italic>)—the probability of <italic>B</italic> given <italic>A</italic>. For <italic>discrete variables,</italic> probability distributions are expressed as conditional probability tables (CPTs) containing probabilities that are the model parameters (see <xref ref-type="fig" rid="pcbi-0030129-g007">Figure 7</xref> and related text for examples). For each node, the probability that the variable will be in each possible state given its parents' states can be calculated based on the frequency observed in a set of training data. It is often useful/necessary to use a prior distribution for the model parameters, as, without a prior, a possible configuration that was not seen in the training examples would be incorrectly assigned a zero probability of ever being observed. (Equally well, these probabilities may be estimated by an expert and used alongside those learned from data).</p>
          <p>For BNs, which use <italic>continuous variables,</italic> conditional probability densities are used in a similar way to CPTs. <xref ref-type="fig" rid="pcbi-0030129-g002">Figure 2</xref> presents a simple BN which introduces the concept of using continuous variables. The usual notation is to use squares for discrete nodes and circles for continuous nodes. A continuous node, <italic>B</italic>, with a discrete parent, <italic>A</italic>, (say, a variable with <italic>k =</italic> 3 states) leads to a model of the continuous data using <italic>k</italic> Gaussian distributions. Thus, given that <italic>A</italic> is in state <italic>a<sub>i</sub></italic>, the likelihood of a value of B may be inferred, or, alternatively, given a value <italic>b</italic> for variable <italic>B</italic>, the probability that variable <italic>A</italic> is in state <italic>a<sub>i</sub></italic> may be inferred. Parameters for the Gaussians (or other distributions) can be learned from training data. θ<italic><sub>B</sub></italic> is the parameter set that encodes the model for <italic>B</italic> in terms of three Gaussians, one for each of the three possible states of <italic>A</italic>. A mean <italic>μ<sub>i</sub></italic> and standard deviation <italic>σ<sub>i</sub></italic> are the parameters for the Gaussian distribution which models <italic>p</italic>(<italic>b|a<sub>i</sub></italic>).</p>
          <fig id="pcbi-0030129-g002" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g002</object-id>
            <label>Figure 2</label>
            <caption>
              <title>Illustration of Model Parameters for Two-Node Bayesian Network</title>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g002" xlink:type="simple"/>
          </fig>
          <p>In a similar way, regression models for CPDs of continuous variables with continuous parents may be used. In this case, θ<italic><sub>B</sub></italic> = <italic>P</italic>(<italic>B|A</italic>) ∼ <italic>N</italic>(<italic>c + ma, σ</italic><sup>2</sup>). i.e., the CPD for <italic>B</italic> is a Gaussian distribution with a mean dependent on the value of <italic>A = a</italic>, with constants <italic>m</italic> and <italic>c</italic> determined by regression of <italic>B</italic> on <italic>A</italic>.</p>
        </sec>
        <sec id="s2a2">
          <title>Joint probability distributions.</title>
          <p>It is the JPD over all the variables that is of great interest. However, the number of model parameters needed to define the JPD grows rapidly with the number of variables. Through exploiting conditional independence between variables, the models may be represented in a compact manner, with orders of magnitude fewer parameters.</p>
          <p>Relationships between variables are captured in a BN structure <italic>S</italic> defined by a DAG (as in the gene regulatory network example in <xref ref-type="fig" rid="pcbi-0030129-g001">Figure 1</xref>). This enables the JPD to be expressed in terms of a product of CPDs, describing each variable in terms of its parents, i.e., those variables it depends upon. Thus:
						<disp-formula id="pcbi-0030129-e001"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.e001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&prod;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mtext>pa</mml:mtext><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math> --></disp-formula>where <bold>x</bold> = { <italic>x</italic><sub>1</sub>, … , <italic>x<sub>n</sub></italic> } are the variables (nodes in the BN), and θ = { θ<sub>1</sub> , … , θ<italic><sub>n</sub></italic> } denotes the model parameters, where θ<italic><sub>i</sub></italic> is the set of parameters describing the distribution for the <italic>i</italic>th variable <italic>x<sub>i</sub></italic>, and <bold>pa</bold>(<italic>x<sub>i</sub></italic>) denotes the parents of <italic>x<sub>i</sub></italic>. Each parameter set θ<italic><sub>i</sub></italic> may take a number of forms—commonly a CPT is used for discrete variables, and CPDs (such as Gaussian distributions) are used for continuous variables. Classification/regression models can be used to learn the parameters for each node in the network.
					</p>
        </sec>
        <sec id="s2a3">
          <title>Inference in Bayesian networks.</title>
          <p>For the known BN structure (gene regulatory network) in <xref ref-type="fig" rid="pcbi-0030129-g001">Figure 1</xref> and a CPD for each node (modelling gene interactions), given evidence about the expression levels of some genes, inferences about the likely values of other genes can be made. For example, the value of G1 may be inferred from the values of the other genes, i.e., <italic>p</italic>(G1|G2, G3, G4, G5). More generally, inferences of the values of a set of variables may be made given evidence of another set of variables, by marginalising over unknown variables. (Marginalising means considering all possible values the unknown variables may take, and averaging over them.) Simple inference examples are illustrated in the next section.</p>
          <p>Conceptually, inference is straightforward, <italic>p</italic>(<italic>x|y</italic>) is calculated as a product of relevant CPDs, using Bayes rule [<italic>p</italic>(<italic>a|b</italic>) <italic>= p</italic>(<italic>b|a</italic>)<italic>p</italic>(<italic>a</italic>)<italic>/p</italic>(<italic>b</italic>)] to calculate any posterior probabilities. Computationally, the calculation of inference in this way is hard and inefficient. A number of methods exist that exploit the structure of the graph to derive efficient exact inference algorithms such as the sum–product and max–sum algorithms. For many problems, however, exact inference is not feasible, and, therefore, the use of approximation methods such as variational methods and sampling approaches are required.</p>
        </sec>
        <sec id="s2a4">
          <title>Conditional independence.</title>
          <p>Two variables are conditionally independent if they are independent given the state of a third variable. Mathematically, <italic>a</italic> and <italic>b</italic> are conditionally independent given <italic>c</italic> if:
						<disp-formula id="pcbi-0030129-e002"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.e002" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>|</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>a</mml:mi><mml:mo>|</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>b</mml:mi><mml:mo>|</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:math> --></disp-formula>
					</p>
          <p>Conditional independence relationships are encoded in the structure of the network, as illustrated in the three cases below. Regulation of three genes <italic>x</italic>, <italic>y</italic>, and <italic>z</italic> is taken as an example. In each case, the situation is described, along with a BN diagram, an equation for the JPD, and an equation for inference of <italic>p</italic>(<italic>z|x</italic>).</p>
          <p><italic>Serial connection.</italic> For example, when gene <italic>x</italic> promotes gene <italic>y</italic>, and gene <italic>y</italic> promotes gene <italic>z</italic> (<xref ref-type="fig" rid="pcbi-0030129-g003">Figure 3</xref>). In this case, evidence is transmitted unless the state of the variable in the connection is known: if the expression level of gene <italic>y</italic> is unknown, then evidence of the level of <italic>x</italic> effects the expected level of <italic>z</italic>; if <italic>y</italic> is known, then the level of <italic>z</italic> depends only on the expression level of <italic>y</italic>. <italic>z</italic> is conditionally independent from <italic>x</italic>.</p>
          <fig id="pcbi-0030129-g003" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g003</object-id>
            <label>Figure 3</label>
            <caption>
              <title>Serial Connection</title>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g003" xlink:type="simple"/>
          </fig>
          <p><named-content content-type="genus-species" xlink:type="simple">Diverging connection</named-content>. For example, when a transcription factor <italic>y</italic> turns on two genes <italic>x</italic> and <italic>z</italic> (<xref ref-type="fig" rid="pcbi-0030129-g004">Figure 4</xref>). As with a serial connection, evidence is transmitted unless the variable in the connection is instantiated: if the expression level of <italic>y</italic> is unknown, then evidence of the level of <italic>x</italic> effects the level of <italic>z</italic> (since they are co-regulated—if <italic>x</italic> is highly expressed, then the likely level of <italic>y</italic> may be inferred, which in turn would influence the expression level of <italic>z</italic>); if <italic>y</italic> is known, then the level of <italic>z</italic> depends only on the expression level of <italic>y</italic>. <italic>z</italic> is conditionally independent from <italic>x</italic>.</p>
          <fig id="pcbi-0030129-g004" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g004</object-id>
            <label>Figure 4</label>
            <caption>
              <title>Diverging Connection</title>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g004" xlink:type="simple"/>
          </fig>
          <p><named-content content-type="genus-species" xlink:type="simple">Converging connection</named-content>. For example, when two genes <italic>x</italic> and <italic>z</italic> both promote gene <italic>y</italic> (<xref ref-type="fig" rid="pcbi-0030129-g005">Figure 5</xref>). Evidence is transmitted only if the variable in the connection or one of its children receives evidence: if <italic>y</italic> is unknown, then evidence of the expression level of gene <italic>x</italic> does not help to infer the expression level of <italic>z</italic>—<italic>x</italic> and <italic>z</italic> are independent; however, if <italic>y</italic> is known, then the level of <italic>x</italic> does help to infer the expression level of <italic>z</italic>. Importantly, at the v-structure in the network, the CPD for <italic>y</italic> encodes the dependency of <italic>y</italic> on both <italic>x</italic> and <italic>z</italic>. Note in this case that <italic>p</italic>(<italic>x,z|y</italic>) <italic>≠ p</italic>(<italic>x|y</italic>)<italic>p</italic>(<italic>z|y</italic>).</p>
          <fig id="pcbi-0030129-g005" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g005</object-id>
            <label>Figure 5</label>
            <caption>
              <title>Converging Connection</title>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g005" xlink:type="simple"/>
          </fig>
          <p>In the case of a converging connection, it is also worthwhile noting that when the value of <italic>y</italic> is known as well as <italic>x</italic>, then this evidence helps to infer the value of <italic>z</italic>, and <italic>x</italic> and <italic>z</italic> are no longer independent variables:
						<disp-formula id="pcbi-0030129-eq001"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.eq001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>z</mml:mi><mml:mo>|</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>y</mml:mi><mml:mo>|</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mstyle displaystyle='true'><mml:msub><mml:mo>&sum;</mml:mo><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mi>y</mml:mi><mml:mo>|</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:mfrac><mml:mo>&ne;</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:math> --></disp-formula>
					</p>
          <p>Thus, the structure of the model captures/encodes the dependencies between the variables and leads to a different <italic>causal</italic> model.</p>
        </sec>
        <sec id="s2a5">
          <title>An example: Naïve Bayes classifier for interaction site prediction.</title>
          <p>As a simple example, consider the task of predicting interaction sites on protein surfaces from measures of conservation and hydrophobicity of surface patches. This gives three variables: <italic>I,</italic> whether the patch is an interaction site or not; <italic>C,</italic> conservation score for the patch; and <italic>H,</italic> the hydrophobicity of the patch. <italic>I</italic> is a discrete class variable. Both <italic>C</italic> and <italic>H</italic> are continuous variables (though may be quantised to form discrete data). Conservation and hydrophobicity are both reasonably good predictors of interaction sites, and the information from these independent predictions may be combined in a naïve Bayes classifier to improve performance. The structure of the model for a naïve Bayes classifier has a class node (the one to be inferred from the other observed variables) as a parent to all other independent variables and is illustrated in <xref ref-type="fig" rid="pcbi-0030129-g007">Figure 7</xref>. Such a model structure is excellent for integrating information, and for maintaining a small model size. [For a set of <italic>n</italic> binary variables, a completely connected DAG has 2<italic><sup>n</sup></italic> − 1 free parameters, an inverted naïve Bayes classifier (where the class node depends on all other variables) has 2<italic><sup>n</sup></italic><sup>−1</sup> + n + 1 free parameters, whereas a naïve Bayes classifier has only 2<italic>n</italic> + 1 free parameters! For a model with 100 binary variables, this is more than 2<sup>90</sup> times smaller!]. In the next section of this primer, the learning of parameters for this simple example is illustrated. This example is inspired by [<xref ref-type="bibr" rid="pcbi-0030129-b004">4</xref>] in which a naïve Bayes classifier is used within a classification scheme to predict protein–protein interaction sites using a number of predictive variables.</p>
        </sec>
      </sec>
    </sec>
    <sec id="s3">
      <title>Parameter Learning</title>
      <p>The simplest approach to learn the parameters of a network is to find the parameter set that maximises the likelihood that the observed data came from the model.</p>
      <sec id="s3a">
        <title/>
        <sec id="s3a1">
          <title>Likelihood.</title>
          <p>In essence, a BN is used to model a probability distribution <bold>X</bold>. A set of model parameters θ may be learned from the data in such a way that maximises the likelihood that the data came from <bold>X</bold>. Given a set of observed training data, <italic>D</italic> = { <bold>x</bold><sub>1</sub>, … , <bold>x</bold><italic><sub>N</sub></italic> } consisting of <italic>N</italic> examples, it is useful to consider the likelihood of a model, <italic>L</italic>(θ), as the likelihood of seeing the data, given a model:
						<disp-formula id="pcbi-0030129-e003"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.e003" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>D</mml:mi><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&prod;</mml:mo><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mtext>i</mml:mtext></mml:msub><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math> --></disp-formula>It should be noted here that <bold>x</bold><sub>i</sub> is the <italic>i</italic>th training example and that the likelihood of <italic>D</italic> being generated from model θ is the product of the probabilities of each example, given the model.
					</p>
        </sec>
        <sec id="s3a2">
          <title>Maximum likelihood.</title>
          <p>The learning paradigm which aims to maximise <italic>L</italic>(θ) is called <italic>maximum likelihood</italic> (ML). This approximates the probability of a new example <bold>x</bold> given the training data <italic>D</italic> as <italic>p</italic>(<bold>x</bold><italic>|D</italic>) ≈ <italic>p</italic>(<bold>x</bold>|θ<sub>ML</sub>) where θ<sub>ML</sub> is the maximum (log) likelihood model which aims to maximise ln <italic>p</italic>(<italic>D</italic>|θ), i.e., θ<sub>ML</sub> = arg max<italic><sub>θ</sub></italic> ln <italic>p</italic>(<italic>D</italic>|θ). This amounts to maximising the likelihood of the “data given model.” ML does not assume any prior. Using negative log likelihood is equivalent to minimising an error function.</p>
        </sec>
        <sec id="s3a3">
          <title>Maximum posterior.</title>
          <p>In order to consider a prior distribution, a <italic>maximum a posteriori</italic> (MAP) model can be used. This approximates the probability of a new example <bold>x</bold> given the training data <italic>D</italic> as <italic>p(</italic><bold>x</bold><italic>|D)</italic> ≈ <italic>p</italic>(<bold>x</bold>|θ<sub>MAP</sub>) where θ<sub>MAP</sub> is the MAP probability (likelihood of the “model given data”) which aims to maximise ln <italic>p</italic>(θ|<italic>D</italic>), i.e., θ<sub>MAP</sub> = arg max<italic><sub>θ</sub></italic> ln <italic>p</italic>(θ|<italic>D</italic>)<italic>.</italic> This takes into account the prior, since through Bayes' theorem: <italic>p</italic>(θ|<italic>D</italic>) <italic>= p</italic>(<italic>D</italic>|θ)<italic>p</italic>(θ)<italic>/p</italic>(<italic>D</italic>).</p>
          <p>Often ML and MAP estimates are good enough for the application in hand, and produce good predictive models. The numerical example at the end of this section illustrates the effects of ML and MAP estimates with different strength priors and training set sizes. Both ML and MAP produce a point estimate for θ. Point estimates are a single snapshot of parameters (though confidence intervals on their values can be calculated).</p>
        </sec>
        <sec id="s3a4">
          <title>Marginal likelihood.</title>
          <p>For a full Bayesian model, the uncertainty in the values of the parameters is modelled as a probability distribution over the parameters. The parameters are considered to be latent variables, and the key idea is to marginalise over these unknown parameters, rather than to make point estimates. This is known as marginal likelihood. The computation of a full posterior distribution, or model averaging, avoids severe overfitting and allows direct model comparison. In [<xref ref-type="bibr" rid="pcbi-0030129-b008">8</xref>], Eddy introduces Bayesian statistics with a simple example, and integrates over all possible parameter values, illustrating a more rigorous approach to handling uncertainty. Formulating Bayesian learning as an inference problem, the training examples in <italic>D</italic> can be considered as <italic>N</italic> independent observations of the distribution <bold>X</bold>. <xref ref-type="fig" rid="pcbi-0030129-g006">Figure 6</xref> shows a graphical model where the shaded nodes <bold>x<sub>i</sub></bold> represent the observed independent training data and <bold>x</bold> the incomplete example observation for which the missing values are to be inferred, all of which are dependent upon the model θ.</p>
          <fig id="pcbi-0030129-g006" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g006</object-id>
            <label>Figure 6</label>
            <caption>
              <title>Graphical Model Illustrating Bayesian Inference</title>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g006" xlink:type="simple"/>
          </fig>
          <p>The joint probability of the training data, the model, and a new observation <bold>x</bold> is:
						<disp-formula id="pcbi-0030129-e004"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.e004" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>&theta;</mml:mi><mml:mo>,</mml:mo><mml:mtext>x)</mml:mtext><mml:mo>&equals;</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>D</mml:mi><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:math> --></disp-formula>where <italic>p</italic>(θ) is the prior. Applying the sum rule [<italic>p</italic>(<italic>a</italic>) <italic>= ∫p</italic>(<italic>a,b</italic>)<italic>db</italic>]:
						<disp-formula id="pcbi-0030129-e005"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.e005" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>,</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>&theta;</mml:mi><mml:mo>,</mml:mo><mml:mtext>x)</mml:mtext><mml:mi>d</mml:mi><mml:mi>&theta;</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math> --></disp-formula>
					</p>
          <p>Applying the product rule [<italic>p</italic>(<italic>a,b</italic>) <italic>= p</italic>(<italic>a|b</italic>)<italic>p</italic>(<italic>b</italic>)] to the left-hand side, and substituting (4) for the joint probability on the right-hand side, then dividing both sides by <italic>p</italic>(<italic>D</italic>), gives the predictive distribution for <bold>x</bold>:
						<disp-formula id="pcbi-0030129-e006"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.e006" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>D</mml:mi><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>&theta;</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math> --><!-- <mml:math display='block'><mml:mrow><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>|</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&theta;</mml:mi><mml:mo>|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>&theta;</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math> --><!-- <mml:math display='block'><mml:mi>p</mml:mi><mml:mo>(</mml:mo><mml:mtext>example</mml:mtext><mml:mo>|</mml:mo><mml:mtext>data</mml:mtext><mml:mo>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>p</mml:mi><mml:mo>(</mml:mo><mml:mtext>example</mml:mtext><mml:mo>|</mml:mo><mml:mtext>model</mml:mtext><mml:mo>)</mml:mo><mml:mo>&times;</mml:mo><mml:mi>p</mml:mi><mml:mo>(</mml:mo><mml:mtext>model</mml:mtext><mml:mo>|</mml:mo><mml:mtext>data</mml:mtext><mml:mo>)</mml:mo><mml:mtext>over all models</mml:mtext></mml:math> --></disp-formula>
					</p>
          <p>This is computing a full Bayesian posterior. In order to do this, a prior distribution, p(θ), for the model parameters needs to be specified. There are many types of priors that may be used, and there is much debate about the choice of prior [<xref ref-type="bibr" rid="pcbi-0030129-b009">9</xref>]. Often the calculation of the full posterior is intractable, and approximate methods must be used, such as point estimates or sampling techniques. Marginal likelihood fully takes into account uncertainty by averaging over all possible values.</p>
        </sec>
        <sec id="s3a5">
          <title>Learning from incomplete data.</title>
          <p>The parameters for BNs may be learned even when the training dataset is incomplete, i.e., the values of some variables in some cases are unknown. Commonly, the Expectation–Maximisation (EM) algorithm is used, which estimates the missing values by computing the expected values and updating parameters using these expected values as if they were observed values.</p>
          <p>EM is used to find local maxima for MAP or ML configurations. EM begins with a particular parameter configuration <inline-formula id="pcbi-0030129-ex001"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030129.ex001" xlink:type="simple"/></inline-formula>
						 (possibly random) and iteratively applies the expectation and maximisation steps, until convergence.
					</p>
          <p><italic>E-step.</italic> The expected values of the missing data are inferred to form <italic>D<sub>C</sub></italic>—the most likely complete dataset given the current model parameter configuration.</p>
          <p><italic>M-step.</italic> The configuration of <inline-formula id="pcbi-0030129-ex002"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030129.ex002" xlink:type="simple"/></inline-formula>
						 which maximises <italic>p</italic>(<inline-formula id="pcbi-0030129-ex003"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030129.ex003" xlink:type="simple"/></inline-formula>
						<italic>|D<sub>C</sub></italic>) is found (for MAP).
					</p>
          <p>Using EM to find a point estimate for the model parameters can be efficient to calculate and gives good results when learning from incomplete data or for network structures with hidden nodes (those for which there is no observed data).With large sample sizes, the effect of the prior p(θ) becomes small, and ML is often used instead of MAP in order to simplify the calculation. More sophisticated (and computationally expensive) sampling methods such as those mentioned below may also be applied to incomplete data. One advantage of these methods is that they avoid one of the possible drawbacks of EM—becoming trapped in local optima.</p>
          <p>There may be cases of hidden nodes in gene regulatory networks, where the network is known, but experiments have not provided expression levels for all genes in the network—model parameters can still be learned. The ability to handle incomplete data is an important one, particularly when considering that expression data may come from different laboratories, each looking at different parts of a gene regulatory network, with overlap of some genes whilst others are missing. In this case, all the collected data can be used.</p>
        </sec>
        <sec id="s3a6">
          <title>Sampling methods.</title>
          <p>A number of sampling methods have been used to estimate the (full) posterior distribution of the model parameters <italic>p</italic>(θ|<italic>D</italic>). Monte Carlo methods, such as <italic>Gibbs sampling,</italic> are extremely accurate, but computationally expensive, often taking a long time to converge, and become intractable as the sample size grows. <named-content content-type="genus-species" xlink:type="simple">Gaussian approximation</named-content> is often accurate for relatively large samples, and is more efficient than Monte Carlo methods. It is based on the fact that the posterior distribution <italic>p</italic>(θ|<italic>D</italic>) which is proportional to <italic>p</italic>(<italic>D</italic>|θ) <italic>× p</italic>(θ) can often be approximated as a Gaussian distribution. With more training data, the Gaussian peak becomes sharper, and tends to the MAP configuration θ<sub>MAP</sub>.</p>
        </sec>
        <sec id="s3a7">
          <title>Parameter learning numerical example.</title>
          <p>In this numerical example, we illustrate the approaches described in the text for learning Bayesian network parameters, using the simple example of a naïve Bayes classifier to predict protein interaction sites (I) using information on conservation (C) and hydrophobicity (H). Each variable has two possible values: I = yes/no; H = high/low and C = high/low. The conditional probability tables defining the network are shown in <xref ref-type="fig" rid="pcbi-0030129-g007">Figure 7</xref>, and the learning problem is to determine values for the associated probabilities <italic>p</italic><sub>1–5</sub>.</p>
          <p>To illustrate the different methods, we will focus on parameter <italic>p</italic><sub>2</sub>, the probability that conservation is high (C = high), given that this is a protein interaction site (I = yes). The value of <italic>p</italic><sub>2</sub> is to be estimated from count data; in this case, we assume that for <italic>N</italic> interaction sites, <italic>n</italic> have high conservation and <italic>N − n</italic> have low conservation.</p>
          <p><xref ref-type="fig" rid="pcbi-0030129-g008">Figure 8</xref> describes a number of possible scenarios. In the <xref ref-type="fig" rid="pcbi-0030129-g008">Figure 8</xref>A–<xref ref-type="fig" rid="pcbi-0030129-g008">8</xref>D graphs, the red dashed line shows the likelihood, <italic>p(data|model)</italic>. In this case, it is derived from the binomial distribution, and represents the probability of observing <italic>n</italic> high conservation sites in <italic>N</italic> trials, as a function of the binomial parameter <italic>p</italic><sub>2</sub>. The other graph curves are the prior <italic>p</italic>(<italic>model</italic>) (dotted green curve), giving a prior distribution for the value of <italic>p</italic><sub>2</sub>, and the posterior <italic>p</italic>(<italic>model|data</italic>) (solid blue curve). Here we have used the beta distribution as the prior. This is a very flexible distribution on the interval [0,1]; it has two parameters <italic>B</italic>(<italic>n,m</italic>), with <italic>B</italic>(1,1) representing the uniform distribution and other shapes being obtained with larger and different values of <italic>n</italic> and <italic>m</italic>. An advantage of the beta distribution in this case is that when used as a prior with the binomial it yields a posterior that is also a beta distribution (but with different parameters). The beta distribution is the conjugate prior of the binomial. In fact, the <italic>n</italic> and <italic>m</italic> parameters of the beta distribution can be viewed as pseudocounts, which are added to the observed counts to reflect prior knowledge.</p>
          <fig id="pcbi-0030129-g007" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g007</object-id>
            <label>Figure 7</label>
            <caption>
              <title>Naïve Bayes Classifier with Model Parameters in the Form of CPTs</title>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g007" xlink:type="simple"/>
          </fig>
          <fig id="pcbi-0030129-g008" position="float">
            <object-id pub-id-type="doi">10.1371/journal.pcbi.0030129.g008</object-id>
            <label>Figure 8</label>
            <caption>
              <title>The Effects of Different Strength Priors and Training Set Sizes</title>
              <p>(A) In this case, the observed data is ten interaction sites, of which five have high conservation, five low. As expected, in this case the likelihood peaks at <italic>p</italic><sub>2</sub> = 0.5. The prior is <italic>B</italic>(7,3), indicating prior knowledge that high conservation is found in interaction sites; it corresponds to adding seven pseudocounts to the C = high category, and three to C = low, and produces a prior peaked above <italic>p</italic><sub>2</sub> = 0.5. The posterior is also shown, along with the MAP estimate of <italic>p</italic><sub>2</sub>. The influence of the prior information in this case where the observed counts are low is clear.</p>
              <p>(B) Learning from 100 training examples (75 high, 25 low). Here the weak <italic>B</italic>(7,3) prior has little influence over the posterior distribution, and with a large training set the ML and MAP estimates are similar (<italic>p</italic><sub>2</sub> ∼ 0.75). The posterior distribution for <italic>p</italic><sub>2</sub> is narrower—some of the uncertainty about its value has been removed given the evidence (training examples).</p>
              <p>(C) Using a stronger prior <italic>B</italic>(70,30) still indicates that the most likely value for <italic>p</italic><sub>2</sub> is 0.7; however, note that the prior is narrower—a lot of evidence would be needed to be convinced that <italic>p</italic><sub>2</sub> was less than 0.6, say. Small samples are more susceptible to noise than larger samples. For a training set with five high and five low conservation scores, the ML estimate (<italic>p</italic><sub>2</sub> = 0.5) is quite different from the MAP estimate of about 0.7, which takes into account the prior. Hopefully, this illustrates why priors are useful, but also cautions against choosing the wrong prior (or too strong/weak a prior)!</p>
              <p>(D) This final example has a <italic>B</italic>(70,30) prior and shows ML and MAP estimates from training data with 75 high and 25 low conservation scores. This combination of a good prior and a larger training set is the example here with the least uncertainty about the value of <italic>p</italic><sub>2</sub>.</p>
            </caption>
            <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030129.g008" xlink:type="simple"/>
          </fig>
          <p>The Bayesian approach of calculating marginal likelihood does not involve making a point estimate of the parameter; instead, the posterior distribution is averaged over in order to fully take into account the uncertainty in the data.</p>
        </sec>
      </sec>
    </sec>
    <sec id="s4">
      <title>Structure Learning</title>
      <p>Particularly in the domain of biology, the inference of network structures is the most interesting aspect; for example, the elucidation of regulatory and signalling networks from data. This involves identifying real dependencies between measured variables; distinguishing them from simple correlations. The learning of model structures, and particularly causal models, is difficult, and often requires careful experimental design, but can lead to the learning of unknown relationships and excellent predictive models.</p>
      <sec id="s4a">
        <title/>
        <sec id="s4a1">
          <title>Full Bayesian posterior.</title>
          <p>So far, only the learning of parameters of a BN of known structure has been considered. Sometimes the structure of the network may be unknown and this may also be learned from data. The equation describing the marginal likelihood over structure hypotheses <italic>S<sup>h</sup></italic> as well as model parameters is an extension of <xref ref-type="disp-formula" rid="pcbi-0030129-e006">Equation 7</xref>; the predictive distribution is:
						<disp-formula id="pcbi-0030129-e008"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030129.e008" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&sum;</mml:mo><mml:mrow><mml:msup><mml:mi>S</mml:mi><mml:mi>h</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msup><mml:mi>S</mml:mi><mml:mi>h</mml:mi></mml:msup><mml:mo>|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mtext>x</mml:mtext><mml:mo>|</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi>S</mml:mi><mml:mi>h</mml:mi></mml:msup><mml:mo stretchy='false'>)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>S</mml:mi><mml:mi>h</mml:mi></mml:msup><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:msub><mml:mi>&theta;</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:math> --></disp-formula>
					</p>
          <p>However, the computation of a full posterior distribution over the parameter space and the model structure space is intractable for all practical applications (those with more than a handful of variables).</p>
        </sec>
        <sec id="s4a2">
          <title>Sampling methods.</title>
          <p>Even for a relatively small number of variables, there are an enormous number of possible network structures, and the computation of a full posterior probability distribution is difficult. There are several approaches to this problem, including Markov chain Monte Carlo (MCMC) methods (such as the Metropolis–Hastings algorithm), which are used to obtain a set of “good” sample networks from the posterior distribution <italic>p</italic>(<italic>S<sup>h</sup></italic>,θ<italic><sub>S</sub>|D</italic>), where <italic>S<sup>h</sup></italic> is a possible model structure. This is particularly useful in the bioinformatics domain, where data <italic>D</italic> may be sparse and the posterior distribution <italic>p</italic>(<italic>S<sup>h</sup>,</italic>θ<italic><sub>S</sub>|D</italic>) diffuse, and therefore much better represented as averaged over a set of model structures than through choosing a single model structure.</p>
        </sec>
        <sec id="s4a3">
          <title>Variational methods.</title>
          <p>A faster alternative to MCMC is to use <italic>variational methods</italic> for certain classes of model. By approximating parameters' posterior distributions (which are difficult to sample from) by simpler ones, a lower bound on the marginal likelihood can be found which can then be used for model selection.</p>
        </sec>
        <sec id="s4a4">
          <title>Structure learning algorithms.</title>
          <p>The two key components of a structure learning algorithm are <italic>searching</italic> for “good” structures and <italic>scoring</italic> these structures. Since the number of model structures is large (super-exponential), a search method is needed to decide which structures to score. Even with few nodes, there are too many possible networks to exhaustively score each one. Efficient structure learning algorithm design is an active research area. A <italic>greedy search</italic> may be done by starting with an initial network (possibly with no (or full) connectivity) and iteratively adding, deleting, or reversing an edge, measuring the accuracy of the resulting network at each stage, until a local maxima is found. Alternatively, a method such as simulated annealing should guide the search to the global maximum.</p>
          <p>There are two common approaches used to decide on a “good” structure. The first is to test whether the conditional independence assertions implied by the structure of the network are satisfied by the data. The second approach is to assess the degree to which the resulting structure explains the data (as described for learning the parameters of the network). This is done using a <italic>score function</italic>. Ideally, the full posterior distribution of the parameters for the model structure is computed (<italic>marginal likelihood</italic>); however, approximations such as the <named-content content-type="genus-species" xlink:type="simple">Laplace approximation</named-content> or the <italic>Bayesian Information Criterion</italic> (BIC) score functions are often used, as they are more efficient (though approximate, and therefore less accurate). The BIC score approximates ln <italic>p</italic>(<italic>D|S<sup>h</sup></italic>) as <inline-formula id="pcbi-0030129-ex004"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030129.ex004" xlink:type="simple"/></inline-formula>
						, where <inline-formula id="pcbi-0030129-ex005"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030129.ex005" xlink:type="simple"/></inline-formula>
						 is an estimate of the model parameters for the structure, <italic>d</italic> is the number of model parameters, and <italic>N</italic> is the size of the dataset. For large <italic>N</italic>, the learned model often has parameters like θ<sub>ML</sub>. The BIC score has a measure of how well the model fits the data, and a penalty term to penalise model complexity. This is an example of <italic>Occam's Razor</italic> in action; preferring the simplest of equally good models. ML is not used as a score function here, as without a penalty function it would produce a completely connected network, implying no simplification of the factors.
					</p>
          <p>In the case of gene regulatory networks, these structure learning algorithms may be used to identify the most probable structure to give an influence diagram for a gene regulatory network learned from data. Imoto et al. [<xref ref-type="bibr" rid="pcbi-0030129-b010">10</xref>] derive gene networks based on BNs from microarray gene expression data, and use biological knowledge such as protein–protein interaction data, binding site information, and existing literature to effectively limit the number of structures considered to be the most biologically relevant. The fitness of each model to the microarray data is first measured using marginal likelihood, then biological knowledge is input in the form of a prior probability for structures. The posterior probability for the proposed gene network is then simply the product of the marginal likelihood of the parameters and the prior probability of the structure.</p>
        </sec>
        <sec id="s4a5">
          <title>Causality.</title>
          <p>Often the really interesting problems involve the learning of causal relationships [<xref ref-type="bibr" rid="pcbi-0030129-b011">11</xref>], such as protein signalling networks [<xref ref-type="bibr" rid="pcbi-0030129-b002">2</xref>] and gene regulatory interactions. In order to discover the underlying causal model, more than just structure learning is needed, because the available data may be insufficient to distinguish different network structures that imply the same conditional independences (Markov equivalence) and have the same score. One way to determine the directionality of the causal relations is to use intervention data, where the value of one variable is held fixed. Consider two correlated variables, X and Y, subjected to interventions (these may be expression levels of two genes, and interventions are gene knockouts). If inhibiting X leads to a limited range of observed values of Y, whereas inhibiting Y leads to a full range of X values, then it can be determined that X influences Y, but Y doesn't influence X. This implies there is a causal relationship X → Y.</p>
          <p>Sachs et al. [<xref ref-type="bibr" rid="pcbi-0030129-b002">2</xref>] model a protein signalling network from flow cytometry data. Simultaneous observations of multiple signalling molecules in many thousands of cells in the presence of stimulatory cues and inhibitory interventions (perturbations) and careful experimental design allow for identifying causal networks, which are potentially useful for understanding complex drug actions and dysfunctional signalling in diseased cells.</p>
        </sec>
        <sec id="s4a6">
          <title>Dynamic Bayesian networks.</title>
          <p>An essential feature of many biological systems is feedback. BNs are perfectly suited to modelling time series and feedback loops. When BNs are used to model time series and feedback loops, the variables are indexed by time and replicated in the BN—such networks are known as <italic>dynamic Bayesian networks</italic> (DBNs) [<xref ref-type="bibr" rid="pcbi-0030129-b012">12</xref>] and include as special cases hidden Markov models (HMMs) and linear dynamical systems. The creation of experimental time series measurements is particularly important for modelling biological networks.</p>
          <p>As an example, if in the earlier gene regulatory network example, gene G5 regulated G1, then a feedback loop (cyclic graph) would be formed. In order to perform efficient inference, BNs require a DAG to define joint probabilities in terms of the product of conditional probabilities. For probabilistic graphical models with loops, as described, either iterative methods such as loopy belief propagation must be used, or the cyclic graph must be transformed into a DAG. Assuming a (first-order) Markov process governs gene regulation, the network may be rolled out in time, to create a DBN. Generally, DBNs contain two time slices, with an instance of each variable in each time slice (<italic>t</italic> and <italic>t +</italic> Δ<italic>t</italic>). Directed edges are added from nodes at time <italic>t</italic> to the nodes they influence at <italic>t +</italic> Δ<italic>t</italic>. HMMs are a special case of DBNs, where there is a hidden set of nodes (normally discrete states), a set of observed variables, and the slices need not be time; often HMMs are used for sequence analysis and <italic>t</italic> is the transition from one base to the next. DBNs have been used for inferring genetic regulatory interactions from microarray data. Data from a few dozen time points during a cell cycle is a very small amount of data on which to train a DBN. Husmeier has recently used MCMC on simulated data of microarray experiments in order to access the network inference performance with different training set size, priors, and sampling strategies [<xref ref-type="bibr" rid="pcbi-0030129-b013">13</xref>]. Variational Bayesian methods have been used to approximate the marginal likelihood for gene regulatory network model selection with hidden factors from gene expression time series data. The hidden factors capture the effects that cannot be directly measured, such as genes missing from the microarray, the levels of regulatory proteins present, and the effects of mRNA, etc. [<xref ref-type="bibr" rid="pcbi-0030129-b014">14</xref>].</p>
        </sec>
      </sec>
    </sec>
    <sec id="s5">
      <title>Conclusion</title>
      <p>Many applications in computational biology have taken advantage of BNs or, more generally, probabilistic graphical models. These include: protein modelling, systems biology; gene expression analysis, biological data integration; protein–protein interaction and functional annotation; DNA sequence analysis; and genetics and phylogeny linkage analysis. However, perhaps the most interesting application of BNs in the biological domain has been the modelling of networks and pathways. These analyses combine all the features of BNs: the ability to learn from incomplete noisy data, the ability to combine both expert knowledge and data to derive a suitable network structure, and the ability to express causal relationships. Recent application of DBNs has allowed more sophisticated relationships to be modeled; for example, systems which incorporate feedback. Furthermore, the marriage of improved experimental design with new data acquisition techniques promises to be a very powerful approach in which causal relations of complex interactions may be elucidated.</p>
    </sec>
    <sec id="s6">
      <title>Additional Reading</title>
      <p>Heckerman has written an excellent mathematical tutorial on learning with BNs [<xref ref-type="bibr" rid="pcbi-0030129-b009">9</xref>], whose notation has been adopted here. This is the suggested text to consult for statistical details and discussion of the concepts introduced in this primer. Murphy's introduction [<xref ref-type="bibr" rid="pcbi-0030129-b015">15</xref>], along with the guide to the software Bayes Net Toolkit for Matlab, BNT [<xref ref-type="bibr" rid="pcbi-0030129-b016">16</xref>], provides an overview of algorithms for learning. Tipping's tutorial [<xref ref-type="bibr" rid="pcbi-0030129-b017">17</xref>] contains good illustrations of marginal likelihood, and Ghahramani's tutorial [<xref ref-type="bibr" rid="pcbi-0030129-b018">18</xref>] contains a clear overview introducing structure learning and approximation methods. Husmeier's bioinformatics text [<xref ref-type="bibr" rid="pcbi-0030129-b013">13</xref>] is also an excellent resource.</p>
    </sec>
  </body>
  <back>
    <glossary>
      <title>Abbreviations</title>
      <def-list>
        <def-item>
          <term>BN</term>
          <def>
            <p>Bayesian network</p>
          </def>
        </def-item>
        <def-item>
          <term>BIC</term>
          <def>
            <p>Bayesian information criterion</p>
          </def>
        </def-item>
        <def-item>
          <term>CPD</term>
          <def>
            <p>conditional probability distribution, CPT, conditional probability table</p>
          </def>
        </def-item>
        <def-item>
          <term>DAG</term>
          <def>
            <p>directed acyclic graph</p>
          </def>
        </def-item>
        <def-item>
          <term>DBN</term>
          <def>
            <p>dynamic Bayesian network</p>
          </def>
        </def-item>
        <def-item>
          <term>EM</term>
          <def>
            <p>expectation–maximisation</p>
          </def>
        </def-item>
        <def-item>
          <term>HMM</term>
          <def>
            <p>hidden Markov model</p>
          </def>
        </def-item>
        <def-item>
          <term>JPD</term>
          <def>
            <p>joint probability distribution</p>
          </def>
        </def-item>
        <def-item>
          <term>MAP;</term>
          <def>
            <p>maximum a posteriori</p>
          </def>
        </def-item>
        <def-item>
          <term>MCMC</term>
          <def>
            <p>Markov chain Monte Carlo</p>
          </def>
        </def-item>
        <def-item>
          <term>ML</term>
          <def>
            <p>maximum likelihood</p>
          </def>
        </def-item>
      </def-list>
    </glossary>
    <ref-list>
      <title>References</title>
      <ref id="pcbi-0030129-b001">
        <label>1</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Friedman</surname><given-names>N</given-names></name></person-group>
					<year>2004</year>
					<article-title>Inferring cellular networks using probabilistic graphical models.</article-title>
					<source>Science</source>
					<volume>303</volume>
					<fpage>799</fpage>
					<lpage>805</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b002">
        <label>2</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sachs</surname><given-names>K</given-names></name><name name-style="western"><surname>Perez</surname><given-names>O</given-names></name><name name-style="western"><surname>Pe'er</surname><given-names>D</given-names></name><name name-style="western"><surname>Lauffenburger</surname><given-names>DA</given-names></name><name name-style="western"><surname>Nolan</surname><given-names>GP</given-names></name></person-group>
					<year>2005</year>
					<article-title>Causal protein-signaling networks derived from multiparameter single-cell data.</article-title>
					<source>Science</source>
					<volume>308</volume>
					<fpage>523</fpage>
					<lpage>529</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b003">
        <label>3</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Troyanskaya</surname><given-names>OG</given-names></name><name name-style="western"><surname>Dolinski</surname><given-names>K</given-names></name><name name-style="western"><surname>Owen</surname><given-names>AB</given-names></name><name name-style="western"><surname>Altman</surname><given-names>RB</given-names></name><name name-style="western"><surname>Botstein</surname><given-names>D</given-names></name></person-group>
					<year>2003</year>
					<article-title>A Bayesian framework for combining heterogeneous data sources for gene function prediction (in <italic>Saccharomyces Cerevisiae</italic>).</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>100</volume>
					<fpage>8348</fpage>
					<lpage>8353</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b004">
        <label>4</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bradford</surname><given-names>JR</given-names></name><name name-style="western"><surname>Needham</surname><given-names>CJ</given-names></name><name name-style="western"><surname>Bulpitt</surname><given-names>AJ</given-names></name><name name-style="western"><surname>Westhead</surname><given-names>DR</given-names></name></person-group>
					<year>2006</year>
					<article-title>Insights into protein–protein interfaces using a Bayesian network prediction method.</article-title>
					<source>J Mol Biol</source>
					<volume>362</volume>
					<fpage>365</fpage>
					<lpage>386</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b005">
        <label>5</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Beaumont</surname><given-names>MA</given-names></name><name name-style="western"><surname>Rannala</surname><given-names>B</given-names></name></person-group>
					<year>2004</year>
					<article-title>The Bayesian revolution in genetics.</article-title>
					<source>Nat Rev Genet</source>
					<volume>5</volume>
					<fpage>251</fpage>
					<lpage>261</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b006">
        <label>6</label>
        <element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Duda</surname><given-names>RO</given-names></name><name name-style="western"><surname>Hart</surname><given-names>PE</given-names></name><name name-style="western"><surname>Stork</surname><given-names>DG</given-names></name></person-group>
					<year>2000</year>
					<source>Pattern classification</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>Wiley-Interscience</publisher-name>
					<!--===== Restructure page-count as size[@units="page"] =====--><size units="page">654</size>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b007">
        <label>7</label>
        <element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bishop</surname><given-names>CM</given-names></name></person-group>
					<year>2006</year>
					<source>Pattern recognition and machine learning</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>Springer</publisher-name>
					<!--===== Restructure page-count as size[@units="page"] =====--><size units="page">738</size>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b008">
        <label>8</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Eddy</surname><given-names>SR</given-names></name></person-group>
					<year>2004</year>
					<article-title>What is Bayesian statistics?</article-title>
					<source>Nat Biotechnol</source>
					<volume>22</volume>
					<fpage>1177</fpage>
					<lpage>1178</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b009">
        <label>9</label>
        <element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Heckerman</surname><given-names>D</given-names></name></person-group>
					<year>1998</year>
					<article-title>A tutorial on learning with Bayesian networks.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Jordan</surname><given-names>MI</given-names></name></person-group>
					<source>Learning in graphical models</source>
					<publisher-loc>Dordrecht</publisher-loc>
					<publisher-name>Kluwer Academic</publisher-name>
					<fpage>301</fpage>
					<lpage>354</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b010">
        <label>10</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Imoto</surname><given-names>S</given-names></name><name name-style="western"><surname>Higuchi</surname><given-names>T</given-names></name><name name-style="western"><surname>Goto</surname><given-names>H</given-names></name><name name-style="western"><surname>Tashiro</surname><given-names>K</given-names></name><name name-style="western"><surname>Kuhara</surname><given-names>S</given-names></name><etal/></person-group>
					<year>2003</year>
					<article-title>Combining microarrays and biological knowledge for estimating gene networks via Bayesian networks.</article-title>
					<source>IEEE Computa Syst Bioinformatics (CSB'03)</source>
					<volume>2</volume>
					<fpage>104</fpage>
					<lpage>113</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b011">
        <label>11</label>
        <element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Pearl</surname><given-names>J</given-names></name></person-group>
					<year>2000</year>
					<source>Causality: Models, reasoning and inference</source>
					<publisher-loc>Cambridge (United Kingdom)</publisher-loc>
					<publisher-name>Cambridge University Press</publisher-name>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b012">
        <label>12</label>
        <element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Murphy</surname><given-names>KP</given-names></name><name name-style="western"><surname>Mian</surname><given-names>S</given-names></name></person-group>
					<year>1999</year>
					<source>Modelling gene expression data using dynamic Bayesian networks</source>
					<publisher-loc>Berkeley</publisher-loc>
					<comment>Technical report,</comment>
					<publisher-name>Department of Computer Science, University of California</publisher-name>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b013">
        <label>13</label>
        <element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="editor"><name name-style="western"><surname>Husmeier</surname><given-names>D</given-names></name><name name-style="western"><surname>Dybowski</surname><given-names>R</given-names></name><name name-style="western"><surname>Roberts</surname><given-names>S</given-names></name></person-group>
					<year>2005</year>
					<source>Probabilistic modeling in bioinformatics and medical informatics</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>Springer</publisher-name>
					<!--===== Restructure page-count as size[@units="page"] =====--><size units="page">504</size>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b014">
        <label>14</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Beal</surname><given-names>MJ</given-names></name><name name-style="western"><surname>Falciani</surname><given-names>F</given-names></name><name name-style="western"><surname>Ghahramani</surname><given-names>Z</given-names></name><name name-style="western"><surname>Rangel</surname><given-names>C</given-names></name><name name-style="western"><surname>Wild</surname><given-names>DL</given-names></name></person-group>
					<year>2005</year>
					<article-title>A Bayesian approach to reconstructing genetic regulatory networks with hidden factors.</article-title>
					<source>Bioinformatics</source>
					<volume>21</volume>
					<fpage>349</fpage>
					<lpage>356</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b015">
        <label>15</label>
        <element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Murphy</surname><given-names>KP</given-names></name></person-group>
					<source>A brief introduction to graphical models and Bayesian networks</source>
					<comment>Available: <ext-link ext-link-type="uri" xlink:href="http://www.cs.ubc.ca/~murphyk/Bayes/bnintro.html" xlink:type="simple">http://www.cs.ubc.ca/∼murphyk/Bayes/bnintro.html</ext-link>. Accessed 7 June 2007.</comment>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b016">
        <label>16</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Murphy</surname><given-names>KP</given-names></name></person-group>
					<year>2001</year>
					<article-title>The Bayes Net toolbox for Matlab.</article-title>
					<source>Comput Sci Stat</source>
					<volume>33</volume>
					<fpage>331</fpage>
					<lpage>350</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b017">
        <label>17</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Tipping</surname><given-names>ME</given-names></name></person-group>
					<year>2004</year>
					<article-title>Bayesian inference: An introduction to principles and practice in machine learning.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Bousquet</surname><given-names>O</given-names></name><name name-style="western"><surname>von Luxburg</surname><given-names>U</given-names></name><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name></person-group>
					<source>Machine Learning 2003, LNAI</source>
					<volume>3176</volume>
					<fpage>41</fpage>
					<lpage>62</lpage>
				</element-citation>
      </ref>
      <ref id="pcbi-0030129-b018">
        <label>18</label>
        <element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Ghahramani</surname><given-names>Z</given-names></name></person-group>
					<year>2004</year>
					<article-title>Unsupervised learning.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Bousquet</surname><given-names>O</given-names></name><name name-style="western"><surname>von Luxburg</surname><given-names>U</given-names></name><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name></person-group>
					<source>Machine Learning 2003, LNAI</source>
					<volume>3176</volume>
					<fpage>72</fpage>
					<lpage>112</lpage>
				</element-citation>
      </ref>
    </ref-list>
    
  </back>
</article>