<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id><journal-title-group>
<journal-title>PLoS Computational Biology</journal-title></journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-13-01323</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1003378</article-id>
<article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories>
<title-group>
<article-title>Enumeration of Smallest Intervention Strategies in Genome-Scale Metabolic Networks</article-title>
<alt-title alt-title-type="running-head">Enumeration of Metabolic Intervention Strategies</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>von Kamp</surname><given-names>Axel</given-names></name><xref ref-type="aff" rid="aff1"/></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>Steffen</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group>
<aff id="aff1"><addr-line>Max Planck Institute for Dynamics of Complex Technical Systems, Magdeburg, Germany</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Maranas</surname><given-names>Costas D.</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group>
<aff id="edit1"><addr-line>The Pennsylvania State University, United States of America</addr-line></aff>
<author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">klamt@mpi-magdeburg.mpg.de</email></corresp>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn>
<fn fn-type="con"><p>Analyzed the data: AVK SK. Wrote the paper: AVK SK. Designed the study: SK. Implementation: AVK.</p></fn>
</author-notes>
<pub-date pub-type="collection"><month>1</month><year>2014</year></pub-date>
<pub-date pub-type="epub"><day>2</day><month>1</month><year>2014</year></pub-date>
<volume>10</volume>
<issue>1</issue>
<elocation-id>e1003378</elocation-id>
<history>
<date date-type="received"><day>25</day><month>7</month><year>2013</year></date>
<date date-type="accepted"><day>18</day><month>10</month><year>2013</year></date>
</history>
<permissions>
<copyright-year>2014</copyright-year>
<copyright-holder>von Kamp, Klamt</copyright-holder><license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple"><license-p>This is an open-access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions>
<abstract>
<p>One ultimate goal of metabolic network modeling is the rational redesign of biochemical networks to optimize the production of certain compounds by cellular systems. Although several constraint-based optimization techniques have been developed for this purpose, methods for systematic enumeration of intervention strategies in genome-scale metabolic networks are still lacking. In principle, Minimal Cut Sets (MCSs; inclusion-minimal combinations of reaction or gene deletions that lead to the fulfilment of a given intervention goal) provide an exhaustive enumeration approach. However, their disadvantage is the combinatorial explosion in larger networks and the requirement to compute first the elementary modes (EMs) which itself is impractical in genome-scale networks.</p>
<p>We present MCSEnumerator, a new method for effective enumeration of the smallest MCSs (with fewest interventions) in genome-scale metabolic network models. For this we combine two approaches, namely (i) the mapping of MCSs to EMs in a dual network, and (ii) a modified algorithm by which shortest EMs can be effectively determined in large networks. In this way, we can identify the smallest MCSs by calculating the shortest EMs in the dual network. Realistic application examples demonstrate that our algorithm is able to list thousands of the most efficient intervention strategies in genome-scale networks for various intervention problems. For instance, for the first time we could enumerate all synthetic lethals in <italic>E.coli</italic> with combinations of up to 5 reactions. We also applied the new algorithm exemplarily to compute strain designs for growth-coupled synthesis of different products (ethanol, fumarate, serine) by <italic>E.coli</italic>. We found numerous new engineering strategies partially requiring less knockouts and guaranteeing higher product yields (even without the assumption of optimal growth) than reported previously. The strength of the presented approach is that smallest intervention strategies can be quickly calculated and screened with neither network size nor the number of required interventions posing major challenges.</p>
</abstract>
<abstract abstract-type="summary"><title>Author Summary</title>
<p>Mathematical modeling has become an essential tool for investigating metabolic networks. One ultimate goal of metabolic network modeling is the rational redesign of biochemical networks to optimize the production of certain compounds by cellular systems. Accordingly, several optimization techniques have been proposed for this purpose. However, for large-scale networks, an effective method for systematic enumeration of the most efficient intervention strategies is still lacking. Herein we present MCSEnumerator, a new mathematical approach by which thousands of the smallest intervention strategies (with fewest targets) can be readily computed in large-scale metabolic models. Our approach is built upon an extended concept of Minimal Cut Sets, the latter being minimal (irreducible) combinations of reaction (or gene) deletions that will lead to the fulfilment of a given intervention goal. The strength of the presented approach is that smallest intervention strategies can be quickly calculated with neither network size nor the number of required interventions posing major challenges. Realistic application examples with <italic>E.coli</italic> demonstrate that our algorithm is able to list thousands of the most efficient intervention strategies in genome-scale networks for various intervention problems.</p>
</abstract>
<funding-group><funding-statement>We thank the German Federal Ministry of Education and Research (ERASysBio+ and Biotechnologie 2020+) and the Ministry of Education and Research of Saxony-Anhalt (Research Center “Dynamic Systems: Biosystems Engineering”) for financial support. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="13"/></counts></article-meta>
</front>
<body><sec id="s1">
<title/>
<p>This is a <italic>PLOS Computational Biology</italic> Methods article.</p>
</sec><sec id="s2">
<title>Introduction</title>
<p>Stoichiometric and constraint-based modeling techniques such as flux balance analysis or elementary modes analysis have become standard tools for the mathematical and computational investigation of metabolic networks <xref ref-type="bibr" rid="pcbi.1003378-Oberhardt1">[1]</xref>–<xref ref-type="bibr" rid="pcbi.1003378-Lewis1">[4]</xref>. Although these methods rely solely on the structure (stoichiometry) of metabolic networks and do not require extensive knowledge on mechanistic details, they enable the extraction of important functional properties of biochemical reaction networks and deliver various testable predictions. The steadily increasing number of reconstructed and examined genome-scale metabolic network models of diverse organisms proves that methods for constraint-based modeling can deal with networks comprising up to several thousands of metabolites and reactions <xref ref-type="bibr" rid="pcbi.1003378-Oberhardt1">[1]</xref>.</p>
<p>Metabolic networks consisting of <italic>m</italic> internal metabolites and <italic>n</italic> reactions can be formalized by an <italic>m×n</italic> stoichiometric matrix <bold>N</bold>. A common assumption of constraint-based methods is that the network is in steady state (i.e., the metabolite concentrations do not change) resulting in a system of homogeneous linear equations<disp-formula id="pcbi.1003378.e001"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e001" xlink:type="simple"/><label>(1)</label></disp-formula>where <bold>r</bold> is the vector of (net) reaction fluxes or reaction rates. In addition, the non-negativity constraints on fluxes through irreversible reactions must be fulfilled:<disp-formula id="pcbi.1003378.e002"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e002" xlink:type="simple"/><label>(2)</label></disp-formula>(<italic>Irrev</italic> comprises the indices of the irreversible reactions). The two constraints (1) and (2) form a convex polyhedral cone (the <italic>flux cone</italic>) in the <italic>n</italic>-dimensional space of the rate vectors <bold>r</bold>. Flux Balance Analysis (FBA; <xref ref-type="bibr" rid="pcbi.1003378-Orth1">[3]</xref>) searches for optimal flux distributions within this cone that maximize a given linear objective function<disp-formula id="pcbi.1003378.e003"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e003" xlink:type="simple"/><label>(3)</label></disp-formula>Typical objective functions are maximization of growth (or biomass yield) or of the yield of a certain product. For FBA, the irreversibility constraint (2) can be refined to general upper and lower boundaries for each reaction rate <italic>r<sub>i</sub></italic>:<disp-formula id="pcbi.1003378.e004"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e004" xlink:type="simple"/><label>(4)</label></disp-formula>Elementary-modes analysis <xref ref-type="bibr" rid="pcbi.1003378-Trinh1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Schuster1">[5]</xref> is another stoichiometric technique facilitating the exploration of the space of feasible steady state flux distributions by means of particular flux vectors <bold>e</bold> fulfilling the basic constraints (1) and (2) and in addition a non-decomposability property. The latter demands that an elementary mode <bold>e</bold> is irreducible (or support-minimal), hence, there is no vector <bold>r</bold>≠<bold>0</bold> obeying (1) and (2) and<disp-formula id="pcbi.1003378.e005"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e005" xlink:type="simple"/><label>(5)</label></disp-formula>Here, P(<bold>r</bold>) and P(<bold>e</bold>) represent the <italic>support</italic> of <bold>r</bold> and <bold>e</bold>, respectively, i.e., they contain the indices of the vector elements being non-zero: P(<bold>t</bold>) = {<italic>i</italic> | <italic>t<sub>i</sub></italic>≠0}. Elementary modes (EMs) represent stoichiometrically balanced metabolic pathways or cycles and several important properties of a metabolic network can be analyzed by its unique set of EMs <xref ref-type="bibr" rid="pcbi.1003378-Trinh1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Schuster1">[5]</xref>. EMs correspond to extreme rays of convex cones and can be computed as such <xref ref-type="bibr" rid="pcbi.1003378-Gagneur1">[6]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Terzer1">[7]</xref>.</p>
<p>One ultimate goal of metabolic network modeling is the targeted manipulation of the network behavior. A typical application is metabolic engineering where one is interested in the optimization of the production of a certain compound by a given host organism. A number of constraint-based optimization techniques have been proposed for this purpose <xref ref-type="bibr" rid="pcbi.1003378-Trinh1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Burgard1">[8]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Tepper1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Hdicke1">[10]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Kim1">[11]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Zomorrodi1">[12]</xref>. FBA can directly be used to determine the optimal (maximal) value for a given optimization problem (e.g., maximal yield of biomass or of a certain chemical when growing on a certain substrate). This approach, however, cannot yet explain which manipulations will eventually drive the cell towards this optimum. A simple approach would be to use flux-variability analysis (FVA, <xref ref-type="bibr" rid="pcbi.1003378-Mahadevan1">[13]</xref>) to analyze how the feasible ranges of stationary fluxes in a metabolic network would change when switching from the wild-type to a desired phenotype. More sophisticated and directed FBA-based optimization routines operate on the principle put forward by the OptKnock approach <xref ref-type="bibr" rid="pcbi.1003378-Burgard1">[8]</xref>. Here, the key idea is to search for interventions that lead to obligatory coupling between the production of biomass and of a desired compound. Mathematically, OptKnock is a bilevel optimization problem where the inner problem defines biomass optimization as the cellular objective and where the outer optimization problem is to search for reaction removals (represented by integer variables) that lead, under consideration of the inner problem, to maximal product formation. The bi-level optimization coupling can be reformulated as a single level mixed integer linear program (MILP). Successful applications (e.g. <xref ref-type="bibr" rid="pcbi.1003378-Fong1">[14]</xref>) and several refined variants of OptKnock (including, for example, RobustKnock <xref ref-type="bibr" rid="pcbi.1003378-Tepper1">[9]</xref> and OptORF <xref ref-type="bibr" rid="pcbi.1003378-Kim1">[11]</xref>) have been published (for a review see <xref ref-type="bibr" rid="pcbi.1003378-Zomorrodi1">[12]</xref>). The advantage of FBA-based approaches is that they can readily be applied to genome-scale networks. However, a potential disadvantage is that they deliver particular solutions only where often multiple alternate solutions exist which might be equally or even more relevant than the found solutions. Some methods have therefore been proposed to enumerate intervention strategies. A brute-force approach would be to test all single, double, triple … reaction knockouts with respect to their impact on the objective function <xref ref-type="bibr" rid="pcbi.1003378-Suthers1">[15]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Nogales1">[16]</xref>. Suthers et al. <xref ref-type="bibr" rid="pcbi.1003378-Suthers1">[15]</xref> used this method to enumerate synthetically lethal reaction sets and found that this search becomes prohibitive in genome-scale networks for interventions with more than two or three reaction knockouts (the upper limit set in <xref ref-type="bibr" rid="pcbi.1003378-Nogales1">[16]</xref> was also three). They designed therefore a more directed search algorithm based on a bi-level optimization method formulated as a mixed integer linear program (MILP) <xref ref-type="bibr" rid="pcbi.1003378-Suthers1">[15]</xref>. However, to the best of our knowledge, enumerated knockout sets in genome-scale networks did not exceed a cardinality of three. This is a serious limitation because complex interventions problems may require 5, 6, 7 or more knockouts, even in medium-scale networks (see <xref ref-type="bibr" rid="pcbi.1003378-Trinh2">[17]</xref> and the examples in the <xref ref-type="sec" rid="s4">Results</xref> section).</p>
<p>The method of Minimal Cut Sets (MCSs) directly addresses the enumeration of metabolic intervention strategies <xref ref-type="bibr" rid="pcbi.1003378-Hdicke1">[10]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Klamt1">[18]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Klamt2">[19]</xref>. MCSs specify minimal sets of reactions whose removal (knockout) will block certain undesired (target) flux distributions. For example, one can compute (i) MCSs that block growth; (ii) MCSs that disable the production of a certain compound; (iii) MCSs that block all flux vectors where a certain compound is produced with a low (including zero) yield. In the context of MCSs, the term “minimal” refers to the property that reaction cuts specified by any proper subset of an MCS are insufficient to ensure the full repression of the undesired behaviour. In this regard, the minimality of MCSs is similar to the minimality or non-decomposability property of elementary modes specified by <xref ref-type="disp-formula" rid="pcbi.1003378.e005">equation (5)</xref>. In fact, there is a dual relationship between MCSs and EMs: the MCSs blocking a certain set of target flux vectors are the <italic>minimal hitting sets</italic> of the set of (target) EMs that generate these behaviors <xref ref-type="bibr" rid="pcbi.1003378-Klamt2">[19]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Haus1">[20]</xref>. By this property, each MCSs must hit (knockout) at least one utilized reaction from each EM. As a consequence, MCSs can be computed as minimal hitting sets (or so-called hypergraph transversals) of the target modes, for instance, by the Berge algorithm (see <xref ref-type="bibr" rid="pcbi.1003378-Haus1">[20]</xref>) or by Binary Linear Programming <xref ref-type="bibr" rid="pcbi.1003378-Jungreuthmayer1">[21]</xref>.</p>
<p>Another approach to compute MCSs, which exploits the inherent dual relationship between EMs and MCSs, was recently presented by Ballerstein et al. <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref>. Briefly, the MCSs of a given metabolic network can be computed as certain EMs of a dual network; the latter being derived by a simple transformation of the (primal) network. This finding makes it possible to calculate MCSs by using optimized algorithms for EM computation <xref ref-type="bibr" rid="pcbi.1003378-Terzer1">[7]</xref>.</p>
<p>However, there are two potential problems related to MCSs. First, when the reactions contained in an MCS are removed, we are sure that the targeted network functions are disabled but other (desired) functions might be blocked as well. For instance, it can occur that an MCS which disables low-yield pathways synthesizing a desired product also blocks growth of the organism making this MCS impractical. To prevent such side effects, the concept of <italic>constrained minimal cut sets</italic> (cMCSs) was introduced by Hädicke and Klamt <xref ref-type="bibr" rid="pcbi.1003378-Hdicke1">[10]</xref> where not only undesired but also desired functionalities (to be preserved) can be specified. When the EMs are available, an adapted Berge algorithm can be used to conveniently compute cMCSs by specifying in addition to the target modes (expressing the unwanted behaviour) a set of desired modes expressing the functionality that must be preserved. A cMCS will hit all target EMs and keep a (user-specified) minimal number of desired EMs. As shown in <xref ref-type="bibr" rid="pcbi.1003378-Hdicke1">[10]</xref>, cMCS provide a very flexible and powerful approach to enumerate intervention strategies; many other techniques such as Minimal Metabolic Functionality <xref ref-type="bibr" rid="pcbi.1003378-Trinh1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Trinh2">[17]</xref>, and the aforementioned OptKnock and RobustKnock may be reformulated as special cMCSs problems. cMCSs are also well-suited to identify knockout combinations leading to coupled growth and product formation.</p>
<p>The second and more serious problem of (c)MCSs is that their full enumeration in large/genome-scale networks becomes prohibitive. The algorithms requiring as inputs the target (and possibly desired) EMs are usually not applicable: despite large progress in algorithmic design <xref ref-type="bibr" rid="pcbi.1003378-Terzer1">[7]</xref> the full set of EMs is often not computable at genome-scale. For the same reason, the dual approach of Ballerstein et al. <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref> cannot be applied either.</p>
<p>On the other hand, for the purpose of applying MCSs in real networks, those with the smallest number of elements are usually the most relevant. Thus, it is worthwhile to consider computing only the (c)MCSs with low cardinality. The effective enumeration of the smallest cut sets is therefore the key goal of the present work.</p>
<p>Usually, the unwanted/desired functionalities to be disabled/kept in a metabolic network can be described by sets of linear equalities and inequalities over the fluxes. For the purpose of computing MCSs, we could therefore use an exhaustive FBA-based scheme by testing all single, double, triple and higher knockout sets whether they are suitable cut sets or not. The formulation of FBA problems would circumvent the problem to enumerate the EMs first. However, as discussed above, this approach becomes problematic if larger knockout sets are required to solve an intervention problem, as it must test a large number of candidate sets with increasing MCS size (the number of candidates grows with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e006" xlink:type="simple"/></inline-formula> where <italic>n</italic> is the number of possible cuts and <italic>k</italic> the size of cut set candidates). Therefore, it is not normally possible to find genome-scale MCSs in reasonable time with more than 4 knockouts using this scheme.</p>
<p>Whereas the direct calculation of smallest MCSs in large-scale networks cannot be properly addressed yet by current methods, a method for computing the smallest (or shortest) EMs in genome-scale networks was recently presented by de Figueiredo et al. <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref>. This algorithm formulates the search for the EMs with fewest elements as a Mixed Integer Linear Programming (MILP) problem and delivers in the <italic>k</italic>-th iteration the <italic>k</italic>-th shortest EM (hence, it starts with shortest EM, delivers then the second shortest and so forth). As shown by the authors, this approach can readily be applied to genome-scale networks to find the first hundred or even thousand shortest EMs involving the fewest number of reactions.</p>
<p>The goal of the present work is to realize a similar approach for computing the <italic>k</italic>-smallest MCSs from a given network structure. We show that this can be achieved in two steps. First, the original network and the actual intervention goal are converted to its dual representation using the approach of Ballerstein et al. <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref>. We then compute the shortest EMs (up to a certain size or number) in the dual network by employing a modified algorithm of de Figueiredo et al. <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref>. As the EMs in the dual network correspond to the MCSs of the primal, the shortest EMs in the dual system will represent the smallest MCSs of the original network.</p>
<p>The paper is organized as follows: we will first briefly review the approach of de Figueiredo et al. for computing <italic>k</italic>-shortest EMs and introduce several modifications improving the performance of this algorithm. In particular, we will make use of certain features of MILP solvers provided for effective enumeration of solutions of a MILP problem.</p>
<p>Thereafter we will describe how the network constraints (including inhomogeneous constraints) and the intervention goal have to be translated into their dual description in which we can then enumerate the shortest EMs to obtain the smallest MCSs in the primal network. We shall also explain how <italic>constrained</italic> MCSs can be computed within this framework. Finally, to demonstrate the power of our new approach we will exemplify its use by computing relevant intervention strategies (of different complexities) in iAF1260, a genome-scale metabolic model for <italic>E.coli</italic> <xref ref-type="bibr" rid="pcbi.1003378-Feist1">[24]</xref>. These benchmarks demonstrate, for example, that our approach enables us to enumerate synthetic lethals of <italic>E.coli</italic> up to size 5 which was not possible before. Moreover, we show that the algorithm facilitates the calculation of thousands of the minimal intervention strategies that lead to growth-coupled synthesis of certain compounds by <italic>E. coli</italic>.</p>
<p>For the sake of simplicity, throughout the manuscript we will deal with reaction cut (or knockout) sets, which must in practice be translated to gene knockout sets to construct the corresponding mutants. This transformation can be easily achieved if the corresponding gene-enzyme-reaction associations are available. The latter could also directly be included in the problem formulations given below to compute gene (instead of reaction) cut sets.</p>
</sec><sec id="s3" sec-type="methods">
<title>Methods</title>
<sec id="s3a">
<title>MILP framework for enumerating shortest elementary modes</title>
<sec id="s3a1">
<title>Representing sets in a MILP problem</title>
<p>Both elementary modes and minimal cut sets can be represented as sets of reactions (sets of active reactions in case of EMs and sets of deleted reactions in case of MCSs). Since we are mainly interested in the composition and size (cardinality) of EMs and MCSs it is important to represent them efficiently in the MILP problem to be formulated. Here we will make use of <italic>indicator variables</italic>, a feature provided by advanced MILP solvers (such as CPLEX – we will refer to this solver throughout the paper but most of the used functionality is also available in other MILP solvers). An indicator is a binary variable that can be thought of as controlling the activity of one or more constraints. Indicators can be part of the objective function and constraints controlled by indicators may in turn influence other indicator variables as well. An important application of these variables that we use here is to indicate whether another variable is equal or greater than zero. More precisely, we use an indicator variable <italic>z<sub>i</sub></italic> to indicate whether a real and non-negative variable <italic>x<sub>i</sub></italic> is greater than zero:<disp-formula id="pcbi.1003378.e007"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e007" xlink:type="simple"/><label>(6)</label></disp-formula>Importantly, in the following we can use <italic>c</italic> = 1 as threshold for a variable to be greater than zero because the solutions (the EMs) to the MILPs set up here are scalable by arbitrary factors due to the unboundedness of the <italic>x<sub>i</sub></italic>. In principle, a different positive value could be chosen for <italic>c</italic> but setting <italic>c</italic> = 1 can be expected to not cause any particular numerical problems.</p>
<p>The functionality of indicator variables is often implemented by a “big M” formulation with integer variables (cf. <xref ref-type="disp-formula" rid="pcbi.1003378.e001">eqs.(1)</xref> and <xref ref-type="disp-formula" rid="pcbi.1003378.e002">(2)</xref> in <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref>), but as this can lead to numerical problems, the use of indicators is now preferred (note that by constraints such as (6) indicator variables are more powerful than simple binary integer variables). For reasons of clarity, we directly use indicator variables in the formulations of MILPs where needed (in CPLEX they are set up through API functions) and leave their integration with the regular MILP constraints to the MILP solver. The use of binary indicator variables <italic>z<sub>i</sub></italic> will turn the linear problems discussed so far into a MILP problem with discrete and continuous variables. In contrast to Figueiredo et al. <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref>, we do not demand that the coefficients in the stoichiometric matrix are integers; in the latter case one would obtain a pure integer linear problem.</p>
</sec><sec id="s3a2">
<title>MILP formulation for computing the shortest EM</title>
<p>We now rephrase the MILP problem presented in <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref> for determining the shortest EM but here with explicit use of indicator variables. In the following, we assume that the network and the stoichiometric matrix <bold>N</bold> contain only irreversible reactions. This is no limitation since reversible reactions can be decomposed into two irreversible ones, one in forward and one in backward direction. Using (6) we now define indicator variables for the reaction rates <italic>r<sub>i</sub></italic>:<disp-formula id="pcbi.1003378.e008"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e008" xlink:type="simple"/><label>(7)</label></disp-formula>(as mentioned above we can safely use <italic>c</italic> = 1). For all reaction pairs (<italic>s,t</italic>), <italic>s,t</italic> ∈ {1,…, <italic>n</italic>} that were derived from the same formerly reversible reaction we demand that only one of both (directions) can be active to avoid spurious cycles:<disp-formula id="pcbi.1003378.e009"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e009" xlink:type="simple"/><label>(8)</label></disp-formula>To exclude the trivial vector <bold>r</bold> = <bold>0</bold>, we demand in addition that an EM must contain at least one active reaction:<disp-formula id="pcbi.1003378.e010"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e010" xlink:type="simple"/><label>(9)</label></disp-formula>The determination of the shortest EM can then be expressed as an optimization problem with the objective function<disp-formula id="pcbi.1003378.e011"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e011" xlink:type="simple"/><label>(10)</label></disp-formula>subject to the linear constraints (1), (2) and the integer constraints (7)–(9). A solution to the system above assigns values to the vectors <bold>r</bold> and <bold>z</bold> so that all constraints are fulfilled and the value of the objective function is minimized. The vectors <bold>r</bold> and <bold>z</bold> contain the shortest EM in vector and set representation, respectively. Note that this MILP does not yet contain constraints enforcing the elementarity of the solution. However, due to the non-decomposability property of EMs all solutions minimizing (10) must be EMs and, moreover, they are the shortest EMs as they involve a minimal number of reactions.</p>
</sec><sec id="s3a3">
<title>Standard MILP formulation for enumerating shortest EMs</title>
<p>The actual enumeration of the <italic>k</italic>-shortest EMs as implemented by de Figueiredo et al. <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref> starts with the shortest EM and iteratively yields new EMs of increasing size. Because typically many EMs of the same size exist all EMs of a given size are returned before larger ones are found. As an essential step, EMs found in previous iterations need to be excluded by proper constraints on the <italic>z<sub>i</sub></italic> (see below). The pseudo-code for enumerating the <italic>k</italic> shortest EMs thus reads:</p>
<disp-quote>
<p><bold>ALGO1: k-shortest EMs via de Figueiredo et al. <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref></bold></p>
<p><italic>ems = {};</italic></p>
<p><italic>k = 0;</italic></p>
<p><italic>WHILE k &lt; MaxNumEM</italic></p>
    <p>   <italic>k++;</italic></p>
    <p>   <italic>newem = solveMILP( ); /* calculate one optimal solution</italic></p>
    <p><italic>(k-shortest EM) of the MILP */</italic></p>
    <p>   <italic>ems = ems ⋃ {newem};</italic></p>
    <p>   <italic>add_exclusion_constraint(newem);</italic></p>
<p><italic>ENDWHILE</italic></p>
</disp-quote>
<p>The last step in the loop remains to be explained, the addition of exclusion constraints to the MILP which make sure that duplicates or supersets of already identified EMs will not be returned as solutions by subsequent <italic>solveMILP()</italic> calls. An exclusion constraint takes the following form (cf. <xref ref-type="disp-formula" rid="pcbi.1003378.e008">eq. (7)</xref> in <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref>): Let <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e012" xlink:type="simple"/></inline-formula>∈{0,1} be the value of <italic>z<sub>i</sub></italic> in the MILP solution for the EM <italic>newem</italic>. The constraint added for this EM reads:<disp-formula id="pcbi.1003378.e013"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e013" xlink:type="simple"/><label>(11)</label></disp-formula>This constraint (also known as integer cut) makes sure that solutions found by the next optimizations cannot contain the complete set of reactions used in the current EM thus excluding also supersets of the current EM from the solution space. Similar constraints have frequently been used also in other metabolic network studies when searching for multiple solutions of a given optimization problem (see, e.g., <xref ref-type="bibr" rid="pcbi.1003378-Suthers1">[15]</xref>). Once an exclusion constraint has been added to the system it has to be kept for all further iterations. Consequently, the number of constraints in the MILP continuously increases.</p>
</sec><sec id="s3a4">
<title>Enumeration of EMs with fixed size</title>
<p>In this subsection, we propose a modified scheme for enumeration of shortest EMs. We first introduce an additional size control constraint<disp-formula id="pcbi.1003378.e014"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e014" xlink:type="simple"/><label>(12)</label></disp-formula>(with <italic>sz_lb, sz_ub</italic> ∈ℕ<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e015" xlink:type="simple"/></inline-formula>) specifying how many elements an EM may contain.</p>
<p>We restate that the exclusion constraints (11) are needed to prevent supersets of known EMs from being erroneously identified as EMs. If all EMs up to size <italic>d</italic> are known and exclusion constraints for them have been added, then the next solution will be an elementary set of size <italic>s</italic>&gt;<italic>d</italic> (unless all sets have already been found in which case the MILP will be infeasible). We can therefore fix the size control constraint to <italic>s</italic> (<italic>sz_lb</italic> = <italic>sz_ub</italic> = <italic>s</italic>; normally starting with <italic>s = d+1</italic>) so that only EMs of exactly this size are calculated. As long as solutions of size <italic>s</italic> are enumerated, exclusion constraints for the solutions would only be required to prevent the same solution from being found again because supersets of these solutions are already excluded by the size control constraint. This opens up the possibility to use the MILP without adding exclusion constraints at all while generating the solutions of a fixed size <italic>s</italic> by using the warm start feature of advanced MILP solvers. With this feature, the preprocessing will not be reiterated when computing the EMs of size <italic>s</italic> and the search tree generated during the previous search for a solution can be reused for finding the next solution. This improves the efficiency of the whole procedure and by continuing with the same search tree it is also made sure that the same solution is not returned twice. In CPLEX, this feature is provided by a function <italic>populate</italic> allowing the enumeration of all possible solutions to a MILP problem. Also, when searching for EMs of a fixed size only, the problem does not require an optimization over the sum of the <italic>z<sub>i</sub></italic> any more (since the latter is fixed as a constraint) and becomes thus merely a search for a feasible solution which is potentially easier to solve.</p>
<p>Importantly, when all EMs of size <italic>s</italic> have been, enumerated exclusion constraints for the found EMs must be added as usual before continuing with <italic>s+1</italic> (to avoid that supersets of EMs of size <italic>s</italic> will be found in subsequent iterations). However, the advantage of this approach remains because exclusion constraints need not be added when processing all EMs with cardinality <italic>s</italic>. We summarize the basic scheme as follows:</p>
<disp-quote>
<p><bold>ALGO2: k-shortest EMs via fixed size</bold></p>
<p><italic>newem = solveMILP( ); /* calculate first optimal solution of the</italic></p>
    <p>             <italic>MILP (the shortest EM) */</italic></p>
<p><italic>s = objective_value(newem); /* s: current lower boundary of EM</italic></p>
    <p>              <italic>size */</italic></p>
<p><italic>ems = {newem};</italic></p>
<p><italic>remove_objective_function( ); /* remove the minimization over the z<sub>i</sub> */</italic></p>
<p><italic>WHILE s&lt; = maxEMsize</italic></p>
<p> <italic>setConstraint(EMsize = s); /* fixed size of EM */</italic></p>
<p> <italic>newems = populateMILP( ); /* enumerate all feasible EMs</italic></p>
    <p>                <italic>with size s */</italic></p>
<p> <italic>ems = ems ∪ newems;</italic></p>
<p> <italic>add_exclusion_constraints(newems);</italic></p>
<p> <italic>s++;</italic></p>
<p><italic>ENDWHILE</italic></p>
</disp-quote>
<p>The search that is conducted during a <italic>populateMILP</italic> call can usually be halted (e.g., by a time limit) and continued so that the solutions found so far can be accessed before the search is finished. This means that even if for a given set size more solutions than can be practically calculated exist it is still possible to use this scheme to get at least a partial result.</p>
</sec></sec><sec id="s3b">
<title>Enumeration of smallest MCSs by enumeration of shortest EMs in the dual network</title>
<p>We present now the key methodological development of this work showing that the basic algorithm for enumerating shortest EMs introduced in the previous section can also be used to compute smallest MCSs. The procedure is based on the duality properties of EMs and MCSs presented by Ballerstein et al. <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref> which we outline in the following. A necessary first step to establish the scheme is to describe the undesired network functionality (the “target flux vectors” <bold>r</bold> to be disabled by the MCSs) by a suitable inequality constraint<disp-formula id="pcbi.1003378.e016"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e016" xlink:type="simple"/><label>(13)</label></disp-formula>where <bold>t</bold> is a (<italic>n</italic>×1) vector. Usually, <bold>t</bold> corresponds to a single row with zeros except a single 1 for a target reaction (rate) whose operation is to be blocked (e.g. biomass formation if we searched for synthetic lethals). Setting in addition <italic>b</italic> to 1 we would target all flux vectors in which the rate of the target reaction is non-zero (in our context we can again set <italic>b</italic> to an arbitrary value greater than zero without loss of generality).</p>
<p>Constraint (13) specifying the target flux vectors can be generalized to:<disp-formula id="pcbi.1003378.e017"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e017" xlink:type="simple"/><label>(14)</label></disp-formula>Here, matrix <bold>T</bold> (of size <italic>t</italic>×<italic>r</italic>) together with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e018" xlink:type="simple"/></inline-formula>poses <italic>t</italic> inhomogeneous inequality constraints defining the <italic>target flux polyhedron</italic> (which may be bounded becoming then a polytope). It must be made sure that the zero flux vector is not contained in the target flux polyhedron as it can not be blocked by reaction knockouts. A nice feature of (14) is that we may directly include inhomogeneous constraints to characterize target flux vectors (with maintenance ATP demand as a typical example).</p>
<p>In addition to (14) and to the standard network constraints (1) and (2), Ballerstein et al. augmented the system by equality constraints setting all reaction rates to zero<disp-formula id="pcbi.1003378.e019"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e019" xlink:type="simple"/><label>(15)</label></disp-formula>(<bold>I</bold> is the (<italic>n</italic>×<italic>n</italic>) identity matrix). These constraints ensure that the system becomes infeasible as the zero flux vector implied by (15) contradicts (14). Note that (15) can be seen as the maximal (trivial) cut set knocking out every reaction in the network. In fact, the MCSs correspond to minimal subsets of the homogeneous equations in (15) which ensure (induce) inconsistency of the inequality system posed by constraints (1), (2), (14) and (15). Minimal subsets of constraints that induce inconsistency of an inequality system are also known as <italic>irreducible inconsistent subsets</italic> (IISs; <xref ref-type="bibr" rid="pcbi.1003378-Gleeson1">[25]</xref>). Generally, IISs can be calculated as follows: using the Farkas Lemma, the infeasible primal system is converted to its dual system which is ensured to be consistent. It can be shown that the IISs of the primal system correspond to extreme rays (and thus EMs) in the dual system which makes it possible to calculate them using methods from EM computation. Since IISs in our particular case may, in general, also contain constraints from (1) or (2), a modified algorithm was introduced in <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref> to ensure that only those IISs ( = EMs in the dual system) are computed which are minimal with respect to the constraints in (15) and correspond thus to the MCSs.</p>
<p>We thus need to transform the primal system defined by (1), (2), (14), (15) into its dual which can be written as follows (cf. <xref ref-type="disp-formula" rid="pcbi.1003378.e009">equation (8)</xref> in <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref>; <bold>N</bold><italic><sub>dual</sub></italic> is the “dual stoichiometric matrix” and <bold>r</bold><italic><sub>dual</sub></italic> the dual “rate” vector):<disp-formula id="pcbi.1003378.e020"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e020" xlink:type="simple"/><label>(16)</label></disp-formula>The (sub-)matrix <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e021" xlink:type="simple"/></inline-formula> contains the identity matrix for irreversible reactions of the primal system and is filled with <italic>n</italic>-|<italic>Irrev</italic>| zero rows at the position of reversible reactions (note that reversible reactions of the primal system need not to be split before dualizing the system; however, reversible reactions affected by (14) must sometimes be split to properly describe the target flux polyhedron). As described above, the MCSs in the primal correspond to particular EMs of the dual system (16) which have minimal support in the <bold>v</bold> variables. The dual variables <italic>v<sub>i</sub></italic>, <italic>i</italic>∈{1 … <italic>n</italic>} are thus of particular importance as their values indicate which reactions participate in an MCS. Concretely, if <italic>v<sub>i</sub></italic>≠0 then reaction <italic>i</italic> is part of the MCS (irrespective of the sign of <italic>v<sub>i</sub></italic>), if <italic>v<sub>i</sub></italic> = 0 then it is not. Therefore, similar as we did for reversible reactions when computing shortest EMs, both positive <italic>and</italic> negative values of <italic>v<sub>i</sub></italic> must be checked with indicators and in order to facilitate this each <italic>v<sub>i</sub></italic> is split into two variables, <italic>vp<sub>i</sub></italic> and <italic>vn<sub>i</sub></italic>, both with the lower bound 0. Furthermore, since <bold>h</bold>≥<bold>0</bold> and because the MILP can directly operate on inequalities, we can rewrite (16) to:<disp-formula id="pcbi.1003378.e022"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e022" xlink:type="simple"/><label>(17)</label></disp-formula>(the sub-matrices with subscript <italic>i</italic> refer to the part of the irreversible reactions and subscript <italic>r</italic> to the part of the reversible reactions of the primal system). As mentioned above, for the <italic>vp<sub>i</sub></italic> and <italic>vn<sub>i</sub></italic> we introduce the associated indicators <italic>zp<sub>i</sub></italic> and <italic>zn<sub>i</sub></italic>, and (in equivalence to (8)) the constraints<disp-formula id="pcbi.1003378.e023"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e023" xlink:type="simple"/><label>(18)</label></disp-formula>stating that <italic>vp<sub>i</sub></italic> and <italic>vn<sub>i</sub></italic> cannot be active simultaneously. The constant <italic>c</italic> in (17) can again be set to any positive value (e.g., to 1); this will not change the set of minimal non-zero combinations of <italic>vp<sub>i</sub></italic> and <italic>vn<sub>i</sub></italic> fulfilling (17) which are relevant for the optimization problem formulated below (<xref ref-type="disp-formula" rid="pcbi.1003378.e024">eq. (19)</xref>).</p>
<p>After dualization, we can now compute the smallest MCSs of the primal system by applying algorithm ALGO2 in the dual system. As constraints we need to consider (17) (replacing (1) and (2) from the primal system) as well as (18) and as objective function we exchange (10) with<disp-formula id="pcbi.1003378.e024"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e024" xlink:type="simple"/><label>(19)</label></disp-formula>Furthermore, because the presence of one reaction in a concrete solution is now indicated by two <italic>separate</italic> variables, the exclusion constraints (11) must be adapted accordingly to (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e025" xlink:type="simple"/></inline-formula> <italic>and</italic> <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e026" xlink:type="simple"/></inline-formula> are the values of a given concrete solution and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e027" xlink:type="simple"/></inline-formula> is a shortcut for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e028" xlink:type="simple"/></inline-formula><italic>+</italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e029" xlink:type="simple"/></inline-formula>):<disp-formula id="pcbi.1003378.e030"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e030" xlink:type="simple"/><label>(20)</label></disp-formula>In this way both positive and negative values of the original <italic>v<sub>i</sub></italic> are counted in the same way towards reaction participation in the MCS. Finally, for the same reason, the size control constraint (12) sums here over <italic>zp<sub>i</sub></italic>+<italic>zn<sub>i</sub></italic> as in the objective function (19).</p>
<p>The MCSs of the primal network are eventually obtained by taking the <bold>z</bold>-vector of the solutions found in the dual; <bold>z</bold> is obtained by collapsing <italic>zp<sub>i</sub></italic> and <italic>zn<sub>i</sub></italic>: <italic>z<sub>i</sub></italic> = <italic>zp<sub>i</sub></italic>+<italic>zn<sub>i</sub></italic>.</p>
</sec><sec id="s3c">
<title>Enumeration of smallest constrained MCSs</title>
<p>In the previous subsection we dealt with enumeration of smallest MCSs, however, we have not yet clarified how <italic>constrained</italic> MCSs can be computed by this approach. As it turns out, this is straightforward: one first enumerates the smallest MCSs blocking the undesired flux vectors as described above. We can assume that the desired flux vectors (of which at least one has to be kept) is formulated by appropriate inequalities - similar as for the targeted undesired flux vectors in (14):<disp-formula id="pcbi.1003378.e031"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e031" xlink:type="simple"/><label>(21)</label></disp-formula>We can then filter the true cMCS from the set of (unconstrained) MCSs by testing for each MCS with a separate linear program whether the removal of the reactions in the MCS still allows the network to perform the desired function, i.e., whether the system given by (1), (2), and (21) is feasible when setting the rates of the reactions contained in the MCS to zero. From our experience, the computational costs for these tests are negligible compared to the calculation of the smallest MCSs, even if hundred thousand MCSs have to be tested (see <xref ref-type="sec" rid="s4">Results</xref> section).</p>
</sec><sec id="s3d">
<title>Implementation</title>
<p>The MCSEnumerator method has been integrated as a new functionality in the <italic>CellNetAnalyzer</italic> package, a MATLAB toolbox for biological network analysis <xref ref-type="bibr" rid="pcbi.1003378-Klamt3">[26]</xref>, <xref ref-type="bibr" rid="pcbi.1003378-Klamt4">[27]</xref>. The implementation uses the IBM ILOG CPLEX Optimization Studio V12.4 for solving the respective MILP and LP problems. Arbitrary intervention problems can be defined by providing the respective matrices and vectors describing the network and the desired and undesired flux vectors. The resulting MILPs are set up via the JAVA-CPLEX API and MATLAB's integrated JVM while for running the LPs the MATLAB-CPLEX interface is used. A separate package containing the data and script files needed for running the iAF1260 examples discussed herein can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://www.mpi-magdeburg.mpg.de/projects/cna/etcdownloads.html" xlink:type="simple">http://www.mpi-magdeburg.mpg.de/projects/cna/etcdownloads.html</ext-link>.</p>
</sec></sec><sec id="s4">
<title>Results</title>
<p>We analyze basic properties of the runtime behavior of our algorithm by means of three realistic benchmark problems with different complexities. All computations were performed with the CPLEX 12.4 MILP solver. When using multiple threads deterministic parallel mode was used to get repeatable behaviour. The search tree that CPLEX dynamically constructs took up less than 3 GB of RAM for all the systems used here.</p>
<sec id="s4a">
<title>Enumeration of MCSs blocking growth in a model of the central <italic>E. coli</italic> metabolism</title>
<p>In order to compare our MILP-based MCS enumeration scheme to other approaches the same benchmark problems as in <xref ref-type="table" rid="pcbi-1003378-t001">Table 1</xref> in <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref> were used. The target of the (unconstrained) MCSs in these problems is the deactivation of biomass synthesis in a smaller model of the central metabolism of <italic>E. coli</italic> for growth under different substrates (acetate, succinate, glycerol, glucose). The MCSs determined in this way will thus correspond to the synthetic (reaction) lethals for <italic>E. coli</italic> (whose compositions depend strongly on the provided substrate). Before using the different MCS calculation routines the metabolic network is compressed by combining correlated reactions (operating with a fixed ratio under steady state conditions) to single cumulated reactions <xref ref-type="bibr" rid="pcbi.1003378-Gagneur1">[6]</xref>. The compression in the primal system can also conducted if the computation is done in the dual system. MCSs found in the compressed network must be decompressed after calculation <xref ref-type="bibr" rid="pcbi.1003378-Klamt1">[18]</xref>.</p>
<table-wrap id="pcbi-1003378-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003378.t001</object-id><label>Table 1</label><caption>
<title>Enumeration of all MCSs (synthetic reaction lethals) in a medium-scale metabolic model of <italic>E. coli</italic>.</title>
</caption><alternatives><graphic id="pcbi-1003378-t001-1" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003378.t001" xlink:type="simple"/>
<table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td colspan="4" align="left" rowspan="1">Problem</td>
<td align="left" rowspan="1" colspan="1">MCSs via EMs from original network</td>
<td colspan="3" align="left" rowspan="1">MCSs as EMs of the dual system</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">substrate</td>
<td align="left" rowspan="1" colspan="1">threads</td>
<td align="left" rowspan="1" colspan="1">size limit</td>
<td align="left" rowspan="1" colspan="1">MCS number</td>
<td align="left" rowspan="1" colspan="1">Compute first EFMs, then minimal hitting sets</td>
<td align="left" rowspan="1" colspan="1">Method of Ballerstein et al. <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref></td>
<td align="left" rowspan="1" colspan="1">ALGO1: Iterative MILP</td>
<td align="left" rowspan="1" colspan="1">ALGO2: MILP populate with fixed EM sizes</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1">acetate</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">-</td>
<td align="left" rowspan="1" colspan="1">309</td>
<td align="left" rowspan="1" colspan="1">0.6 s</td>
<td align="left" rowspan="1" colspan="1">0.4 s</td>
<td align="left" rowspan="1" colspan="1">19 s</td>
<td align="left" rowspan="1" colspan="1">3 s</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">succinate</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">-</td>
<td align="left" rowspan="1" colspan="1">1623</td>
<td align="left" rowspan="1" colspan="1">6.4 s</td>
<td align="left" rowspan="1" colspan="1">7.0 s</td>
<td align="left" rowspan="1" colspan="1">499 s</td>
<td align="left" rowspan="1" colspan="1">32 s</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">glycerol</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">-</td>
<td align="left" rowspan="1" colspan="1">3733</td>
<td align="left" rowspan="1" colspan="1">36.8 s</td>
<td align="left" rowspan="1" colspan="1">37.4 s</td>
<td align="left" rowspan="1" colspan="1">61.4 min</td>
<td align="left" rowspan="1" colspan="1">3.5 min</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">glucose</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">-</td>
<td align="left" rowspan="1" colspan="1">4960</td>
<td align="left" rowspan="1" colspan="1">181.3 s</td>
<td align="left" rowspan="1" colspan="1">188.7 s</td>
<td align="left" rowspan="1" colspan="1">356.6 min</td>
<td align="left" rowspan="1" colspan="1">21.2 min</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">glucose</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">4</td>
<td align="left" rowspan="1" colspan="1">423</td>
<td align="left" rowspan="1" colspan="1">43.9 s</td>
<td align="left" rowspan="1" colspan="1">not possible</td>
<td align="left" rowspan="1" colspan="1">92.5 s</td>
<td align="left" rowspan="1" colspan="1">4.2 s</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">glucose</td>
<td align="left" rowspan="1" colspan="1">4</td>
<td align="left" rowspan="1" colspan="1">-</td>
<td align="left" rowspan="1" colspan="1">4960</td>
<td align="left" rowspan="1" colspan="1">unsupported</td>
<td align="left" rowspan="1" colspan="1">unsupported</td>
<td align="left" rowspan="1" colspan="1">228 min (698.0 min)</td>
<td align="left" rowspan="1" colspan="1">18.5 min (56.8 min)</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">glucose</td>
<td align="left" rowspan="1" colspan="1">12</td>
<td align="left" rowspan="1" colspan="1">-</td>
<td align="left" rowspan="1" colspan="1">4960</td>
<td align="left" rowspan="1" colspan="1">unsupported</td>
<td align="left" rowspan="1" colspan="1">unsupported</td>
<td align="left" rowspan="1" colspan="1">62.9 m (633.4 m)</td>
<td align="left" rowspan="1" colspan="1">5.6 min (58.3 min)</td>
</tr>
</tbody>
</table>
</alternatives><table-wrap-foot><fn id="nt101"><label/><p>Computation times for MCSs that disable growth in an <italic>E. coli</italic> metabolic network model of the central metabolism under different substrate uptake conditions (cf. <xref ref-type="table" rid="pcbi-1003378-t001">Table 1</xref> in <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref>). The full/compressed networks contain 89/25 metabolites and 106/42 reactions. Conversion of MCSs in the compressed network to those in the full network takes negligible computation time for the cases shown here. For iterative solve (ALGO1) CPLEX dynamic search was used while for populate calls (ALGO2) traditional branch-and-cut was applied. In the fifth problem, only the MCSs up to size 4 were calculated. The computation times for the classical approach (EM+minimal hitting sets) and for the dual approach of Ballerstein et al. in the first four problems are the same as in <xref ref-type="bibr" rid="pcbi.1003378-Ballerstein1">[22]</xref>; note that neither method currently supports multiple threads. For calculations using multiple threads the physical computation time is shown with the sum of computation times (CPU times) over all threads in brackets. The calculations with 1 and 4 threads were performed with an Intel Q9550 desktop processor (4 cores) while for 12 threads a cluster node with two Intel Xeon DP X5650 processors (each 6 cores) was used.</p></fn></table-wrap-foot></table-wrap>
<p>The number of calculated MCSs and computation times are shown in <xref ref-type="table" rid="pcbi-1003378-t001">Table 1</xref>. As a first observation, it is apparent that calculation of EMs followed by the Berge algorithm (computing MCSs as the minimal hitting sets of the selected target EMs; Haus et al. 2008) is the most efficient of the shown MCSs calculation methods. The approach of Ballerstein et al. to compute primal MCSs as EMs in the dual system performs similar to EM calculation+Berge algorithm in the (primal) network but in its current implementation it requires a lot of memory. For this reason, the MCSs for glucose could not exhaustively be enumerated by this approach on the computer used (with an effective memory limit of 2GB per process).</p>
<p>Although the MILP algorithm developed herein was actually developed to compute the <italic>smallest</italic> MCSs, we can use it here even for enumerating <italic>all</italic> of them. The EMs in the dual network (the MCSs in the primal) where computed with both MILP formulations for shortest EM calculation: ALGO1 (the original approach by de Figueiredo et al. <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref> implemented with indicator variables) and the ALGO2 approach calling the <italic>populate</italic> sub-routine for fixed EM sizes. Generally, applying the MILP formulations to the dual system is at first sight comparatively slow even when using multiple threads. Nonetheless, it is apparent that solving the dual system with our new ALGO2 is more efficient (∼17 times faster) than ALGO1 based on the scheme used by de Figueiredo et al. <xref ref-type="bibr" rid="pcbi.1003378-deFigueiredo1">[23]</xref>. As can be seen for the MCSs with glucose as substrate, increasing the number of threads from 1 to 4 on the same CPU decreases the time needed for computation to some extent when using ALGO1 or ALGO2. Using 12 threads on a compute cluster node yields a more noticeable speed improvement but, as in the case of 4 threads, the combined computation times of all threads is still larger than in the case where a single thread is used.</p>
<p>The main advantage of our new approach can be seen in the case where only the MCSs up to size 4 have to be calculated (fifth row in <xref ref-type="table" rid="pcbi-1003378-t001">Table 1</xref>): here the dual approach in combination with ALGO2 is clearly the fastest way to determine small MCSs among the approaches compared.</p>
</sec><sec id="s4b">
<title>Enumerating synthetic lethals in an <italic>E. coli</italic> genome-scale network</title>
<p>As described in the <xref ref-type="sec" rid="s2">Introduction</xref> section, the direct calculation of EMs and MCSs in genome-scale networks is normally infeasible. For this reason, the Berge algorithm and the dual system approach by Ballerstein et al. used in the previous example become impractical. In contrast, with the MILP approach enumerating shortest EMs in the dual system as proposed here, calculation of small MCSs becomes possible.</p>
<p>To demonstrate this, we use the <italic>E. coli</italic> genome-scale network iAF1260 <xref ref-type="bibr" rid="pcbi.1003378-Feist1">[24]</xref> that accounts for 1260 ORFs and defines the reversibilities of the included reactions. In total, this network comprises 1668 internal metabolites and 2382 reactions including 304 exchange reactions with the environment and 29 spontaneous reactions. The intervention goal for the MCSs to be computed is again to disable growth (biomass formation) when glucose is available as sole carbon source. The glucose uptake rate was fixed to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e032" xlink:type="simple"/></inline-formula> = 10 <italic>mmol/(gDW⋅h)</italic> and the ATP maintenance requirement was set to the standard value of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e033" xlink:type="simple"/></inline-formula> = 8.39 <italic>mmol/(gDW⋅h)</italic>. Analogous to Suthers et al. <xref ref-type="bibr" rid="pcbi.1003378-Suthers1">[15]</xref> we considered a cell viable if it has a growth rate larger than <italic>μ<sup>min</sup></italic>≥0.01⋅<italic>μ<sup>max</sup></italic> = 0.0093 <italic>h<sup>−1</sup></italic>. With these inhomogeneous conditions, the MCSs will thus correspond to synthetic reaction lethals as also computed by Suthers et al. <xref ref-type="bibr" rid="pcbi.1003378-Suthers1">[15]</xref>, where full enumeration for MCSs up to size 3 was achieved (some MCSs of size 4 could also be determined). With glucose and oxygen available 152 reactions are disabled as suggested by the gene-regulatory model included in the iAF1260 reconstruction. A subsequent flux variability analysis revealed 991 blocked reactions in total and these were removed from the network. In addition, spontaneous and exchange reactions, of which 23 resp. 97 remain after removing blocked reactions, were not allowed to take part in any MCS. After removing the blocked reactions network compression by combining correlated reaction sets was again applied by which the (primal) network could be reduced to 562 metabolites and 936 (lumped) reaction subsets of which 816 can be knocked out. By using ALGO2 in the dualized system, for the first time it was possible to fully enumerate all synthetic (reaction) lethals of sizes 1 to 5 as shown in <xref ref-type="table" rid="pcbi-1003378-t002">Table 2</xref> yielding a total set of 2486 MCSs. Although the last iteration (MCSs with 5 knockouts) took several days all of them could be determined. Comparison of the runtimes of our MCSEnumerator implementation and of SL Finder (used in <xref ref-type="bibr" rid="pcbi.1003378-Suthers1">[15]</xref>) for the calculation of MCSs of size two and three indicates that our algorithm is more than 100 times faster therefore allowing full enumeration of synthetic reaction lethals also of size 4 and 5.</p>
<table-wrap id="pcbi-1003378-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003378.t002</object-id><label>Table 2</label><caption>
<title>Enumeration of smallest MCSs (synthetic reaction lethals) disabling growth in a genome-scale network model of <italic>E.coli</italic>.</title>
</caption><alternatives><graphic id="pcbi-1003378-t002-2" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003378.t002" xlink:type="simple"/>
<table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" rowspan="1" colspan="1">MCS size</td>
<td align="left" rowspan="1" colspan="1">number of MCSs</td>
<td align="left" rowspan="1" colspan="1">physical time with MCSEnumerator</td>
<td align="left" rowspan="1" colspan="1">physical time with SL Finder</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">277</td>
<td align="left" rowspan="1" colspan="1">11.1 s</td>
<td align="left" rowspan="1" colspan="1">[included]</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">2</td>
<td align="left" rowspan="1" colspan="1">96</td>
<td align="left" rowspan="1" colspan="1">39.1 s</td>
<td align="left" rowspan="1" colspan="1">91 min</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">3</td>
<td align="left" rowspan="1" colspan="1">247</td>
<td align="left" rowspan="1" colspan="1">16.8 min</td>
<td align="left" rowspan="1" colspan="1">&gt;75.5 h <xref ref-type="table-fn" rid="nt103">*)</xref></td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">4</td>
<td align="left" rowspan="1" colspan="1">402</td>
<td align="left" rowspan="1" colspan="1">18.5 h</td>
<td align="left" rowspan="1" colspan="1">n/a</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">5</td>
<td align="left" rowspan="1" colspan="1">1464</td>
<td align="left" rowspan="1" colspan="1">410.4 h</td>
<td align="left" rowspan="1" colspan="1">n/a</td>
</tr>
</tbody>
</table>
</alternatives><table-wrap-foot><fn id="nt102"><label/><p>MCSs (synthetic reaction lethals) that disable growth in an <italic>E. coli</italic> genome-scale metabolic network with glucose as sole carbon source. The full/compressed networks contain 1668/562 metabolites and 2382/936 reactions. For computation 12 threads on a cluster node with two Intel Xeon DP X5650 processors (each 6 cores) were used. The computation time given in each row specifies the time needed to calculate the MCSs of the respective size. The total computation time for MCSs of size 1–5 was thus ∼430 h. In order to get comparable run times the SL Finder was executed on the same computer with GAMS 24.1.3 (using CPLEX 12.5.1 as solver). All physical memory was made available and up to 9 GB were used during optimization. The MCSEnumerator calculations were also done on a typical desktop PC with a quad-core CPU (Intel(R) Core(TM) i5-3570, 3.40 GHz) showing that the computation times increase only moderately by approximately 50%.</p></fn><fn id="nt103"><label>*)</label><p>Only 226 synthetic triple lethals (which are all contained in the MCSs found by MCSEnumerator) could be calculated after which optimization could not be continued due to numerical problems reported by the solver.</p></fn></table-wrap-foot></table-wrap>
<p>We also tested the homogeneous version of the above intervention problem, that is, we calculated the MCSs blocking growth without the additional constraints for ATP maintenance (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e034" xlink:type="simple"/></inline-formula> is a free flux), without restriction on glucose uptake and without the minimum threshold for the growth rate (all flux vectors with biomass production &gt;0 have thus to be blocked). As expected, for we found less MCSs of size 1–5 (1933 in total) because the target polyhedron containing the target flux vectors was expanded leading to larger MCSs with more than 5 reaction deletions. We also observed that the computation of the MCSs in the homogeneous problem was much faster (∼17 hours) than for the inhomogeneous scenario (∼430 hours) indicating that inhomogeneous constraints may complicate the whole calculation procedure.</p>
</sec><sec id="s4c">
<title>Constrained MCSs for coupling anaerobic growth and ethanol production in <italic>E. coli</italic></title>
<p>The following third example relates to a typical problem of finding rational intervention strategies for metabolic engineering purposes. We here focus on a biotechnologically relevant application, namely to let <italic>E. coli</italic> produce a biofuel (ethanol) from glucose. The intervention goal is thus to disable flux vectors with a low ethanol yield in <italic>E. coli</italic> (undesired behavior) while retaining the capability for both maintenance and growth of the bacterium under anaerobic conditions (desired functionality). This forms a constrained MCS problem. All cMCSs that fulfill the stated requirements will lead to obligatory coupling between growth and ethanol formation.</p>
<p>We used again the iAF1260 genome-scale network model of <italic>E. coli</italic> metabolism but this time with the oxygen uptake removed to establish anaerobic conditions on the network. As before, glucose is the only available carbon source. To study the effect of different capacities for substrate uptake, we considered two possible limits for the glucose uptake rate: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e035" xlink:type="simple"/></inline-formula> = 10 <italic>mmol/(gDW⋅h)</italic> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e036" xlink:type="simple"/></inline-formula> = 18.5 <italic>mmol/(gDW⋅h)</italic>. The latter value has been measured under anaerobic conditions where <italic>E. coli</italic> tends to exhibit higher substrate uptake rates <xref ref-type="bibr" rid="pcbi.1003378-Varma1">[28]</xref>. The ATP maintenance requirement was set to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e037" xlink:type="simple"/></inline-formula>≥8.39 <italic>mmol/(gDW⋅h)</italic>.</p>
<p>With these values in mind, we formulated the following intervention goal: the task is to identify cMCSs that guarantee a minimal ethanol yield of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e038" xlink:type="simple"/></inline-formula> or, in a second scenario, of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e039" xlink:type="simple"/></inline-formula>. In addition, a minimum growth rate of at least <italic>μ<sup>min</sup></italic>≥0.001 <italic>h<sup>−1</sup></italic> was demanded.</p>
<p>With these inhomogeneous constraints we can now specify the target flux polyhedron containing all undesired network behaviors to be eliminated by the cMCSs:<disp-formula id="pcbi.1003378.e040"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e040" xlink:type="simple"/><label>(22)</label></disp-formula>(<italic>Y<sub>Eth/Glc</sub></italic>(<bold>r</bold>) denotes the ethanol yield of the reaction rate vector <bold>r</bold>). The set of desired behaviors from which we want to keep at least some flux vectors is given by:<disp-formula id="pcbi.1003378.e041"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003378.e041" xlink:type="simple"/><label>(23)</label></disp-formula>(The constraints due to anaerobic growth (e.g., oxygen uptake is zero) were not restated in (22) and (23).)</p>
<p>With these values, several linear programs were run in a preprocessing step to explore network capabilities. For <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e042" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e043" xlink:type="simple"/></inline-formula>, the maximal ethanol yield is 2 (molecules ethanol per molecule glucose). The maximum growth rate is 0.1955 <italic>h<sup>−1</sup></italic> (for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e044" xlink:type="simple"/></inline-formula>) and 0.4954 <italic>h<sup>−1</sup></italic> (for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e045" xlink:type="simple"/></inline-formula>) if we want to achieve an ethanol yield of at least 1.4 <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e046" xlink:type="simple"/></inline-formula>; these values drop to 0.1356 <italic>h<sup>−1</sup></italic>and 0.4827 <italic>h<sup>−1</sup></italic>, respectively, for a minimal ethanol yield of 1.8 <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e047" xlink:type="simple"/></inline-formula>. Hence, we can be sure that the set of desired behaviors is not empty.</p>
<p>We then computed the cMCSs. As described in the <xref ref-type="sec" rid="s3">Methods</xref> section, the calculation of cMCSs (accounting for undesired <italic>and</italic> desired behavior) based on our approach requires to first compute the MCSs blocking the undesired behavior and to keep afterwards only those MCSs that admit the desired behavior. This test is done for each found MCS by solving a separate linear program (LP) which verifies whether the remaining network supports the desired behavior. To reduce the search space, blocked reactions for the network under desired ethanol production conditions were determined and removed in a preprocessing step using flux variability analysis <xref ref-type="bibr" rid="pcbi.1003378-Mahadevan1">[13]</xref>. In addition, 104 reactions were disabled for growth on glucose as suggested by the gene-regulatory model included in the iAF1260 reconstruction. The FVA then identifies 996 blocked reactions in total, which are removed from the network. Furthermore, the remaining 19 spontaneous and 94 exchange reactions were again not allowed to take part in the MCSs. The latter can be easily achieved by setting the upper bounds of the corresponding <italic>zp<sub>i</sub></italic> and <italic>zn<sub>i</sub></italic> indicator variables to zero.</p>
<p>After network compression, the (primal) network could be reduced to 562 metabolites and 958 (lumped) reaction subsets of which 845 can be knocked out.</p>
<p>Note also that the disruption of glucose uptake or ATP maintenance are valid MCSs deleting all undesired behaviors but they violate for trivial reasons the desired functionality (growth not possible) and can thus not be contained in any valid cMCSs. Such reactions being essential for the desired flux space could also be identified at an early stage and then be excluded from the search space.</p>
<p><xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref> shows the results for the computation of the (c)MCSs for this problem. As we considered two different maximal glucose uptake rates and two different minimal ethanol yields we obtained four scenarios. We were able to enumerate all cMCSs up to size 7 in all four scenarios within 21 hours. For each scenario, after calculating first the (unconstrained) MCSs up to size 7, each MCS was tested with a LP whether the solution space of (23) is non-empty (i.e., whether the MCS is a valid cMCS). These tests took less than 7 minutes running time (single-threaded; on the same computer that was used for MCS calculation) for each of the four scenarios. Hence, the LPs account only for a negligible part of the overall computational costs.</p>
<table-wrap id="pcbi-1003378-t003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003378.t003</object-id><label>Table 3</label><caption>
<title>Computation of constrained MCSs leading to coupled ethanol and biomass formation by <italic>E. coli</italic> under anaerobic growth on glucose.</title>
</caption><alternatives><graphic id="pcbi-1003378-t003-3" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003378.t003" xlink:type="simple"/>
<table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" rowspan="1" colspan="1">Scen.</td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e048" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e049" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1"># MCSs</td>
<td align="left" rowspan="1" colspan="1"># cMCSs</td>
<td colspan="5" align="left" rowspan="1">cMCSs size</td>
<td align="left" rowspan="1" colspan="1">runtime [h] phys./CPU</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">3</td>
<td align="left" rowspan="1" colspan="1">4</td>
<td align="left" rowspan="1" colspan="1">5</td>
<td align="left" rowspan="1" colspan="1">6</td>
<td align="left" rowspan="1" colspan="1">7</td>
<td align="left" rowspan="1" colspan="1"/>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">10</td>
<td align="left" rowspan="1" colspan="1">1.4</td>
<td align="left" rowspan="1" colspan="1">185302</td>
<td align="left" rowspan="1" colspan="1">8342</td>
<td align="left" rowspan="1" colspan="1">8</td>
<td align="left" rowspan="1" colspan="1">46</td>
<td align="left" rowspan="1" colspan="1">283</td>
<td align="left" rowspan="1" colspan="1">1309</td>
<td align="left" rowspan="1" colspan="1">6696</td>
<td align="left" rowspan="1" colspan="1">20.5/207.6</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">2</td>
<td align="left" rowspan="1" colspan="1">10</td>
<td align="left" rowspan="1" colspan="1">1.8</td>
<td align="left" rowspan="1" colspan="1">153338</td>
<td align="left" rowspan="1" colspan="1">1987</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">77</td>
<td align="left" rowspan="1" colspan="1">317</td>
<td align="left" rowspan="1" colspan="1">1593</td>
<td align="left" rowspan="1" colspan="1">13.8/136.8</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">3</td>
<td align="left" rowspan="1" colspan="1">18.5</td>
<td align="left" rowspan="1" colspan="1">1.4</td>
<td align="left" rowspan="1" colspan="1">156477</td>
<td align="left" rowspan="1" colspan="1">8819</td>
<td align="left" rowspan="1" colspan="1">2</td>
<td align="left" rowspan="1" colspan="1">98</td>
<td align="left" rowspan="1" colspan="1">533</td>
<td align="left" rowspan="1" colspan="1">1737</td>
<td align="left" rowspan="1" colspan="1">6449</td>
<td align="left" rowspan="1" colspan="1">16.6/166.4</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">4</td>
<td align="left" rowspan="1" colspan="1">18.5</td>
<td align="left" rowspan="1" colspan="1">1.8</td>
<td align="left" rowspan="1" colspan="1">138675</td>
<td align="left" rowspan="1" colspan="1">4618</td>
<td align="left" rowspan="1" colspan="1">2</td>
<td align="left" rowspan="1" colspan="1">70</td>
<td align="left" rowspan="1" colspan="1">509</td>
<td align="left" rowspan="1" colspan="1">917</td>
<td align="left" rowspan="1" colspan="1">3120</td>
<td align="left" rowspan="1" colspan="1">20.9/212.2</td>
</tr>
</tbody>
</table>
</alternatives><table-wrap-foot><fn id="nt104"><label/><p>Constrained MCSs up to size 7 that lead to ethanol synthesis with high yield in <italic>E.coli</italic> while slow growth is possible. Four scenarios were considered differing in the maximal glucose uptake rate (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e050" xlink:type="simple"/></inline-formula>; given in <italic>mmol/(gDW⋅h)</italic>) or/and in the demanded minimal ethanol yield (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e051" xlink:type="simple"/></inline-formula>; given in molecules ethanol per molecules glucose) in the strain to be constructed. The total number of MCSs (#MCSs) refers to knock-out sets blocking flux vectors with low ethanol yield; the number of constrained MCSs (#cMCSs) refers to the subset of MCSs which allow in addition growth above the minimum threshold (for details see text). For the cMCSs found, the distribution over cut set sizes are also shown (no cMCSs with less than 3 cuts exist; the upper limit of cuts was set to 7).</p></fn><fn id="nt105"><label/><p>The full/reduced networks contain 1668/564 metabolites and 2382/958 reactions (the reactions in the compressed network represent lumped reaction subsets). For computation 12 threads on a cluster node with two Intel Xeon DP X5650 processors (each 6 cores) were used.</p></fn></table-wrap-foot></table-wrap>
<p>As can be seen in <xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref>, only a fraction (between 1.3% and 6%) of the computed MCSs up to size 7 turned out to be valid cMCSs. However, a large number of several thousand cMCSs could eventually be computed for each scenario.</p>
<p>We then analyzed the cMCSs in more detail. A first observation in <xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref> is that in three of the four scenarios considered cMCSs were found comprising only three reaction deletions; whereas for the case with smaller glucose uptake and higher demanded ethanol yield (scenario 2 in <xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref>) at least 5 reaction removals are required. Generally, it is intuitive that expanding the space of undesired flux vectors in (22) and reducing the space of desired solutions in (23) by increasing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e052" xlink:type="simple"/></inline-formula> can lead to larger cMCSs since (i) a larger set of undesired flux vectors must be suppressed, and (ii) due to the reduced set of desired behaviors a smaller number of MCSs become admissible cMCSs. Hence, there is no cMCS in scenario 2 that is a subset of any cMCSs in scenario 1 in <xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref>, but the other way around can occur. The same relationship exists between scenarios 3 and 4. Thus, the higher the yield that we want to guarantee by an intervention strategy, the larger is the required effort in terms of number of reaction knockouts.</p>
<p>The situation is different in the case of increasing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e053" xlink:type="simple"/></inline-formula>. While the target flux polyhedron in (22) increases potentially demanding more cuts, the space of desired behaviors in (23) expands as well meaning that an MCS that was not a suitable constrained MCS in the case with smaller <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e054" xlink:type="simple"/></inline-formula> could now become a suitable cMCS. Hence, when increasing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e055" xlink:type="simple"/></inline-formula>, some cMCSs of a given size might disappear whereas others may arise as new solutions. This is also reflected by the cMCSs of size three which are depicted in <xref ref-type="fig" rid="pcbi-1003378-g001">Figure 1</xref>. All these cMCSs block central pathways for glucose degradation. An essential cut (red cross in <xref ref-type="fig" rid="pcbi-1003378-g001">Figure 1</xref>) for all cMCSs is that of the glucose-phosphate isomerase blocking upper glycolysis. In addition, all the considered cMCSs block the Entner-Doudoroff pathway by either cutting the phosphogluconate dehydratase or the 2-keto-3-deoxyphosphogluconate aldolase (blue crosses in <xref ref-type="fig" rid="pcbi-1003378-g001">Figure 1</xref>). In addition, for scenario 1 (with the smaller values for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e056" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e057" xlink:type="simple"/></inline-formula>), we have to cut one additional reaction out of 4 reactions of the pentose phosphate pathway (dark green crosses in <xref ref-type="fig" rid="pcbi-1003378-g001">Figure 1</xref>) whereas for scenarios 3 and 4 (whose two cMCSs of size three are identical) the third cut is given by the pyruvate-formate lyase reaction (light green cross in <xref ref-type="fig" rid="pcbi-1003378-g001">Figure 1</xref>). This result confirms that increasing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003378.e058" xlink:type="simple"/></inline-formula> (from scenario 1 to scenario 3) may remove existing cMCSs but also produce new ones.</p>
<fig id="pcbi-1003378-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003378.g001</object-id><label>Figure 1</label><caption>
<title>Constrained MCSs with three reaction knockouts leading to coupled ethanol and biomass formation by <italic>E. coli</italic> under anaerobic growth on glucose.</title>
<p>The graphics indicates the found cMCSs requiring only three knockouts (<xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref>). In total, 8 cMCSs were found for scenario 1 and two cMCSs for scenarios 3 and 4 (both being identical for the two scenarios). All these cMCSs cut the reaction with the red cross and one of the two reactions with a blue cross. In addition, for scenario 1, one of the dark green cuts has to be made whereas the two cMCSs for scenario 3 and 4 require the light green cut (see also explanations in the text).</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003378.g001" position="float" xlink:type="simple"/></fig>
<p>The cMCSs for scenario 1 (the red cut, one of the two blue cuts and one of the four dark green cuts in <xref ref-type="fig" rid="pcbi-1003378-g001">Figure 1</xref>) also illustrate the difference between reaction and enzyme/gene cut sets. Since two of the four reactions with a green cross are catalyzed by the same enzyme (transketolase) knocking out the corresponding two genes (there are two different transketolases in <italic>E. coli</italic>) would actually cut two reactions at the same time for which the model predicts that <italic>E. coli</italic> can not grow anymore. Thus, only four of the eight cMCSs remain valid on gene basis. However, as already explained earlier, those effects can be taken into account based on gene-enzyme-reaction associations.</p>
<p>The fact that three reaction or gene knockouts may suffice to induce a high ethanol yield of more than 1.8 (scenario 4) is a surprising fact on its own. Previous work on computing intervention strategies for ethanol overproduction in a smaller (core) network of <italic>E. coli</italic> showed that more than three reaction knockouts would be required to ensure a large ethanol yield (see, e.g., <xref ref-type="bibr" rid="pcbi.1003378-Hdicke1">[10]</xref>). Given the results with three knockouts made herein, this might be a bit confusing since much more inefficient pathways will exist in a genome-scale network which must all be blocked. However, similar as discussed above for a scenario with increased substrate uptake rates, a larger network may also have additional high-yield metabolic routes (allowing coupled biomass and ethanol synthesis) not contained in the smaller network which could ‘survive’ a cut set for blocking the low-yield pathways. We can thus conclude that genome-scale network models may reveal metabolic engineering strategies that are smaller than those found in small- or medium-scale subnetworks. Importantly, one always has to keep in mind that an MCS predicts an intervention purely from stoichiometric relationships. Whereas blockage of the undesired flux vectors can be guaranteed if the network structure is correct, it can not ensure that the remaining pathways will have the capacity to carry a flux that is large enough to fulfil the requirements of the desired flux vectors. In addition, unknown regulatory constraints may further reduce the space of desired behaviors by which some cMCSs may become invalid.</p>
<p>We mention here that two other intervention strategies with three knockouts for production of ethanol by <italic>E.coli</italic> were presented in <xref ref-type="bibr" rid="pcbi.1003378-Tepper1">[9]</xref>. However, these solutions ensure high ethanol yield only if the cell grows at maximal growth rate whereas our interventions are more stringent since they guarantee a high ethanol yield for <italic>any</italic> growth rate of the mutant.</p>
<p>Having exhaustively enumerated the cMCSs up to a given size enables one to analyze essential features and performance measures of all found intervention strategies by which eventually the optimal knockout strategy can be selected. <xref ref-type="fig" rid="pcbi-1003378-g002">Figure 2</xref> shows exemplarily two such performance studies. <xref ref-type="fig" rid="pcbi-1003378-g002">Figure 2A</xref> displays for each cMCS of scenario 3 the relationship between (i) maximal growth rate, (ii) minimal (guaranteed) product yield (shown for maximal substrate uptake rate; the lower boundary for arbitrary substrate uptake rates still holds to be 1.4), and (iii) number of required reaction deletions (cut set size). It can be seen that most cMCSs (including those with the smallest size 3) achieve relatively low growth rates (lower than 0.1 <italic>h<sup>−1</sup></italic>) and that in order to have a growth rate larger than 0.1<italic> h<sup>−1</sup></italic> it is necessary to use cut sets with a least 6 knockouts. If higher growth rates and/or smaller cut sets are required the minimal product yield would have to be lowered.</p>
<fig id="pcbi-1003378-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003378.g002</object-id><label>Figure 2</label><caption>
<title>Performance measures of calculated strain designs for growth-coupled ethanol production in <italic>E.coli</italic>.</title>
<p>A: Minimal (guaranteed) ethanol yield (under maximal substrate uptake rate) vs. maximal possible growth rate for each cMCS of scenario 3 in <xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref>. The size of the cMCSs are indicated by different markers. It becomes apparent that when higher maximal growth rates are required larger cut sets become necessary implying also a decrease in the guaranteed ethanol yield. B: Substrate-specific productivity (SSP) induced by the cut sets of scenario 3 in <xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref>. Cut sets were ordered with respect to the number of required knockouts. Note that some crosses represent several cMCSs having, for example, the same SSP.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003378.g002" position="float" xlink:type="simple"/></fig>
<p>Other performance measures of designed mutant strains can be studied as well. One such proposed measure is substrate-specific productivity (SSP) which is the product of the growth-rate and the product yield <xref ref-type="bibr" rid="pcbi.1003378-Feist2">[29]</xref>. <xref ref-type="fig" rid="pcbi-1003378-g002">Figure 2B</xref> shows the SSP of all cMCSs computed for scenario 3. It can be seen that highest SSP values can only be achieved with cut sets of size 6 or 7. This illustrates again that a trade-off between number of knockouts and certain performance measures has sometimes to be made when eventually selecting an intervention strategy for implementation. Such a screen is greatly facilitated if all cut sets have been enumerated up to a certain size. More advanced screening methods for evaluating strain design strategies have been suggested in <xref ref-type="bibr" rid="pcbi.1003378-Zhuang1">[30]</xref> and could readily be applied to calculated cMCSs.</p>
<p>As a technical note, it is not absolutely mandatory to have all MCSs (up to a maximal size) enumerated before running the LP checks for testing the “survival” of some desired flux vectors: these checks could be (independently) performed as soon as an MCSs has been found by the MILP solver. In fact, it is in principle possible to integrate the LP into the MILP so that the cMCSs are computed directly which offers the advantage that far fewer exclusion constraints need to be integrated while the enumeration proceeds. In practice, however, this approach showed a markedly inferior performance for the system studied here. One reason is that the LP adds further degrees of freedom to the solution space and leads to redundant solutions for the cMCSs which requires a more intricate control of the <italic>populate</italic> procedure to suppress these redundant solutions. Whether the integrated approach can be reformulated in a manner that facilitates a more efficient calculation of its cMCSs solutions is a potential topic for further investigation.</p>
<p>To summarize the results of this sub-problem, our algorithm enabled the enumeration of all reaction knock-out sets up to size 7 that lead to coupled ethanol and biomass synthesis in <italic>E.coli</italic>. To the best of our knowledge, this exceeds by far other attempts to enumerate such metabolic engineering strategies in large-scale networks.</p>
<p>If more computational capacity is available, one might try to find even larger cMCSs. However, the best knockout strategy to be implemented is likely to be contained among the up to 8819 smallest cMCSs found as the number of required interventions will be one (though not the only) key criterion when deciding for a concrete strain design.</p>
</sec><sec id="s4d">
<title>Constrained MCSs for coupling aerobic growth with fumarate or serine production in <italic>E. coli</italic></title>
<p>One large-scale study to evaluate the growth-coupled production potential in <italic>E.coli</italic> has been presented by Feist <italic>et al</italic>. <xref ref-type="bibr" rid="pcbi.1003378-Feist2">[29]</xref>. The aim was to identify strain designs based on reaction knockouts with a maximum production rate at optimal growth for a number of substrate/product pairs. This was achieved by first applying OptKnock <xref ref-type="bibr" rid="pcbi.1003378-Burgard1">[8]</xref> with a knockout limit of either three or five and then using the results in the initial population for OptGene which employs genetic programming as optimization method <xref ref-type="bibr" rid="pcbi.1003378-Patil1">[31]</xref>. OptGene was then run with a time limit of one week to find additional strain designs with up to 10 knockouts. As underlying <italic>E.coli</italic> model the iAF1260 reconstruction <xref ref-type="bibr" rid="pcbi.1003378-Feist1">[24]</xref> was taken and in order to reduce the search space the knockouts were restricted to a subset of about 150 reactions in the network. As minimum growth rate for the strains a limit of 0.1 <italic>h<sup>−1</sup></italic> was chosen and an ATP maintenance of 8.39 <italic>mmol/(gDW⋅h)</italic> required. Both glucose and oxygen uptake were limited to 20 <italic>mmol/(gDW⋅h)</italic>. Given this setup it was possible to calculate strain designs for many substrate/product pairs but for some of them strains with only low productivity or even no strains with growth-coupled product synthesis were found.</p>
<p>Here we wanted to test the potential of our method for some of the intervention problems. We focused on the aerobic production of either fumarate or serine from glucose which both have a potential for high yield as calculated by FBA. However, growth-coupled strains for the production of fumarate only achieved 20% (5 knockouts, OptKnock) respectively 23% (7 knockouts, OptGene) of the theoretical maximum while for serine no growth-coupled strains could be identified in <xref ref-type="bibr" rid="pcbi.1003378-Feist2">[29]</xref>. We therefore applied our approach to look for (additional) strain designs for these two configurations.</p>
<p>To demonstrate the power of our method in dealing with large-scale systems, we increased the search space drastically compared to <xref ref-type="bibr" rid="pcbi.1003378-Feist2">[29]</xref> by allowing all reactions to be knocked out except for those that are either spontaneous or essential for the production condition. Since glucose is taken up under aerobic conditions, the same 152 reactions as for the calculation of the synthetic lethals above have also been removed. This results in 718 (fumarate) resp. 719 (serine) knockout candidates (compared to 150 candidates used in <xref ref-type="bibr" rid="pcbi.1003378-Feist2">[29]</xref>). As the results in <xref ref-type="bibr" rid="pcbi.1003378-Feist2">[29]</xref> suggested that growth coupling will be difficult for fumarate and serine production we chose a comparatively low minimal product yield of 0.5. This constraint together with the ATP maintenance requirement und the uptake limits was used to calculate MCSs that disable flux vectors with product yields below 0.5. Afterwards, only those (constrained) MCSs were kept that fulfil the minimal growth rate requirement.</p>
<p>For fumarate production, the MCSs up to size 7 were calculated (taking 13.6 h) from which 30 cMCSs (all of size 7) could be extracted. Applying those cMCSs would result in production strains exhibiting – at maximal substrate uptake rates – a guaranteed (minimal) fumarate yield between 0.71 and 0.89 corresponding to minimal production rates between 40.9% and 51.3% of the theoretical maximum of 34.68 <italic>mmol/(gDW⋅h)</italic> (note that the minimal yield for any substrate uptake rate is ensured to be 0.5 as demanded by the constraints for the desired flux vectors). As for the ethanol study, all these values are independent of the assumption of optimal growth. Likewise, in the case of serine production, the MCSs up to size 6 were calculated (taking 3.1 h) from which 140 cMCSs (all of size 6) could be extracted. These would result in strains with with a guaranteed serine yield between 0.71 and 0.91 (at maximal substrate uptake rate) corresponding to minimal production rates between 36.6% and 47.0% of the theoretical maximum (38.71 <italic>mmol/(gDW⋅h)</italic>). Hence, our results show that significantly larger fumarate production rates can be achieved with 7 knockouts than computed by OptGene. In case of serine where no suitable knockout strategy could be identified in <xref ref-type="bibr" rid="pcbi.1003378-Feist2">[29]</xref>, our method proves the existence of strain designs for coupled biomass and product synthesis and that 6 reaction knockouts would be theoretically sufficient to guarantee a serine yield of 47% of the theoretically maximal value. Moreover, tens of the smallest strain designs with 6 knockouts could be identified by our algorithm in a comparably fast way and larger ones could also be determined if desired.</p>
</sec></sec><sec id="s5">
<title>Discussion</title>
<p>In this work we presented MCSEnumerator, a new algorithmic approach to enumerate the smallest (c)MCSs up to a given size in genome-scale networks. This approach is based on a MILP problem calculating the shortest EMs in the dual representation of the metabolic network eventually yielding the smallest cMCSs. The whole procedure can be summarized by five steps:</p>
<list list-type="order"><list-item>
<p>Build the metabolic network as usual by specifying the stoichiometric matrix and the irreversibility constraints (<xref ref-type="disp-formula" rid="pcbi.1003378.e001">equations (1)</xref> and <xref ref-type="disp-formula" rid="pcbi.1003378.e002">(2)</xref>). Optionally, network compression steps can be applied.</p>
</list-item><list-item>
<p>Define the space of undesired (target) flux vectors and (optionally) the space of desired flux vectors by means of the linear inequalities (14) and (21), respectively. The (c)MCSs to be computed will ensure that no target flux vector can operate whereas the operation of at least one desired flux vector will be feasible.</p>
</list-item><list-item>
<p>Build the dual system which is immediately given by (17). Introduce indicator (or binary) variables (<bold>z</bold>) for the <bold>v</bold> variable and pose the MILP optimization problem for computing the shortest EM in the dual system (19).</p>
</list-item><list-item>
<p>Enumerate the <italic>k</italic>-shortest solutions (EMs) of the MILP problem from step 3 by using ALGO2.</p>
</list-item><list-item>
<p>Translate the EMs found in the dual to MCSs in the primal. If desired behaviors were specified in step 2, run one LP for each MCSs to check whether it is a constrained MCS, i.e., whether some desired flux distributions remain feasible after cutting the reactions contained in the MCS.</p>
</list-item></list>
<p>With these five steps, MCSEnumerator provides a generic approach for enumerating smallest intervention strategies; one just has to plugin the corresponding matrices in <xref ref-type="disp-formula" rid="pcbi.1003378.e022">equation (17)</xref> and can then start the calculation using ALGO2.</p>
<p>Apart from the combination of dualization and shortest EM calculation in step 3, another key development made herein is the improvement of the required sub-routine for computing shortest EMs (ALGO2) which is now based on a more efficient enumeration of feasible EMs with fixed size and which consequently makes use of available enumeration features of modern MILP solvers. Appropriate integration of such functionalities could also be useful to effectively solve other enumeration problems in the field.</p>
<p>Despite the fact that calculation of <italic>all</italic> (c)MCSs with our approach is slower compared to other approaches requiring EMs to be calculated in a first step, it has the advantage that the smallest (c)MCSs, which are often the most interesting ones, can be found first and that no EMs need to be calculated beforehand. This property renders (c)MCSs calculation feasible in genome-scale networks. Also, the number of elements in an MCS has no major impact on the performance as it would have in brute-force enumerations (that exhaustively test all reaction subsets) and as it has been observed also for several directed search algorithms.</p>
<p>The main drawback of using a MILP stems from the fact that constraints have to be continuously added to remove already found MCSs and their supersets from the solution space. Hence this method is bound to slow down with increasing number of constraints which explains the inferior performance when computing <italic>all</italic> MCSs. However, the shown application examples demonstrated that our approach is capable to compute hundreds of thousands of smallest MCSs and several thousand smallest constrained MCSs in genome-scale networks (<xref ref-type="table" rid="pcbi-1003378-t003">Table 3</xref>) which has not been achieved before. The large set of smallest cMCSs should suffice to characterize the space of the most efficient intervention strategies from which, in metabolic engineering applications, the most promising ones can be selected, possibly by screening the cMCSs via certain performance parameters.</p>
<p>The algorithmic advantage of the presented approach lies thus in the possibility to quickly (compared to other approaches) calculate the smallest (c)MCSs with neither network size nor the number of elements in the (c)MCSs posing major challenges. With these results and due to the fact that the approach of (c)MCSs allows the setup of complex intervention problems in a flexible and convenient way, we expect that a large number of metabolic network studies can benefit from our conceived framework.</p>
<p>An interesting aspect for future work will be to investigate how far ALGO2 (the sub-routine used for shortest EM calculation) can be generalized to enumerate also other elementary sets arising in different contexts of computational biology (e.g., for calculating minimal intervention sets in signaling or regulatory networks <xref ref-type="bibr" rid="pcbi.1003378-Samaga1">[32]</xref>).</p>
</sec></body>
<back>
<ack>
<p>We are grateful to Oliver Hädicke for valuable hints and discussions.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1003378-Oberhardt1"><label>1</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Oberhardt</surname><given-names>MA</given-names></name>, <name name-style="western"><surname>Palsson</surname><given-names>BØ</given-names></name>, <name name-style="western"><surname>Papin</surname><given-names>JA</given-names></name> (<year>2009</year>) <article-title>Applications of genome-scale metabolic reconstructions</article-title>. <source>Molecular Systems Biology</source> <volume>5</volume>: <fpage>320</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Trinh1"><label>2</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Trinh</surname><given-names>CT</given-names></name>, <name name-style="western"><surname>Wlaschin</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Srienc</surname><given-names>F</given-names></name> (<year>2009</year>) <article-title>Elementary mode analysis: A useful metabolic pathway analysis tool for characterizing cellular metabolism</article-title>. <source>Applied Microbiology and Biotechnology</source> <volume>81</volume>: <fpage>813</fpage>–<lpage>826</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Orth1"><label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Orth</surname><given-names>JD</given-names></name>, <name name-style="western"><surname>Thiele</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Palsson</surname><given-names>BØ</given-names></name> (<year>2010</year>) <article-title>What is flux balance analysis?</article-title> <source>Natue Biotechnology</source> <volume>28</volume>: <fpage>245</fpage>–<lpage>248</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Lewis1"><label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lewis</surname><given-names>NE</given-names></name>, <name name-style="western"><surname>Nagarajan</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Palsson</surname><given-names>BØ</given-names></name> (<year>2012</year>) <article-title>Constraining the metabolic genotype-phenotype relationship using a phylogeny of in silico methods</article-title>. <source>Nat Rev Microbiol</source> <volume>10</volume>: <fpage>291</fpage>–<lpage>305</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Schuster1"><label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Schuster</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Fell</surname><given-names>DA</given-names></name>, <name name-style="western"><surname>Dandekar</surname><given-names>T</given-names></name> (<year>2000</year>) <article-title>A general definition of metabolic pathways useful for systematic organization and analysis of complex metabolic networks</article-title>. <source>Nature Biotechnology</source> <volume>18</volume>: <fpage>326</fpage>–<lpage>332</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Gagneur1"><label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gagneur</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name> (<year>2004</year>) <article-title>Computation of elementary modes: a unifying framework and the new binary approach</article-title>. <source>BMC Bioinformatics</source> <volume>5</volume>: <fpage>175</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Terzer1"><label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Terzer</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Stelling</surname><given-names>J</given-names></name> (<year>2008</year>) <article-title>Large-scale computation of elementary flux modes with bit pattern trees</article-title>. <source>Bioinformatics</source> <volume>24</volume>: <fpage>2229</fpage>–<lpage>2235</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Burgard1"><label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Burgard</surname><given-names>AP</given-names></name>, <name name-style="western"><surname>Pharkya</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Maranas</surname><given-names>CD</given-names></name> (<year>2003</year>) <article-title>OptKnock: a bilevel programming framework for identifying gene knockout strategies for microbial strain optimization</article-title>. <source>Biotechnology and Bioengineering</source> <volume>84</volume>: <fpage>647</fpage>–<lpage>657</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Tepper1"><label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tepper</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Shlomi</surname><given-names>T</given-names></name> (<year>2010</year>) <article-title>Predicting metabolic engineering knockout strategies for chemical production: accounting for competing pathways</article-title>. <source>Bioinformatics</source> <volume>26</volume>: <fpage>536</fpage>–<lpage>543</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Hdicke1"><label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hädicke</surname><given-names>O</given-names></name>, <name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name> (<year>2011</year>) <article-title>Computing complex metabolic intervention strategies using constrained minimal cut sets</article-title>. <source>Metabolic Engineering</source> <volume>13</volume>: <fpage>204</fpage>–<lpage>213</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Kim1"><label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kim</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Reed</surname><given-names>JL</given-names></name> (<year>2010</year>) <article-title>OptORF: Optimal metabolic and regulatory perturbations for metabolic engineering of microbial strains</article-title>. <source>BMC Systems Biology</source> <volume>4</volume>: <fpage>53</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Zomorrodi1"><label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Zomorrodi</surname><given-names>AR</given-names></name>, <name name-style="western"><surname>Suthers</surname><given-names>PF</given-names></name>, <name name-style="western"><surname>Ranganathan</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Maranas</surname><given-names>CD</given-names></name> (<year>2012</year>) <article-title>Mathematical optimization applications in metabolic networks</article-title>. <source>Metabolic Engineering</source> <volume>14</volume>: <fpage>672</fpage>–<lpage>686</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Mahadevan1"><label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Mahadevan</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Schilling</surname><given-names>CH</given-names></name> (<year>2003</year>) <article-title>The effects of alternate optimal solutions in constraint-based genome-scale metabolic models</article-title>. <source>Metabolic Engineering</source> <volume>5</volume>: <fpage>264</fpage>–<lpage>276</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Fong1"><label>14</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Fong</surname><given-names>SS</given-names></name>, <name name-style="western"><surname>Burgard</surname><given-names>AP</given-names></name>, <name name-style="western"><surname>Herring</surname><given-names>CD</given-names></name>, <name name-style="western"><surname>Knight</surname><given-names>EM</given-names></name>, <name name-style="western"><surname>Blattner</surname><given-names>FR</given-names></name>, <etal>et al</etal>. (<year>2005</year>) <article-title>In silico design and adaptive evolution of Escherichia coli for production of lactic acid</article-title>. <source>Biotechnology and Bioengineering</source> <volume>91</volume>: <fpage>643</fpage>–<lpage>648</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Suthers1"><label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Suthers</surname><given-names>PF</given-names></name>, <name name-style="western"><surname>Zomorrodi</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Maranas</surname><given-names>CD</given-names></name> (<year>2009</year>) <article-title>Genome-scale gene/reaction essentiality and synthetic lethality analysis</article-title>. <source>Molecular Systems Biology</source> <volume>5</volume>: <fpage>301</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Nogales1"><label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Nogales</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Gudmunsson</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Thiele</surname><given-names>I</given-names></name> (<year>2012</year>) <article-title>An in silico re-design of the metabolism in Thermotoga maritima for increased biohydrogen production</article-title>. <source>Int J Hydrogen Energ</source> <volume>37</volume>: <fpage>12205</fpage>–<lpage>12218</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Trinh2"><label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Trinh</surname><given-names>CT</given-names></name>, <name name-style="western"><surname>Unrean</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Srienc</surname><given-names>F</given-names></name> (<year>2008</year>) <article-title>Minimal Escherichia coli cell for the most efficient production of ethanol from hexoses and pentoses</article-title>. <source>Applied Environmental Microbiology</source> <volume>74</volume>: <fpage>3634</fpage>–<lpage>3643</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Klamt1"><label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Gilles</surname><given-names>ED</given-names></name> (<year>2004</year>) <article-title>Minimal cut sets in biochemical reaction networks</article-title>. <source>Bioinformatics</source> <volume>20</volume>: <fpage>226</fpage>–<lpage>234</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Klamt2"><label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name> (<year>2006</year>) <article-title>Generalized concept of minimal cut sets in biochemical networks</article-title>. <source>Biosystems</source> <volume>83</volume>: <fpage>233</fpage>–<lpage>247</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Haus1"><label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Haus</surname><given-names>UU</given-names></name>, <name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Stephen</surname><given-names>T</given-names></name> (<year>2008</year>) <article-title>Computing knock-out strategies in metabolic networks</article-title>. <source>Journal of Computational Biology</source> <volume>15</volume>: <fpage>259</fpage>–<lpage>268</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Jungreuthmayer1"><label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Jungreuthmayer</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Zanghellini</surname><given-names>J</given-names></name> (<year>2012</year>) <article-title>Designing optimal cell factories: integer programming couples elementary mode analysis with regulation</article-title>. <source>BMC Systems Biology</source> <volume>6</volume>: <fpage>103</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Ballerstein1"><label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ballerstein</surname><given-names>K</given-names></name>, <name name-style="western"><surname>von Kamp</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Haus</surname><given-names>UU</given-names></name> (<year>2012</year>) <article-title>Minimal cut sets in a metabolic network are elementary modes in a dual network</article-title>. <source>Bioinformatics</source> <volume>28</volume>: <fpage>381</fpage>–<lpage>387</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-deFigueiredo1"><label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>de Figueiredo</surname><given-names>LF</given-names></name>, <name name-style="western"><surname>Podhorski</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Rubio</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Kaleta</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Beasley</surname><given-names>JE</given-names></name>, <etal>et al</etal>. (<year>2009</year>) <article-title>Computing the shortest elementary flux modes in genome-scale metabolic networks</article-title>. <source>Bioinformatics</source> <volume>25</volume>: <fpage>3158</fpage>–<lpage>3165</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Feist1"><label>24</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Feist</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>Henry</surname><given-names>CS</given-names></name>, <name name-style="western"><surname>Reed</surname><given-names>JL</given-names></name>, <name name-style="western"><surname>Krummenacker</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Joyce</surname><given-names>AR</given-names></name>, <etal>et al</etal>. (<year>2007</year>) <article-title>A genome-scale metabolic reconstruction for Escherichia coli K-12 MG1655 that accounts for 1260 ORFs and thermodynamic information</article-title>. <source>Molecular Systems Biology</source> <volume>3</volume>: <fpage>121</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Gleeson1"><label>25</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gleeson</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Ryan</surname><given-names>J</given-names></name> (<year>1990</year>) <article-title>Identifying minimally infeasible subsystems of inequalities</article-title>. <source>ORSA Journal on Computing</source> <volume>2</volume>: <fpage>61</fpage>–<lpage>63</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Klamt3"><label>26</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Gilles</surname><given-names>ED</given-names></name> (<year>2007</year>) <article-title>Structural and functional analysis of cellular networks with CellNetAnalyzer</article-title>. <source>BMC Systems Biology</source> <volume>1</volume>: <fpage>2</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Klamt4"><label>27</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name>, <name name-style="western"><surname>von Kamp</surname><given-names>A</given-names></name> (<year>2011</year>) <article-title>An application programming interface for CellNetAnalyzer</article-title>. <source>BioSystems</source> <volume>105</volume>: <fpage>162</fpage>–<lpage>168</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Varma1"><label>28</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Varma</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Palsson</surname><given-names>BØ</given-names></name> (<year>1994</year>) <article-title>Stoichiometric flux balance models quantitatively predict growth and metabolic by-product secretion in wild-type Escherichia coli W3110</article-title>. <source>Applied and Environmental Microbiology</source> <volume>60</volume>: <fpage>3724</fpage>–<lpage>3731</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Feist2"><label>29</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Feist</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>Zielinski</surname><given-names>DC</given-names></name>, <name name-style="western"><surname>Orth</surname><given-names>JD</given-names></name>, <name name-style="western"><surname>Schellenberger</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Herrgard</surname><given-names>MJ</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>Model-driven evaluation of the production potential for growth-coupled products of Escherichia coli</article-title>. <source>Metabolic Engineering</source> <volume>12</volume>: <fpage>173</fpage>–<lpage>186</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Zhuang1"><label>30</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Zhuang</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Yang</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Cluett</surname><given-names>WR</given-names></name>, <name name-style="western"><surname>Mahadevan</surname><given-names>R</given-names></name> (<year>2013</year>) <article-title>Dynamic strain scanning optimization: an efficient strain design strategy for balanced yield, titer, and productivity. DySScO strategy for strain design</article-title>. <source>BMC Biotechnology</source> <volume>13</volume>: <fpage>8</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Patil1"><label>31</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Patil</surname><given-names>KR</given-names></name>, <name name-style="western"><surname>Rocha</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Förster</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Nielsen</surname><given-names>J</given-names></name> (<year>2005</year>) <article-title>Evolutionary programming as a platform for in silico metabolic engineering</article-title>. <source>BMC Bioinformatics</source> <volume>6</volume>: <fpage>308</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003378-Samaga1"><label>32</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Samaga</surname><given-names>R</given-names></name>, <name name-style="western"><surname>von Kamp</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name> (<year>2010</year>) <article-title>Computing combinatorial intervention strategies and failure modes in signaling networks</article-title>. <source>Journal of Computational Biology</source> <volume>17</volume>: <fpage>39</fpage>–<lpage>53</lpage>.</mixed-citation>
</ref>
</ref-list></back>
</article>