<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id><journal-title-group>
<journal-title>PLoS Computational Biology</journal-title></journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-13-02114</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1003896</article-id>
<article-categories><subj-group subj-group-type="heading"><subject>Education</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Science policy</subject><subj-group><subject>Science education</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Social sciences</subject></subj-group></article-categories>
<title-group>
<article-title>Teaching Bioinformatics in Concert</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Goodman</surname><given-names>Anya L.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Dekhtyar</surname><given-names>Alex</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group>
<aff id="aff1"><label>1</label><addr-line>Department of Chemistry and Biochemistry, California Polytechnic State University, San Luis Obispo, California, United States of America</addr-line></aff>
<aff id="aff2"><label>2</label><addr-line>Department of Computer Science, California Polytechnic State University, San Luis Obispo, California, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Fox</surname><given-names>Joanne A.</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group>
<aff id="edit1"><addr-line>University of British Columbia, Canada</addr-line></aff>
<author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">agoodman@calpoly.edu</email> (ALG); <email xlink:type="simple">dekhtyar@calpoly.edu</email> (AD)</corresp>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn>
</author-notes>
<pub-date pub-type="collection"><month>11</month><year>2014</year></pub-date>
<pub-date pub-type="epub"><day>20</day><month>11</month><year>2014</year></pub-date>
<volume>10</volume>
<issue>11</issue>
<elocation-id>e1003896</elocation-id><permissions>
<copyright-year>2014</copyright-year>
<copyright-holder>Goodman, Dekhtyar</copyright-holder><license xlink:type="simple"><license-p>This is an open-access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions>
<abstract>
<p>Can biology students without programming skills solve problems that require computational solutions? They can if they learn to cooperate effectively with computer science students. The goal of the in-concert teaching approach is to introduce biology students to computational thinking by engaging them in collaborative projects structured around the software development process. Our approach emphasizes development of interdisciplinary communication and collaboration skills for both life science and computer science students.</p>
</abstract>
<funding-group><funding-statement>This work was partially supported by NSF grant 1140828. Genomics Education Partnership (GEP) is supported by HHMI grant #52007051 to and by Washington University in St. Louis. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="5"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>Development of computational skills is recognized as an important goal for life science students <xref ref-type="bibr" rid="pcbi.1003896-National1">[1]</xref>–<xref ref-type="bibr" rid="pcbi.1003896-Welch1">[6]</xref>; however, current biology and biochemistry curricula at most institutions cannot easily accommodate additional courses in computing sciences. Is it possible to teach computational skills to biologists in a single course? In 2009, Pevzner and Shamir posed this question as a pedagogical challenge: “How should the research and education community design a bioinformatics course that (i) assumes few computational prerequisites, (ii) assumes no knowledge of programming, and (iii) instills in students a meaningful understanding of computational ideas and ensures that they are able to apply them?” <xref ref-type="bibr" rid="pcbi.1003896-Pevzner1">[2]</xref></p>
<p>There are two approaches to addressing this challenge. The first approach involves building an introductory programming course into a bioinformatics course, engaging students in the entire process of computational problem solving: problem analysis, design, implementation, and evaluation of the solution. This requires teaching students a programming language (typically Perl or Python) as the means of expressing their solutions. The second approach is to focus on a specific aspect in the problem-solving process, working with students on developing a subset of skills.</p>
<p>Each approach has its own advantages and drawbacks. With the first approach, the students can go through the entire problem-solving process, but the scope of problems they can solve in the confines of a single course is limited. One example of successful implementation of this approach is described by Libeskind-Hadas and Bush <xref ref-type="bibr" rid="pcbi.1003896-LibeskindHadas1">[7]</xref>. This approach is best suited for curricula that expose students to bioinformatics early and provide subsequent opportunities to advance students' computational skills through additional courses. With the second approach, students go through the specific stages of the problem-solving process working on more complex problems, but they cannot complete the entire problem-solving process on their own. We describe in this essay our initial attempts to implement the second approach and to introduce computational thinking to biology students in a course that does not require any programming from these students.</p>
<p>Can there be computational thinking without programming? Yes! There has been a broad consensus among computer science education researchers and practitioners that the term “computational thinking” is distinct from the term “programming” <xref ref-type="bibr" rid="pcbi.1003896-Wing1">[8]</xref>–<xref ref-type="bibr" rid="pcbi.1003896-National3">[11]</xref>. Programming is just one part of the software development process that can be roughly divided into four stages: analysis/requirements, design, implementation (aka programming), and evaluation. The first and the last stages do not require any knowledge of programming languages but rely on solid understanding of the problem that needs to be solved. In our course for life science students, we concentrated on these two stages. The first stage requires the skill recently defined as one of the core competencies for bioinformatics: “an ability to analyze a problem and identify and define the computing requirements appropriate to its solution” <xref ref-type="bibr" rid="pcbi.1003896-Welch1">[6]</xref>.</p>
<p>Since we limit the goals of the life science students to analyzing problems, writing program requirements, and evaluating computational solutions and software systems, we need to provide the missing pieces (program design and implementation) in order to complete the problem-solving process. In our course design, we bring together students from two distinct but interconnected courses: Bioinformatics Applications (life science curriculum) and Bioinformatics Algorithms (computer science curriculum). Students in each course are juniors and seniors who have already attained introductory or intermediate skills in their respective disciplines. They attend separate lectures focused on discipline-specific content and then collaborate in the laboratory to build software for solving biological problems.</p>
<p>Is this approach consistent with development of computational thinking? The definition developed by Wing with input from Ato, Cuny, and Snyder refers to computational thinking as “the thought processes involved in formulating a problem and expressing its solution(s) in such a way that a computer—human or machine—can effectively carry out” <xref ref-type="bibr" rid="pcbi.1003896-Wing3">[12]</xref>. Our approach separates the two core components of the definition from each other. “Formulating a problem” is carried out by the life science students, while “expressing the solution” is the job of the computer science students. By separating the two components and stressing only one for each group of students, we are able to significantly increase the complexity of problems that our multidisciplinary student teams can solve. In addition, students practice collaboration and communication skills. Below, we discuss the key features of our approach.</p>
</sec><sec id="s2">
<title>In-Concert Teaching</title>
<p>In-concert teaching is the approach of teaching two distinct courses in a concerted way. The courses include separate discipline-specific lectures and a shared laboratory component. Each course is taught by the instructor from its respective field and targets distinct audiences of students, but the course materials are developed by two instructors jointly in a coordinated way. Students from both classes form interdisciplinary teams for the duration of the course and work together on laboratory assignments, contributing their discipline-specific knowledge and skills. We call this approach “in-concert” teaching to emphasize the concerted efforts of students and instructors from different disciplines who are working towards accomplishing a common goal <xref ref-type="bibr" rid="pcbi.1003896-Dekhtyar1">[13]</xref>.</p>
</sec><sec id="s3">
<title>Distinct and Shared Learning Objectives</title>
<p>Our approach recognizes distinct goals of the life science (BIO) and computer science (CS) courses. We identified distinct, discipline-specific learning objectives, as well as those that are shared. CS students need to learn algorithms and use them for practical problem-solving, while BIO students need to learn to use bioinformatics tools in research. The discipline-specific learning objectives do not require interactions with experts from another discipline, but we believe that cross-disciplinary interactions promote and facilitate student learning within each discipline. In-concert teaching allowed us to expand the list of learning objectives for each group of students to include interdisciplinary collaboration and communication. CS students learn to work with clients who are not programmers, and by the end of the course, they should be able to</p>
<list list-type="order"><list-item>
<p>elicit requirements for new programs,</p>
</list-item><list-item>
<p>communicate during the software development process to make sure the software meets the needs of the clients, and</p>
</list-item><list-item>
<p>maintain/modify the delivered software.</p>
</list-item></list>
<p>Biology students should be able to</p>
<list list-type="order"><list-item>
<p>convert a biological question into a computational one,</p>
</list-item><list-item>
<p>write program requirements describing the function of the software needed to answer the question, and</p>
</list-item><list-item>
<p>design test cases to verify that the program developed by their CS partners is working correctly.</p>
</list-item></list>
<p>Both groups also have shared learning objectives:</p>
<list list-type="order"><list-item>
<p>communicate relevant discipline-specific issues to their partners and</p>
</list-item><list-item>
<p>cooperate effectively with colleagues within and outside their own discipline on a project.</p>
</list-item></list>
</sec><sec id="s4">
<title>Research Problems That Require Collaborative Effort</title>
<p>To create the need for collaboration, instructors of in-concert courses need to identify problems that align with the learning objectives and fall within the scope of each course. The problems have to be complex and interdisciplinary, so that neither group of students can solve them on their own, but also be amenable to analysis by undergraduate students in a fairly short amount of time. Based on our participation in the Genomics Education Partnership (GEP, <ext-link ext-link-type="uri" xlink:href="http://gep.wustl.edu" xlink:type="simple">http://gep.wustl.edu</ext-link>, <xref ref-type="bibr" rid="pcbi.1003896-Lopatto1">[14]</xref>–<xref ref-type="bibr" rid="pcbi.1003896-Shaffer2">[16]</xref>), we chose problems related to annotation and comparative analysis of fruit fly genomes. In a set of joint lab assignments distributed over a ten-week quarter, students studied primarily heterochromatic dot/fourth chromosome and a euchromatic region on chromosome 3L. They compared the two regions based on guanine-cytosine (GC) content, gene characteristics, and repetitive sequences. They also developed a program for manipulating GEP data and checking the quality of student-submitted annotations. BIO students also worked on genome annotation projects, which required the following research skills: gathering evidence using bioinformatics tools, analyzing data, and formulating conclusions. In contrast to annotation, comparative genome analysis problems were intentionally poorly defined (more open ended) and gave students an opportunity to practice a complementary set of research skills: defining research questions and developing new tools for answering these questions.</p>
<p>The challenge of comparative genome analysis aligned well with the core content of the CS course, which included simple DNA analysis techniques and measures (GC content, codon bias, and gene content), string comparison (longest common substring, repeat detection, and palindrome discovery), and local and global alignment. CS students built research tools that required the implementation of the data structures, algorithms, and techniques studied in class while also tailoring their implementation to the actual specifics of the problems.</p>
</sec><sec id="s5">
<title>Interdependent Roles and Peer Instruction</title>
<p>Recognizing the distinct learning objectives for members of the interdisciplinary teams, we structured teamwork around the software development process and explained to students their distinct and interdependent roles (<xref ref-type="fig" rid="pcbi-1003896-g001">Figure 1</xref>). Biology students worked in groups of two or three to discuss a problem and write a formal program requirements document specifying input, output, and processing needs. During the joint laboratory, BIO students presented these documents to their CS partners and discussed them in detail. While CS students built software, BIO students prepared test cases for evaluation of the software. BIO and CS students worked together on testing the software. Ultimately, biology students were responsible for answering the original question and compiling data from several lab assignments into a final research paper, while CS students supported the delivered software for the remainder of the quarter, providing, upon request, bug fixes, as well as improvements to the tools.</p>
<fig id="pcbi-1003896-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003896.g001</object-id><label>Figure 1</label><caption>
<title>In-concert teaching approach: Clearly defined and interdependent student roles in the joint laboratory are built around software development process.</title>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003896.g001" position="float" xlink:type="simple"/></fig>
<p>Cross-disciplinary peer instruction was an important component of the course, and we provided students with many opportunities to teach each other. The instruction of CS students in biology was done mainly by their biology partners. Aside from an introductory lecture taught by the BIO course instructor in the CS class, the life science students decided what information was relevant and how to explain concepts of molecular biology to colleagues from a different field. In the BIO class, the CS instructor introduced stages of the software engineering process and explained the role of BIO students in the process, focusing on the development of program requirements. During software testing, which resembles troubleshooting experimental procedures, BIO and CS students learned from each other by contributing different types of tests. BIO students designed small-scale tests and provided expected results based on their knowledge of real data and existing software.</p>
</sec><sec id="s6">
<title>Student Perception of Working on the Interdisciplinary Teams</title>
<p>We implemented in-concert teaching in our bioinformatics courses in the spring quarter of 2012 (24 BIO and 35 CS students) and 2013 (23 BIO and 26 CS students; course syllabi are provided as <xref ref-type="supplementary-material" rid="pcbi.1003896.s001">Text S1</xref>). BIO students included mostly junior- and senior-level students majoring in molecular and cell biology, biochemistry, agriculture, and biomedical engineering. Some of the BIO students completed a prior course in statistics, and only one student in 2013 had programming experience. Most students taking the CS course were in their senior year and came with a considerable computer science background that included the introductory CS sequence (taught in C and Java), data structures, systems programming, and algorithms. Each course included three hours of lecture and three hours of lab per week. The lectures were discipline-specific and were taught separately. The lab sessions took place in two adjacent computer classrooms where students spent most of their time working on joint activities.</p>
<p>We asked students to share their experiences and perceptions of our courses via a voluntary exit survey. Selected quotes in <xref ref-type="table" rid="pcbi-1003896-t001">Table 1</xref> are representative examples of student responses to questions regarding teamwork. Communication was listed most prominently both as the benefit and the challenge of working across disciplinary boundaries. When students were asked what they liked the most about the course, the majority of responses fit into three categories: (1) working with partners, (2) working on meaningful projects/real research, and (3) learning specific content from their own discipline. For CS students, the most frequently mentioned category was “working with partners” (15/28 or 53% in 2012, 10/18 or 55% in 2013), while for BIO students, the responses were fairly equally distributed between the three categories (∼30% for each category). We also asked students about challenges and changes they could suggest for the course. These are discussed below. Overall, exit surveys and informal discussions with students after the course suggest that students perceive our bioinformatics courses taught in concert as an extremely challenging but equally worthy experience.</p>
<table-wrap id="pcbi-1003896-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003896.t001</object-id><label>Table 1</label><caption>
<title>Selected student responses to questions about cross-disciplinary teamwork from a voluntary exit survey.</title>
</caption><alternatives><graphic id="pcbi-1003896-t001-1" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003896.t001" xlink:type="simple"/>
<table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" rowspan="1" colspan="1">Question</td>
<td align="left" rowspan="1" colspan="1">Examples of BIO Answer</td>
<td align="left" rowspan="1" colspan="1">Examples of CS Answer</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1">What were the benefits of working with [partners from the other discipline]?</td>
<td align="left" rowspan="1" colspan="1">“Learning how differently we think from each other and how to communicate more effectively.”</td>
<td align="left" rowspan="1" colspan="1">“Having real, nontechnical customers helps you understand the nature of tasks outside the classroom: collaborating with nonsoftware people is unique, their needs are sometimes ambiguous, and there's a frightening but eye-opening reliance on them for domain-specific information. You also get to learn about an interesting field of study that you may have never considered working in before.”</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">“Learned to communicate more effectively with people who don't have as [much] of a background in science as we do. We were more able to appreciate what CS people do, and it was fun to work together designing software.”</td>
<td align="left" rowspan="1" colspan="1"/>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">What were the challenges/drawbacks of working with [partners from the other discipline]?</td>
<td align="left" rowspan="1" colspan="1">“Really the same as the benefits…differences in background knowledge and communication.”</td>
<td align="left" rowspan="1" colspan="1">“They struggled tremendously to convey what they wanted the software to do. A lot of the time, also, they didn't have a clear idea of the data they were looking for. Because of that, we were often lost in our job as programmers.…when doing implementation, we usually had to guess their eventual needs or grill them for better details—their written specifications were never enough. This added extra time pressure too, because we'd spend a substantial portion of each lab attempting to work those things out…”</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">“When…program functions were not working as expected, that was frustrating. It required patience for all to discuss as a group what was incorrect+brainstorm why.”</td>
<td align="left" rowspan="1" colspan="1"/>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">“They did not know what we wanted, and we did not know what they could do.”</td>
<td align="left" rowspan="1" colspan="1"/>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">How did you overcome the challenges?</td>
<td align="left" rowspan="1" colspan="1">“Learning to speak up when something is not correct on either side of the team and trying to teach each other bits of background info.”</td>
<td align="left" rowspan="1" colspan="1">“We overcame the challenges by talking about the problem and teaching each other things that the other majors did not know…”</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">“We had to discuss frequently and rewind our explanations until they made sense.”</td>
<td align="left" rowspan="1" colspan="1"/>
</tr>
</tbody>
</table>
</alternatives></table-wrap></sec><sec id="s7">
<title>Challenges</title>
<p>The main pedagogical challenges of the in-concert teaching model are (a) the need to align the content of the two courses and to create a meaningful interdisciplinary experience through the shared laboratory assignments and (b) the need for students to function as experts in their discipline on an interdisciplinary team. We addressed the first challenge by careful planning and preparation, which resulted in developing syllabi for both classes that linked specific lecture topics to laboratory assignments.</p>
<p>The second set of challenges is more difficult to overcome. No single member of the interdisciplinary team has sufficient knowledge/skills to complete a joint lab assignment independently. Rather, the assignments rely on the ability of students to understand “their” parts of the problem and contribute their expertise to the solution (<xref ref-type="fig" rid="pcbi-1003896-g001">Figure 1</xref>). BIO students are expected to understand the nature of the assignment. CS students are expected to be proficient software developers who understand the software requirements for each assignment and build the software. In addition, team members have to get information efficiently across disciplinary boundaries: biologists must put together requirements that CS students can use, while CS students must train biologists in how to use the software. We are addressing this set of challenges by tightening course prerequisites to ensure that only students with appropriate expertise in their discipline are enrolled and by adjusting the lab workflow to require more interdisciplinary interactions.</p>
<p>Finally, assessment presents a major challenge for any educational innovation. It is particularly difficult for us because, to our knowledge, assessment tools for measuring computational thinking skills independently of programming skills are not available. We do use student artifacts (requirements and code) to assess the success of each team. In grading the labs, both artifacts were evaluated, and separate scores were assigned to each. The requirements document score evaluates how well BIO students understood the initial problem they were asked to solve and how well they were able to translate their understanding into a software specification. The software score evaluates the entirety of the process concentrating on the work of CS students. In the 2013 version of the courses, BIO students could request further improvements in the programs throughout the quarter; we collected and evaluated all requests and the modified programs. We are able to assess teams' success in the software development process, and preliminary results of this assessment are described in <xref ref-type="bibr" rid="pcbi.1003896-Dekhtyar1">[13]</xref>. The next challenge is to develop tools for assessing computational thinking skills of individual students without relying on the use of any programming language.</p>
</sec><sec id="s8">
<title>Conclusions</title>
<p>As students advance through their education, they focus more and more on their specific discipline and rarely interact with students in other disciplines in a professional capacity. In most endeavors outside of academia, professionals rarely work in isolation. Anytime a diverse group of professionals is presented with a goal, their success depends on their ability to cooperate effectively across disciplinary boundaries. While this skill is often learned by trial and error on the job, it can also be learned in the classroom. The difference in our approach is that we use a well-established process (software engineering lifecycle) and specifically defined interdependent roles for students in different disciplines to structure collaborative work. We believe that in addition to acquiring communication skills, students deepen knowledge in their own discipline by acting in the roles of experts. In addition, life sciences students are exposed to computational thinking related to requirements specification and software evaluation. The key to our approach is instructor collaboration and identification of a suitable problem: one that is relevant to the learning objectives of each group of students, requires expertise from multiple disciplines, and cannot be solved by either group on their own.</p>
</sec><sec id="s9">
<title>Acknowledgments</title>
<p>We thank Sally Elgin, Wilson Leung, and the members of the GEP community for discussions, support, and research opportunities for us and our students. We thank Chris Kitts and Michael Black for feedback on the manuscript. We thank Cal Poly Computer Science department for providing facilities to accommodate the classes and our enthusiastic and dedicated teaching assistants Aldrin Montana (2012, 2013), Jan Soliman (2013), and Ryan Verdon (2013).</p>
</sec><sec id="s10">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1003896.s001" mimetype="application/pdf" xlink:href="info:doi/10.1371/journal.pcbi.1003896.s001" position="float" xlink:type="simple"><label>Text S1</label><caption>
<p><bold>Syllabi from the courses taught in 2013.</bold></p>
<p>(PDF)</p>
</caption></supplementary-material></sec></body>
<back><ref-list>
<title>References</title>
<ref id="pcbi.1003896-National1"><label>1</label>
<mixed-citation publication-type="book" xlink:type="simple">National Research Council (2003) Bio 2010: Transforming Undergraduate Education for Future Research Biologists. Washington (D.C.): National Academies Press. Available: <ext-link ext-link-type="uri" xlink:href="http://www.nap.edu/openbook.php?isbn=0309085357http://www.nap.edu/openbook.php?isbn=0309085357" xlink:type="simple">http://www.nap.edu/openbook.php?isbn=0309085357http://www.nap.edu/openbook.php?isbn=0309085357</ext-link>. Accessed 20 October 2014.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Pevzner1"><label>2</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Shamir</surname><given-names>R</given-names></name> (<year>2009</year>) <article-title>Computing Has Changed Biology—Biology Education Must Catch Up</article-title>. <source>Science</source> <volume>325</volume>: <fpage>541</fpage>–<lpage>542</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-National2"><label>3</label>
<mixed-citation publication-type="book" xlink:type="simple">National Research Council (2009) A New Biology for the 21st Century: Ensuring the United States Leads the Coming Biology Revolution. Washington (D.C.): National Academies Press. Available: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/books/NBK32509/" xlink:type="simple">http://www.ncbi.nlm.nih.gov/books/NBK32509/</ext-link>. Accessed 20 October 2014.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Tan1"><label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tan</surname><given-names>TW</given-names></name>, <name name-style="western"><surname>Lim</surname><given-names>SJ</given-names></name>, <name name-style="western"><surname>Khan</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>Ranganathan</surname><given-names>S</given-names></name> (<year>2009</year>) <article-title>A proposed minimum skill set for university graduates to meet the informatics needs and challenges of the “-omics” era</article-title>. <source>BMC Genomics</source> <volume>10 Suppl 3</volume>: <fpage>S36</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Brewer1"><label>5</label>
<mixed-citation publication-type="book" xlink:type="simple">Brewer C, Smith D, editors (2011) Vision and Change in undergraduate biology education: A call to action. New York: AAAS. Available: <ext-link ext-link-type="uri" xlink:href="http://visionandchange.org/files/2013/11/aaas-VISchange-web1113.pdf" xlink:type="simple">http://visionandchange.org/files/2013/11/aaas-VISchange-web1113.pdf</ext-link>. Accessed 20 October 2014.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Welch1"><label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Welch</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Lewitter</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Schwartz</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Brooksbank</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Radivojac</surname><given-names>P</given-names></name>, <etal>et al</etal>. (<year>2014</year>) <article-title>Bioinformatics curriculum guidelines: toward a definition of core competencies</article-title>. <source>PLoS Comput Biol</source> <volume>10</volume>: <fpage>e1003496</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-LibeskindHadas1"><label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Libeskind-Hadas</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Bush</surname><given-names>E</given-names></name> (<year>2013</year>) <article-title>A first course in computing with applications to biology</article-title>. <source>Brief Bioinform</source> <volume>14</volume>: <fpage>610</fpage>–<lpage>617</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Wing1"><label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wing</surname><given-names>J</given-names></name> (<year>2006</year>) <article-title>Computational thinking</article-title>. <source>Commun ACM</source> <volume>49</volume>: <fpage>33</fpage>–<lpage>35</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Wing2"><label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wing</surname><given-names>JM</given-names></name> (<year>2008</year>) <article-title>Computational Thinking and Thinking about Computing</article-title>. <source>Philos Trans R Soc Lond A</source> <volume>366</volume>: <fpage>3717</fpage>–<lpage>3725</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Denning1"><label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Denning</surname><given-names>P</given-names></name> (<year>2009</year>) <article-title>Beyond Computational Thinking: A CACM IT Profession Column</article-title>. <source>Commun ACM</source> <volume>52</volume>: <fpage>28</fpage>–<lpage>30</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-National3"><label>11</label>
<mixed-citation publication-type="book" xlink:type="simple">National Research Council (2010) Report of a Workshop on The Scope and Nature of Computational Thinking. Washington (D.C.): The National Academies Press.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Wing3"><label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wing</surname><given-names>J</given-names></name> (<year>2014 January 10</year>) <article-title>Computational Thinking Benefits Society</article-title>. <source>Social Issues in Computing blog</source> Available: <ext-link ext-link-type="uri" xlink:href="http://socialissues.cs.toronto.edu/2014/01/computational-thinking/" xlink:type="simple">http://socialissues.cs.toronto.edu/2014/01/computational-thinking/</ext-link>. Accessed 20 October 2014.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Dekhtyar1"><label>13</label>
<mixed-citation publication-type="other" xlink:type="simple">Dekhtyar A, Goodman AL, Montana A (2013) Teaching Bioinformatics in Concert: an Interdisciplinary Collaborative Project-based Experience. In: Proceedings of the American Society for Engineering Education Pacific Southwest Conference (ASEE-PSW'2013); April 2013; Riverside, California, United States. Available: <ext-link ext-link-type="uri" xlink:href="http://www.asee.org/documents/conferences/annual/2014/ASEE2014-BestPaper-Zone4.pdf" xlink:type="simple">http://www.asee.org/documents/conferences/annual/2014/ASEE2014-BestPaper-Zone4.pdf</ext-link>. Accessed 20 October 2014.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Lopatto1"><label>14</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lopatto</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Alvarez</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Barnard</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Chandrasekaran</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Chung</surname><given-names>HM</given-names></name>, <etal>et al</etal>. (<year>2008</year>) <article-title>Education Forum: The Genomics Education Partnership</article-title>. <source>Science</source> <volume>322</volume>: <fpage>684</fpage>–<lpage>685</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Shaffer1"><label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Shaffer</surname><given-names>CD</given-names></name>, <name name-style="western"><surname>Alvarez</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Bailey</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Barnard</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Bhalla</surname><given-names>S</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>The Genomics Education Partnership: Successful Integration of Research into Laboratory Classes at a Diverse Group of Undergraduate Institutions</article-title>. <source>CBE Life Sci Educ</source> <volume>9</volume>: <fpage>55</fpage>–<lpage>69</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003896-Shaffer2"><label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Shaffer</surname><given-names>CD</given-names></name>, <name name-style="western"><surname>Alvarez</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Bednarski</surname><given-names>AE</given-names></name>, <name name-style="western"><surname>Dunbar</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Goodman</surname><given-names>AL</given-names></name>, <etal>et al</etal>. (<year>2014</year>) <article-title>A Course-Based Research Experience: How Benefits Change with Increased Investment in Instructional Time</article-title>. <source>CBE Life Sci Educ</source> <volume>13</volume>: <fpage>111</fpage>–<lpage>130</lpage>.</mixed-citation>
</ref>
</ref-list></back>
</article>