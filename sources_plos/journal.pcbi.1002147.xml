<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
  <front>
    <journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
        <publisher-name>Public Library of Science</publisher-name>
        <publisher-loc>San Francisco, USA</publisher-loc>
      </publisher></journal-meta>
    <article-meta><article-id pub-id-type="publisher-id">PCOMPBIOL-D-10-00322</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1002147</article-id><article-categories>
        <subj-group subj-group-type="heading">
          <subject>Education</subject>
        </subj-group>
        <subj-group subj-group-type="Discipline-v2">
          <subject>Biology</subject>
          <subj-group>
            <subject>Computational biology</subject>
          </subj-group>
        </subj-group>
        <subj-group subj-group-type="Discipline">
          <subject>Computational Biology</subject>
        </subj-group>
      </article-categories><title-group><article-title>Biomedical Cloud Computing With Amazon Web Services</article-title></title-group><contrib-group>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Fusaro</surname>
            <given-names>Vincent A.</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
          <xref ref-type="corresp" rid="cor1">
            <sup>*</sup>
          </xref>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Patil</surname>
            <given-names>Prasad</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Gafni</surname>
            <given-names>Erik</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Wall</surname>
            <given-names>Dennis P.</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
          <xref ref-type="aff" rid="aff2">
            <sup>2</sup>
          </xref>
        </contrib>
        <contrib contrib-type="author" xlink:type="simple">
          <name name-style="western">
            <surname>Tonellato</surname>
            <given-names>Peter J.</given-names>
          </name>
          <xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref>
          <xref ref-type="aff" rid="aff2">
            <sup>2</sup>
          </xref>
        </contrib>
      </contrib-group><aff id="aff1"><label>1</label><addr-line>Center for Biomedical Informatics, Harvard Medical School, Boston, Massachusetts, United States of America</addr-line>       </aff><aff id="aff2"><label>2</label><addr-line>Department of Pathology, Beth Israel Deaconess Medical Center, Boston, Massachusetts, United States of America</addr-line>       </aff><contrib-group>
        <contrib contrib-type="editor" xlink:type="simple">
          <name name-style="western">
            <surname>Lewitter</surname>
            <given-names>Fran</given-names>
          </name>
          <role>Editor</role>
          <xref ref-type="aff" rid="edit1"/>
        </contrib>
      </contrib-group><aff id="edit1">Whitehead Institute, United States of America</aff><author-notes>
        <corresp id="cor1">* E-mail: <email xlink:type="simple">vfusaro@hms.harvard.edu</email></corresp>
      <fn fn-type="conflict">
        <p>The authors have declared that no competing interests exist.</p>
      </fn></author-notes><pub-date pub-type="collection">
        <month>8</month>
        <year>2011</year>
      </pub-date><pub-date pub-type="epub">
        <day>25</day>
        <month>8</month>
        <year>2011</year>
      </pub-date><volume>7</volume><issue>8</issue><elocation-id>e1002147</elocation-id><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2011</copyright-year><copyright-holder>Fusaro et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><funding-group><funding-statement>The study was funded by a National Library of Medicine EUREKA grant (PJT; R01LM010130) and an educational grant from Amazon Web Services "Transforming Biomedical Research in the Cloud". The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts>
        <page-count count="6"/>
      </counts></article-meta>
  </front>
  <body>
    <sec id="s1">
      <title>Introduction</title>
      <p>Biomedical research in the post-genome era is intensely data-driven and increasingly more integrative as new technologies are introduced, such as next- or third-generation sequencing, mass spectrometry, and imaging to identify novel biological insights. The volume and complexity of biomedical data is increasing exponentially as faster high-throughput machines are introduced. As a result, many research institutes, biotech companies, pharmaceutical companies, and computational labs are considering cloud computing as a cost-effective alternative to process and store this vast amount of data. Efforts in next-generation sequencing (NGS) <xref ref-type="bibr" rid="pcbi.1002147-Langmead1">[1]</xref>–<xref ref-type="bibr" rid="pcbi.1002147-Schatz1">[3]</xref>, comparative genomics <xref ref-type="bibr" rid="pcbi.1002147-Wall1">[4]</xref>, and proteomics <xref ref-type="bibr" rid="pcbi.1002147-Halligan1">[5]</xref> have already successfully incorporated the cloud to expedite their data processing. The challenge remains to decide how to best take advantage of the flexibility of cloud computing to conduct these and other analyses. The purpose of this overview is three-fold: 1) introduce biomedical cloud computing, 2) provide a concrete methodology detailing how projects are developed on the cloud, and 3) demonstrate cloud computing costs. We assume the reader has a basic understanding of UNIX.</p>
      <p>There are multiple cloud providers, both commercial and open source, including Amazon Web Services (AWS), Rackspace, GoGrid, Nimbus, and Eucalyptus, each contributing to the popularity and globalization of cloud computing. For the purposes of this guide, we focus on the use of AWS as the cloud computing platform and adopt the definition of Vaquero, who states that the cloud is “a large pool of easily usable and accessible virtualized resources (such as hardware, development platforms, and/or services). These resources can be dynamically re-configured to adjust to variable load (scale), allowing for optimum resource utilization” <xref ref-type="bibr" rid="pcbi.1002147-Vaquero1">[6]</xref>. Cloud computing is ideal for projects that require periodic computational bursts, rapid prototyping, or fast turnaround time. Furthermore, the cloud is an attractive alternative to the limitations imposed by a local computing environment such as long job queues, unsupported software, or limited server resources. One key difference between traditional server-based (grid) computing and the cloud is virtualization technology, which enables the partitioning of a server's hardware resources into multiple “instances”, each running its own operating system in isolation from the other instances. In practice, the virtualized instance appears to the user to be an entirely separate computer, even though the virtual instance may share a combination of independent central processing units (CPUs), memory, and storage devices with other virtualized instances. An example of this is running Windows on Mac OS using Parallels or VMware. The economic model for cloud computing is another key difference, where you only pay for what you use, much like electricity or water. In essence, cloud computing is a commodity service that can provide on-demand access to a computational infrastructure and avoids the fixed cost of capital investments in computing hardware, computing maintenance, and personnel.</p>
    </sec>
    <sec id="s2">
      <title>Amazon Web Services</title>
      <p>AWS provides the necessary computing environment, including CPUs, storage, memory (RAM), networking, and operating system, and is an example of “infrastructure as a service” (IaaS). IaaS is popular with computational biologists because it offers more flexibility for designing projects ad hoc. The majority of computational projects will make use of three AWS products (see “Get Started with EC2” at <ext-link ext-link-type="uri" xlink:href="http://docs.amazonwebservices.com/AWSEC2/2009-11-30/GettingStartedGuide/" xlink:type="simple">http://docs.amazonwebservices.com/AWSEC2/2009-11-30/GettingStartedGuide/</ext-link>): Elastic Compute Cloud (EC2), Elastic Block Storage (EBS), and Simple Storage Service (S3). For additional AWS products beyond the scope of this overview, we refer the reader to the AWS Web site (<ext-link ext-link-type="uri" xlink:href="http://aws.amazon.com/" xlink:type="simple">http://aws.amazon.com/</ext-link>). EC2 contains a variety of user selectable instance types that range in computing power and cost (<xref ref-type="table" rid="pcbi-1002147-t001">Table 1</xref>). An instance boots within a few minutes and the user is given root or administrator access. An EBS volume is a storage device that can be attached to a running instance, similar to a USB thumb drive, and currently ranges in size from 1 GB to 1 TB. EBS volumes are redundantly backed up and offer approximately 99.7% durability, but they can be further backed up to S3 by taking a snapshot of the drive (an incremental backup). S3 is an extremely reliable persistent storage system that also makes data readily available over the Internet. To ensure reliability, the file system of S3 is composed of “buckets” that are geographically distributed across Amazon's multiple data centers so that each file is backed up in several locations. Thus, AWS is able to offer 99.999999999% durability and 99.99% availability for file objects. By default all buckets are marked as private; however, Amazon and other institutions are making large datasets available over S3 via public buckets (<ext-link ext-link-type="uri" xlink:href="http://aws.amazon.com/publicdatasets/" xlink:type="simple">http://aws.amazon.com/publicdatasets/</ext-link>). Access to all of AWS's services can be done using either a Web-based console, for beginners, or through the command line using an AWS-specific application programming interface (API), for advanced users. AWS costs are generally based either on an hourly rate or amount of data transferred or stored or other services used (<xref ref-type="table" rid="pcbi-1002147-t001">Table 1</xref>).</p>
      <table-wrap id="pcbi-1002147-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1002147.t001</object-id><label>Table 1</label><caption>
          <title>A summary of AWS pricing for basic computation, storage, and data transfer.</title>
        </caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1002147-t001-1" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002147.t001" xlink:type="simple"/><table>
          <colgroup span="1">
            <col align="left" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <td align="left" colspan="1" rowspan="1">Resource Type</td>
              <td align="left" colspan="1" rowspan="1">Example Use</td>
              <td align="left" colspan="1" rowspan="1">AWS Service</td>
              <td align="left" colspan="1" rowspan="1">Service Unit</td>
              <td align="left" colspan="1" rowspan="1">CPUs (#xGHz)<xref ref-type="table-fn" rid="nt102">1</xref></td>
              <td align="left" colspan="1" rowspan="1">Memory (GB)</td>
              <td align="left" colspan="1" rowspan="1">Cost ($/Hr)<xref ref-type="table-fn" rid="nt105">2</xref></td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <bold>Computation</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">Running a 51-node cluster (50 m2.2xlarge workers and one m1.small master) for 8 hours costs <bold>$400.68</bold>.</td>
              <td align="left" colspan="1" rowspan="1">EC2</td>
              <td align="left" colspan="1" rowspan="1">t1.micro</td>
              <td align="left" colspan="1" rowspan="1">2×1</td>
              <td align="left" colspan="1" rowspan="1">0.6</td>
              <td align="left" colspan="1" rowspan="1">0.020</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">m1.small</td>
              <td align="left" colspan="1" rowspan="1">1×1</td>
              <td align="left" colspan="1" rowspan="1">1.7</td>
              <td align="left" colspan="1" rowspan="1">0.085</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">m1.large</td>
              <td align="left" colspan="1" rowspan="1">2×2</td>
              <td align="left" colspan="1" rowspan="1">7.5</td>
              <td align="left" colspan="1" rowspan="1">0.340</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">m1.xlarge</td>
              <td align="left" colspan="1" rowspan="1">4×2</td>
              <td align="left" colspan="1" rowspan="1">15</td>
              <td align="left" colspan="1" rowspan="1">0.680</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">c1.medium</td>
              <td align="left" colspan="1" rowspan="1">2×2.5</td>
              <td align="left" colspan="1" rowspan="1">1.7</td>
              <td align="left" colspan="1" rowspan="1">0.170</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">c1.xlarge</td>
              <td align="left" colspan="1" rowspan="1">8×2.5</td>
              <td align="left" colspan="1" rowspan="1">7</td>
              <td align="left" colspan="1" rowspan="1">0.680</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">m2.xlarge</td>
              <td align="left" colspan="1" rowspan="1">2×3.25</td>
              <td align="left" colspan="1" rowspan="1">17.1</td>
              <td align="left" colspan="1" rowspan="1">0.500</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">m2.2xlarge</td>
              <td align="left" colspan="1" rowspan="1">4×3.25</td>
              <td align="left" colspan="1" rowspan="1">34.2</td>
              <td align="left" colspan="1" rowspan="1">1.000</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">m2.4xlarge</td>
              <td align="left" colspan="1" rowspan="1">8×3.25</td>
              <td align="left" colspan="1" rowspan="1">68.4</td>
              <td align="left" colspan="1" rowspan="1">2.000</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">cc1.4xlarge</td>
              <td align="left" colspan="1" rowspan="1">2×(4×4.19)<xref ref-type="table-fn" rid="nt103">1a</xref></td>
              <td align="left" colspan="1" rowspan="1">23</td>
              <td align="left" colspan="1" rowspan="1">1.600</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">cg1.4xlarge</td>
              <td align="left" colspan="1" rowspan="1">2×(4×4.19)<xref ref-type="table-fn" rid="nt104">1b</xref></td>
              <td align="left" colspan="1" rowspan="1">22</td>
              <td align="left" colspan="1" rowspan="1">2.100</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <bold>Resource Type</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Example Use</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>AWS Service</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Service Unit</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Size</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Tiers</bold>
                <bold>(per Month)</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Cost ($/GB/Month)</bold>
              </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <bold>Storage</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">Maintaining 5 buckets (4×50 GB data files and 1×30 GB results) for 4 months costs <bold>$32.20</bold>.</td>
              <td align="left" colspan="1" rowspan="1">S3</td>
              <td align="left" colspan="1" rowspan="1">S3 Bucket</td>
              <td align="left" colspan="1" rowspan="1">Virtually unlimited</td>
              <td align="left" colspan="1" rowspan="1">First 1 TB</td>
              <td align="left" colspan="1" rowspan="1">0.140</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">Next 49 TB</td>
              <td align="left" colspan="1" rowspan="1">0.125</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">Next 450 TB</td>
              <td align="left" colspan="1" rowspan="1">0.110</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">Next 500 TB</td>
              <td align="left" colspan="1" rowspan="1">0.095</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">Next 4000 TB</td>
              <td align="left" colspan="1" rowspan="1">0.080</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">5,000+ TB</td>
              <td align="left" colspan="1" rowspan="1">0.055</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">Attaching 3 EBS volumes to an instance (2×100 GB and 1×30 GB) for 1 month costs <bold>$23.00.</bold></td>
              <td align="left" colspan="1" rowspan="1">EBS</td>
              <td align="left" colspan="1" rowspan="1">EBS Volume</td>
              <td align="left" colspan="1" rowspan="1">Up to 1 TB</td>
              <td align="left" colspan="1" rowspan="1">N/A</td>
              <td align="left" colspan="1" rowspan="1">0.100</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <bold>Resource Type</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Example Use</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>AWS Service</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Service Unit</bold>
              </td>
              <td align="left" colspan="2" rowspan="1">
                <bold>Data Transfer Type</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <bold>Cost ($/GB/Month)</bold>
              </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <bold>Data Transfer</bold>
              </td>
              <td align="left" colspan="1" rowspan="1">Uploading 230 GB of data to S3 and downloading 12 GB of results costs <bold>$25.00</bold>.</td>
              <td align="left" colspan="1" rowspan="1">EC2, S3</td>
              <td align="left" colspan="1" rowspan="1">I/O</td>
              <td align="left" colspan="2" rowspan="1">Data IN</td>
              <td align="left" colspan="1" rowspan="1">0.000 (free)</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="2" rowspan="1">Data OUT First 1 GB</td>
              <td align="left" colspan="1" rowspan="1">0.000 (free)</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="2" rowspan="1">Data OUT Next 10 TB</td>
              <td align="left" colspan="1" rowspan="1">0.120</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="2" rowspan="1">Data OUT Next 40 TB</td>
              <td align="left" colspan="1" rowspan="1">0.090</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="2" rowspan="1">Data OUT Next 100 TB</td>
              <td align="left" colspan="1" rowspan="1">0.070</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="2" rowspan="1">Data OUT 150 TB+</td>
              <td align="left" colspan="1" rowspan="1">0.050</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="2" rowspan="1">Between AWS Services<xref ref-type="table-fn" rid="nt106">3</xref></td>
              <td align="left" colspan="1" rowspan="1">0.000</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">EBS</td>
              <td align="left" colspan="1" rowspan="1">I/O<xref ref-type="table-fn" rid="nt107">4</xref></td>
              <td align="left" colspan="2" rowspan="1">Per 1 m I/O Requests</td>
              <td align="left" colspan="1" rowspan="1">0.100</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">S3</td>
              <td align="left" colspan="1" rowspan="1">API Request<xref ref-type="table-fn" rid="nt107">4</xref></td>
              <td align="left" colspan="2" rowspan="1">PUT, COPY, POST, LIST Request</td>
              <td align="left" colspan="1" rowspan="1">0.01 (per 1,000)</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="2" rowspan="1">GET Request</td>
              <td align="left" colspan="1" rowspan="1">0.01 (per 10,000)</td>
            </tr>
          </tbody>
        </table></alternatives><table-wrap-foot>
          <fn id="nt101">
            <label/>
            <p>Prices are current as of 7/05/11.</p>
          </fn>
          <fn id="nt102">
            <label>1</label>
            <p>CPUs are in terms of a 1-GHz Opteron 2007 processor, unless otherwise noted. For example, a machine with four 1-GHz processors would be listed as 4×1.</p>
          </fn>
          <fn id="nt103">
            <label>1a</label>
            <p>CPU is a quad-core Xeon X5570, i.e., two quad-core CPUs, where each core is 4.19 GHz.</p>
          </fn>
          <fn id="nt104">
            <label>1b</label>
            <p>CPU is a quad-core Xeon X5570, and instance includes two NVIDIA Tesla "Fermi" M2050 GPUs.</p>
          </fn>
          <fn id="nt105">
            <label>2</label>
            <p>Costs reflect standard EC2 use with Linux OS. Costs increase when using Windows and decrease when using Reserved Instances (up-front payment) or Spot Instances (user-specified price on unused EC2 capacity).</p>
          </fn>
          <fn id="nt106">
            <label>3</label>
            <p>Within same AWS availability region (e.g., AWS US-East).</p>
          </fn>
          <fn id="nt107">
            <label>4</label>
            <p>Request costs are more difficult to estimate, and are usually more pertinent when databases and other similar services are involved. Programs like IOSTAT can be used to estimate EBS requests.</p>
          </fn>
        </table-wrap-foot></table-wrap>
    </sec>
    <sec id="s3">
      <title>Security in the Cloud</title>
      <p>Before beginning to use the cloud, it is important to understand the basic best practices for cost control and data security (for more detailed information, see <ext-link ext-link-type="uri" xlink:href="http://media.amazonwebservices.com/pdf/AWS_Security_Whitepaper.pdf" xlink:type="simple">http://media.amazonwebservices.com/pdf/AWS_Security_Whitepaper.pdf</ext-link>).</p>
      <sec id="s3a">
        <title>Use Public/Private Key Pair</title>
        <p>In this cryptographic scheme, a pair of keys is constructed, a public encryption key and a private decryption key. The public key is made available to anyone, but the data encrypted by it can only be decrypted by its paired private key. The private key should never be shared because it represents digital proof of the user's identity. Public/private keys provide a more secure login authentication method than usernames and passwords. To grant someone access to an instance, the public key must be copied into the list of authorized keys.</p>
      </sec>
      <sec id="s3b">
        <title>Access an Instance Using a Secure Connection</title>
        <p>For security of data and encryption of data transfers, it is imperative that access to an instance is via a secure protocol such as Secure Shell (ssh) or Secure Copy (scp). Both the AWS Web console and command line tools provide a simple interface to generate key pairs when launching an instance. The public key is automatically installed onto an instance, and the private key can then be used on a computer that will ssh into that instance.</p>
      </sec>
      <sec id="s3c">
        <title>Create Restricted User Accounts</title>
        <p>Recently, AWS introduced Identity and Access Management (IAM) to offer greater control and management of multiple users. Each user has their own set of security credentials to access cloud resources, eliminating the need to share login information and keys for the master AWS account owner. This is important because the master account contains the personal billing information, which, for obvious reasons, should not be accessible to all users. IAM can restrict services based on specific users or group policies. For example, it is possible to restrict a user to a specific S3 bucket between 9 A.M. and 5 P.M. from a specific IP address.</p>
      </sec>
      <sec id="s3d">
        <title>Control Access Using Firewalls</title>
        <p>A security group defines a set of rules that govern how traffic (data or communication) reaches the AWS instance. By default, the security group restricts all inbound traffic, allows all outbound traffic, and allows other instances within the group to communicate. These rules can be completely customized; for example, it is possible to restrict access to a specific IP address on a specific port address and not allow that instance to communicate with other instances within the AWS account.</p>
      </sec>
      <sec id="s3e">
        <title>Additional Security</title>
        <p>All security keys should be replaced with new ones every 30–90 days. Installing regular software updates is essential to protect the operating system and third-party software from vulnerabilities. There are many additional security features such as private clouds (<ext-link ext-link-type="uri" xlink:href="http://aws.amazon.com/vpc/" xlink:type="simple">http://aws.amazon.com/vpc/</ext-link>), encrypted file systems, and encrypted data volumes that may be used by those who have security needs beyond these basic best practices.</p>
      </sec>
    </sec>
    <sec id="s4">
      <title>Prototyping and Development</title>
      <p>An often-overlooked aspect of cloud computing is running only a single instance where scalability is not a requirement. Simple tasks such as making certain programs run faster by using a faster CPU, increasing the memory, prototyping, or even small Web applications are easily addressed by using a more powerful single instance (<xref ref-type="table" rid="pcbi-1002147-t001">Table 1</xref>). In some situations, such as daily analysis or constant development, the cost is low enough to leave those instances running on a continuous basis.</p>
      <p>It is essential to have a clear understanding of the technical requirements of the project in order to select the proper cloud resources. There are three basic criteria to consider for a given project to accurately estimate the cost: hardware, data, and analysis time. First, estimate the amount of memory, disk space, and CPUs needed for the computational task. For existing software, this is often found in the user documentation. For new code development, it may require an iterative process to determine the most suitable instance type. The UNIX “top” command is a good way to check the resource utilization. Second, estimate the amount of data required for analysis. AWS charges per gigabyte to transfer data out of their cloud (data transfer in is now free) and also per gigabyte for persistent storage (<xref ref-type="table" rid="pcbi-1002147-t001">Table 1</xref>). It is easy to inadvertently incur unnecessary transfer costs as a consequence. Third, estimate the amount of time it will take to complete the analysis, because AWS begins charging for an instance the moment it is launched. Importantly, there are no cost savings by running fewer than the maximum number of instances necessary to complete an analysis because the cost is based on the amount of time an instance is running. For example, using half the number of instances, the job will take twice as long to finish and will end up costing the same amount based on instance runtime—meaning, there is no reason to wait longer for your results than you have to.</p>
    </sec>
    <sec id="s5">
      <title>Developing a Scalable Computing Environment</title>
      <p>A large-scale computing environment that scales up or down in response to computational demand is the most commonly perceived use of cloud computing because it takes full advantage of rapid replication and linear scaling of cheap commodity compute cycles. However, it is important to remember that the cloud does not “magically” enable programs to run more efficiently or in parallel (unless the code was already written that way). Instead, it requires an understanding of how to connect multiple instances together to form a cluster and knowledge of how to divide a computational task into sub-components that can run simultaneously. Until recently, cluster creation was onerous, requiring substantial amounts of customized solutions handled best by an expert in systems administration and computer science. Fortunately, new advances in open source cluster management software such as StarCluster (<ext-link ext-link-type="uri" xlink:href="http://web.mit.edu/stardev/cluster/" xlink:type="simple">http://web.mit.edu/stardev/cluster/</ext-link>), Boto (<ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/boto/" xlink:type="simple">http://code.google.com/p/boto/</ext-link>), Condor (<ext-link ext-link-type="uri" xlink:href="http://www.cs.wisc.edu/condor/" xlink:type="simple">http://www.cs.wisc.edu/condor/</ext-link>), and Hadoop (<ext-link ext-link-type="uri" xlink:href="http://hadoop.apache.org/mapreduce/" xlink:type="simple">http://hadoop.apache.org/mapreduce/</ext-link>) are making cluster creation, termination, and job queuing more automated and accessible to bioinformatics specialists with perhaps only a limited understanding of systems administration and architecture. Within AWS, there is also the option to use Elastic Map Reduce (AWS's implementation of Hadoop) or high performance computing instances (<ext-link ext-link-type="uri" xlink:href="http://aws.amazon.com/ec2/hpc-applications/" xlink:type="simple">http://aws.amazon.com/ec2/hpc-applications/</ext-link>) for an additional cost per instance. Note that an important consideration for a large cluster is to shut down instances when the number of CPUs is greater than the number of jobs. This will reduce the amount of money spent on idle CPU time, which can be substantial for hundreds or thousands of CPUs <xref ref-type="bibr" rid="pcbi.1002147-Kudtarkar1">[7]</xref>.</p>
      <p>Broadly speaking, scalable computing can be divided into data-intensive distributed applications, of which Hadoop is the prime example, and batch computing, which includes StarCluster and Condor. Hadoop is an open source Java software framework that is composed of two key services: reliable data storage called the Hadoop Distributed File System (HDFS) and a parallel computing technique called MapReduce <xref ref-type="bibr" rid="pcbi.1002147-Dean1">[8]</xref>, which was developed by Google to take advantage of commodity computers <xref ref-type="bibr" rid="pcbi.1002147-Taylor1">[9]</xref>. Programs must be specifically written using the MapReduce parallel programming model. Although there are many successful applications of Hadoop, including processing NGS data <xref ref-type="bibr" rid="pcbi.1002147-Langmead1">[1]</xref>, not all programs fit this model and learning the Hadoop framework can be challenging. Batch computing is a simpler programming model that operates by creating a set of tasks that are processed independently and is typical of institutional clusters that run LSF or Sun Grid Engine. StarCluster was created to simplify the cluster creation, management, and job scheduling on AWS. Because many biomedical computing projects are easily divided into independent tasks and using Hadoop is more technical, we will demonstrate the use of StarCluster in the case study example.</p>
    </sec>
    <sec id="s6">
      <title>Case Study: Creating a Whole Genome Mapping Computational Framework</title>
      <p>To put the previous concepts into practice, we will walk through the analysis of a large amount of NGS data. Specifically, we detail the creation of a pipeline to process an entire human genome's worth of NGS reads using a short read mapping algorithm. We use the ∼4 billion paired 35-base reads sequenced from a Yoruba African male <xref ref-type="bibr" rid="pcbi.1002147-Bentley1">[10]</xref> to test the pipeline. For this case study, we selected the open source sequence alignment tool MAQ <xref ref-type="bibr" rid="pcbi.1002147-Li1">[11]</xref> to map the reads and identify the variants. Although there are newer and more efficient alignment algorithms, MAQ is a good example of software that was not initially designed to run in parallel and is typical of most bioinformatics software. The African genome read set is 370 GB with individual files containing nearly 7 million reads each. Computation time for just one of the 303 read file pairs typically ranges from 4 to 12 hours, and files with more ambiguous reads may require over a day to be fully mapped to the reference human genome. The cloud is an ideal platform for processing this dataset because the computational resources required to run these intensive mapping steps can be allocated quickly and easily, and because mapping short reads to a reference genome is a task that is readily distributed over a compute cluster.</p>
    </sec>
    <sec id="s7">
      <title>Prototyping and Development (Total Cost: $3.85)</title>
      <p>The NGS mapping example begins by prototyping and testing the whole-genome mapping pipeline (<xref ref-type="fig" rid="pcbi-1002147-g001">Figure 1A</xref>). At this stage, we are interested in testing the mechanics of launching a single instance, installing MAQ, and processing two truncated files (10,000 reads per file). Based on the technical requirements specified in the section above and referring to the MAQ reference manual, we learn that mapping 1 million paired reads takes on average 10 hours and uses 800 MB of memory. Therefore, a single extra-large Linux instance (7 GB memory and eight CPUs) from AWS priced at $0.68/hr can easily handle the truncated example files containing 10,000 reads (<xref ref-type="table" rid="pcbi-1002147-t001">Table 1</xref>). Using the AWS console, we launch a c1.xlarge instance type with the latest stable release of Ubuntu. From the AWS console, we create a 400 GB EBS volume and attach it to the running instance. Once the instance boots, we login via ssh as root administrator using the public IP address (for example, ec2-184-73-252-16.compute-1.amazonaws.com), download and install MAQ, and copy the NCBI reference genome to a directory on the instance using scp or Wget (<ext-link ext-link-type="uri" xlink:href="http://www.gnu.org/software/wget/" xlink:type="simple">http://www.gnu.org/software/wget/</ext-link>). Next, we format and mount the EBS volume and create three directories for testing the mapping data—small (two files, 10,000 reads), medium (32 files, 1 M reads), and all (entire genome). Then, we upload the African genome and the smaller testing files into the appropriate directories. Following the MAQ instructions (<ext-link ext-link-type="uri" xlink:href="http://maq.sourceforge.net/maq-man.shtml" xlink:type="simple">http://maq.sourceforge.net/maq-man.shtml</ext-link>) and executing the mapping and assembly commands, we learn that it takes 2 hours to analyze one pair of read files from the “small” directory on the EBS volume. However, only one of the possible eight CPUs on the extra-large instance is in use because we only issued one MAQ map command. While we could manually launch eight MAQ commands, a better approach would be to use cluster management software to automatically take advantage of all eight CPUs and include additional instances.</p>
      <fig id="pcbi-1002147-g001" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1002147.g001</object-id>
        <label>Figure 1</label>
        <caption>
          <title>Step-wise framework for creating a scalable NGS computing application.</title>
          <p>Using your local computer, ssh into an instance running in AWS. The costs are representative of actual development time, data transfer into and out of the cloud, and the compute time using AWS (<xref ref-type="table" rid="pcbi-1002147-t001">Table 1</xref>). The costs presented may vary, as AWS frequently updates their pricing structure. (A) An additional 3 hours were included for installing programs and testing the instance for the prototyping phase. (B) An additional 2 hours were included in developing the scalable application to learn how to use the cluster management software. (C) For the final scaled application, we used a 38-instance cluster.</p>
        </caption>
        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1002147.g001" xlink:type="simple"/>
      </fig>
    </sec>
    <sec id="s8">
      <title>Developing a Scalable Computing Environment (Total Cost: $49.60)</title>
      <p>Next, we will introduce the use of StarCluster to create and manage a small test cluster of two instances. StarCluster is customized for use on AWS and uses the open source version of Sun Grid Engine (<ext-link ext-link-type="uri" xlink:href="http://gridscheduler.sourceforge.net/index.html" xlink:type="simple">http://gridscheduler.sourceforge.net/index.html</ext-link>) to manage batch queuing across distributed systems, along with OpenMPI to manage job distribution and instance communication. The cluster is composed of a master instance, which is responsible for managing a larger set of worker instances. In this example, each worker instance is able to process eight jobs concurrently and will contain the necessary software to run the analysis. In order to get StarCluster running, we need to work through a few steps that involve configuring the StarCluster instance type, setting the proper security, and installing StarCluster on your local computer to remotely create and terminate a cluster.</p>
      <p>First, we will configure the StarCluster base instance type or Amazon Machine Image (AMI) with our required software. An AMI packages the operating system, installed programs, and user settings into a binary file that can be launched to exactly replicate an environment. Amazon creates a unique private ID (default) or public ID for each AMI to launch identical instances. We locate the StarCluster AMI through the AWS console under Community AMIs (for example, ami-0af31963), launch it, and attach the previously created EBS volume containing the NGS data to the running instance. Then we install MAQ and any additional processing scripts as before. Next, we need to bundle the instance into an AMI in order to allow StarCluster to launch multiple identical instances. After bundling the AMI (<ext-link ext-link-type="uri" xlink:href="http://docs.amazonwebservices.com/AWSEC2/2011-02-28/UserGuide/" xlink:type="simple">http://docs.amazonwebservices.com/AWSEC2/2011-02-28/UserGuide/</ext-link>), we record the AMI ID—we will use this later in the StarCluster configuration file. We take a snapshot of the EBS volume to back it up in S3. We will use the snapshot ID later in the StarCluster configuration file to allow each instance access to the data.</p>
      <p>Second, we follow our best practices and create a new security group and key pair for the cluster. This provides more security control in your AWS account and allows you to easily revoke credentials in the unlikely event that the account is compromised. Should further security be desired, it is straightforward to create a “cluster user” using IAM to further restrict access to S3 accounts or limit the number of instances available to launch.</p>
      <p>Third, we install StarCluster on our local computer following their documentation (<ext-link ext-link-type="uri" xlink:href="http://web.mit.edu/stardev/cluster/docs/index.html" xlink:type="simple">http://web.mit.edu/stardev/cluster/docs/index.html</ext-link>). The installation package includes the necessary scripts and configuration files to manage a cluster. The configuration file contains the various parameters to specify the cluster creation such as AMI ID, number of instances to launch, AWS account credentials, instance type, key pair, EBS snapshot ID containing the NGS data, and security group.</p>
      <p>At this point in our case study, we are interested in testing the scalability of the NGS mapping pipeline by creating a small cluster and confirming that the environment is functioning as expected (<xref ref-type="fig" rid="pcbi-1002147-g001">Figure 1B</xref>). Using StarCluster and the appropriate configuration file, we launch a two-instance cluster from the command line on our local machine. StarCluster returns the IP address of the master instance and from there we can ssh into the instance, verify Sun Grid Engine is running using the command “qhost”, and run a script to launch a set of jobs from the medium directory on the EBS volume using standard Sun Grid Engine options. For this example, a job is defined as mapping each read file to the reference genome. This is an independent task—meaning it does not require additional information from other reads or jobs to be completed successfully. We monitor the job progress using the command “qstat” (<ext-link ext-link-type="uri" xlink:href="http://gridscheduler.sourceforge.net/htmlman/manuals.html" xlink:type="simple">http://gridscheduler.sourceforge.net/htmlman/manuals.html</ext-link>). When the jobs are finished, we can save the results on the EBS volume and shut down the cluster.</p>
    </sec>
    <sec id="s9">
      <title>Scaled Production Environment (Total Cost: $320.10)</title>
      <p>We now expand our case study to the next level of usage, one that best exemplifies the most common conception of cloud computing: a virtually unlimited computational environment, which an analysis task will harness for rapid completion. However, getting to this point requires successful prototyping of an application, namely the prior two stages outlined above, on the cloud and ensuring that your application and pipeline can run on two or more inter-communicating instances.</p>
      <p>Returning to our case study, we want to create the environment to process the entire human genome (<xref ref-type="fig" rid="pcbi-1002147-g001">Figure 1C</xref>). The previous discussion laid the foundation for creating a scalable computing environment such that increasing the cluster size is as easy as modifying the StarCluster configuration script—in this case we specify 38 instances (38 * 8 CPUs  = 304 CPU cluster) in the configuration file. After launching the cluster, we update our job submission script to use the appropriate directory on the EBS volume that contains the entire 370 GB read data. We also configure Sun Grid Engine to only allow jobs to run for a maximum of 10 hours in order to manage the cost. If a job does not finish within that time limit, it will automatically be terminated and noted in the log file for future analysis. We save the final alignment results to the EBS volume and copy the file (142 GB) to our local computer and terminate the cluster.</p>
    </sec>
    <sec id="s10">
      <title>Summary</title>
      <p>In this overview to biomedical computing in the cloud, we discussed two primary ways to use the cloud (a single instance or cluster), provided a detailed example using NGS mapping, and highlighted the associated costs. While many users new to the cloud may assume that entry is as straightforward as uploading an application and selecting an instance type and storage options, we illustrated that there is substantial up-front effort required before an application can make full use of the cloud's vast resources. Our intention was to provide a set of best practices and to illustrate how those apply to a typical application pipeline for biomedical informatics, but also general enough for extrapolation to other types of computational problems. Our mapping example was intended to illustrate how to develop a scalable project and not to compare and contrast alignment algorithms for read mapping and genome assembly. Indeed, with a newer aligner such as Bowtie <xref ref-type="bibr" rid="pcbi.1002147-Taylor1">[9]</xref>, it is possible to map the entire African genome using one m2.2xlarge instance in 48 hours for a total cost of approximately $48 in computation time. In our example, we were not concerned with data transfer rates, which are heavily influenced by the amount of available bandwidth, connection latency, and network availability. When transferring large amounts of data to the cloud, bandwidth limitations can be a major bottleneck, and in some cases it is more efficient to simply mail a storage device containing the data to AWS (<ext-link ext-link-type="uri" xlink:href="http://aws.amazon.com/importexport/" xlink:type="simple">http://aws.amazon.com/importexport/</ext-link>). More information about cloud computing, detailed cost analysis, and security can be found in references <xref ref-type="bibr" rid="pcbi.1002147-Armbrust1">[12]</xref>–<xref ref-type="bibr" rid="pcbi.1002147-Schadt1">[14]</xref>.</p>
    </sec>
  </body>
  <back>
    <ref-list>
      <title>References</title>
      <ref id="pcbi.1002147-Langmead1">
        <label>1</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Langmead</surname><given-names>B</given-names></name><name name-style="western"><surname>Schatz</surname><given-names>MC</given-names></name><name name-style="western"><surname>Lin</surname><given-names>J</given-names></name><name name-style="western"><surname>Pop</surname><given-names>M</given-names></name><name name-style="western"><surname>Salzberg</surname><given-names>SL</given-names></name></person-group>             <year>2009</year>             <article-title>Searching for SNPs with cloud computing.</article-title>             <source>Genome Biol</source>             <volume>10</volume>             <fpage>R134</fpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Langmead2">
        <label>2</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Langmead</surname><given-names>B</given-names></name><name name-style="western"><surname>Trapnell</surname><given-names>C</given-names></name><name name-style="western"><surname>Pop</surname><given-names>M</given-names></name><name name-style="western"><surname>Salzberg</surname><given-names>SL</given-names></name></person-group>             <year>2009</year>             <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome.</article-title>             <source>Genome Biol</source>             <volume>10</volume>             <fpage>R25</fpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Schatz1">
        <label>3</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Schatz</surname><given-names>MC</given-names></name></person-group>             <year>2009</year>             <article-title>CloudBurst: highly sensitive read mapping with MapReduce.</article-title>             <source>Bioinformatics</source>             <volume>25</volume>             <fpage>1363</fpage>             <lpage>1369</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Wall1">
        <label>4</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Wall</surname><given-names>DP</given-names></name><name name-style="western"><surname>Kudtarkar</surname><given-names>P</given-names></name><name name-style="western"><surname>Fusaro</surname><given-names>VA</given-names></name><name name-style="western"><surname>Pivovarov</surname><given-names>R</given-names></name><name name-style="western"><surname>Patil</surname><given-names>P</given-names></name><etal/></person-group>             <year>2010</year>             <article-title>Cloud computing for comparative genomics.</article-title>             <source>BMC Bioinformatics</source>             <volume>11</volume>             <fpage>259</fpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Halligan1">
        <label>5</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Halligan</surname><given-names>BD</given-names></name><name name-style="western"><surname>Geiger</surname><given-names>JF</given-names></name><name name-style="western"><surname>Vallejos</surname><given-names>AK</given-names></name><name name-style="western"><surname>Greene</surname><given-names>AS</given-names></name><name name-style="western"><surname>Twigger</surname><given-names>SN</given-names></name></person-group>             <year>2009</year>             <article-title>Low cost, scalable proteomics data analysis using Amazon's cloud computing services and open source search algorithms.</article-title>             <source>J Proteome Res</source>             <volume>8</volume>             <fpage>3148</fpage>             <lpage>3153</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Vaquero1">
        <label>6</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Vaquero</surname><given-names>L</given-names></name><name name-style="western"><surname>Merino</surname><given-names>L</given-names></name><name name-style="western"><surname>Caceres</surname><given-names>J</given-names></name><name name-style="western"><surname>Lindner</surname><given-names>M</given-names></name></person-group>             <year>2009</year>             <article-title>A break in the clouds: towards a cloud definition.</article-title>             <source>ACM SIGCOMM Computer Communication Review</source>             <volume>39</volume>             <fpage>50</fpage>             <lpage>55</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Kudtarkar1">
        <label>7</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Kudtarkar</surname><given-names>P</given-names></name><name name-style="western"><surname>Deluca</surname><given-names>TF</given-names></name><name name-style="western"><surname>Fusaro</surname><given-names>VA</given-names></name><name name-style="western"><surname>Tonellato</surname><given-names>PJ</given-names></name><name name-style="western"><surname>Wall</surname><given-names>DP</given-names></name></person-group>             <year>2010</year>             <article-title>Cost-effective cloud computing: a case study using the comparative genomics tool, roundup.</article-title>             <source>Evol Bioinform Online</source>             <volume>6</volume>             <fpage>197</fpage>             <lpage>203</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Dean1">
        <label>8</label>
        <element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Dean</surname><given-names>JG</given-names></name><name name-style="western"><surname>Ghemawat</surname><given-names>S</given-names></name></person-group>             <year>2004</year>             <article-title>MapReduce: simplified data processing on large clusters.</article-title>             <publisher-loc>OSDI'04</publisher-loc>             <publisher-name>Proceedings of the 6th conference on Symposium on Opearting Systems Design &amp; Implementation; 6–8 December 2004; San Francisco, California, USA. Volume 6. New York: ACM</publisher-name>             <fpage>137</fpage>             <lpage>150</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Taylor1">
        <label>9</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Taylor</surname><given-names>RC</given-names></name></person-group>             <year>2010</year>             <article-title>An overview of the Hadoop/MapReduce/HBase framework and its current applications in bioinformatics.</article-title>             <source>BMC Bioinformatics</source>             <volume>11</volume>             <supplement>Suppl 12</supplement>             <fpage>S1</fpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Bentley1">
        <label>10</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Bentley</surname><given-names>DR</given-names></name><name name-style="western"><surname>Balasubramanian</surname><given-names>S</given-names></name><name name-style="western"><surname>Swerdlow</surname><given-names>HP</given-names></name><name name-style="western"><surname>Smith</surname><given-names>GP</given-names></name><name name-style="western"><surname>Milton</surname><given-names>J</given-names></name><etal/></person-group>             <year>2008</year>             <article-title>Accurate whole human genome sequencing using reversible terminator chemistry.</article-title>             <source>Nature</source>             <volume>456</volume>             <fpage>53</fpage>             <lpage>59</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Li1">
        <label>11</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>$Li</surname><given-names>H</given-names></name><name name-style="western"><surname>Ruan</surname><given-names>J</given-names></name><name name-style="western"><surname>Durbin</surname><given-names>R</given-names></name></person-group>             <year>2008</year>             <article-title>Mapping short DNA sequencing reads and calling variants using mapping quality scores.</article-title>             <source>Genome Res</source>             <volume>18</volume>             <fpage>1851</fpage>             <lpage>1858</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Armbrust1">
        <label>12</label>
        <element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Armbrust</surname><given-names>M</given-names></name><name name-style="western"><surname>Fox</surname><given-names>A</given-names></name><name name-style="western"><surname>Griffith</surname><given-names>R</given-names></name><name name-style="western"><surname>Joseph</surname><given-names>AD</given-names></name><name name-style="western"><surname>Katz</surname><given-names>RH</given-names></name><etal/></person-group>             <year>2009</year>             <article-title>Above the clouds: a berkeley view of cloud computing.</article-title>             <publisher-loc>Berkeley</publisher-loc>             <publisher-name>EECS Department, University of California, Berkeley</publisher-name>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Rosenthal1">
        <label>13</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Rosenthal</surname><given-names>A</given-names></name><name name-style="western"><surname>Mork</surname><given-names>P</given-names></name><name name-style="western"><surname>Li</surname><given-names>MH</given-names></name><name name-style="western"><surname>Stanford</surname><given-names>J</given-names></name><name name-style="western"><surname>Koester</surname><given-names>D</given-names></name><etal/></person-group>             <year>2009</year>             <article-title>Cloud computing: a new business paradigm for biomedical information sharing.</article-title>             <source>J Biomed Inform</source>             <volume>43</volume>             <fpage>342</fpage>             <lpage>353</lpage>          </element-citation>
      </ref>
      <ref id="pcbi.1002147-Schadt1">
        <label>14</label>
        <element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author"><name name-style="western"><surname>Schadt</surname><given-names>EE</given-names></name><name name-style="western"><surname>Linderman</surname><given-names>MD</given-names></name><name name-style="western"><surname>Sorenson</surname><given-names>J</given-names></name><name name-style="western"><surname>Lee</surname><given-names>L</given-names></name><name name-style="western"><surname>Nolan</surname><given-names>GP</given-names></name></person-group>             <year>2010</year>             <article-title>Computational solutions to large-scale data management and analysis.</article-title>             <source>Nat Rev Genet</source>             <volume>11</volume>             <fpage>647</fpage>             <lpage>657</lpage>          </element-citation>
      </ref>
    </ref-list>
    
  </back>
</article>