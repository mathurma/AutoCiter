<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN"><front><journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="flc">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0010067</article-id><article-id pub-id-type="publisher-id">05-PLCB-RA-0179R2</article-id><article-id pub-id-type="sici">plcb-01-07-03</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology</subject><subject>Genetics and Genomics/Comparative Genomics</subject></subj-group><subj-group subj-group-type="System Taxonomy"><subject>Saccharomyces</subject></subj-group></article-categories><title-group><article-title>PhyloGibbs: A Gibbs Sampling Motif Finder That Incorporates Phylogeny</article-title><alt-title alt-title-type="running-head">PhyloGibbs: A Phylogenetic Motif Finder</alt-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Siddharthan</surname><given-names>Rahul</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Siggia</surname><given-names>Eric D</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>van Nimwegen</surname><given-names>Erik</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1">
				<label>1</label><addr-line> Center for Studies in Physics and Biology, The Rockefeller University, New York, New York, United States of America
			</addr-line></aff><aff id="aff2">
				<label>2</label><addr-line> Institute of Mathematical Sciences, Taramani, Chennai, India
			</addr-line></aff><aff id="aff3">
				<label>3</label><addr-line> Division of Bioinformatics, Biozentrum, University of Basel, Basel, Switzerland
			</addr-line></aff><contrib-group><contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Bourne</surname><given-names>Philip</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">University of California at San Diego, United States of America</aff><author-notes><fn fn-type="con" id="ack2"><p>RS, EDS, and EvN conceived and designed the experiments. RS and EvN performed the experiments and analyzed the data. RS, EDS, and EvN contributed reagents/materials/analysis tools and wrote the paper.</p></fn><corresp id="cor1">* To whom correspondence should be addressed. E-mail: <email xlink:type="simple">erik.vannimwegen@unibas.ch</email></corresp><fn fn-type="conflict" id="ack1"><p> The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="ppub"><month>12</month><year>2005</year></pub-date><pub-date pub-type="epub"><day>9</day><month>12</month><year>2005</year></pub-date><pub-date pub-type="epreprint"><day>27</day><month>10</month><year>2005</year></pub-date><volume>1</volume><issue>7</issue><elocation-id>e67</elocation-id><history><date date-type="received"><day>27</day><month>7</month><year>2005</year></date><date date-type="accepted"><day>28</day><month>10</month><year>2005</year></date></history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2005</copyright-year><copyright-holder>Siddharthan et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><p>A central problem in the bioinformatics of gene regulation is to find the binding sites for regulatory proteins. One of the most promising approaches toward identifying these short and fuzzy sequence patterns is the comparative analysis of orthologous intergenic regions of related species. This analysis is complicated by various factors. First, one needs to take the phylogenetic relationship between the species into account in order to distinguish conservation that is due to the occurrence of functional sites from spurious conservation that is due to evolutionary proximity. Second, one has to deal with the complexities of multiple alignments of orthologous intergenic regions, and one has to consider the possibility that functional sites may occur outside of conserved segments. Here we present a new motif sampling algorithm, PhyloGibbs, that runs on arbitrary collections of multiple local sequence alignments of orthologous sequences. The algorithm searches over all ways in which an arbitrary number of binding sites for an arbitrary number of transcription factors (TFs) can be assigned to the multiple sequence alignments. These binding site configurations are scored by a Bayesian probabilistic model that treats aligned sequences by a model for the evolution of binding sites and “background” intergenic DNA. This model takes the phylogenetic relationship between the species in the alignment explicitly into account. The algorithm uses simulated annealing and Monte Carlo Markov-chain sampling to rigorously assign posterior probabilities to all the binding sites that it reports. In tests on synthetic data and real data from five <italic>Saccharomyces</italic> species our algorithm performs significantly better than four other motif-finding algorithms, including algorithms that also take phylogeny into account. Our results also show that, in contrast to the other algorithms, PhyloGibbs can make realistic estimates of the reliability of its predictions. Our tests suggest that, running on the five-species multiple alignment of a single gene's upstream region, PhyloGibbs on average recovers over 50% of all binding sites in <italic>S. cerevisiae</italic> at a specificity of about 50%, and 33% of all binding sites at a specificity of about 85%. We also tested PhyloGibbs on collections of multiple alignments of intergenic regions that were recently annotated, based on ChIP-on-chip data, to contain binding sites for the same TF. We compared PhyloGibbs's results with the previous analysis of these data using six other motif-finding algorithms. For 16 of 21 TFs for which all other motif-finding methods failed to find a significant motif, PhyloGibbs did recover a motif that matches the literature consensus. In 11 cases where there was disagreement in the results we compiled lists of known target genes from the literature, and found that running PhyloGibbs on their regulatory regions yielded a binding motif matching the literature consensus in all but one of the cases. Interestingly, these literature gene lists had little overlap with the targets annotated based on the ChIP-on-chip data. The PhyloGibbs code can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://www.biozentrum.unibas.ch/~nimwegen/cgi-bin/phylogibbs.cgi" xlink:type="simple">http://www.biozentrum.unibas.ch/~nimwegen/cgi-bin/phylogibbs.cgi</ext-link> or <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs" xlink:type="simple">http://www.imsc.res.in/~rsidd/phylogibbs</ext-link>. The full set of predicted sites from our tests on yeast are available at <ext-link ext-link-type="uri" xlink:href="http://www.swissregulon.unibas.ch" xlink:type="simple">http://www.swissregulon.unibas.ch</ext-link>.</p></abstract><abstract abstract-type="synopsis"><title>Synopsis</title><p>Computational discovery of regulatory sites in intergenic DNA is one of the central problems in bioinformatics. Up until recently motif finders would typically take one of the following two general approaches. Given a known set of co-regulated genes, one searches their promoter regions for significantly overrepresented sequence motifs. Alternatively, in a “phylogenetic footprinting” approach one searches multiple alignments of orthologous intergenic regions for short segments that are significantly more conserved than expected based on the phylogeny of the species.</p><p>In this work the authors present an algorithm, PhyloGibbs, that combines these two approaches into one integrated Bayesian framework. The algorithm searches over all ways in which an arbitrary number of binding sites for an arbitrary number of transcription factors can be assigned to arbitrary collections of multiple sequence alignments while taking into account the phylogenetic relations between the sequences.</p><p>The authors perform a number of tests on synthetic data and real data from Saccharomyces genomes in which PhyloGibbs significantly outperforms other existing methods. Finally, a novel anneal-and-track strategy allows PhyloGibbs to make accurate estimates of the reliability of its predictions.</p></abstract><counts><page-count count="23"/></counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group><custom-meta><meta-name>Citation:</meta-name><meta-value>Siddharthan R, Siggia ED, van Nimwegen E (2005) PhyloGibbs: A Gibbs sampling motif finder that incorporates phylogeny. PLoS Comput Biol 1(7): e67.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1"><title>Introduction</title><p>Transcription factors (TFs) are proteins that bind in a sequence-specific manner to short DNA segments (“binding sites”), most commonly in intergenic DNA upstream of a gene, to activate or suppress gene transcription. Their DNA-binding domains recognize collections of short related DNA sequences (“motifs”). One generally finds that, although there is no unique combination of bases that is shared by all binding sites, and although different bases can occur at each position, there are clear biases in the distribution of bases that occur at each position of the binding sites. A common mathematical representation of a motif that takes this variability into account is a so-called weight matrix (WM) [<xref ref-type="bibr" rid="pcbi-0010067-b001">1</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b002">2</xref>] <italic>w,</italic> whose components <italic>w</italic><sub>α<italic>i</italic></sub> give the probabilities of finding base α ∈ {A, C, G, T} at position <italic>i</italic> of a binding site. The main assumption underlying this mathematical representation is that the bases occurring at different positions of the binding site are probabilistically independent. This in turn follows, under some conditions [<xref ref-type="bibr" rid="pcbi-0010067-b003">3</xref>], from the assumption that the binding energy of the protein to the DNA is a sum of pairwise contact energies between the individual nucleotides and the protein.</p><p>There are several algorithms that are based on the WM representation that detect, ab initio, binding sites for a common TF in a collection of DNA sequences [<xref ref-type="bibr" rid="pcbi-0010067-b004">4</xref>–<xref ref-type="bibr" rid="pcbi-0010067-b007">7</xref>]. These algorithms broadly fall into two classes. One class, of which MEME [<xref ref-type="bibr" rid="pcbi-0010067-b006">6</xref>] is the typical representative, searches the space of all WMs for the WM that can best explain the observed sequences. The class of “Gibbs sampling” algorithms, of which the Gibbs motif sampler [<xref ref-type="bibr" rid="pcbi-0010067-b004">4</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b005">5</xref>] is the typical representative, instead samples the space of all multiple alignments of small sequence segments in search of the one that is most likely to consist of samples from a common WM.</p><p>A crucial factor for the success of ab initio methods is the ratio of the number of binding sites to the total amount of DNA in the collection of sequences. That is, the larger the number of binding sites in the set, and the smaller the total amount of DNA, the more likely it is that ab initio methods can discover the binding sites among the other DNA sequences. In order to ensure a reasonable chance of success one thus needs to provide these methods with collections of sequences that are highly enriched with binding sites for a common TF. One possibility is to use sets of upstream regions from genes that appear co-regulated in microarray experiments (e.g., [<xref ref-type="bibr" rid="pcbi-0010067-b008">8</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b009">9</xref>]) or that were bound by a common TF in ChIP-on-chip experiments (e.g., [<xref ref-type="bibr" rid="pcbi-0010067-b010">10</xref>]). Another possibility is to use upstream regions of orthologous genes from related organisms. Here the assumption is that (most of) the regulation of the ancestor gene, and thus its binding sites, has been conserved in the orthologs that descend from it.</p><p>This latter approach is in general complicated by a number of factors. When searching for regulatory sites in sequences that are not phylogenetically related, such as upstream regions of different genes from the same organism, one may simply look for short sequence motifs that are overrepresented among the input sequences. If the set of species from which the orthologous sequences derive are sufficiently diverged, one may simply choose to ignore the phylogenetic relationship between the sequences and treat the orthologous sequences in the same way as sequences that are not phylogenetically related. This was, for instance, the approach taken by McCue et al. [<xref ref-type="bibr" rid="pcbi-0010067-b011">11</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b012">12</xref>], where the Gibbs motif sampler algorithm [<xref ref-type="bibr" rid="pcbi-0010067-b004">4</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b005">5</xref>] was used on upstream regions of proteo-γ bacteria.</p><p>However, this approach is not applicable to datasets containing more closely related species, where some of the sequences will exhibit significant amounts of similarity simply because of their evolutionary proximity. Moreover, the amount of similarity will depend on the phylogenetic distance between the species, and it is clear that finding conserved sequence motifs between orthologous sequences from closely related species is much less indicative of function than finding sequence motifs that are conserved between distant species. One will in general thus have to distinguish conservation due to functional constraints from conservation due to evolutionary proximity, and to do this correctly, the phylogenetic relationship between the sequences has to be taken into account.</p><p>A second challenge in using orthologous intergenic sequences from multiple species is the nontrivial structure of their multiple alignments. One typically finds a very heterogeneous pattern of conservation: well-conserved blocks of different sizes and covering different subsets of the species are interspersed with sequence segments that show little similarity with the sequences of the other species.</p><p>The technique of “phylogenetic footprinting” (e.g., [<xref ref-type="bibr" rid="pcbi-0010067-b013">13</xref>–<xref ref-type="bibr" rid="pcbi-0010067-b017">17</xref>]), restricts attention to only those sequence segments in the genome of interest that show significant conservation with the other species. The conserved regions for multiple genes are then searched for common motifs by a variety of techniques. It is unclear, however, to what extent regulatory sites are restricted to such conserved segments. For instance, several studies of <italic>Drosophila</italic> and yeast [<xref ref-type="bibr" rid="pcbi-0010067-b018">18</xref>–<xref ref-type="bibr" rid="pcbi-0010067-b020">20</xref>] have shown that there is no strong correlation between where experimentally annotated binding sites occur and whether that region is conserved. Thus, at least for yeast and flies, considerable information is lost by focusing on the conserved regions only.</p><p>We thus decided to retain the entire patchwork pattern of conserved sequence blocks and unaligned segments. Our strategy is implemented by a Gibbs sampling approach, and a preliminary account of the algorithm was presented in [<xref ref-type="bibr" rid="pcbi-0010067-b021">21</xref>]. The algorithm operates on arbitrary collections of both phylogenetically related sequences, such as orthologous intergenic regions, and sequences that are not phylogenetically related, such as upstream regions of different genes from the same organism. The phylogenetically related groups of sequences in the input are pre-aligned into local multiple alignments where clearly similar sequence segments are aligned into blocks and sequence segments of no or marginal similarity are left unaligned [<xref ref-type="bibr" rid="pcbi-0010067-b022">22</xref>]. Although the algorithm can also take global multiple alignments as input, we believe that these often force phylogenetically unrelated segments into aligned blocks. This may adversely affect the performance of the algorithm. We score putative sites within blocks of aligned sequences with an evolutionary model that takes the phylogenetic relationships of the species into account, while putative sites in unaligned segments are treated as independent occurrences. This Bayesian model defines a probability distribution over arbitrary placements of putative binding sites for multiple motifs, and we sample it with a Monte Carlo Markov chain. We first use simulated annealing to search for the globally optimal configuration of binding sites. The motifs in this configuration (which hopefully corresponds to the global optimum) are then “tracked” in a further sampling run to estimate realistic posterior probabilities for all the binding sites that the algorithm reports.</p><p>Recently a number of other algorithms have been developed that search for regulatory motifs in groups of phylogenetically related sequences. Probably the first algorithm that was proposed is a generalization of the Consensus algorithm [<xref ref-type="bibr" rid="pcbi-0010067-b007">7</xref>] called PhyloCon [<xref ref-type="bibr" rid="pcbi-0010067-b023">23</xref>]. PhyloCon operates on sets of co-regulated genes and their orthologs. It is a greedy algorithm that first finds ungapped alignments of similar sequence segments in sets of orthologous sequences, and then combines these alignments from different upstream regions into larger alignments. This algorithm does not take any phylogenetic information into account, i.e., closely related sequences are treated the same as distantly related sequences. Other drawbacks of this algorithm are that it assumes that each motif will have exactly one site in each of the intergenic regions and that it assumes that this site is conserved in all orthologs.</p><p>More closely related to PhyloGibbs's approach are two recent algorithms [<xref ref-type="bibr" rid="pcbi-0010067-b024">24</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b025">25</xref>] that generalize MEME [<xref ref-type="bibr" rid="pcbi-0010067-b006">6</xref>] to take the phylogenetic relationships between species into account. The main difference between EMnEM and PhyME is that PhyME uses the same evolutionary model for the evolution of binding sites as PhyloGibbs, which takes into account that binding sites evolve under constraints set by a WM, whereas EMnEM simply assumes an overall slower rate of evolution in binding sites than in background sequences. Another difference is that PhyME, like PhyloGibbs, treats the multiple alignment more flexibly than EMnEM, which demands a global multiple alignment. The main difference between PhyloGibbs and these algorithms is of course that PhyloGibbs takes a motif sampling approach, which allows us to search for multiple motifs in parallel, whereas PhyME and EMnEM use expectation maximization (EM) to search for one WM at a time.</p><p>In the following sections, we first describe our Bayesian model that assigns a posterior probability to each configuration of binding sites for multiple motifs assigned to the input sequences. We start by describing the model for phylogenetically unrelated sequences, which is essentially equivalent to the model used in the Gibbs motif sampler [<xref ref-type="bibr" rid="pcbi-0010067-b004">4</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b005">5</xref>], and then describe how this model is extended to datasets that contain phylogenetically related sequences. After that we describe the move set with which we search the state space of all possible configurations, and the annealing and “tracking” strategy that we use to identify the significant groups of sites.</p><p>We then present examples of the performance of ours and other algorithms on both synthetic and real data. The synthetic datasets consist of mixtures of WM samples and random sequences, which is in accordance with assumptions that all algorithms make. This allows us to compare the performance of the algorithms in an idealized situation that does not contain the complexities of real data. These tests also show to what extent binding sites can be recovered for this idealized data as a function of the quality of the WMs, the number of sites available, and the number of species available and their phylogenetic distances. For our tests on real data we use 200 upstream regions from  <italic>Saccharomyces cerevisiae</italic> that have known binding sites from the collection [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>], and compare the ability of the different algorithms to recover these sites when running on multiple alignments of the orthologs of these upstream regions from recently sequenced <italic>Saccharomyces</italic> genomes [<xref ref-type="bibr" rid="pcbi-0010067-b015">15</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b016">16</xref>]. Finally, we run PhyloGibbs on collections of upstream region alignments that were annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] to contain binding sites for a common TF based on data from ChIP-on-chip experiments, and we extensively compare PhyloGibbs' results with the annotations in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] and with the literature.</p></sec><sec id="s2"><title>Results</title><sec id="s2a"><title>Model for Phylogenetically Unrelated Sequences</title><p>In order to motivate and explain our model for phylogenetically related sequences it is helpful to first introduce the model for sequences that are not phylogenetically related. In this context, “not phylogenetically related” means that for any pair of sequences in the input data, their common ancestor sequence is sufficiently far in the evolutionary past that mutations have been introduced multiple times at each position in the sequences. That is, any similarity left between the input sequences cannot be due to evolutionary proximity.</p><p>We assume that our data contain an unknown number of sites for an unknown number of different TFs. The state space of possible solutions to the problem of identifying the binding sites contained in these sequences consists of all possible ways in which one can assign groups of binding sites to these sequences. An example of such binding site assignments, which we call “configurations,” is shown in <xref ref-type="fig" rid="pcbi-0010067-g001">Figure 1</xref>.</p><fig id="pcbi-0010067-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.g001</object-id><label>Figure 1</label><caption><title>Binding Site Configuration</title><p>A window, in our terminology, is a possible binding site for a TF; in the case of phylogenetically unrelated sequences it is simply a set of <italic>m</italic> contiguous bases in a sequence, with <italic>m</italic> the binding site width. This figure shows a configuration <italic>C</italic> containing a total of eight windows (rectangles) for three different WMs (red, blue, and green). Note that a single sequence of length <italic>L</italic> has <italic>L</italic> − <italic>m</italic> + 1 windows in it.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.g001" xlink:type="simple"/></fig><p>Assuming that the width of the binding sites is <italic>m</italic> bases, each contiguous segment of <italic>m</italic> bases in our dataset is a potential binding site. We call such <italic>m</italic>-base segments “windows” and will generalize this concept later for phylogenetically related sequences. We label the WMs for the different TFs with “colors” one, two, etc., and use the color zero to indicate nonfunctional “background” sequence. Thus, formally, a configuration <italic>C</italic> is an assignment of nonzero colors to a particular set of nonoverlapping windows. Note that the requirement that colored windows cannot overlap means that a colored window “blocks” up to 2(<italic>m −</italic>1) others.</p><p>Given a dataset of input sequences <italic>S,</italic> our model assigns to each possible configuration <italic>C</italic> a posterior probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>). Using Bayes's theorem we have</p><disp-formula id="pcbi-0010067-e001"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mstyle displaystyle='true'><mml:msub><mml:mo>&sum;</mml:mo><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup></mml:msub></mml:mstyle><mml:mspace width="-5pt"></mml:mspace><mml:mtext>&thinsp;</mml:mtext><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where <italic>P</italic>(<italic>C</italic>) is the prior probability of configuration <italic>C</italic>. As described in <xref ref-type="sec" rid="s4">Materials and Methods</xref>, PhyloGibbs provides for priors that incorporate prior information on the likely number of motifs and binding sites in the input sequences. The likelihood function <italic>P</italic>(<italic>S</italic>|<italic>C</italic>) gives the probability that, for each color in <italic>C,</italic> all sequences of the same color were sampled from a common WM, multiplied by the probability of the remaining sequences under a “background” model. That is, we formally have</p><disp-formula id="pcbi-0010067-e002"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e002" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mspace width="3pt"></mml:mspace><mml:mo>&notin;</mml:mo><mml:mspace width="2pt"></mml:mspace><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where we denote all sequence that is colored zero in the configuration <italic>C</italic> by <italic>S</italic> ∉ <italic>C,</italic> the background model for this sequence by <italic>P</italic>(<italic>S</italic> ∉ <italic>C</italic>|<italic>B</italic>), the set of sequences in windows with color <italic>c</italic> as <italic>S<sub>c</sub>,</italic> and the probability that all sequences in <italic>S<sub>c</sub></italic> were drawn from a common WM by <italic>P</italic>(<italic>S<sub>c</sub></italic>). Expressions for all these quantities are derived in <xref ref-type="sec" rid="s4">Materials and Methods</xref>. The probability <italic>P</italic>(<italic>S<sub>c</sub></italic>) that all sequences in color <italic>c</italic> were sampled from the same WM is obtained by taking the probability <italic>P</italic>(<italic>S<sub>c</sub></italic>|<italic>w</italic>) that all sequences <italic>S<sub>c</sub></italic> were sampled from a particular WM <italic>w,</italic> and integrating this over all possible WMs <italic>w</italic> [<xref ref-type="bibr" rid="pcbi-0010067-b028">28</xref>].</p></sec><sec id="s2b"><title>Incorporating Phylogeny</title><p>When considering datasets that contain phylogenetically related sequences, such as orthologous intergenic regions from related species, the main problem is distinguishing sequence similarity that is due to evolutionary proximity from sequence similarity that arises from functional constraints. That is, when calculating the probability <italic>P</italic>(<italic>S</italic>) that a group of sequences <italic>S</italic> are all binding sites for a common WM, we should treat sequences that are orthologous by a different model than those that are not phylogenetically related. We derive such a model below. In order to apply this model we also have to determine which parts of the input sequences are orthologous, i.e., we need to provide a multiple alignment. We could in principle let the algorithm search both the space of multiple alignments and the space of binding site configurations <italic>C</italic> at the same time, but we decided that this state space is likely too large to search effectively. Moreover, for closely related species large segments of the orthologous intergenic regions can be unambiguously aligned, and by pre-aligning these we significantly reduce the search space for the algorithm.</p><p>Our strategy is thus to first produce a multiple alignment and then search the space of binding site configurations that are consistent with this alignment. Standard global multiple alignment algorithms [<xref ref-type="bibr" rid="pcbi-0010067-b029">29</xref>–<xref ref-type="bibr" rid="pcbi-0010067-b031">31</xref>] can be used for this task, and PhyloGibbs can be run on the outputs they produce. However, as discussed in the Introduction, alignments of orthologous intergenic regions from related species (such as the recently sequenced <italic>Saccharomyces</italic> species [<xref ref-type="bibr" rid="pcbi-0010067-b015">15</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b016">16</xref>]) show a mosaic pattern of well-conserved blocks interspersed with stretches of unconserved sequence, and global alignment algorithms may spuriously align many of these phylogenetically unrelated parts. Binding sites are typically not restricted to conserved regions [<xref ref-type="bibr" rid="pcbi-0010067-b018">18</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b019">19</xref>], and spurious alignment of phylogenetically unrelated regions may hamper the discovery of binding sites contained within them. Our strategy is thus to only align those parts of the intergenic regions that are clearly orthologous and can be unambiguously aligned, and to leave the rest unaligned. In searching binding site configurations we demand consistency of the configuration with the aligned orthologous blocks, but at the same time also allow windows to be placed in unaligned parts of the sequences. Such syntenic local multiple alignments are produced by the algorithm Dialign [<xref ref-type="bibr" rid="pcbi-0010067-b022">22</xref>], and we used this algorithm for producing the multiple alignments of the datasets that we report on below (see [<xref ref-type="bibr" rid="pcbi-0010067-b032">32</xref>] for a recent review of the performance of various alignment algorithms on orthologous intergenic DNA). Another algorithm that produces syntenic local multiple alignments and is especially suited for large genomic regions is Threaded Blockset Aligner [<xref ref-type="bibr" rid="pcbi-0010067-b033">33</xref>].</p><p>Once we have a syntenic multiple local alignment, we treat columns of aligned bases as phylogenetically related, i.e., arising from a common ancestor base. The state space again consists of all possible configurations of binding sites but now with the constraint that “windows” that include aligned bases have to extend over all sequences in the alignment. That is, we assume that if a binding site occurs in a sequence segment that is aligned with sequence segments from the other species, then binding sites for the same TF have to occur in the corresponding positions of these other sequence segments. To this end we extend the concept “window” (denoting a position of a potential binding site) to multiple local alignments, as illustrated in <xref ref-type="fig" rid="pcbi-0010067-g002">Figure 2</xref>.</p><fig id="pcbi-0010067-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.g002</object-id><label>Figure 2</label><caption><title>An Alignment of Four Sequences Showing Three Legitimate Windows and One Illegitimate Window</title><p>Vertically aligned capital letters are phylogenetically related bases, assumed to have evolved from a common ancestor. Thus, any window placed on these bases is extended to cover all related bases. Three legitimate windows are surrounded by solid boxes. The window surrounded by the dotted box is illegitimate because the gap in the top sequence makes the alignment of bases inconsistent. Note that lower case letters are not aligned and that, in order to complete a window with aligned sequences, one may slide lowercase bases “through” adjoining gaps. For example, if the window on the bottom two sequences were to move two steps to the left, the “c” and “a” on the left side of the preceding gaps would slide through the gaps to the right to complete the window.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.g002" xlink:type="simple"/></fig><p>The figure shows a sample stretch of four aligned sequences, where uppercase letters are aligned and lowercase letters are “independent.” In an initial pass the program identifies the set of all legitimate “windows” in the entire sequence data. Each of these windows may encompass one or more sequences. The windows must contain consistently aligned uppercase letters: there should not be “gaps” that give inconsistent spacing between aligned uppercase letters. For example, in <xref ref-type="fig" rid="pcbi-0010067-g002">Figure 2</xref>, the sequences boxed with solid lines show consistent windows, whereas a dotted line boxes an inconsistent window. Note that, as in the leftmost window in the figure, lowercase letters can be used to complete a window in which only some letters are uppercase. The details of identifying the set of all legitimate windows in the sequence data are described in <xref ref-type="sec" rid="s4">Materials and Methods</xref>. At the end of this procedure, we have a list of windows that represent potential sites for TF binding sites; some of these windows contain only one sequence and represent a potential independent occurrence of a binding site, while others contain multiple sequences and represent potential binding sites that evolved from a common ancestor site and were conserved across multiple species.</p><p>Next, we need to generalize our probabilistic model to multiply aligned orthologous sequences. For the single-sequence windows of the previous section, the probability <italic>P</italic>(<italic>s</italic>|<italic>w</italic>) of observing the sequence <italic>s</italic> given a WM <italic>w</italic> is simply given by</p><disp-formula id="pcbi-0010067-e003"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e003" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>with <italic>s<sub>i</sub></italic> the base at position <italic>i</italic> of <italic>s</italic>. For a window overlaying a region of multiply aligned sequences, the single base <italic>s<sub>i</sub></italic> is replaced by the set of bases <italic>W<sub>i</sub></italic> in the <italic>i</italic>th column of the alignment. We now replace the probability <inline-formula id="pcbi-0010067-ex001"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex001" xlink:type="simple"/></inline-formula>
					 with the probability <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w</italic>) that the bases <italic>W<sub>i</sub></italic> in the <italic>i</italic>th column of the window derive from a common ancestor base, and have been evolving under the selective constraints set by the requirement that they remain binding sites for the TF represented by WM <italic>w</italic>. Our evolutionary model assumes that mutations are introduced at a fixed rate and that the probability for selection to fix a mutation toward base α in the <italic>i</italic>th column of a site is proportional to the WM entry <italic>w</italic><sub>α<italic>i</italic></sub>. Since the positions are mutually independent we have for the whole window
				</p><disp-formula id="pcbi-0010067-e004"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e004" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>The probability <italic>P</italic>(<italic>S<sub>c</sub></italic>|<italic>w</italic>) that all windows <italic>W</italic> ∈ <italic>c</italic> in color <italic>c</italic> evolved under the constraints set by WM <italic>w</italic> is simply given by the product</p><disp-formula id="pcbi-0010067-e005"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e005" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>W</mml:mi><mml:mi>c</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>and the probability <italic>P</italic>(<italic>S<sub>c</sub></italic>) is again given by an integral of <italic>P</italic>(<italic>S<sub>c</sub></italic>|<italic>w</italic>) over the space of all possible WMs. The background score <italic>P</italic>(<italic>W</italic>|<italic>B</italic>) for a window <italic>W</italic> is given by the exact same expression as <italic>P</italic>(<italic>W</italic>|<italic>w</italic>) except that the WM entries <italic>w</italic><sub>α<italic>i</italic></sub> are replaced with the background probabilities for the bases in each column. Detailed derivations and explicit expressions are provided in <xref ref-type="sec" rid="s4">Materials and Methods</xref>.</p></sec><sec id="s2c"><title>Move Set</title><p>The last two sections have explained the posterior probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) that we assign to configurations of binding sites <italic>C</italic> given the input data <italic>S</italic>. PhyloGibbs samples the space of all possible configurations <italic>C</italic> using a Monte Carlo Markov-chain sampling strategy [<xref ref-type="bibr" rid="pcbi-0010067-b034">34</xref>] using a move set with a number of different moves. Generally, the moves in our move set operate on configurations either by shifting one or more colored windows in the configuration, or by adding/removing a colored window to/from the configuration. Formally, a “move” consists of taking the current configuration <italic>C,</italic> constructing the set <italic>X</italic> of all configurations <italic>C′</italic> ∈ <italic>X</italic> that differ from <italic>C</italic> by a “single change” (e.g., moving the position of a single colored window), and then choosing one of these configurations <italic>C′</italic> according to the distribution <inline-formula id="pcbi-0010067-ex002"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex002" xlink:type="simple"/></inline-formula>
					. In order for the repeated application of these moves to sample the whole space of configurations in proportion to their probabilities <italic>P</italic>(<italic>C</italic>|<italic>S</italic>), two conditions are sufficient. First, the move set needs to be “ergodic”: each configuration <italic>C</italic> must be reachable by repeated application of the moves in the move set. And second, we demand that “detailed balance” be satisfied: for any pair of states <italic>C</italic> and <italic>C′</italic> the probabilities <italic>P</italic>(<italic>C</italic> → <italic>C′</italic>) of moving from <italic>C</italic> to <italic>C′</italic> and <italic>P</italic>(<italic>C′</italic> → <italic>C</italic>) of moving from <italic>C′</italic> to <italic>C</italic> under any of the moves must satisfy
				</p><disp-formula id="pcbi-0010067-e006"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e006" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>C</mml:mi><mml:mo>&rarr;</mml:mo><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mo>|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mo>&rarr;</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>The most important of the moves in our move set is the “window shift” move, which takes a single window and resamples its position. Since this type of move is generally referred to as Gibbs sampling, i.e., one samples a joint probability distribution by resampling one variable of the joint distribution at each time step while keeping the other variables fixed, and because of the similarities with the original Gibbs motif sampling algorithm [<xref ref-type="bibr" rid="pcbi-0010067-b004">4</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b005">5</xref>], we have called our algorithm PhyloGibbs. Other moves in our move set include picking a window at random and recoloring it, and shifting all windows in a color by the same amount. Each time step of the algorithm corresponds to a “cycle” of a fixed number of moves of each type. The moves in our move set were designed to avoid the algorithm getting trapped in local maxima, to speed up convergence, and to ensure ergodicity. They are described in detail in <xref ref-type="sec" rid="s4">Materials and Methods</xref>.</p></sec><sec id="s2d"><title>Strategy: Anneal and Track</title><p>By repeating moves from the move set described in the previous section PhyloGibbs will, in the limit of long time, sample each configuration <italic>C</italic> according to its posterior probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>). Even though the distribution <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) represents everything that can be inferred from the data using our model, we still have to decide how to usefully summarize this information. There is, to our knowledge, currently no generally satisfactory solution to this problem (see the discussion in [<xref ref-type="bibr" rid="pcbi-0010067-b028">28</xref>]). One would like the summary to report all the relevant features that are shared by the configurations <italic>C</italic> with high posterior probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>). In particular, one would like to identify groups of windows that with high probability share a color. Given a reference set of windows, it is straightforward to check what fraction of the time different subsets from this reference set are colored the same, and the fraction of the time that other windows are co-colored with windows in this reference set. However, one obviously cannot check this for all possible subsets of windows, and we thus have to decide what reference sets we want to “track.”</p><p>Our current strategy is to first search for the configuration <italic>C*</italic> that has the globally maximal posterior probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) and to take the sets of co-colored windows in this configuration as the reference sets. We use simulated annealing to search for this globally optimal configuration <italic>C*</italic>, which we call the “reference configuration.” Instead of sampling configurations from the distribution <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) we raise each probability to the power β and sample from the posterior <italic>P̃</italic>(<italic>C</italic>|<italic>S</italic>) ∝ <italic>P</italic>(<italic>C</italic>|<italic>S</italic>)<sup>β</sup>. Initially we set β = 1 and slowly increase β with time until the sampler “freezes” into a configuration <italic>C*</italic> with (at least locally) maximal probability <italic>P</italic>(<italic>C*</italic>|<italic>S</italic>).</p><p>The annealing phase is followed by a tracking phase in which we sample from the distribution <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) in order to estimate, for each window <italic>w</italic> and each color <italic>c,</italic> the probability <italic>p</italic>(<italic>w,c</italic>) that window <italic>w</italic> belongs to the same motif (color) as the windows in color <italic>c</italic> of the reference configuration <italic>C*</italic>. The probabilities <italic>p</italic>(<italic>w,c</italic>) are estimated as follows. After every cycle of moves we compare the current configuration <italic>C</italic> with the reference configuration <italic>C*</italic>. Specifically, for every color <italic>c</italic> in the reference configuration <italic>C*</italic> we determine which color c̃ of the current configuration <italic>C</italic> matches <italic>c</italic> most closely (allowing for shift and reverse-complement of the windows in c̃ with respect to the windows in <italic>c;</italic> see <xref ref-type="sec" rid="s4">Materials and Methods</xref>). For every window <italic>w</italic> in c̃ (properly shifted to align with <italic>c</italic>), we add a count of one to the number of times <italic>n</italic>(<italic>w,c</italic>) that <italic>w</italic> is associated with color <italic>c</italic>. At the end we set <italic>p</italic>(<italic>w,c</italic>) = <italic>n</italic>(<italic>w,c</italic>)/<italic>n,</italic> with <italic>n</italic> the total number of cycles.</p><p>In its default mode of operation PhyloGibbs reports the following results for the input set of sequences <italic>S:</italic> (1) the configuration <italic>C*</italic> that has maximal posterior probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>), (2) an inferred WM for each color <italic>c</italic> in configuration <italic>C*</italic>, (3) for each color <italic>c,</italic> all windows <italic>w</italic> for which <italic>p</italic>(<italic>w,c</italic>) ≥ <italic>p</italic><sub>min</sub>, with <italic>p</italic><sub>min</sub> a cutoff that the user can specify, and (4) a WM for each color <italic>c</italic> from reference configuration <italic>C*</italic> that is inferred by weighing the member windows <italic>w</italic> with their membership probabilities <italic>p</italic>(<italic>w,c</italic>).</p><p>Note that, in general, different member windows <italic>w</italic> of color <italic>c</italic> in reference configuration <italic>C*</italic> will have very different posterior probabilities <italic>p</italic>(<italic>w,c</italic>) to be members of the motif. In addition, for each color <italic>c</italic> the tracking will typically uncover windows <italic>w</italic> that were not a member of color <italic>c</italic> in configuration <italic>C*</italic> but that with reasonable probability <italic>p</italic>(<italic>w,c</italic>) belong to the motif as well. One inherent limitation of our anneal-and-track strategy is that it can in principle miss a group of windows that are co-colored a significant fraction of the time in <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) but that do not occur in configuration <italic>C*</italic>. Trivially, if the user allows for too few colors, some motifs may be missed. It generally does not hurt the results to overestimate the number of colors (different motifs), although it increases running time. Similarly, it is also not necessary to accurately estimate the total number of sites. If the prior overestimates the total number of sites, some spurious sites in the reference configuration will simply fail to track. Similarly, if the total number of sites is underestimated, some sites that were missed in the reference configuration will be picked up in the tracking phase. To give maximal flexibility to the user, the algorithm can also, instead of doing an anneal, be given an input reference configuration and track the motifs in this configuration.</p><p>As far as we are aware, PhyloGibbs is the only motif-finding algorithm that rigorously assigns posterior probabilities <italic>p</italic>(<italic>w,c</italic>) to the binding sites that it reports by sampling the entire space of binding site configurations. The Gibbs motif sampler [<xref ref-type="bibr" rid="pcbi-0010067-b004">4</xref>] WGibbs samples the space of configurations while keeping track of the best configuration <italic>C*</italic> that it has seen, i.e., it does not use annealing. It also reports posterior probabilities for the sites it reports, but these are based on sampling of only a small subspace of configurations around the configuration <italic>C*</italic>. Algorithms that search the space of WMs [<xref ref-type="bibr" rid="pcbi-0010067-b006">6</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b025">25</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b024">24</xref>] use EM to find an optimal WM explaining the data and then assign posterior probabilities to reported sites by assuming this WM is correct. That is, they do not take into account the (likely) possibility that the WM found through EM is not entirely correct.</p><p>As we show below, only the rigorous sampling of the space of all configurations as implemented in PhyloGibbs is capable of assigning realistic posterior probabilities to the sites it reports. It is sometimes attempted to identify “significant” motifs by simply rerunning one or several different motif-finding algorithms and looking for recurring motifs. However, this merely generates the subsidiary problem of clustering the multiple predictions. Instead of using ad hoc scoring schemes for clustering, reported binding sites should ideally be clustered using the same probabilistic scoring that generated them, i.e., as in [<xref ref-type="bibr" rid="pcbi-0010067-b028">28</xref>]. PhyloGibbs generalizes the binding site clustering algorithm of [<xref ref-type="bibr" rid="pcbi-0010067-b028">28</xref>] and subsumes any problems of clustering.</p></sec><sec id="s2e"><title>Performance on Synthetic Data: Anneal</title><p>In general there are three qualitatively different issues that contribute to the performance of motif-finding algorithms on real data. First, all motif-finding algorithms make assumptions about the data that will ignore at least some of the complexities of real data. The performance of a given motif-finding algorithm will depend on the extent to which these ignored complexities affect the algorithm's ability to perform its task. Second, the search spaces of all possible WMs or all possible binding site configurations are too large to search exhaustively, and therefore all algorithms employ heuristic methods to search for the globally optimal WMs or configurations. The extent to which the heuristic methods succeed or fail will also affect the performance of the algorithms. Third, even if the data adhere to all assumptions that an algorithm makes, and the algorithm successfully finds the global optimum in the search space, this still does not guarantee that the algorithm will recover the correct motifs and sites. That is, if the motifs are fuzzy and the sites are embedded in long background sequences it might occur that, by chance, the background contains sets of sites that are more conserved and more similar than the embedded sites. In this case it will be impossible for any algorithm to recover the true sites.</p><p>By generating synthetic data to accord, as much as possible, with the assumptions that the motif-finding algorithms make, we can study the second and third issues separately from the first issue. In this section and the next we do a number of such tests. In our first test we want to evaluate to what extent PhyloGibbs can recover a fixed number of sites embedded in a perfect alignment of orthologous sequences as the quality of the WMs and the phylogenetic distances of the orthologs are varied. At the same time, we want to test how well PhyloGibbs performs when operating on perfect alignments compared to algorithms that do not take phylogenetic information into account and that cannot operate on multiple alignments (including PhyloGibbs in the mode where it ignores phylogenetic information). This test will indicate how much performance can be improved by using phylogenetic information and multiple alignments in an ideal situation. For ease of reference, from now on we refer to all algorithms that use phylogenetic information and that can operate on multiple alignments as “phylo” algorithms, while referring to algorithms that treat all sequences as independent as “non-phylo” algorithms.</p><p>For our first test we generated synthetic datasets as follows. (1) We first generated a WM of width <italic>w</italic>. For each position in the WM we picked a random “consensus” base, set the probability of that base to <italic>p,</italic> and set the probabilities of the other bases to (1 − <italic>p</italic>)/3. The WM was thus parametrized by <italic>p,</italic> which we call its “polarization.” For some datasets we also generated random WMs by picking, for each position, a random distribution (<italic>w<sub>a</sub>, w<sub>c</sub>, w<sub>g</sub>, w<sub>t</sub></italic>) uniformly from the simplex <inline-formula id="pcbi-0010067-ex003"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex003" xlink:type="simple"/></inline-formula>
					. Note that for these random WMs the “polarization” varies from column to column. (2) We sampled <italic>s</italic> sites from the WM and embedded them in a random sequence of length <italic>L</italic>. This sequence formed the ancestor sequence. (3) We then generated <italic>S</italic> descendant sequences as follows. For each base the descendant's base was equal to the ancestor's base with probability <italic>q</italic>. With probability 1 − <italic>q</italic> we mutated the base. Outside binding sites, a mutation replaced the ancestor base with a randomly chosen base. Within binding sites, a mutation replaced the ancestor base with a new sample from the WM. Because the WM is generally biased toward particular bases this results in more conservation within binding sites than outside them. We refer to the parameter <italic>q</italic> as the “proximity” of the descendants to their common ancestor. (4) We measured performance by the overlap between the predicted sites in the reference configuration <italic>C*</italic> and the embedded sites. Formally, we counted the number of bases in the intersection of predicted and embedded sites and divided by the total number of bases in embedded sites (which, in these tests, equals the total number of bases in predicted sites). A performance of one thus corresponds to a perfect overlap of the embedded and predicted sites.
				</p><p>We compared the performance of PhyloGibbs with those of non-phylo algorithms on alignments of <italic>S</italic> = 5 orthologous intergenic regions of length <italic>L</italic> = 500 containing <italic>s</italic> = 4 sites for a single motif, as a function of the WM polarization <italic>p</italic> and the proximity of the descendants <italic>q</italic>. The results are shown in <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref>.</p><fig id="pcbi-0010067-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.g003</object-id><label>Figure 3</label><caption><title>Performance of PhyloGibbs and Non-Phylo Motif-Finding Algorithms on Alignments of Orthologous Intergenic Regions as a Function of the Evolutionary Proximity of the Orthologs and the Quality of the WM</title><p>PhyloGibbs with phylogeny (red), PhyloGibbs in non-phylo mode (light blue), WGibbs (dark blue), and MEME (pink) were run on alignments of <italic>S</italic> = 5 intergenic regions of length <italic>L</italic> = 500, each at a proximity <italic>q</italic> to the common ancestor and each containing <italic>s</italic> = 4 binding sites from a single WM of width <italic>w</italic> = 10. In the upper left panel, WMs had polarization <italic>p</italic> = 0.6, in the upper right <italic>p</italic> = 0.75, in the lower left <italic>p</italic> = 0.9, and in the lower right random WMs (drawn uniformly from the simplex) were used. The solid lines show the average overlaps between the predicted sites and the real sites, and the dotted lines show two standard errors (estimated from 50 different datasets generated with equal parameters for each data point).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.g003" xlink:type="simple"/></fig><p>All algorithms assume that the data are a mixture of random uncorrelated background sequences and samples from a number of WMs of certain lengths. With the exception of the phylogenetic relationship of the sequences, which is ignored by the non-phylo algorithms, the synthetic data are thus in complete accordance with the assumptions that each of the algorithms make. For each algorithm we specified the correct length and number of sites. Since when using PhyloGibbs with phylogeny the windows extend over all five sequences in the alignment, we asked PhyloGibbs to predict four multi-sequence windows for a single motif, while we asked the non-phylo algorithms to search for 20 single-sequence sites for a single motif. Since for any algorithm, the performance differs substantially between input datasets that were generated with the same parameter settings, we averaged results over 50 datasets and in <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref> show two standard errors (dotted lines) around the average performance (solid lines).</p><p>All non-phylo algorithms, including PhyloGibbs when phylogeny is turned off, perform roughly equally well (or badly). For highly polarized WMs all non-phylo algorithms perform quite well. In contrast, for low polarizations (<italic>p</italic> = 0.6 in the upper left panel) or for random WMs (lower right panel), all non-phylo algorithms perform hardly better than random predictions would do (the four embedded binding sites cover 8% of the input data). The second thing to note is that, especially as phylogenetic distance between the orthologs increases (lower <italic>q</italic>), PhyloGibbs performs substantially better than the non-phylo algorithms. As the amount of conservation due to evolutionary proximity becomes larger than the amount of conservation due to functional constraints, i.e., as <italic>q</italic> becomes larger than <italic>p,</italic> the performance drops and the performance of PhyloGibbs becomes only marginally better than that of the non-phylo algorithms.</p><p>It is important to point out that PhyloGibbs's superior performance for these data is partly due to the fact that the five sequences have been perfectly aligned and that it is searching only through configurations that are consistent with this alignment. In contrast, the non-phylo algorithms treat the five sequences as independent and have to search a much larger space of configurations. For real data we of course do not have perfect alignments and it will generally be hard to obtain good alignments when the proximity <italic>q</italic> becomes small, which will negatively affect the performance of PhyloGibbs. This effect is seen below in our tests on real data.</p><p>In <xref ref-type="supplementary-material" rid="pcbi-0010067-sg001">Figure S1</xref> we show the results of additional tests analogous to those shown in <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref>. In these tests we chose the WMs and phylogeny to mimic as closely as possible the situation in yeast, whose real data we study below. That is, instead of creating random WMs we used “real” WMs of yeast TFs with known binding specificities, and we used phylogenetic distances for the five descendants that are proportional to the phylogenetic distances of the <italic>Saccharomyces</italic> sensu stricto species that we use in our tests on real data below. The results with these more realistic synthetic datasets are quantitatively very similar to the results shown in the upper right panel of <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref>.</p><p>It might also be asked if the non-phylo algorithms are put at a disadvantage by the fact that they have to search for a much larger number of sites. That is, to get a 50% performance PhyloGibbs needs only to get two multi-species sites correct, whereas the non-phylo algorithms need to get ten sites correct. To test this we ran MEME and WGibbs on single sequences, as opposed to groups of <italic>S</italic> = 5 orthologs, and asked the algorithms to find only <italic>s</italic> = 4 sites instead of <italic>sS</italic> = 20. The non-phylo algorithms MEME and WGibbs performed extremely poorly in this mode. It thus appears that, at least for this kind of synthetic data, the benefit of having more sites outweighs the negative effects of having more sequence to search through.</p><p>Although PhyloGibbs performed consistently better than the non-phylo algorithms, in many cases it recovered only a fraction of the embedded sites. Since the synthetic data were generated exactly according to the model that PhyloGibbs assumes, there are only two possible reasons for the failure of PhyloGibbs to recover the embedded sites. The first possibility is that the correct configuration, i.e., with the four binding sites occurring at the positions where they were embedded, is the globally optimal binding site configuration, but that the anneal phase failed to identify it and instead settled on an only locally optimal configuration. In that case the posterior probability <italic>P</italic>(<italic>C</italic><sub>cor</sub>|<italic>S</italic>) of the correct configuration <italic>C</italic><sub>cor</sub> should be higher than the posterior probability <italic>P</italic>(<italic>C*</italic>|<italic>S</italic>) of the configuration <italic>C*</italic> that the anneal obtained. The second possibility is that the anneal did identify the globally optimal configuration, and that this configuration <italic>C*</italic> has higher posterior probability <italic>P</italic>(<italic>C*</italic>|<italic>S</italic>) than the posterior probability of the correct configuration <italic>P</italic>(<italic>C</italic><sub>cor</sub>|<italic>S</italic>). This can happen when, by chance, positions outside of the embedded binding sites are more conserved and/or better match a common WM than the embedded sites, making it impossible for any algorithm to recover them correctly.</p><p>To investigate how often the anneal in PhyloGibbs identifies the globally optimal configuration, we compared <italic>P</italic>(<italic>C*</italic>|<italic>S</italic>) with <italic>P</italic>(<italic>C</italic><sub>cor</sub>|<italic>S</italic>) for the runs with proximities <italic>q</italic> = 0.2, <italic>q</italic> = 0.5, and <italic>q</italic> = 0.8, shown in the lower right panel of <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref>. For each value of <italic>q</italic> there were 50 independent datasets generated, and PhyloGibbs was run five times on each dataset. Thus, for each value of <italic>q</italic> there were 250 runs in total. We found that <italic>P</italic>(<italic>C*</italic>|<italic>S</italic>) ≥ <italic>P</italic>(<italic>C</italic><sub>cor</sub>|<italic>S</italic>) for 245 of the 250 runs for <italic>q</italic> = 0.2, for 243 of the 250 for <italic>q =</italic> 0.5, and for all 250 runs for <italic>q</italic> = 0.8. Thus, for 98.4% of the runs, the posterior probability of the configuration found in the anneal was at least as high as the posterior probability of the correct configuration.</p><p>In conclusion, these first tests with synthetic data showed that, when sites from WMs are embedded in a random ancestor sequence, and PhyloGibbs is given a perfect alignment of a set of descendants of this sequence, it performs significantly better than algorithms that treat the descendants as independent sequences. It also shows that as the similarity between sites becomes less than or equal to the similarity between orthologous sequences due to evolutionary proximity, it becomes impossible for any algorithm to accurately recover the sites.</p><p>In the first test PhyloGibbs used both information from the overrepresentation of a motif in the data and information about the conservation of its sites. We next investigated how many species one would need, in an ideal situation, to reliably infer the location of a single binding site using conservation only. To test this we generated synthetic intergenic regions of length <italic>L</italic> = 500 that contained a single site for a single randomly chosen WM of width <italic>w</italic> = 10 and created alignments of <italic>S</italic> descendant sequences with proximity <italic>q</italic> = 0.5. We then ran PhyloGibbs for different values of <italic>S,</italic> asking it to search for a single multi-sequence window in the alignment. The results are shown in <xref ref-type="fig" rid="pcbi-0010067-g004">Figure 4</xref>.</p><fig id="pcbi-0010067-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.g004</object-id><label>Figure 4</label><caption><title>Performance of PhyloGibbs in Recovering a Single Site of a Randomly Chosen WM of Width <italic>w</italic> = 10 from the Alignment of <italic>S</italic> Orthologous Intergenic Regions of Proximity <italic>q</italic> = 0.5 and Length <italic>L</italic> = 500 as a function of <italic>S</italic></title><p>The solid line shows the average overlap between the true site and the predicted site and the dotted lines show two standard errors.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.g004" xlink:type="simple"/></fig><p>We see that more than ten species are needed to have a 50% probability to recover a single site of a random WM at <italic>q</italic> = 0.5, and that as many as 25 species are necessary to recover the site with 90% probability. Note that significantly more species are necessary to recover a single site than are necessary to recover a group of multiple sites from the same WM. That is, in the lower right of <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref> about 40% of the quartet of sites is recovered at <italic>q</italic> = 0.5, whereas in <xref ref-type="fig" rid="pcbi-0010067-g004">Figure 4</xref> at <italic>S =</italic> 5 the single site is recovered with a probability of only 0.15. In conclusion, this test has shown that if enough species are available in which a given binding site occurs, and these can be reliably aligned, then even individual sites can be reliably recovered by PhyloGibbs.</p></sec><sec id="s2f"><title>Performance on Synthetic Data: Tracking</title><p>In the next section we compare the performance of PhyloGibbs and other algorithms that use phylogeny (PhyME [<xref ref-type="bibr" rid="pcbi-0010067-b025">25</xref>] and EMnEM [<xref ref-type="bibr" rid="pcbi-0010067-b024">24</xref>]) on real data from five <italic>Saccharomyces</italic> species. To compare and contrast with those tests we here create synthetic datasets that are comparable with those real datasets but that are idealized in the sense that they respect the assumptions that the various algorithms make about the data as much as possible. This test allows us to directly compare the performance of the phylo algorithms on idealized data, and the extent to which they outperform non-phylo algorithms in this idealized setting.</p><p>As mentioned in the previous section, our synthetic data are in accordance with all assumptions that the non-phylo algorithms make about the data, except of course for the phylogenetic relationships between the sequences. Our synthetic orthologous sequences are generated in accordance with the evolutionary model that PhyloGibbs and PhyME assume. For these two algorithms the synthetic data are thus in exact accordance with the assumptions that these algorithms make. EMnEM employs an evolutionary model that uses the same substitution matrix both within and outside of sites, but allows each position in a binding site to evolve at a different overall rate. This model is thus less realistic than the model that PhyME and PhyloGibbs use in that it ignores that the probabilities of different substitutions within a site depend on the site's WM. However, since it has more free parameters that can be fitted, we suspect that in practice it will be able to reasonably approximate the evolutionary model that PhyloGibbs and PhyME use.</p><p>We followed the estimates of [<xref ref-type="bibr" rid="pcbi-0010067-b035">35</xref>] and created 250 synthetic datasets, each containing nine binding sites, sampled equally from three random WMs for each intergenic region (see <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> for details). We assessed the results with a plot of specificity (fraction of predictions matching true sites) versus sensitivity (fraction of true sites that were recovered). All the algorithms report posterior probabilities (or a <italic>p</italic>-value) for the sites they report, which we used to rank the predictions. We pooled the predictions from all datasets and then generated successively larger lists of predictions by including all predictions over a given posterior probability. For each list we then determined the specificity and sensitivity and plotted them in <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> (see <xref ref-type="sec" rid="s4">Materials and Methods</xref> for details).</p><fig id="pcbi-0010067-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.g005</object-id><label>Figure 5</label><caption><title>Performance of Several Motif-Finding Algorithms on Synthetic Data Prepared as for <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref></title><p>A total of 250 alignments of <italic>S</italic> = 5 orthologous intergenic regions of length <italic>L</italic> = 750 and proximity <italic>q</italic> = 0.5 were created with three binding sites sampled from each of three different random WMs. The left panel shows how the fraction of predicted sites that match true sites (specificity) depends on the fraction of true sites that are among the predictions (sensitivity) for PhyloGibbs (red), EMnEM (yellow), PhyME (green), PhyloGibbs without phylogeny (light blue), WGibbs (dark blue), and MEME (pink). Dashed lines correspond to two standard errors. The right panel shows the ability of the different algorithms to assess their own reliability. The true specificity is shown as a function of the specificity that the algorithm predicts for the sites that it reports. The black line <italic>y</italic> = <italic>x</italic> corresponds to a perfect assessment of the algorithm's reliability.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.g005" xlink:type="simple"/></fig><p>The algorithms that ignore phylogeny did not recover more than 16% of the true sites (sensitivity), and did so with a nearly fixed specificity of around 20%, meaning that there is not much enrichment in true sites in the top versus the bottom of their ranked lists. The algorithms that exploit the phylogeny all did better for the simple reason that they operate on the perfect multiple alignments and therefore their search space is much smaller. Of these three algorithms PhyloGibbs performed best. PhyME, in common with the non-phylo algorithms, reports a very limited range of posterior probabilities for the sites it reports, which leads to a relatively small “dynamic range” in sensitivity/specificity.</p><p>Note that even with this perfectly aligned data, to get 50% of the true sites, PhyloGibbs needed to make more than twice as many predictions. Again, to determine to what extent the failure of PhyloGibbs to recover all the embedded sites was caused by the anneal getting trapped in locally optimal configurations, we compared the posterior probabilities <italic>P</italic>(<italic>C*</italic>|<italic>S</italic>) of the reference configurations with those of the correct states <italic>P</italic>(<italic>C</italic><sub>cor</sub>|<italic>S</italic>). We found that <italic>P</italic>(<italic>C*</italic>|<italic>S</italic>) was greater than or equal to <italic>P</italic>(<italic>C</italic><sub>cor</sub>|<italic>S</italic>) for all 250 datasets.</p><p>These synthetic data also provide the opportunity to test how well the algorithms assess their reliability, i.e., how well the reported posterior probabilities for their predictions match the specificities (fraction of predictions matching true sites) we compute by knowing the true sites. Ideally the two are the same, so that for real data one could use the posterior probabilities to gauge the fraction of correct predictions. The right panel of <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> shows that with the exception of PhyloGibbs (with and without phylogeny) all algorithms were much too optimistic about the quality of their predictions: EMnEM and MEME gave posterior probabilities larger than 95% when their specificity was around 35%, and WGibbs gave posteriors of 90% when its real specificity was only 20%. MEME is not included in the right panel of <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> because it reports <italic>p</italic>-values instead of posterior probabilities.</p><p>Both EMnEM and PhyME overestimated their specificity because they calculate their posterior probabilities for sites under the assumption that the WMs that they infer are correct. In reality, the inferred WM will often not match the true WM that generated the data. For WGibbs the overestimation stems from the restricted sampling of configurations around the one that gave the maximum posterior probability during sampling. Only PhyloGibbs bases its posterior on sampling of the whole space of binding site configurations.</p><p>In <xref ref-type="supplementary-material" rid="pcbi-0010067-sg002">Figure S2</xref> we present the results of a test analogous to the one in <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref>, using again “real” WMs from yeast instead of random WMs, and using the proximities of the sensu stricto <italic>Saccharomyces</italic> species instead of proximity 0.5 for all descendants. All algorithms performed substantially better in these tests, which is in all likelihood mostly because of the higher information scores (see <xref ref-type="sec" rid="s4">Materials and Methods</xref>) of the yeast WMs compared to random WMs. All phylo algorithms still outperformed the non-phylo algorithms, and of the phylo algorithms, PhyloGibbs performed significantly better than PhyME and EMnEM. In contrast to the test shown in <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref>, PhyME clearly outperformed EMnEM on this test.</p><p>In summary, these tests have shown that, given perfectly aligned input sequences, all phylo algorithms substantially outperform non-phylo algorithms. The tests have also shown that, on data that are in accordance with the assumptions that the phylo algorithms make (almost all for EMnEM), PhyloGibbs outperforms the other algorithms. In addition, only PhyloGibbs is capable of reasonably estimating the reliability of its own predictions.</p></sec><sec id="s2g"><title>Results on the Yeast Genome</title><p>To test the performance of PhyloGibbs and other algorithms on real data we decided to use data from the recently sequenced yeast genomes [<xref ref-type="bibr" rid="pcbi-0010067-b015">15</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b016">16</xref>]. For our first test on these data we used the list of documented binding sites for yeast TFs in the <italic>Saccharomyces cerevisiae</italic> promoter database (SCPD) [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>]. After “clean up” this list contains 466 binding sites upstream of 200 different genes with a little less than 30 bp in sites per intergenic region. Based on recent estimates [<xref ref-type="bibr" rid="pcbi-0010067-b035">35</xref>] this probably corresponds to roughly a third of all the binding sites in these upstream regions. This dataset of experimentally verified sites allows us to quantitatively compare the abilities of the different algorithms to recover true binding sites using only the orthologous sequences of the five sensu stricto species as we did with the synthetic data in <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref>. By comparing the performance on the real data with the performance on synthetic data we also learn about the effect, on the various algorithms, of the complexities in the real data that are not captured by the assumptions that the algorithms make.</p><p>For each of the 200 genes, we gathered its upstream region together with the orthologous upstream regions from <italic>S. paradoxus, S. mikatae, S. bayanus,</italic> and <italic>S. kudriavzevii</italic>. In complete analogy with the previous test on synthetic data, we ran PhyloGibbs with and without phylogeny, PhyME, EMnEM, WGibbs, and MEME on each of these 200 upstream regions. For PhyloGibbs we used Dialign [<xref ref-type="bibr" rid="pcbi-0010067-b022">22</xref>] alignments of the upstream regions. PhyME uses the MLAGAN [<xref ref-type="bibr" rid="pcbi-0010067-b029">29</xref>] software for its multiple alignments, and EMnEM uses ClustalW alignments [<xref ref-type="bibr" rid="pcbi-0010067-b030">30</xref>]. Each of these algorithms was asked to search for three motifs and an expected three sites per motif (nine sites in total). The non-phylo algorithms were also asked to search for three motifs and to expect ten sites per motif. (We experimented with other site numbers, and ten gave the best overall results for the non-phylo algorithms.) For the phylo algorithms we also needed to specify the phylogenetic tree. We approximated the topology of the sensu stricto species by a star topology and set the branch lengths based on recent estimates of conservation rates at third positions in 4-fold degenerate codons between these genomes [<xref ref-type="bibr" rid="pcbi-0010067-b035">35</xref>] as described in <xref ref-type="sec" rid="s4">Materials and Methods</xref>.</p><p>The left panel of <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref> shows the performance of the algorithms on this dataset analogously to the left panel of <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref>. We see that, as on the synthetic data, PhyloGibbs outperformed all other algorithms on the real data. In contrast to the performances on the synthetic data, the difference between the performances of the phylo and non-phylo algorithms was much less pronounced. At very low sensitivity, PhyloGibbs run without phylogeny performed almost equally well as PhyloGibbs with phylogeny. PhyME had high sensitivity and outperformed both EMnEM and the non-phylo algorithms at this sensitivity, but it seemed unable to make very specific predictions. EMnEM did not perform better than any of the non-phylo algorithms on these data.</p><fig id="pcbi-0010067-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.g006</object-id><label>Figure 6</label><caption><title>Performance of Several Motif-Finding Algorithms on 200 Alignments of Orthologous Intergenic Regions from Five <italic>Saccharomyces</italic> Species Containing Documented Binding Sites</title><p>The left panel shows how the fraction of predicted sites that match true sites (specificity) depends on the fraction of true sites that are among the predictions (sensitivity) for PhyloGibbs (red), EMnEM (yellow), PhyME (green), PhyloGibbs without phylogeny (light blue), WGibbs (dark blue), and MEME (pink). Dashed lines correspond to one standard error. In order for the specificities, predicted by the various algorithms, to match the true specificities, we have to assume that the known sites are only a fraction of all true sites. The right panel shows what the fraction of known sites among all true sites should be in order for the algorithms' predicted specificities to match the true specificities. The black line shows an independent estimate of the fraction of real sites in these upstream regions that is documented (see text).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.g006" xlink:type="simple"/></fig><p>We believe that one important factor contributing to the smaller difference between the phylo and non-phylo algorithms is the limited reliability of the multiple alignments. Since all phylo algorithms only sample configurations consistent with the alignment, any errors in the alignment will hurt their performance. Another factor that probably plays a role is that all phylo algorithms assume that when a site occurs in a conserved block, the site must occur in all species. This is probably not always true, i.e., there are cases where only some of the sequences in an aligned block have retained the site. The non-phylo algorithms can easily deal with this by placing windows only on those sequences that have retained the site, but the phylo algorithms cannot, and a block with several binding sites may be “spoiled” by a single sequence that is missing the site.</p><p>All specificities in <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref> are significantly lower than those for the synthetic data in <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref>. There are, of course, many differences between the synthetic and real data (the real data have more complex background, WMs of varying widths, varying numbers of motifs and sites, etc.), but we believe the main reason for the much lower specificity is that the specificities are based on counting only <italic>documented</italic> sites, and that many true binding sites are not yet documented. There is no reason to believe that the algorithms are more likely to recover documented binding sites than they are to recover true but undocumented binding sites. The reported specificities <italic>s<sub>r</sub></italic> counting only documented sites thus likely underestimate the true specificities <italic>s<sub>t</sub></italic> by a factor that roughly corresponds to the fraction <italic>f<sub>d</sub></italic> of all true sites that are documented. That is, assuming that all algorithms are equally likely to recover true but undocumented sites as they are to recover documented sites, and assuming that the algorithm's true specificity <italic>s<sub>t</sub></italic> matches the specificity <italic>s<sub>p</sub></italic> that it predicts itself, we have</p><disp-formula id="pcbi-0010067-e007"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e007" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>with <italic>s<sub>r</sub></italic> the reported specificity on documented sites as shown in the left panel of <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref>. This implied value <italic>f<sub>d</sub></italic> is shown in the right panel of <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref> as a function of the predicted specificity <italic>s<sub>p</sub></italic>. We see that PhyloGibbs predicted a fraction <italic>f<sub>d</sub></italic> that was relatively insensitive to <italic>s<sub>p</sub></italic> and lay between 33% and 45% over a wide range. PhyloGibbs without phylo predicted an <italic>f<sub>d</sub></italic> in the range of 25% to 40%. Both of these predictions are consistent with the independent estimate [<xref ref-type="bibr" rid="pcbi-0010067-b035">35</xref>] that the documented sites represent about 33% of all true binding sites (black line). As with the synthetic data, these results suggest that PhyloGibbs's own assessment of the reliability of its predictions is fairly accurate. Thus, while 18.5% of all predicted sites at a sensitivity of 50% matched documented binding sites, the true specificity is probably somewhere around 55%, and the predicted sites at sensitivity 10% are likely almost all real (A rescaled version of the left panel of <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref> is shown in <xref ref-type="supplementary-material" rid="pcbi-0010067-sg003">Figure S3</xref>). In contrast, the values of <italic>f<sub>d</sub></italic> obtained for the other algorithms were all unrealistic, for reasons that we already discussed above.</p><p>All binding sites that PhyloGibbs predicted in the upstream regions of the genes with one or more sites in SCPD are listed in <xref ref-type="supplementary-material" rid="pcbi-0010067-sd001">Dataset S1</xref>. They can also be viewed at [<xref ref-type="bibr" rid="pcbi-0010067-b036">36</xref>].</p></sec><sec id="s2h"><title>Inferring Yeast's “Regulatory Code”</title><p>In the previous sections PhyloGibbs inferred the locations of regulatory sites in one intergenic region at a time. Although sites for a given TF often occur in multiple copies in a single intergenic region, there are also many cases where only a single site occurs, and in those cases PhyloGibbs has to rely on conservation alone to infer the locations of the regulatory sites. However, PhyloGibbs is not limited to run on a single multiple alignment of orthologous intergenic regions but can also run on a set of multiple alignments for co-regulated genes, which should significantly increase sensitivity and specificity.</p><p>To test the performance of PhyloGibbs in this setting we used data from a recently published [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] draft transcriptional “regulatory code” of <italic>S. cerevisiae</italic>. Harbison et al. [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] performed ChIP-on-chip experiments with 203 different TFs from <italic>S. cerevisiae</italic> to identify the intergenic regions that are bound by each of them. A suite of six motif-finding algorithms was run on these intergenic regions (several algorithms also used the orthologous regions from other species), and the results were then clustered to arrive at a consensus WM for each TF. When no motif was found computationally for the intergenic regions pulled down, the literature was used, whenever possible, to define a motif. This led to predicted WMs and binding sites for 102 TFs.</p><p>We tested PhyloGibbs on the highest confidence set of intergenic regions regulated by each factor. We focused on the 45 TFs that had the fewest binding sites annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] (a minimum of three and a maximum of 25) since these are generally the most challenging to locate. For 21 of these 45 TFs, the six motif-finding algorithms employed in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] failed to find a significant motif in the input data, and the reported motif and sites are based entirely on a consensus obtained from the literature (of the remaining 57 WMs with more than 25 or less than three annotated sites, 16 were also solely based on literature.)</p><p>We first tested whether, in contrast to the motif-finding algorithms employed in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], PhyloGibbs was capable of recovering a significant motif that matches the literature consensus for these 21 TFs. For each TF we collected all intergenic regions that were annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] to contain at least one binding site, collected their orthologs from the other sensu stricto <italic>Saccharomyces</italic> species, produced multiple alignments using Dialign [<xref ref-type="bibr" rid="pcbi-0010067-b022">22</xref>], and ran PhyloGibbs on each of these sets of alignments. Since each of these collections of intergenic regions will typically contain binding sites for multiple TFs, we asked PhyloGibbs to search for three motifs, with a total number of sites equaling three times the number of annotated sites for the TF in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. The results of this test are shown in <xref ref-type="table" rid="pcbi-0010067-t001">Table 1</xref>.</p><table-wrap content-type="2col" id="pcbi-0010067-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.t001</object-id><label>Table 1</label><caption><p>Results of PhyloGibbs on Collections of Intergenic Regions for 21 TFs for Which the Motif-Finding Algorithms in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] Failed to Recover a Significant Motif but for Which a Literature Consensus Motif Is Available</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.t001" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb1col1" align="left" charoff="0" char=""/><col id="tb1col2" align="left" charoff="0" char=""/><col id="tb1col3" align="left" charoff="0" char=""/><col id="tb1col4" align="left" charoff="0" char=""/><col id="tb1col5" align="left" charoff="0" char=""/><col id="tb1col6" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left"><hr/>TF Name<sup>a</sup></td><td><hr/>Anneal WM<sup>b</sup></td><td><hr/>Track WM<sup>c</sup></td><td><hr/>Anneal Sites<sup>d</sup></td><td><hr/>Track Sites<sup>e</sup></td><td><hr/>Number Annotated in &lsqb;<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>&rsqb;</td></tr></thead><tbody><tr><td>GAL80*</td><td>0.88</td><td>0.89</td><td>3/4</td><td>2.73/3.41</td><td>3</td></tr><tr><td>GCR1&plus;</td><td>1.00</td><td>1.00</td><td>6/10</td><td>5.17/7.96</td><td>7</td></tr><tr><td>HAP2</td><td>1.00</td><td>1.00</td><td>15/15</td><td>4.5/6.72</td><td>21</td></tr><tr><td>HAP3</td><td>1.00</td><td>1.00</td><td>10/10</td><td>7.14/8.21</td><td>13</td></tr><tr><td>MET32*</td><td>1.00</td><td>1.00</td><td>9/11</td><td>7.33/9.77</td><td>13</td></tr><tr><td>MSN4*</td><td>1.0</td><td>1.0</td><td>14/23</td><td>12.41/20.68</td><td>21</td></tr><tr><td>RGT1&plus;</td><td>0.42</td><td>0.67</td><td>9/13</td><td>8.27/12.35</td><td>12</td></tr><tr><td>RTG3*</td><td>1.0</td><td>1.0</td><td>3/7</td><td>2.31/5.77</td><td>5</td></tr><tr><td>PUT3&plus;</td><td>0.03</td><td>0.0</td><td>3/3</td><td>2.73/2.73</td><td>4</td></tr><tr><td>MET31*</td><td>1.0</td><td>1.0</td><td>2/3</td><td>1.84/2.52</td><td>5</td></tr><tr><td>ADR1*</td><td>0.92</td><td>0.92</td><td>1/9</td><td>0.19/6.21</td><td>13</td></tr><tr><td>MAC1</td><td>0.77</td><td>0.69</td><td>1/4</td><td>0.85/2.67</td><td>5</td></tr><tr><td>HAP5</td><td>1.0</td><td>0.0</td><td>10/15</td><td>0.99/10.97</td><td>21</td></tr><tr><td>SKO1</td><td>1.0</td><td>0.0</td><td>2/4</td><td>0.91/4.13</td><td>7</td></tr><tr><td>GZF3</td><td>0.74</td><td>0.0</td><td>0/3</td><td>0/0.83</td><td>3</td></tr><tr><td>RLM1*</td><td>0.74</td><td>0.0</td><td>0/8</td><td>0/3.64</td><td>9</td></tr><tr><td>DAL80</td><td>0.03</td><td>0.0</td><td>0/6</td><td>0/5.75</td><td>9</td></tr><tr><td>MOT3</td><td>0.0</td><td>0.0</td><td>0/10</td><td>0/11.69</td><td>11</td></tr><tr><td>ROX1</td><td>0.0</td><td>0.0</td><td>0/10</td><td>0/6.65</td><td>12</td></tr><tr><td>YAP6</td><td>0.0</td><td>0.0</td><td>0/4</td><td>0/2.5</td><td>3</td></tr><tr><td>YOX1</td><td>0.0</td><td>0.0</td><td>1/2</td><td>0.91/1.82</td><td>3</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt101"><p><sup>a</sup>The TFs are presented roughly in order of the amount of match with the literature motif and annotated sites in &lsqb;<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>&rsqb;. We ran PhyloGibbs twice for each group: once with a default motif width of 15 and once with motif width matching the width of the literature consensus motif. When the latter gave best results an asterisk is indicated on the TF name, and when both motif widths showed equally good results a plus sign is indicated on the name.</p></fn><fn id="nt102"><p><sup>b</sup>The probability that the WM reported by PhyloGibbs in the reference configuration C* matches the literature motif.</p></fn><fn id="nt103"><p><sup>c</sup>The probability that the time-averaged WM estimated by tracking matches the literature motif.</p></fn><fn id="nt104"><p><sup>d</sup>The total number of windows in reference configuration C* for the matching motif and the number of those that match sites annotated for the TF in &lsqb;<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>&rsqb;.</p></fn><fn id="nt105"><p><sup>e</sup>The average number of windows in the motif during tracking and the average number of those that match sites annotated for this TF in &lsqb;<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>&rsqb;.</p></fn></table-wrap-foot> --></table-wrap><p>We evaluated the results that PhyloGibbs reported for each TF in various ways. As described in <xref ref-type="sec" rid="s4">Materials and Methods</xref>, PhyloGibbs reports two WMs for each motif that it finds: one constructed from the configuration <italic>C*</italic> at the end of anneal, and one by weighing the member windows of a motif with their membership probabilities obtained through tracking. We compared these WMs with the WM that is reported in the literature for each of these 21 TFs. We also compared the sites that PhyloGibbs reported, in both anneal and tracking, with the sites reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For each TF we ran PhyloGibbs twice, first with a motif width matching the literature consensus, and then with a default width of 15. We then determined which of the motifs that PhyloGibbs reported best matches the literature motif, and we report a number of statistics for this motif (<xref ref-type="table" rid="pcbi-0010067-t001">Table 1</xref>). For example, the statistics for TF GCR1 show that, for one of the motifs reported by PhyloGibbs, both the anneal WM and the tracking WM have a probability 1.0 to match the literature WM. There are ten windows with this color in the anneal configuration <italic>C</italic>*, of which six match sites annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] for GCR1<italic>.</italic> During tracking, on average 7.96 windows were members of this motif, and on average 5.17 of these members matched sites annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. A total of seven sites were annotated for GCR1 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>].</p><p>We see that for 16 of the 21 TFs, PhyloGibbs found a motif that matched, according to at least one statistic, the consensus motif known for this TF in the literature. PhyloGibbs thus apparently outperformed all of the motif-finding algorithms used in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] on these 16 datasets. For the top eight TFs in <xref ref-type="table" rid="pcbi-0010067-t001">Table 1</xref> there is a good match between the WMs that PhyloGibbs reports and the literature WM as well as a significant overlap between the reported sites and the sites reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. This agreement might suggest that these groups of sites almost exhaustively capture all sites genome-wide for these eight factors. To test this we picked one example, GCR1, and compared the reported sites with known sites from the literature. In [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>] there are six genes whose upstream regions have reported GCR1 sites <italic>(TPI1, CDC19, ENO2, ADH1, ENO1,</italic> and <italic>PGK1).</italic> More recently, it was shown that there are additional GCR1 sites upstream of <italic>GKL1</italic> and <italic>GCR1</italic> itself [<xref ref-type="bibr" rid="pcbi-0010067-b037">37</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b038">38</xref>]. Somewhat surprisingly, of these eight genes only one <italic>(CDC19)</italic> is among the set of four upstream regions containing GCR1 annotated sites in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on the eight upstream regions of <italic>TPI1, CDC19, ENO2, ADH1, ENO1, PGK1, GKL1,</italic> and <italic>GCR1,</italic> and recovered a motif that perfectly matched the GCR1 literature consensus. This motif is represented with sites in all upstream regions, although the site upstream of <italic>GKL1</italic> has a posterior probability of only 0.1. Thus, the sites PhyloGibbs found in these upstream regions are very likely true GCR1 sites. This indicates that the sites reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] are far from exhaustive.</p><p>The results for PUT3 seem paradoxical. All sites PhyloGibbs reported matched sites reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], but the WMs did not match. The reason for this is that the consensus for PUT3 used in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], CGG..........CCG, has a 10-bp spacer that is presumed to contain random bases. In contrast, the motif that PhyloGibbs inferred, CGGNNNNGGNTTCCCG, is much more specific. It has been established that <italic>PUT1</italic> and <italic>PUT2</italic> are directly regulated by PUT3 [<xref ref-type="bibr" rid="pcbi-0010067-b039">39</xref>]. The upstream region of <italic>PUT2</italic> is indeed among the three upstream regions annotated with sites for PUT3 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], but <italic>PUT1</italic> is not. We added this upstream region to the collection of upstream regions for PUT3 and reran PhyloGibbs. PhyloGibbs again found the PUT3 motif, which now included two good binding sites upstream of <italic>PUT1</italic>.</p><p>For MET31 the WMs matched reasonably well, and two out of three sites in configuration <italic>C*</italic> matched, but the sites did not cluster stably during tracking. According to the literature [<xref ref-type="bibr" rid="pcbi-0010067-b040">40</xref>–<xref ref-type="bibr" rid="pcbi-0010067-b042">42</xref>], MET31 directly regulates <italic>MET25, MET3, MET14, GSH1,</italic> and <italic>MET28</italic>. None of their upstream regions are among the upstream regions annotated with sites for MET31 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on these five upstream regions and found a motif that matched the literature consensus that had sites in all five of these upstream regions that are stable under tracking. Thus, as with GCR1, all these sites are very likely true MET31 sites not annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>].</p><p>For ADR1 and MAC1, both reported WMs showed a significant match to the literature motif but the reported sites overlapped only marginally with the sites reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For ADR1 there are two genes that have known sites upstream <italic>(ADH2</italic> and <italic>CTA1)</italic> in [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>]. Neither of these have annotated sites for ADR1 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. A recent microarray-based study [<xref ref-type="bibr" rid="pcbi-0010067-b043">43</xref>] lists 74 genes as under control of ADR1, of which only <italic>PXA1</italic> occurs among the upstream regions with sites for ADR1 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. Both <italic>ADH2</italic> and <italic>CTA1</italic> occur in this list as well. We ran PhyloGibbs on the upstream regions of <italic>ADH2, CTA1,</italic> and <italic>PXA1</italic> and found a motif matching the ADR1 literature consensus and containing sites in all three upstream regions. Again these sites are thus very likely true sites for ADR1 that, except for the <italic>PXA1</italic> sites, are not contained in the annotation of [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For MAC1 a similar story applies. Binding sites for MAC1 are listed upstream of <italic>FRE1</italic> and <italic>CTR1</italic> in [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>], and <italic>CTR3</italic> and <italic>CTT1</italic> are additionally identified as targets in the literature [<xref ref-type="bibr" rid="pcbi-0010067-b044">44</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b045">45</xref>]. Of these only <italic>CTR1</italic> is among the genes with sites for MAC1 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. Running PhyloGibbs on these four upstream regions recovered a motif that matched the MAC1 literature consensus perfectly and that had sites upstream of <italic>FRE1</italic> and <italic>CTR1.</italic> It also had a site upstream of orthologs of <italic>CTR3</italic> but, curiously, not in the <italic>S. cerevisiae</italic> upstream region of <italic>CTR3,</italic> which, equally curiously, did not align well with the upstream regions of its orthologs. PhyloGibbs found no site in <italic>CTT1</italic>. This case warrants closer study.</p><p>For HAP5 and SKO1, only the anneal WM matched the literature WM. Although a reasonable number of windows occurred on average during tracking for these motifs, there was no stable core. Even the stablest window in each group was only present about 50% of the time. The membership of these groups thus fluctuated significantly during tracking, and this is reflected in the fact that the information score (see <xref ref-type="sec" rid="s4">Materials and Methods</xref>) of the tracking WM is much lower than that of the anneal WM. In [<xref ref-type="bibr" rid="pcbi-0010067-b046">46</xref>] five genes <italic>(AHP1, GLR1, GRE2, SFA1</italic> and <italic>YML131W)</italic> are reported as direct targets of SKO1. None of their upstream regions occur among the upstream regions with annotated sites for SKO1 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on the upstream regions of these five genes and found a motif that matches the literature consensus and had sites in the upstream regions of all but <italic>SFA1</italic>. Interestingly, the consensus of the motif PhyloGibbs reported, TTACGTAA, subtly differs from the literature consensus TGACGTCA. The PhyloGibbs consensus is still a palindrome but the second guanine and penultimate cysteine are replaced by thymine and adenine, respectively.</p><p>For GZF3 and RLM1 there was only a moderate match of the anneal WM to the literature WM, and no overlap whatsoever of the reported sites with the sites reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. Coffman et al. [<xref ref-type="bibr" rid="pcbi-0010067-b047">47</xref>] report <italic>GAP1, DAL80,</italic> and <italic>UGA4</italic> as direct target genes of GZF3. Again, none of these are among the genes annotated with sites for GZF3 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on the upstream regions of these three genes and recovered a motif that significantly matched the literature motif and had sites upstream of all three genes. Interestingly, the motif that PhyloGibbs reported, GATWAGCGAT, while matching the literature consensus GATAAG, is longer and significantly more specific. Dodou et al. [<xref ref-type="bibr" rid="pcbi-0010067-b048">48</xref>] report <italic>RLM1, SMP1, HKR1, KTR2, HSP150,</italic> and <italic>FLO1</italic> as direct targets of RLM1. Of these, only <italic>HSP150</italic> is among the genes with sites annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on the set of six upstream regions from [<xref ref-type="bibr" rid="pcbi-0010067-b048">48</xref>] and recovered a motif that reasonably matched the <italic>RLM1</italic> literature consensus. The consensus of the motif that PhyloGibbs reported is WGCWAANNTTARAW, whereas the literature consensus is CTAWWWWTAG. PhyloGibbs found sites upstream of four <italic>(SMP1, HSP150, KTR2,</italic> and <italic>HKR1)</italic> of the six genes, with multiple sites in front of <italic>HSP150.</italic></p><p>Finally, there were five TFs (DAL80, MOT3, ROX1, YAP6, and YOX1) for which PhyloGibbs did not find any motif matching the literature motif among the intergenic regions from [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. DAL80 is one of a family of four GATA TFs that all bind motifs containing the consensus GATA. The experimentally best confirmed target genes for DAL80 are <italic>DAL3, DAL80</italic> itself, <italic>GAT1,</italic> and <italic>UGA4</italic> [<xref ref-type="bibr" rid="pcbi-0010067-b047">47</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b049">49</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b050">50</xref>]. None of these have binding sites for DAL80 annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on the upstream regions of these four genes and found a motif with GATAAG consensus that had at least two sites in each of the upstream regions.</p><p>Hongay et al. [<xref ref-type="bibr" rid="pcbi-0010067-b051">51</xref>] suggest that <italic>ERG2, ERG6,</italic> and <italic>ERG9</italic> are direct targets of MOT3. Again, none of these upstream regions have sites annotated for MOT3 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on the upstream regions of these three genes but did not find a motif clearly matching the literature consensus.</p><p>Linde and Steensma [<xref ref-type="bibr" rid="pcbi-0010067-b052">52</xref>] found 25 genes in an expression array experiment that are likely targets of ROX1, among which are the three genes <italic>(CYC1, HEM13,</italic> and <italic>ROX1)</italic> with binding sites in [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>]. None of these 25 genes are among the genes with ROX1 sites annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We ran PhyloGibbs on the three upstream regions of <italic>CYC1, HEM13,</italic> and <italic>ROX1</italic> and recovered a motif that perfectly matches the literature consensus and had sites in each of the three upstream regions.</p><p>For YAP6 a consensus binding site has been established by in vitro studies of different YAP proteins binding DNA [<xref ref-type="bibr" rid="pcbi-0010067-b053">53</xref>]. As far as we can tell no clear target genes are known in the literature for YAP6.</p><p>Finally, Pramila et al. [<xref ref-type="bibr" rid="pcbi-0010067-b054">54</xref>] report 28 target genes for the homeodomain protein YOX1. Of these only <italic>SPO12</italic> is among the genes with sites annotated for YOX1 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. YOX1 is known to interact directly with MCM1, and a motif for YOX1 was reported in [<xref ref-type="bibr" rid="pcbi-0010067-b054">54</xref>] that was found by first identifying the MCM1 binding sites in the upstream regions of the target genes, and then searching for an additional overrepresented motif near the MCM1 sites. We also ran PhyloGibbs on the upstream regions of these 28 genes and identified a motif with consensus ATTACWTTTCCYNAW. The right end of this consensus matches the <italic>MCM1</italic> consensus tttCC.rAt..gg, and the left end corresponds to the standard homeodomain core ATTA. This motif has sites in about half of the 28 upstream regions. Note that Pramila et al. [<xref ref-type="bibr" rid="pcbi-0010067-b054">54</xref>] report a YOX1 consensus of yaATTa that differs from the consensus, AsAATA.TGAmr, that is reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>].</p><p><xref ref-type="table" rid="pcbi-0010067-t002">Table 2</xref> shows the results of running PhyloGibbs on the remaining 24 TFs with fewer than 25 sites in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], where their computational methods did produce a motif. The table shows that for 18 of these, both the anneal and tracking WM from PhyloGibbs matched the WM in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], along with a significant fraction of the sites. As with the case of GCR1 above, one should not conclude from this that the reported sites in any way cover all the true sites for these TFs. For four TFs, a motif that PhyloGibbs reported had some overlap with the motif reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], and there was no meaningful overlap for only two cases: SPT2 and SPT23. We examined in detail only these two cases.</p><table-wrap content-type="2col" id="pcbi-0010067-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.t002</object-id><label>Table 2</label><caption><p>Results of PhyloGibbs on Collections of Intergenic Regions for 24 TFs for Which the Motif-Finding Algorithms in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] Found a Significant Motif</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.t002" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb2col1" align="left" charoff="0" char=""/><col id="tb2col2" align="left" charoff="0" char=""/><col id="tb2col3" align="left" charoff="0" char=""/><col id="tb2col4" align="left" charoff="0" char=""/><col id="tb2col5" align="left" charoff="0" char=""/><col id="tb2col6" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left"><hr/>TF Name</td><td><hr/>Anneal WM</td><td><hr/>Track WM</td><td><hr/>Anneal Sites</td><td><hr/>Track Sites</td><td><hr/>Number Annotated in &lsqb;<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>&rsqb;</td></tr></thead><tbody><tr><td>ACE2*</td><td>1.0</td><td>1.0</td><td>6/13</td><td>5.18/8.64</td><td>12</td></tr><tr><td>CAD1&plus;</td><td>1.0</td><td>1.0</td><td>9/12</td><td>7.22/9.25</td><td>9</td></tr><tr><td>GAL4*</td><td>1.0</td><td>1.0</td><td>12/13</td><td>10.06/10.82</td><td>13</td></tr><tr><td>GAT1&plus;</td><td>1.0</td><td>1.0</td><td>12/17</td><td>10.49/14.99</td><td>15</td></tr><tr><td>INO4</td><td>1.0</td><td>1.0</td><td>22/23</td><td>19.01/19.8</td><td>24</td></tr><tr><td>LEU3&plus;</td><td>1.0</td><td>1.0</td><td>11/12</td><td>10.06/11.06</td><td>11</td></tr><tr><td>MSN2&plus;</td><td>1.0</td><td>1.0</td><td>9/18</td><td>7.14/13.74</td><td>15</td></tr><tr><td>PHO4&plus;</td><td>1.0</td><td>1.0</td><td>16/21</td><td>15.96/17.97</td><td>21</td></tr><tr><td>RDS1&plus;</td><td>1.0</td><td>1.0</td><td>7/13</td><td>5.85/9.75</td><td>8</td></tr><tr><td>RFX1&plus;</td><td>1.0</td><td>1.0</td><td>8/9</td><td>7.23/8.12</td><td>9</td></tr><tr><td>SFP1&plus;</td><td>1.0</td><td>1.0</td><td>22/30</td><td>19.26/25.01</td><td>24</td></tr><tr><td>SIP4&plus;</td><td>1.0</td><td>1.0</td><td>4/5</td><td>2.86/3.72</td><td>6</td></tr><tr><td>SNT2&plus;</td><td>1.0</td><td>1.0</td><td>13.95/15</td><td>13.09/14.39</td><td>15</td></tr><tr><td>STB4&plus;</td><td>1.0</td><td>1.0</td><td>5/6</td><td>4.94/5.55</td><td>6</td></tr><tr><td>STB5&plus;</td><td>1.0</td><td>1.0</td><td>14/19</td><td>11.12/14.25</td><td>15</td></tr><tr><td>THI2&plus;</td><td>1.0</td><td>1.0</td><td>6/6</td><td>1.5.17/5.17</td><td>6</td></tr><tr><td>YAP1</td><td>1.0</td><td>1.0</td><td>10/13</td><td>7.51/9.27</td><td>13</td></tr><tr><td>YDR026c*</td><td>1.0</td><td>1.0</td><td>9/10</td><td>7.62/7.94</td><td>10</td></tr><tr><td>STB1&plus;</td><td>0.01</td><td>1.0</td><td>14/29</td><td>9.96/18.8</td><td>23</td></tr><tr><td>MET4&plus;</td><td>1.0</td><td>0.98</td><td>4/5</td><td>0/0.81</td><td>5</td></tr><tr><td>SUT1&plus;</td><td>0.0</td><td>0.0</td><td>7/17</td><td>4.89/15.28</td><td>24</td></tr><tr><td>PHO2&plus;</td><td>0.34</td><td>0.32</td><td>1/4</td><td>0.92/3.54</td><td>3</td></tr><tr><td>SPT2&plus;</td><td>0.02</td><td>0.0</td><td>1/4</td><td>0.5/4.56</td><td>7</td></tr><tr><td>SPT23&plus;</td><td>0.0</td><td>0.0</td><td>1/12</td><td>0/8.95</td><td>15</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt201"><p>Column contents as in <xref ref-type="table" rid="pcbi-0010067-t001">Table 1</xref>.</p></fn></table-wrap-foot> --></table-wrap><p>The protein SPT2 is involved in regulation of chromatin structure and is known to interact directly with the SWI/SNF complex and with histones. SPT2 has been reported to not have any sequence specificity in its DNA binding [<xref ref-type="bibr" rid="pcbi-0010067-b055">55</xref>], and more recently Novoseler et al. [<xref ref-type="bibr" rid="pcbi-0010067-b056">56</xref>] have proposed that SPT2 binds to two strands of double-stranded DNA at their crossing point. Moreover, the only well-established target of SPT2 that we found in our cursory survey of the literature was the <italic>HO</italic> gene, and this gene is not among the genes annotated with sites for SPT2 in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We thus believe that the motif reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] is dubious. It is well established that SPT23 regulates <italic>OLE1</italic> expression [<xref ref-type="bibr" rid="pcbi-0010067-b057">57</xref>], but this gene is not among the genes with sites for SPT23 annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. Given that SPT23 does not seem to have a DNA-binding domain, it is likely that SPT23 functions as a cofactor and lacks specific DNA binding on its own.</p><p>In summary, PhyloGibbs, when run on the highest quality intergenic regions and their orthologs reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], found a motif that matches the literature consensus for 16 of 21 TFs, where the computational methods of [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] failed. For 11 TFs (ADR1, DAL80, GCR1, GZF3, MAC1, MET31, MOT3, RLM1, ROX1, SKO1, and YOX1), where the correspondence was weakest or nonexistent, we extracted co-regulated groups of genes from the literature. In every case there was little or no overlap between the literature list and the set of regulatory targets claimed in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For all but one of the 11 (MOT3), PhyloGibbs found a motif that matched the literature consensus and reported sites in all or almost all of the upstream regions. Thus, when a solid motif was not found, the problem was likely with the set of intergenic regions in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], not with PhyloGibbs.</p><p>Detailed comparisons of PhyloGibbs's results with the annotations of [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] are in <xref ref-type="supplementary-material" rid="pcbi-0010067-sd002">Dataset S2</xref>. A list of all binding sites predicted by PhyloGibbs for the 45 TFs is in <xref ref-type="supplementary-material" rid="pcbi-0010067-sd003">Dataset S3</xref>. They can also be browsed at [<xref ref-type="bibr" rid="pcbi-0010067-b036">36</xref>].</p></sec></sec><sec id="s3"><title>Discussion</title><p>Motif discovery algorithms make use of a variety of different kinds of information to identify binding sites for regulatory factors in intergenic DNA. Sequence specificities for particular regulatory factors can sometimes be obtained through detailed experimentation, including DNaseI footprinting and SELEX experiments. Weight matrices representing the sequence specificities can then be used to locate putative binding sites for these regulatory factors. In this respect algorithms often look for combinations of binding sites for several WMs [<xref ref-type="bibr" rid="pcbi-0010067-b058">58</xref>–<xref ref-type="bibr" rid="pcbi-0010067-b060">60</xref>] that occur within a relatively short interval on the genome. Ab initio methods typically operate on sets of sequences that are thought to contain binding sites for common regulatory factors. To isolate such sets of sequences various kinds of experimental data, such as data from microarray or ChIP-on-chip studies, can be used. The algorithms then search for sequence motifs that are overrepresented among the sequences. Alternatively, ab initio methods can use orthologous sequences from related species to search for short sequence segments that appear more conserved evolutionarily than surrounding sequences, or more conserved than can be expected based on the evolutionary distances of the species.</p><p>In this paper we have presented a novel algorithm for ab initio discovery of regulatory sites that combines the search for overrepresented motifs with the analysis of sequence conservation in arbitrary collections of sequences and their orthologs. A major challenge in using orthologous sequences is distinguishing conservation due to functional constraints, such as regulatory sites, from conservation simply due to evolutionary proximity. In order to do this correctly one has to determine which sequence segments have evolved from a common ancestral segment, i.e., the sequences have to be aligned, and their phylogenetic relationships have to be taken into account. This is complicated by the fact that orthologous intergenic sequences typically cannot be trivially aligned but show a complex pattern of conserved blocks interspersed with unalignable segments. Moreover, regulatory sites are not necessarily restricted to the conserved blocks.</p><p>Focusing only on the conserved blocks, as is done in phylogenetic footprinting approaches [<xref ref-type="bibr" rid="pcbi-0010067-b013">13</xref>–<xref ref-type="bibr" rid="pcbi-0010067-b017">17</xref>], misses a significant fraction of true regulatory sites, and we thus chose to include all sequence. Ideally, one would sample over all possible combinations of multiple alignments and binding site configurations, but we believe that this search space is too large to search effectively. Moreover, especially for relatively closely related species, large sequence blocks can be unambiguously aligned and the search space can be significantly reduced by pre-aligning these. However, pre-aligning all orthologous sequence groups in global multiple alignments could be deleterious because global alignment often “forces” phylogenetically unrelated sequence segments together in the alignment and might introduce spurious gaps into binding sites. We thus prefer to align only those sequence segments that can be unambiguously aligned and leave the rest of the sequences unaligned. In our current implementation we use the Dialign [<xref ref-type="bibr" rid="pcbi-0010067-b022">22</xref>] algorithm to create multiple alignments. It searches all pairs of statistically significant (over some cutoff) pairwise ungapped alignments and then, starting from the most significant, combines all mutually consistent ones into a multiple alignment. The parts of the sequences that are not part of the consistent set of pairwise alignments are left unaligned.</p><p>Recently, two algorithms [<xref ref-type="bibr" rid="pcbi-0010067-b024">24</xref>,<xref ref-type="bibr" rid="pcbi-0010067-b025">25</xref>] were reported that generalize the EM algorithm MEME [<xref ref-type="bibr" rid="pcbi-0010067-b006">6</xref>] to include phylogeny. These algorithms use EM to search the space of WMs as opposed to sampling the space of binding site configurations as PhyloGibbs does. One important advantage of the latter approach is that any arbitrarily complex prior <italic>P</italic>(<italic>C</italic>) can be easily implemented, whereas the EM approaches are essentially restricted to putting an independent prior probability on each binding site occurrence. As a consequence, we have observed that the number of sites that PhyME and EMnEM predict increases or decreases dramatically as the branch lengths of the phylogenetic tree are changed, whereas PhyloGibbs's predictions are much less sensitive to the phylogeny parameters.</p><p>Another difference, also related to the prior <italic>P</italic>(<italic>C</italic>) over configurations, is in the way that multiple motifs are treated. The EM algorithms search for multiple motifs by searching for a single motif at a time, blocking its sites and iterating. In contrast, we have optimized PhyloGibbs's move set such that it can efficiently search for sites for multiple motifs in parallel. This also allows us, as we intend to do in the future, to extend PhyloGibbs's scoring function to take correlations between the positions of binding sites for different motifs into account. Finally, as shown and discussed in the results on synthetic and real data, only PhyloGibbs realistically estimates the reliability of the binding sites that it reports. The EM algorithms ignore the uncertainty associated with the WM they infer and therefore vastly overestimate the significance of the sites that they predict.</p><p>An important novel feature of our algorithm is the anneal-and-track strategy. The algorithm first uses simulated annealing to search for the configuration <italic>C*</italic> with maximal posterior probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) and uses this as the reference configuration. In the second phase it then samples the distribution <italic>P</italic>(<italic>C</italic>|<italic>S</italic>) of all binding site configurations and compares these samples with the reference configuration <italic>C*</italic> to assign posterior probabilities to all sites it reports. This strategy allows the algorithm to assign realistic posterior probabilities to all the sites that it reports. Instead of using the annealing step, users can also specify a reference configuration <italic>C*</italic> themselves and use the algorithm to assign posterior probabilities to the motifs occurring in <italic>C*</italic> and the sites associated with them. The anneal-and-track strategy also makes the algorithm robust to prior overestimates of the number of motifs and sites that occur in the data. Superfluous sites found by the anneal will not be stably associated with a color during tracking, and superfluous motifs will have minimal membership during the tracking.</p><p>In some approaches multiple runs of one or more algorithms on the same data are used to assess motif significance. However, in order to assess which motifs recur in multiple runs, results from the different runs have to be clustered, and the only way to do this correctly is to use the same sampling method as was used to extract the motifs in the first place. Our tracking strategy circumvents the need for such post-processing of the results.</p><p>Our tests with synthetic data showed that, in the idealized situation where orthologous sequences are perfectly aligned, algorithms that take phylogeny into account significantly outperform those that do not (see <xref ref-type="fig" rid="pcbi-0010067-g003">Figures 3</xref> and <xref ref-type="fig" rid="pcbi-0010067-g005">5</xref>). We also showed that, given enough species and a reliable alignment, even a single site for a fuzzy motif can be accurately recovered (see <xref ref-type="fig" rid="pcbi-0010067-g004">Figure 4</xref>). This underscores the potential power of using orthologous sequences for regulatory site detection. It suggests that any regulatory site can be reliably recovered given an alignment of enough related species in which the given regulatory site occurs.</p><p>We used intergenic regions of <italic>S. cerevisiae</italic> that contain experimentally verified [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>] binding sites, together with those of four other sensu stricto <italic>Saccharomyces</italic> species to test the extent to which different algorithms can recover regulatory sites from multiple alignments of single intergenic regions. We ran PhyloGibbs and four other motif-finding algorithms on the multiple alignments of 200 intergenic regions and showed that PhyloGibbs outperforms all other algorithms including EMnEM and PhyME, which also take phylogeny into account (see <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref>).</p><p>We also ran PhyloGibbs on collections of intergenic region alignments of genes that were annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] to contain binding sites for a common TF based on data from ChIP-on-chip experiments. For almost all cases for which the motif-finding methods in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] found a significant motif, PhyloGibbs reports a matching motif. More importantly, for 16 of the 21 TFs for which the six motif-finding methods in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] failed to find a significant motif, PhyloGibbs does report a motif that matches the literature consensus. We studied in detail those TFs for which there was disagreement between PhyloGibbs's results and those in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For all these TFs we found that the gene sets reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] have very little overlap with targets reported in the literature. Moreover, when PhyloGibbs is run on the upstream regions of the literature targets it recovers a set of binding sites that match the literature in all but one case.</p><p>There are several issues that we intend to address in future extensions of the algorithm. First of all, we intend to extend the types and specificity of the priors that we allow. For example, when running on multiple alignments of several different upstream regions, one may sometimes have prior information that <italic>each</italic> upstream region has at least one site for a particular TF. We would thus like to allow for priors that specify not just the total number of sites, but specifically the likely number of sites in each upstream region. We also intend to extend the priors on WMs. In many cases one may already possess alignments of known sites or other specific prior information on the sequence specificity of particular WMs, and we will extend the algorithm to allow users to “seed” different colors with such specific prior information. These extensions are all straightforward to implement. A more challenging issue for the future is the improved treatment of the multiple alignment of the intergenic regions. The complex patterns of conserved blocks interspersed with unalignable sequence that is observed in multiple alignments of orthologous sequences suggests that the evolution of intergenic regions is currently not well understood. Different mechanisms that lead to insertions and deletions of various sizes, such as tandem duplications [<xref ref-type="bibr" rid="pcbi-0010067-b061">61</xref>], probably play a significant role, and current alignment algorithms do not take such events into account. Another important facet that is currently mostly unexplored is the extent to which regulatory sites are conserved across related species. Intuitively one expects that the closer the species, the more binding sites will be shared between them, but it is currently not generally known what fraction of sites turns over as a function of evolutionary distance, and how much this varies with the TF and evolutionary lineage in question. Finally, it is clear that different binding sites have different affinities for their cognate TF, and it is conceivable that binding sites are selected in evolution not only to remain recognized by their TF, but that there is specific selection for preserving the strength of the binding site. Further investigation will be necessary to determine if realistic models of binding site evolution need to take such selection for binding site affinity into account.</p></sec><sec id="s4"><title>Materials and Methods</title><sec id="s4a"><title>WM information score.</title><p>The most useful quantity characterizing the “quality” of a WM <italic>w</italic> is its information score <italic>I:</italic></p><disp-formula id="pcbi-0010067-e008"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e008" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>I</mml:mi><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&sum;</mml:mo><mml:mi>&alpha;</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>&alpha;</mml:mi></mml:mrow></mml:msub><mml:mspace width="1pt"></mml:mspace><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>&alpha;</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mi>&alpha;</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where <italic>m</italic> is the width of the WM, <italic>b</italic><sub>α</sub> is the background probability of base α, and the logarithm is often calculated base 2 to express the information score in bits. Many relevant quantities regarding sets of binding sites can be expressed in terms of information scores. For instance, the fraction of random sequences of length <italic>m</italic> that “match” the WM scales as <italic>e<sup>−I</sup></italic>. The probability that a sample of <italic>n</italic> random sequences will have base counts <italic>n<sub>i</sub></italic><sub><italic>α</italic></sub> = <italic>nw<sub>i</sub></italic><sub><italic>α</italic></sub> is approximately <italic>e<sup>−nI</sup></italic>. Similarly, the likelihood ratio <italic>R</italic> of this sample of sequences stemming from a WM versus stemming from background scales as <italic>R</italic> ∝ <italic>e<sup>nI</sup></italic>. The information score thus accurately summarizes the sequence specificity of the set of binding sites that it represents.</p></sec><sec id="s4b"><title>Prior on configurations.</title><p>The simplest prior over configurations, representing “complete ignorance,” is the uniform prior, <italic>P</italic>(<italic>C</italic>) = constant, that assigns equal probability to all configurations. However this prior is “too ignorant” to work well in practice. In particular, the large majority of all configurations will consist of configurations with a very large number of windows that essentially cover the entire input data. PhyloGibbs thus allows for two kinds of priors that take into account information regarding the expected total number of sites and motifs in the dataset. First, one can run PhyloGibbs on only the subspace of configurations with a fixed number of colors <italic>c</italic> and a fixed number of total windows <italic>N</italic> (effectively setting <italic>P</italic>(<italic>C</italic>) = 0 for all configurations outside of this subspace). The second way of putting a prior on the space of configurations is by introducing an exponential prior distribution over the number of colored windows:</p><disp-formula id="pcbi-0010067-e009"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e009" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>&minus;</mml:mo><mml:mi>p</mml:mi><mml:mi>n</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mstyle displaystyle='false'><mml:msub><mml:mo>&sum;</mml:mo><mml:mrow><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup></mml:mrow></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>&minus;</mml:mo><mml:mi>p</mml:mi><mml:mi>n</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msup><mml:mi>C</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:msup></mml:mstyle></mml:mrow></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:math> --></disp-formula><p>with <italic>n</italic>(<italic>C</italic>) indicating the number of colored windows in configuration <italic>C</italic>. For each value of <italic>p,</italic> the distribution <italic>P</italic>(<italic>C</italic>) is the maximum entropy distribution over configurations conditioned on the expected number of colored windows <inline-formula id="pcbi-0010067-ex004"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex004" xlink:type="simple"/></inline-formula>
					. One can thus use this prior to incorporate prior knowledge of the expected total number of binding sites in the input data.
				</p></sec><sec id="s4c"><title>Derivation of <italic>P</italic>(<italic>S<sub>c</sub></italic>).</title><p>The probability <italic>P</italic>(<italic>S<sub>c</sub></italic>|<italic>w</italic>) that all sequences <italic>S<sub>c</sub></italic> in the windows belonging to color <italic>c</italic> were drawn from a particular WM <italic>w</italic> is given by</p><disp-formula id="pcbi-0010067-e010"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e010" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:munder></mml:mstyle><mml:mspace width='1pt'></mml:mspace><mml:mstyle displaystyle='true'><mml:munderover><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&hairsp;</mml:mtext><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mi>&alpha;</mml:mi></mml:munder></mml:mstyle><mml:msup><mml:mstyle mathsize='8pt' displaystyle='true'><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>&alpha;</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>&alpha;</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>with <italic>m</italic> being the width of the WM and <italic>n</italic><sub><italic>α</italic><italic>i</italic></sub> being the number of times that base α occurs at position <italic>i</italic> among the sequences in <italic>S<sub>c</sub></italic>. Since we do not know the WM, we integrate over all possible WMs (separately for each color) [<xref ref-type="bibr" rid="pcbi-0010067-b028">28</xref>]. That is, we formally have</p><disp-formula id="pcbi-0010067-e011"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e011" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mo>&int;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where <italic>P</italic>(<italic>w</italic>) is a prior distribution over the space of WMs, and the integral extends, for each position <italic>i,</italic> over the simplex <italic>w</italic><sub>α<italic>i</italic></sub> ≥ 0 and <inline-formula id="pcbi-0010067-ex005"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex005" xlink:type="simple"/></inline-formula>
					. PhyloGibbs uses Dirichlet prior distributions of the form
				</p><disp-formula id="pcbi-0010067-e012"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e012" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&prop;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mo>&alpha;</mml:mo></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msup><mml:mstyle mathsize='8pt' displaystyle='true'><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mrow><mml:mi>&gamma;</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where the γ parameter, which is generally referred to as a pseudocount, can be set by the user (default is γ = 1). With this prior the integral can be done exactly, and we obtain</p><disp-formula id="pcbi-0010067-e013"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e013" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mrow><mml:mo stretchy="true">&lsqb;</mml:mo> <mml:mrow><mml:mfrac><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>n</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mo>&alpha;</mml:mo></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mfrac><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&plus;</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo stretchy="true">&rsqb;</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>with <italic>n</italic> being the total number of sequences in color <italic>c</italic> and Γ(<italic>x</italic>) the gamma function.</p></sec><sec id="s4d"><title>Background model.</title><p>We will assume that the background sequence was generated by a Markov model of order <italic>k,</italic> where <italic>k</italic> is specified by the user and may run from zero to arbitrary length (within reason). In this model, the probability of observing a background base α<italic><sub>i</sub></italic> depends on the <italic>k</italic> preceding bases α<italic><sub>i − k</sub></italic> through α<italic><sub>i −</sub></italic> <sub>1</sub>. We estimate the probabilities <italic>P</italic>(α<italic><sub>i</sub></italic>|α<italic><sub>i −</sub></italic> <sub>1</sub>…α<italic><sub>i − k</sub></italic>) either from a large set of intergenic sequences provided by the user or from the set of sequences that are being sampled as follows:</p><disp-formula id="pcbi-0010067-e014"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e014" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&hellip;</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&hellip;</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:mi>&epsiv;</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:mi>&epsiv;</mml:mi><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:msub><mml:mo>&sum;</mml:mo><mml:mrow><mml:msub><mml:mi>&beta;</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mstyle><mml:mi>N</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&hellip;</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mo>&beta;</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where <italic>N</italic>(α<italic><sub>i − k</sub></italic>…α<italic><sub>i</sub></italic>) is the actual number of occurrences of the string α<italic><sub>i − k</sub></italic>…α<italic><sub>i</sub></italic> in either the large intergenic sequence or the input data. The pseudocount ɛ can again be set by the user. Using this model, the probability for all the uncolored sequences is</p><disp-formula id="pcbi-0010067-e015"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e015" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mspace width="2pt"></mml:mspace><mml:mo>&notin;</mml:mo><mml:mspace width="2pt"></mml:mspace><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>|</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&hellip;</mml:mo><mml:msub><mml:mo>&alpha;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where the product is over all positions <italic>i</italic> that have color zero.</p><p>It is conceptually and computationally convenient to divide the probabilities <italic>P</italic>(<italic>S</italic>|<italic>C</italic>) by the probability <italic>P</italic>(<italic>S</italic>|<italic>C</italic><sub>0</sub>) of the configuration <italic>C</italic><sub>0</sub> in which all windows are color zero (i.e., background). The factor <italic>P</italic>(<italic>S</italic> ∉ <italic>C</italic>|<italic>B</italic>) then cancels, and we have</p><disp-formula id="pcbi-0010067-e016"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e016" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msup><mml:mi>P</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mi>c</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>For each color <italic>c</italic> the denominator can be calculated in the same way as the numerator, with background probabilities replacing the WM entries <italic>w</italic><sub>α<italic>i</italic></sub><italic>,</italic> and with no integral.</p></sec><sec id="s4e"><title>Identifying legitimate windows.</title><p>At the start of each run, PhyloGibbs determines the set of all legitimate windows in the data. That is, it finds all locations where a window of length <italic>m</italic> can be placed, extends the window to contain sequences from all species that share aligned bases in this segment, checks for consistency of the alignment, completes the window with unaligned bases when necessary, and records all other windows that overlap this window. Formally, the procedure is as follows. All bases in all sequences are first set as “unmarked.” All bases are then examined sequence by sequence from left to right. If the current base is “ummarked,” a single-sequence window of width <italic>m</italic> is constructed starting at that base. Next, for every uppercase letter in the window all other sequences that contain an uppercase letter in that position are added until no more sequences can be added. (The expanded window will now contain, for every uppercase letter in it, all sequences where an uppercase letter occurs in that position.) The window is then examined for consistency: the relative positions of vertically aligned uppercase letters should be the same for all uppercase letters (i.e., there should be no gaps, or if gaps exist, they should extend across all sequences affected by the vertically aligned letters). A consistent window is accepted. The treatment of inconsistent windows depends on the settings of the −D option. If −D 2 is used, all inconsistent windows are simply rejected. If the −D 1 option is used, the inconsistent window is split into smaller consistent windows as follows. Recursively, the first sequence in the current window is picked and all other sequences consistent with it are collected. This process is then repeated on the remaining sequences until all sequences have been used. It is possible that the choice of splitting is dependent on the order of sequences (e.g., when three sequences are mutually inconsistent but separating any one of them renders the others consistent). Currently we ignore this complication and assume that it is uncommon in practice. Finally, the window or windows thus obtained are added to the list of available windows, and the first base for each sequence in a window is marked so that the program will not attempt to construct additional windows starting at those positions.</p></sec><sec id="s4f"><title>Derivation of <italic>P</italic>(<italic>W</italic>|<italic>w</italic>) under the evolutionary model.</title><p>Our model for the evolution of binding sites assumes that all bases mutate at a constant rate γ. When a base at position <italic>i</italic> of a binding site is mutated to letter α, we assume that the probability that selection will fix this mutation is given by the WM component <italic>w</italic><sub>α<italic>i</italic></sub>. Under this simple model, the probability that a base at position <italic>i</italic> will mutate from β to α over a time <italic>t</italic> is given by [<xref ref-type="bibr" rid="pcbi-0010067-b060">60</xref>]</p><disp-formula id="pcbi-0010067-e017"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e017" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mo>&alpha;</mml:mo><mml:mo>|</mml:mo><mml:mo>&beta;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>q</mml:mi><mml:msub><mml:mi>&delta;</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mo>&beta;</mml:mo></mml:mrow></mml:msub><mml:mo>&plus;</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&minus;</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where we have introduced the “proximity” <italic>q,</italic> which corresponds to the probability <italic>q</italic> = <italic>e</italic><sup>−γ<italic>t</italic></sup> that no mutation took place at this position during time <italic>t</italic>.</p><p>Note that as <italic>q</italic> → 0 the expression reduces to the probability <italic>w</italic><sub>α<italic>i</italic></sub> of observing an independent base α at position <italic>i</italic> when sampling from the WM <italic>w</italic>. Also note that the expression has the correct composition property when an intermediate ancestor <italic>a</italic> is inserted:</p><disp-formula id="pcbi-0010067-e018"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e018" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mstyle displaystyle='false'><mml:mo>&sum;</mml:mo></mml:mstyle></mml:mrow><mml:mrow><mml:msub><mml:mi></mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mo>&alpha;</mml:mo><mml:mo>|</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>a</mml:mi><mml:mo>|</mml:mo><mml:mi>&beta;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mo>&alpha;</mml:mo><mml:mo>|</mml:mo><mml:mi>&beta;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>To calculate the probability <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) of observing the set of bases <italic>W<sub>i</sub></italic> in column <italic>i</italic> of a window <italic>W,</italic> we next need the phylogenetic tree relating the sequences in the alignment. The phylogenetic tree of the yeast species that we used in our runs on real data is well approximated by a “star” topology, and the calculation of <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) simplifies significantly for this case. We thus first present the derivation for star topologies and indicate below how PhyloGibbs calculates <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) for more general topologies.</p><p>For a star topology, the probability <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) of obtaining the set of bases <italic>W<sub>i</sub></italic> at column <italic>i</italic> of the window <italic>W</italic> given the WM column <italic>w<sub>i</sub></italic> is given by</p><disp-formula id="pcbi-0010067-e019"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e019" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&sum;</mml:mo><mml:mi>&alpha;</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:msub><mml:mi>W</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mo>&alpha;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where <italic>j</italic> runs over all the sequences in the window, <italic>s<sub>j</sub></italic> is the base appearing at position <italic>i</italic> in sequence <italic>j,</italic> and <italic>q<sub>j</sub></italic> is the proximity of sequence <italic>j</italic> to the ancestor. Since the ancestor sequence is assumed to be a sample from the WM, we assign a probability <italic>w</italic><sub>α<italic>i</italic></sub> to the possibility that the ancestor had base α at position <italic>i,</italic> and sum over all possibilities <italic>α</italic>. For the whole window we of course have</p><disp-formula id="pcbi-0010067-e020"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e020" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:msubsup><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:msubsup></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>The expression <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) is a polynomial in the WM components <italic>w</italic><sub><italic>α</italic><italic>i</italic></sub><italic>,</italic> which, as can be shown with a little algebra, has <italic>N</italic> + 4 monomial terms of the form <inline-formula id="pcbi-0010067-ex006"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex006" xlink:type="simple"/></inline-formula>
					 for an alignment of <italic>N</italic> sequences. As in the previous section, we will need to integrate products of these polynomials for multiple windows, i.e., we need to calculate integrals of the form∫<italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) <italic>P</italic>(<italic>W′<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>)<italic>P</italic>(<italic>W′′<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>)…<italic>dw<sub>i</sub></italic>. While these integrals can be done analytically, the number of terms involved equals (<italic>N</italic> + 4)(<italic>N′</italic> + 4)(<italic>N′′</italic> + 4)…, and this quickly becomes unwieldy when the number of windows grows. Therefore, in practice we approximate the single-window polynomials <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) with monomials.
				</p></sec><sec id="s4g"><title>Approximation of WM integrals.</title><p>For each aligned window, we approximate the window column function <italic>P</italic>(<italic>W<sub>i</sub></italic>|<italic>w<sub>i</sub></italic>) of equation 19 by a monomial of the form</p><disp-formula id="pcbi-0010067-e021"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e021" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>c</mml:mi><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mo>&alpha;</mml:mo></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>&lambda;</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math> --></disp-formula><p>(in this section we drop the position index <italic>i</italic> for notational simplicity). This form has the advantage that the integral over <italic>w</italic> for the product of an arbitrary number of functions of this form is straightforward:</p><disp-formula id="pcbi-0010067-e022"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e022" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&int;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mi>i</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&lambda;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='false'><mml:msub><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>&alpha;</mml:mo></mml:mrow></mml:msub></mml:mstyle><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'></mml:mo></mml:mrow></mml:mfrac><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mo>&alpha;</mml:mo></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mfrac><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='false'><mml:msub><mml:mo>&sum;</mml:mo><mml:mi>i</mml:mi></mml:msub></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mi>i</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>Therefore, using this form we can easily calculate the integrals for an arbitrary number of windows.</p><p>We now choose to set the parameters <italic>c</italic> and λ<sub><italic>α</italic></sub> such that the first moments of the distribution <italic>P</italic>(<italic>W</italic>|<italic>w</italic>) and <italic>F</italic>(λ,<italic>w,c</italic>) match. For the zeroth moment (normalization) this gives</p><disp-formula id="pcbi-0010067-e023"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e023" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&int;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi><mml:mo>&equals;</mml:mo><mml:mo>&int;</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where <italic>P</italic>(<italic>w</italic>) is a prior over the WM space. For the first moment we demand</p><disp-formula id="pcbi-0010067-e024"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e024" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>&alpha;</mml:mi></mml:msub></mml:mrow> <mml:mo>&rang;</mml:mo></mml:mrow><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mo>&int;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mo>&int;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:mfrac><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mo>&int;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mo>&int;</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:mfrac><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>&lambda;</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:mo>&plus;</mml:mo><mml:mi>&gamma;</mml:mi></mml:mrow><mml:mrow><mml:mi>&lambda;</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>for all <italic>α</italic>, where <inline-formula id="pcbi-0010067-ex007"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex007" xlink:type="simple"/></inline-formula>
					 and γ is the pseudocount of the prior <inline-formula id="pcbi-0010067-ex008"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex008" xlink:type="simple"/></inline-formula>
					. Note that the first and last equality in equation 24 are always true and that our demand is the middle equality. These equations allow us to fix <italic>c</italic> and the ratios λ<sub><italic>α</italic></sub>/λ but leave the overall scale λ still free. We use λ to approximate the second moments. We thus demand that the exact second moments
				</p><disp-formula id="pcbi-0010067-e025"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e025" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:msub><mml:mi>w</mml:mi><mml:mi>&beta;</mml:mi></mml:msub></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>e</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mo>&int;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:msub><mml:mi>w</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mo>&int;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>W</mml:mi><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math> --></disp-formula><p>match the second moments of the approximation</p><disp-formula id="pcbi-0010067-e026"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e026" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:msub><mml:mi>w</mml:mi><mml:mi>&beta;</mml:mi></mml:msub></mml:mrow> <mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>a</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mo>&int;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:msub><mml:mi>w</mml:mi><mml:mi>&beta;</mml:mi><mml:mspace width="1pt"></mml:mspace></mml:msub><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mo>&int;</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mspace width=".25pt"></mml:mspace><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:mfrac><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&lambda;</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:mo>&plus;</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&lambda;</mml:mi><mml:mo>&beta;</mml:mo></mml:msub><mml:mo>&plus;</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>&delta;</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>&beta;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mi>&lambda;</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math> --></disp-formula><p>as “closely” as possible. This could, for instance, be done by choosing λ such that the square-deviation is minimized. In the current implementation we set λ by, for every combination of α and β, solving for λ from the equation 〈<italic>w</italic><sub>α</sub><italic>w</italic><sub>β</sub>〉<italic><sub>e</sub></italic> = 〈<italic>w</italic><sub>α</sub><italic>w</italic><sub>β</sub>〉<italic><sub>a</sub></italic>. This yields</p><disp-formula id="pcbi-0010067-e027"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e027" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&lambda;</mml:mi><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:msub><mml:mi>w</mml:mi><mml:mi>&beta;</mml:mi></mml:msub></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>e</mml:mi></mml:msub><mml:mo>&minus;</mml:mo><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow><mml:msub><mml:mi>&delta;</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mi>&beta;</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>&beta;</mml:mi></mml:msub></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow><mml:mo>&minus;</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mo>&alpha;</mml:mo></mml:msub><mml:msub><mml:mi>w</mml:mi><mml:mi>&beta;</mml:mi></mml:msub></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>&minus;</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi></mml:mrow></mml:math> --></disp-formula><p>We then set λ equal to the average of the λs that are obtained from this equation for the 16 combinations of α and β.</p><p>In calculating the parameters λ<sub>α</sub> and <italic>c,</italic> all the complicated exact polynomial integrals for the single windows need to be done. However, since we only need to do this once for every window at the start of the run, and store the results, this does not incur a significant computational cost.</p><p>Finally, it is clear that by demanding that we approximate the function <italic>P</italic>(<italic>W</italic>|<italic>w</italic>) by a monomial of the form <inline-formula id="pcbi-0010067-ex009"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0010067.ex009" xlink:type="simple"/></inline-formula>
					 we are making an uncontrolled approximation. In addition, we set the λ<sub>α</sub> and <italic>c</italic> by fitting the zeroth and first, and approximating the second, moments of the distribution <italic>P</italic>(<italic>W</italic>|<italic>w</italic>), and it is not clear that this is the “best” choice one can make. For instance, one could imagine fitting the λ<sub>α</sub> and <italic>c</italic> such that the average square-deviation of a much larger number of moments (including moments of high order) is minimized. However, numerical experiments for a number of windows with different parameters show that, even for fairly high-order moments, in almost all cases our current approximation is quite accurate (see <xref ref-type="supplementary-material" rid="pcbi-0010067-st001">Table S1</xref>).
				</p></sec><sec id="s4h"><title>General phylogenies.</title><p>The above method of treating a star-topology phylogeny can be readily extended to deal with more general situations. A completely general phylogeny (assuming no “lateral transfer” of DNA) can be represented as a tree; the root is the last common ancestor of all given species, nodes are intermediate ancestors (last common ancestor of some, but not all, given species), and the leaves are the actual species under consideration. All unknown ancestors (root and nodes) are separately summed over. Proximities <italic>q</italic> measure the distance of leaves or nodes to the previous node, not necessarily the last common ancestor.</p><p>Consider such a phylogenetic tree that does not have a star topology (i.e., contains internal nodes other than the root). At least one of the intermediate nodes must be such that all its children are leaves. Let the unknown base for this node at column <italic>i</italic> be β (summed over), and let the base for its parent node (again, not necessarily the root) be α. The subtree below β contributes a factor <italic>P</italic><sub>β</sub> to the total probability, given by</p><disp-formula id="pcbi-0010067-e028"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e028" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&sum;</mml:mo><mml:mi>&beta;</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&beta;</mml:mi><mml:mo>|</mml:mo><mml:mo>&alpha;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize='12pt'>&Pi;</mml:mo><mml:mi>n</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>&beta;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where the full expression would contain other factors involving α as well as a sum over α; <italic>q</italic><sub>β</sub> is the proximity of β to its immediate ancestor α, the product runs over children of β indexed by <italic>n, s<sub>n</sub></italic> is the base of the <italic>n</italic>th descendant, and <italic>q<sub>n</sub></italic> is the proximity of the <italic>n</italic>th descendant to β. <italic>T</italic> is given by equation 17. In particular,</p><disp-formula id="pcbi-0010067-e029"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e029" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&beta;</mml:mi><mml:mo>|</mml:mo><mml:mo>&alpha;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>&delta;</mml:mi><mml:mrow><mml:mo>&alpha;</mml:mo><mml:mspace width='.5pt'></mml:mspace><mml:mi>&beta;</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mo>&plus;</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>&beta;</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>Substituting this into equation 28, we get two terms:</p><disp-formula id="pcbi-0010067-e030"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e030" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mo>&beta;</mml:mo></mml:msub><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&Pi;</mml:mo><mml:mi>n</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mo>&alpha;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>&beta;</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&sum;</mml:mo><mml:mi>&beta;</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>&beta;</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&Pi;</mml:mo><mml:mi>n</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>T</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>&beta;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>The first term simply removes the node β and attaches all its children to α (with unchanged proximities). The second term—identical, apart from a prefactor, to equation 19—can be treated as an independent factor to anything it multiplies, completely decoupled from the sums over α and other ancestors. In other words, with probability <italic>q</italic><sub>β</sub>, base β is the same as α and all its leaves can be attached directly to α, and with probability 1 − <italic>q</italic><sub>β</sub>, base β is mutated from α and can be treated as a new, independent ancestor for all of its descendants, disconnected from the rest of the tree.</p><p>By repeating this process, one can reduce any tree to a sum of products of star-phylogeny subtrees with appropriate prefactors. PhyloGibbs then applies the monomial approximation described in the previous section to each of the star-phylogeny subtrees, as well as to the final sum. Note, however, that the number of terms involved may grow exponentially with the number of species. As the number of species becomes large we thus need to make additional approximations to make this procedure computationally feasible.</p></sec><sec id="s4i"><title>Move set.</title><p>A single time step of the algorithm consists of a “cycle” of a fixed number of moves of each of the types outlined in the following paragraphs.</p><p>Window-shift moves preserve the total number of colors, and the total number of colored windows (but may redistribute the windows among existing colors). We choose one of the presently colored windows at random. If it is the only one in its color, we make no operation (but to ensure detailed balance we update the time counter by one). If it is not the only window in its color, we color it zero (i.e., deselect it), and choose a new window from all of the available color-zero windows (including the window we selected) to replace it. The new window can have any of the existing colors, not necessarily the same as the window it is replacing. This move is computationally expensive, since if there are <italic>N</italic> available windows and <italic>c</italic> available colors, we have to calculate the scores for <italic>Nc</italic> potential moves, but it allows for rapid convergence.</p><p>Color-change moves allow for changes in the number of windows and the number of colors, while satisfying detailed balance. We select any of the existing windows, including color-zero windows. If the chosen window overlaps a non-zero-colored window then this window is blocked and we make no operation (but update the time counter). Otherwise, we reassign a color to the window, which may be zero, one of the existing colors, or a new color. Note that if the window was the only one in its color, a “new color” means “the same color as before.” The window-shift moves are not ergodic by themselves because they stay inside a subspace of fixed <italic>N</italic> and <italic>c</italic> (respectively, number of colored windows and number of colors). The color-change moves are ergodic but do not have good convergence properties, so an alternation with window-shift moves is desirable.</p><p>With the previous two moves it is possible for the sampler to get stuck in a local optimum where the windows in a given color are all shifted by an equal amount from their best location. The global shift move addresses this problem. This move picks a color at random, and samples all ways of coherently shifting every window in that color by a fixed amount without “colliding” with an already-colored window.</p><p>Maskbit-flip moves are the final move type. Long motifs tend to be fuzzy, and not every position is sharply defined. Sometimes, the score of a collection of sites can be improved by scoring a subset of its columns according to the background model rather than assuming they derive from a WM. We thus allow the “masking” of certain columns, comparing whether or not the overall score is improved by scoring them according to background. For each color we maintain a mask, and sample over the states (zero or one) of the mask bits. In our experience, allowing such masking can increase performance for long motifs that contain nonconstrained sequence, such as occur in bacteria when TFs bind as dimers. However, for short motifs the enlargement of the configuration space that is associated with these masks may result in poorer discrimination.</p></sec><sec id="s4j"><title>Tracking.</title><p>After each cycle during the tracking phase, the best-matching color <italic>c̃</italic> from the current configuration <italic>C</italic> is found for each color <italic>c</italic> of the reference configuration <italic>C*</italic>. To do this we define a match <italic>M</italic>(<italic>c,c̃</italic>) between colors <italic>c</italic> and <italic>c̃</italic> as follows. For all shifts −<italic>m</italic>/2 ≤ <italic>s</italic> ≤ <italic>m</italic>/2 (the window width is <italic>m</italic>), we shift all the plus-strand windows in <italic>c̃</italic> by <italic>s</italic> to the right and all the minus-strand windows in <italic>c̃</italic> by <italic>s</italic> to the left. Note that, since different parts of the multiple alignments will span different subsets of species, we have to define carefully what we mean by the word “shift.” We only consider two windows <italic>X</italic> and <italic>Y</italic> shifted versions of each other if they both span the same set of species, and if the position of the start of the window is shifted by the same amount in each of the sequences in the windows. Thus, in general, shifted versions will only exist for some of the windows in <italic>c̃</italic>.</p><p>After shifting all the windows in <italic>c̃</italic> by an amount <italic>s,</italic> we then count the number of shifted windows <italic>n</italic>(<italic>s</italic>) that exactly match a window in <italic>c</italic>. The score <italic>M</italic>(<italic>c,c̃</italic>) is given by</p><disp-formula id="pcbi-0010067-e031"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e031" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>M</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mover accent='true'><mml:mi>c</mml:mi><mml:mo>&tilde;</mml:mo></mml:mover><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:munder><mml:mrow><mml:mo>&lsqb;</mml:mo> <mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mi>m</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow> <mml:mo>&rsqb;</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>Note that this corresponds to the maximal amount of overlap between the sites in <italic>c</italic> and the sites in <italic>c̃</italic> when counting only sites in <italic>c̃</italic> that are shifted by a common amount with respect to <italic>c</italic>. We also keep track of the shift <italic>s</italic> at which the maximum occurred. Once we have determined the color <italic>c̃</italic> that maximizes <italic>M</italic>(<italic>c,c̃</italic>) and the shift <italic>s</italic> at which the maximum occurred, we then add a count of one to <italic>n</italic>(<italic>w,c</italic>) for every window <italic>w</italic> that is obtained by shifting the windows in <italic>c̃</italic> by <italic>s</italic>. The counts <italic>n</italic>(<italic>w,c</italic>) record the number of times that each window <italic>w</italic> is associated with reference color <italic>c</italic>. At the end of tracking we divide the counts <italic>n</italic>(<italic>w,c</italic>) by the total number of cycles <italic>n</italic> to obtain <italic>p</italic>(<italic>w,c</italic>) = <italic>n</italic>(<italic>w,c</italic>)/<italic>n</italic>. For each reference color <italic>c</italic> PhyloGibbs reports all windows <italic>w</italic> for which <italic>p</italic>(<italic>w,c</italic>) ≥ <italic>p</italic><sub>min</sub> sorted from large to small <italic>p</italic>(<italic>w,c</italic>). These lists of membership probabilities provide a summary of the distribution <italic>P</italic>(<italic>C</italic>|<italic>D</italic>) using <italic>C*</italic> as a reference configuration.</p></sec><sec id="s4k"><title>Synthetic data runs.</title><p>For <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref> we generated random intergenic ancestral sequences of length <italic>L</italic> = 500 with <italic>s</italic> = 4 sites sampled from a single WM. For the different panels in <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref> we used WMs of width <italic>m</italic> = 10 with polarizations <italic>p</italic> = 0.6, <italic>p</italic> = 0.75, and <italic>p</italic> = 0.9 and random WMs for the lower right panel. For the data in each panel we generated gapless alignments of <italic>S</italic> = 5 descendant sequences at proximities <italic>q</italic> = 0.1 through <italic>q</italic> = 0.9 in steps of 0.1. For each parameter setting we generated 50 different synthetic datasets. PhyloGibbs with phylogeny was asked to search for four multi-sequence windows for a single WM of width ten, to assume the correct proximity <italic>q</italic> for all species, and to use a background model where each base occurs with probability 1/4. The non-phylo algorithms treat the five input sequences as independent and were asked to search for 20 single-sequence sites for a WM of width ten. The precise command lines employed were as follows: for PhyloGibbs with phylogeny, –D 1 –G <italic>q</italic> –m 10 –I 4 –f inputfile –N −1; for PhyloGibbs without phylogeny, –D 0 –m 10 –I 20 –f inputfile –N −1; for WGibbs, –PBernoulli inputfile 10 20 –Z –n; and for MEME, inputfile –dna –mod anr –w 10 –nsites 20 –nmotifs 1 –nomatrim –revcomp –maxiter 500 –text –nostatus.</p><p>As a measure of performance we took the fraction of all the bases in real sites that overlapped predicted sites and averaged it over all datasets for each parameter setting. This “overlap” thus runs from zero to one. For each parameter setting the standard error of the overlap is given by</p><disp-formula id="pcbi-0010067-e032"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e032" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&sigma;</mml:mi><mml:mo>&equals;</mml:mo><mml:msqrt><mml:mrow><mml:mfrac><mml:mrow><mml:mstyle displaystyle='false'><mml:msubsup><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>o</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac><mml:mo>&minus;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mi>o</mml:mi> <mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mi>N</mml:mi></mml:mfrac></mml:mrow></mml:msqrt><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where <italic>N</italic> is the number of datasets, <italic>o<sub>i</sub></italic> is the overlap for dataset <italic>i,</italic> and 〈<italic>o</italic>〉 is the average overlap.</p><p>For <xref ref-type="fig" rid="pcbi-0010067-g004">Figure 4</xref> we generated random ancestor sequences of length <italic>L</italic> = 500, embedded a single site for a random WM of width ten, and created <italic>S</italic> descendant sequences of proximity <italic>q</italic> = 0.5 for <italic>S</italic> running from two to 30. For each value of <italic>S</italic> we created 250 datasets and ran PhyloGibbs with the following command line settings: –D 1 –G 0.5 –m 10 –I 1 –N −1 –f inputfile. For each <italic>S</italic> we calculated the average overlap 〈<italic>o</italic>〉 and standard error as in equation 32.</p><p>The data for <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> were generated, for each of 250 intergenic regions, by picking three random WMs of width <italic>m</italic> = 10, sampling three sites from each, embedding them in a random ancestral sequence of length 750, and creating five descendant sequences at <italic>q</italic> = 0.5. The phylo algorithms were asked to find sites for three WMs of width ten, with an expected number of three (multi-species) sites per WM. They were all given the correct phylogenetic tree (with star topology) and (gapless) multiple alignment. The non-phylo algorithms treat the five descendant sequences from each synthetic intergenic region as independent and so the expected number of sites per motif was set to 15 for these. The command-lines employed were as follows: for PhyloGibbs with phylogeny, –D 1 –G 0.5 –m 10 –I 3,3,3 –N −1 –f inputfile; for PhyME, –N 1 infile blkfile –w 10 –nmotifs 3 –revcompW –ot 0.05 –nsites 3 –niter 50 –nseediter 10 –K 5 –pf phylogenytree.txt –tree; for PhyloGibbs without phylogeny, –D 0 –m 10 –I 15,15,15 –N −1 –f inputfile; for WGibbs, –PBernoulli inputfile 10,10,10 15,15,15 –F –Z –n –i 1500 –S 30 –p 60; and for MEME, –dna –mod anr –w 10 –nsites 15 –nmotifs 3 –revcomp –nomatrim –maxiter 500 –nostatus. EMnEM uses a control file. The relevant parameters that we set were as follows: –w 10 –e 3.0 –b 1 –n 3 –u 1 –r 0 –m 0.</p><p>To produce the left panel of <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> we recovered, for each algorithm, all the predicted sites and sorted them by their posterior probability. We then obtained a series of sublists <italic>l<sub>i</sub></italic> by excluding all predicted sites below a cutoff posterior probability <italic>c<sub>i</sub></italic>. We chose the cutoffs <italic>c<sub>i</sub></italic> such that at <italic>c</italic><sub>0</sub> all predicted sites were included in <italic>l</italic><sub>0</sub>, at <italic>c</italic><sub>1</sub> all but the last 100 sites were included in <italic>l</italic><sub>1</sub>, and generally <italic>l<sub>i</sub></italic> had all but the bottom 100<italic>i</italic> predicted sites. For each list <italic>l<sub>i</sub></italic> we then calculated the number of bases <italic>A</italic> in all intergenic regions that were hit by sites in this list, the total number of bases <italic>T</italic> in true (planted) sites, and the number of bases <italic>I</italic> in the intersection of these two sets. Given these counts, the sensitivity is given by <italic>I/T</italic> and the specificity is given by</p><disp-formula id="pcbi-0010067-e033"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e033" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:mtext>specificity</mml:mtext></mml:mrow> <mml:mo>&rang;</mml:mo></mml:mrow><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mi>p</mml:mi><mml:mo>&rang;</mml:mo></mml:mrow><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mstyle displaystyle='true'><mml:mrow><mml:msubsup><mml:mo>&int;</mml:mo><mml:mn>0</mml:mn><mml:mn>1</mml:mn></mml:msubsup></mml:mrow></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mi>p</mml:mi><mml:msup><mml:mi>p</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:mo>/</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&minus;</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>A</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>/</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mstyle displaystyle='true'><mml:mrow><mml:msubsup><mml:mo>&int;</mml:mo><mml:mn>0</mml:mn><mml:mn>1</mml:mn></mml:msubsup></mml:mrow></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msup><mml:mi>p</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:mo>/</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&minus;</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>A</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>/</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:mfrac><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mn>0.1</mml:mn><mml:mi>I</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>0.1</mml:mn><mml:mi>A</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>and the standard error we similarly estimate as</p><disp-formula id="pcbi-0010067-e034"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e034" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>standard error</mml:mtext><mml:mo>&equals;</mml:mo><mml:msqrt><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:msup><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow> <mml:mo>&rang;</mml:mo></mml:mrow><mml:mo>&minus;</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo> <mml:mrow><mml:mtext>specificity</mml:mtext></mml:mrow> <mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt><mml:mo>&ap;</mml:mo><mml:msqrt><mml:mrow><mml:mfrac><mml:mrow><mml:mn>10</mml:mn><mml:mi>I</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>A</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:msqrt><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>This estimate of standard error correctly takes into account the fact that as the number of predictions <italic>A</italic> gets larger, our estimate of the algorithm's specificity becomes more precise. The factors ten and 0.1 are there to (approximately) take into account that the <italic>A</italic> predicted bases are not all mutually independent but that they come in windows of <italic>m</italic> = 10 consecutive bases.</p><p>For the right panel of <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> we used the same estimates of the specificities and their standard errors, but plotted these as a function of the specificity sp<italic><sub>i</sub></italic> that the algorithm predicts for each sublist <italic>l<sub>i</sub></italic>. This predicted specificity sp<italic><sub>i</sub></italic> for the list <italic>l<sub>i</sub></italic> is obtained by averaging the posterior probabilities of all the predicted sites in list <italic>l<sub>i</sub></italic>.</p></sec><sec id="s4l"><title>Yeast data runs.</title><p>We “cleaned up” the dataset of experimentally documented binding sites from the SCPD [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>] as follows. In its original form it contained 726 binding sites regulating 234 different genes. We removed sites that either lay in coding regions or that lay more than 1,000 bp upstream from translation start, and fused the overlapping sites that remained. After this we were left with 466 sites for 200 genes.</p><p>The upstream regions of the 200 <italic>S. cerevisiae</italic> genes and their orthologs were obtained from the <italic>Saccharomyces</italic> Genome Database [<xref ref-type="bibr" rid="pcbi-0010067-b062">62</xref>]. For the sequence of <italic>S. paradoxus</italic> we used data from the MIT group [<xref ref-type="bibr" rid="pcbi-0010067-b016">16</xref>], while for <italic>S. bayanus, S. mikatae,</italic> and <italic>S. kudriavzevii</italic> we used data from the Washington University group [<xref ref-type="bibr" rid="pcbi-0010067-b015">15</xref>]. For each group of orthologs we took either the entire intergenic region up to the neighboring coding sequences, or 1,000 bp, whichever was shorter. Not all genes in our set of 200 have orthologs assigned in all other species. There were a total of 796 intergenic regions from five species for our 200 genes. This means that on average we had four orthologs per gene. We did not cross-check the accuracy of the annotation of orthologous genes in the downloaded files. Instead, we performed the following simple test: we flagged a 5′-UTR sequence as “dubious” if it had fewer than 100 bases or if, after aligning with Dialign, fewer than one in ten bases were marked as “aligned” (i.e., in capitals) with other sequences. Only 20 out of these 796 sequences got flagged by one of these criteria; we therefore believe that over 97% of the orthologous sequences are likely accurate, and we simply retained all in our runs.</p><p>We aligned each set of orthologous intergenic regions with Dialign [<xref ref-type="bibr" rid="pcbi-0010067-b022">22</xref>] using the following command line: dialign2–2 –n –thr 5 –fa infile, where the setting –thr 5 ensures that only significant blocks will be aligned. We discovered, however, that the current implementation of Dialign (version 2.2.1) has a severe bug in the way it formats and displays its output. Unrelated sequence segments are sometimes reported in such a way that it appears they are aligned. For example, if one feeds Dialign four sequences, two of which contain all adenines, and two all cysteines, then Dialign will appear to align all of these together without gaps, as opposed to two blocks of pairs (the authors have been informed privately). The bug is in the assembly of fragments to the output file, and we used a wrapper, written by Michael Mwangi, to correctly assemble the fragments. Meanwhile we developed our own multiple-alignment algorithm, Sigma, which was not yet used for the results reported in this paper and which will be described elsewhere (R. Siddharthan, unpublished data).</p><p>For PhyloGibbs, EMnEM, and PhyME we needed to specify the phylogeny of the <italic>Saccharomyces</italic> species. The topology of the species tree can be determined unambiguously [<xref ref-type="bibr" rid="pcbi-0010067-b063">63</xref>]. It has <italic>S. cerevisiae</italic> on one end and the other species branching off from it in the following order (from near to far): <italic>S. paradoxus, S. mikatae, S. kudriavzevii,</italic> and <italic>S. bayanus</italic>. We approximated this tree by a star topology. For PhyloGibbs we needed, for each of the species <italic>i,</italic> the probability <italic>q<sub>i</sub></italic> that since the common ancestor no mutation took place in any given base. These “no mutation” probabilities, which we call “proximities,” can be best estimated by looking at the conservation statistics of “neutral” positions in the genome. It was recently shown [<xref ref-type="bibr" rid="pcbi-0010067-b035">35</xref>] that conservation rates between <italic>S. cerevisiae</italic> and the other species at third positions of 4-fold degenerate codons are approximately constant across the genome. The conservation rates <italic>c</italic> reported in [<xref ref-type="bibr" rid="pcbi-0010067-b035">35</xref>] are <italic>c</italic><sub>cer,par</sub> = 0.74, <italic>c</italic><sub>cer,mik</sub> = 0.6, and <italic>c</italic><sub>cer,bay</sub> = 0.52. In the approximation of a star topology, the conservation rates <italic>c<sub>i,j</sub></italic> are given in terms of the proximities <italic>q<sub>i</sub></italic> and <italic>q<sub>j</sub></italic> through</p><disp-formula id="pcbi-0010067-e035"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e035" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&plus;</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>/</mml:mo><mml:mn>4.</mml:mn></mml:mrow></mml:math> --></disp-formula><p>Assuming that <italic>q</italic><sub>cer</sub> = <italic>q</italic><sub>par</sub> we obtain <italic>q</italic><sub>cer</sub> = <italic>q</italic><sub>par</sub> = 0.8, <italic>q</italic><sub>mik</sub> = 0.58, and <italic>q</italic><sub>bay</sub> = 0.45. No conservation rate was reported in [<xref ref-type="bibr" rid="pcbi-0010067-b035">35</xref>] for <italic>S. kudriavzevii</italic>. From the topology, proximity <italic>q</italic><sub>kud</sub> should lie between those of <italic>S. mikatae</italic> and <italic>S. bayanus</italic> and we simply set it to <italic>q</italic><sub>kud</sub> = 0.5. PhyloGibbs, PhyME, and EMnEM were all run with this phylogenetic tree. EMnEM requires branch lengths in terms of the number of substitutions per site, and we used <italic>q</italic> = <italic>e</italic><sup>−<italic>n</italic></sup> to determine the number of substitutions <italic>n</italic> in terms of the proximity <italic>q</italic>.</p><p>For reference we again give the command lines that we used in running the algorithms on the 200 genes with documented sites. For PhyloGibbs with phylogeny we used –D 1 –T 0.35 –m 10 –N 3 –F bgfile –I 3,3,3 –E 0.01 –f infile –L (cer:0.8,par:0.8,mik:0.58,kud:0.5, bay:0.45). Here bgfile is a fasta file with all <italic>S. cerevisiae</italic> intergenic sequences from which the background model is constructed. The setting –T 0.35 sets the pseudocount of the WM prior to 0.35 to account for the fact that TFs in <italic>S. cerevisiae</italic> generally have higher information scores than random WMs. We ensured that the fasta header for each sequence identified the name of the species from which it derived. Finally, the setting –E 0.01 instructs PhyloGibbs to report sites with probabilities as low as 0.01 (instead of the default 0.05). For EMnEM the relevant parameters in the control file were –w 10 –e 3.0 –t 0.05 –b 1 –n 3 –u 1 –r 0 –m 0. EMnEM was also provided with the phylogenetic tree as described above. It uses ClustalW alignments [<xref ref-type="bibr" rid="pcbi-0010067-b030">30</xref>] of the upstream regions. For PhyME we used –N 1 infile blkfile –w 10 –nmotifs 3 –revcompW –ot 0.05 –nsites 3 –niter 50 –nseediter 10 –b –K 5 –pf phylogenytree.txt –tree. PhyME uses MLAGAN [<xref ref-type="bibr" rid="pcbi-0010067-b029">29</xref>] for its alignments and parses these in its own specific way. The results of this parse are in the blkfile. For PhyloGibbs without phylogeny we used –D 0 –T 0.35 –m 10 –N 3 –F bgfile –I 10,10,10 –E 0.01 –f infile; for WGibbs, –PBernoulli infile 10,10,10 10,10,10 –Z –n; and for MEME, infile –dna –mod tcm –w 10 –nmotifs 3 –wg 1000000 –nomatrim –maxiter 500 –maxsize 1000000 –revcomp –bfile bgfile.</p><p>We should point out that the performances of the different algorithms may vary as one varies parameter settings. We experimented with different parameter settings for each of the algorithms but none substantially changed the results shown in <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref>. For all parameter settings that we tested, PhyloGibbs with phylogeny outperformed all other algorithms. We did notice that PhyME and EMnEM were much more sensitive to the phylogenetic tree than PhyloGibbs was. PhyME showed best performance with the tree that we show here. EMnEM could be made to perform better than the non-phylo algorithms by using a tree with shorter branch lengths.</p><p>The specificity-versus-sensitivity plots in the left panel of <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref> were obtained almost identically to what was described for the synthetic data. The only difference was that, instead of counting the precise number of bases in predicted sites overlapping bases in true sites, we considered any predicted site to “hit” a true site if it overlapped the true site by at least 5 bp (half of the predicted site's length). We did this because the precise extent of the known sites seems often poorly defined: Typically one finds that different sites that are annotated for the same TF in [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>] can have widths that vary substantially.</p><p>For the right panel of <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref> we show, as in the right panel of <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref>, the predicted specificities <italic>s<sub>p</sub></italic> of the different sublists on the horizontal axis, but on the vertical axis we show the ratio <italic>s<sub>r</sub></italic>/<italic>s<sub>p</sub></italic> between the measured specificity <italic>s<sub>r</sub></italic> on documented sites and the specificity <italic>s<sub>p</sub></italic> that the algorithm predicts.</p></sec><sec id="s4m"><title>Regulatory code.</title><p>We used version 24 of the regulatory code from [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. In particular we used the set of “final motifs,” and the highest-confidence binding sites (binding with <italic>p</italic> &lt; 0.001 and conserved in at least two other yeasts) based on these motifs. The former consists of a file (Final_InTableS2_v24.motifs) with 102 WMs for 102 TFs, and the latter consists of a file (IGR_v24.3.p001b.GFF) with the genomic locations of 3,353 predicted binding sites for these 102 WMs. From the set of WMs we selected the 45 WMs for which there were at least three annotated sites and at most 25. The file Final_InTableS2_v24.motifs notes which WMs are based solely on sites/consensus reported in the literature. Among the 45 WMs that we selected there were 21 that were literature based, i.e., no significant motif was found by the computational methods employed in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]—these are the WMs shown in <xref ref-type="table" rid="pcbi-0010067-t001">Table 1</xref>. For each of the 45 selected WMs we collected all intergenic regions with annotated binding sites and their orthologs in the four other sensu stricto species, and aligned them with Dialign as described above. We then ran PhyloGibbs twice on each of the 45 collections of intergenic regions. For a WM with a total of <italic>S</italic> annotated sites in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] and a motif width of <italic>l</italic> in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] we used the following command line settings for the two runs: (1) –D 1 –L (cer:0.8, par:0.8, mik:0.58, kud:0.5, bay:0.45) –T 0.25 –m <italic>l</italic> –N 3 –F bgfile –I <italic>S,S,S</italic> –f infile and (2) –D 1 –L (cer:0.8, par:0.8, mik:0.58, kud:0.5, bay:0.45) –T 0.25 –m 15 –N 3 –F bgfile –I <italic>S,S,S</italic> –f infile. That is, we used both the annotated binding site width and a default width of 15. Since there generally are binding sites for multiple WMs in the set of intergenic regions, we let PhyloGibbs search for three different motifs with a total number of sites equaling three times the number of annotated sites in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>].</p><p>To compare the results of PhyloGibbs with those of [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] we compared the configurations of binding sites that PhyloGibbs reported with all the motifs reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. In particular, for each motif that PhyloGibbs reports it outputs two alignments of predicted sites. One alignment consists of the sequences that have a common color in the reference configuration <italic>C*</italic>. The other consists of the time-averaged alignment of sequences that associate with this reference color during tracking. For each WM <italic>w</italic> in the file Final_InTableS2_v24.motifs we multiplied the WM entries <italic>w</italic><sub>α<italic>i</italic></sub> by the total number of sites <italic>S</italic> annotated for the WM to obtain an alignment <italic>m</italic> of all the binding sites, with <italic>m</italic><sub><italic>α</italic><italic>i</italic></sub> = <italic>w</italic><sub><italic>α</italic><italic>i</italic></sub><italic>S</italic> the number of sites that have base <italic>α</italic> at position <italic>i</italic>. For each pair of one such alignment from [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] and a reported alignment from PhyloGibbs we calculated the probability that both alignments were drawn from a common WM.</p><p>Let <italic>n</italic> be one of the alignments of sites reported by PhyloGibbs and <italic>m</italic> be an alignment of sites from [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>], with <italic>n</italic><sub>α<italic>i</italic></sub> and <italic>m</italic><sub>α<italic>i</italic></sub> being the number of times base α occurs at position <italic>i</italic> of alignments <italic>n</italic> and <italic>m,</italic> respectively. We now calculate the probability that these two alignment were sampled from a common WM, taking into account the possibility that <italic>n</italic> and <italic>m</italic> may be shifted or reverse-complemented with respect to each other. Assume <italic>n</italic> has width <italic>l<sub>n</sub></italic> and <italic>m</italic> has width <italic>l<sub>m</sub></italic> and assume an alignment of <italic>n</italic> and <italic>m</italic> in which <italic>n</italic> is shifted <italic>k</italic> positions to the right with respect to <italic>m</italic>. The total number of times <italic>t</italic><sub><italic>α</italic><italic>i</italic></sub> that base α occurs at position <italic>i</italic> in this joint alignment is given by (1) <italic>t</italic><sub>α<italic>i</italic></sub> = <italic>m</italic><sub>α<italic>i</italic></sub> when 1 ≤ <italic>i</italic> ≤ <italic>k,</italic> (2) <italic>t</italic><sub><italic>α</italic><italic>i</italic></sub> = <italic>m</italic><sub><italic>α</italic><italic>i</italic></sub> + <italic>n</italic><sub><italic>α</italic>(<italic>i − k)</italic></sub> when (<italic>k</italic> + 1) ≤ <italic>i</italic> ≤ <italic>l<sub>m</sub>,</italic> and (3) <italic>t</italic><sub><italic>α</italic><italic>i</italic></sub> = <italic>n</italic><sub><italic>α</italic>(<italic>i − k)</italic></sub> when <italic>l<sub>m</sub></italic> + 1 ≤ <italic>i</italic> ≤ <italic>l<sub>n</sub></italic> + <italic>k</italic>. The probability to draw this joint alignment <italic>t</italic> from a WM is</p><disp-formula id="pcbi-0010067-e036"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e036" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>&plus;</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mrow><mml:mo>&lsqb;</mml:mo> <mml:mrow><mml:mfrac><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&plus;</mml:mo><mml:mn>4</mml:mn><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mstyle displaystyle='true'><mml:munder><mml:mo mathsize="12pt">&Pi;</mml:mo><mml:mi>&alpha;</mml:mi></mml:munder></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mfrac><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi>&alpha;</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&plus;</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mi>&Gamma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&gamma;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow> <mml:mo>&rsqb;</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where γ is the pseudocount of the prior over WM space and <italic>t<sub>i</sub></italic> is the total number of bases in column <italic>i</italic> of the joint alignment <italic>t</italic>. We here use the uniform prior γ = 1. The probability to draw <italic>n</italic> and <italic>m</italic> from two separate WMs is similarly given by <italic>P</italic>(<italic>n</italic>)<italic>P</italic>(<italic>m</italic>) with each factor given by the same equation 36. Thus, the posterior probability <italic>P</italic>(<italic>t</italic>|<italic>n,m</italic>) that <italic>n</italic> and <italic>m,</italic> forming joint alignment <italic>t,</italic> were drawn from a common WM is given by</p><disp-formula id="pcbi-0010067-e037"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e037" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>&pi;</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>&pi;</mml:mi><mml:mo>&plus;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&minus;</mml:mo><mml:mi>&pi;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><p>where π is the prior probability. For each alignment <italic>n</italic> that PhyloGibbs reported there were 102 alignments <italic>m</italic> from [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] (one for each TF), and for each of those we considered all relative shifts and reverse-complement combinations in which at least 4 bp overlapped between <italic>m</italic> and <italic>n</italic>. For alignments of length <italic>l<sub>n</sub></italic> and <italic>l<sub>m</sub></italic> there are 2(<italic>l<sub>n</sub></italic> + <italic>l<sub>m</sub></italic> − 8) such combinations. We set π such that the prior probability was 1/2 that any of these shift/strand combinations from any of the 102 WMs <italic>m</italic> gave an alignment <italic>t</italic> that was sampled from a common WM. That is, we set</p><disp-formula id="pcbi-0010067-e038"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e038" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&pi;</mml:mi><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:mstyle displaystyle='false'><mml:msubsup><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>102</mml:mn></mml:mrow></mml:msubsup><mml:mtext>&thinsp;</mml:mtext><mml:mn>2</mml:mn><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>&minus;</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy='false'>)</mml:mo></mml:mstyle></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>Finally, for each combination <italic>n</italic> and <italic>m</italic> we calculated the maximum of <italic>P</italic>(<italic>t</italic>|<italic>n,m</italic>) over all 2(<italic>l<sub>n</sub></italic> + <italic>l<sub>m</sub></italic> − 8) shift/strand combinations <italic>t</italic> to obtain</p><disp-formula id="pcbi-0010067-e039"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.e039" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:munder><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow><mml:mi>t</mml:mi></mml:munder><mml:mi>P</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><p>In the <xref ref-type="supplementary-material" rid="pcbi-0010067-sd002">Dataset S2</xref> we show all <italic>P</italic>(<italic>n,m</italic>) that are larger than 1/4.</p><p>In addition, for each combination of a reported motif from PhyloGibbs and a TF with annotated sites in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] we calculated the fraction of sites in the motif that overlapped (by at least 4 bp) a site annotated for that TF in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For the motifs reported in tracking we again weighed each site by its posterior probability in calculating this fraction. <xref ref-type="supplementary-material" rid="pcbi-0010067-sd002">Dataset S2</xref> shows all combinations of reported motifs and TFs for which this fraction is non-zero.</p><p>The results in <xref ref-type="table" rid="pcbi-0010067-t001">Tables 1</xref> and <xref ref-type="table" rid="pcbi-0010067-t002">2</xref> were calculated as follows. After running PhyloGibbs on the set of upstream region alignments for one of the 45 TFs, we analyzed all three motifs that PhyloGibbs reported and determined which one best matched the motif <italic>m</italic> reported for the TF in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For each motif we obtained the alignment of sequences <italic>n<sub>r</sub></italic> reported in the reference configuration <italic>C*</italic> and the time-averaged alignment <italic>n<sub>t</sub></italic> obtained for this motif through tracking, and calculated the probabilities <italic>P</italic>(<italic>n<sub>r</sub> ,m</italic>) and <italic>P</italic>(<italic>n<sub>t</sub> ,m</italic>) that these alignments were sampled from the same WM as the alignment <italic>m</italic> of sites reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. We also calculated the fractions <italic>f</italic>(<italic>n<sub>r</sub> ,m</italic>) and <italic>f</italic>(<italic>n<sub>t</sub> ,m</italic>) of sites in <italic>n<sub>r</sub></italic> and <italic>n<sub>t</sub></italic> that overlapped sites annotated for the motif <italic>m</italic> in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. The total score <italic>s</italic>(<italic>n</italic>) of the motif was simply given by the sum <italic>s</italic>(<italic>n</italic>) = <italic>P</italic>(<italic>n<sub>r</sub> ,m</italic>) + <italic>P</italic>(<italic>n<sub>t</sub> ,m</italic>) + <italic>f</italic>(<italic>n<sub>r</sub> ,m</italic>) + <italic>f</italic>(<italic>n<sub>t</sub> ,m</italic>). For the motif (out of three) that maximizes <italic>s</italic>(<italic>n</italic>), <xref ref-type="table" rid="pcbi-0010067-t001">Tables 1</xref> and <xref ref-type="table" rid="pcbi-0010067-t002">2</xref> show <italic>P</italic>(<italic>n<sub>r</sub> ,m</italic>) in the second column and <italic>P</italic>(<italic>n<sub>t</sub> ,m</italic>) in the third column. The fourth column shows the total number of sites |<italic>n<sub>r</sub></italic>| in this motif (color) in reference configuration <italic>C*</italic> and the total number of those <italic>f</italic>(<italic>n<sub>r</sub> ,m</italic>)|<italic>n<sub>r</sub></italic>| that overlap sites annotated for <italic>m</italic> in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. The fifth column shows the same statistics for the tracked set of sites <italic>n<sub>t</sub></italic>, where again each site is weighed by its posterior probability. That is, |<italic>n<sub>t</sub></italic>| is the sum of the posterior probabilities of the sites in this motif. Finally, the sixth column shows the total number of sites |<italic>m</italic>| that were annotated for motif <italic>m</italic> in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>].</p><p>For 11 TFs we gathered sets of target genes from the literature, collected their orthologs from the other sensu stricto species, obtained multiple alignments with Dialign, and ran PhyloGibbs on these sets of multiple alignments. The following command line options were used for all these runs: –D 1 –T 0.25 –a 300 –S 300 –L (cer:0.8, par:0.8, mik:0.58, kud:0.5, bay:0.45) –N 3 –F bgfile –f infile. A summary of the results of these runs, and the remaining parameter settings used, are shown in <xref ref-type="table" rid="pcbi-0010067-t003">Table 3</xref>.</p><table-wrap content-type="2col" id="pcbi-0010067-t003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0010067.t003</object-id><label>Table 3</label><caption><p>Results of PhyloGibbs on Multiple Alignments of Upstream Regions Taken from the Literature</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.t003" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb3col1" align="left" charoff="0" char=""/><col id="tb3col2" align="char" charoff="0" char="."/><col id="tb3col3" align="left" charoff="0" char=""/><col id="tb3col4" align="left" charoff="0" char=""/><col id="tb3col5" align="left" charoff="0" char=""/><col id="tb3col6" align="left" charoff="0" char=""/><col id="tb3col7" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left"><hr/>TF Name</td><td><hr/>m<sup>a</sup></td><td><hr/>I<sup>b</sup></td><td><hr/>WM Match<sup>c</sup></td><td><hr/>Number of Sites<sup>d</sup></td><td><hr/>Number of Upstream Regions<sup>e</sup></td><td><hr/>Upstream Regions &ge; 0.5 Sites<sup>f</sup></td></tr></thead><tbody><tr><td>GCR1</td><td>8</td><td>11,11,11</td><td>1.0/1.0</td><td>14/10.99</td><td>1/8</td><td>7/7</td></tr><tr><td>MET31</td><td>9</td><td>5,5,5</td><td>1.0/1.0</td><td>8/5.8</td><td>0/5</td><td>5/5</td></tr><tr><td>ADR1</td><td>7</td><td>6,6,6</td><td>0.8/0.87</td><td>7/6.16</td><td>1/3</td><td>3/3</td></tr><tr><td>MAC1</td><td>8</td><td>6,6,6</td><td>1.0/1.0</td><td>6/5.07</td><td>1/4</td><td>2/2</td></tr><tr><td>SKO1</td><td>8</td><td>5,5,5</td><td>0.97/0.89</td><td>3/3.39</td><td>0/5</td><td>3/4</td></tr><tr><td>GZF3</td><td>10</td><td>3,3,3</td><td>0.98/0.99</td><td>4/4.93</td><td>0/3</td><td>2/3</td></tr><tr><td>RLM1</td><td>15</td><td>6,6,6</td><td>0.93/0.48</td><td>8/4.55</td><td>1/6</td><td>5/3</td></tr><tr><td>DAL80</td><td>6</td><td>8,8,8</td><td>1.0/1.0</td><td>12/9.19</td><td>0/4</td><td>4/4</td></tr><tr><td>MOT3</td><td>8</td><td>9,6,6,</td><td>0.87/0.0</td><td>5/5.8</td><td>0/3</td><td>1/3</td></tr><tr><td>ROX1</td><td>9</td><td>8,8,8</td><td>1.0/1.0</td><td>9/5.71</td><td>0/3</td><td>3/3</td></tr><tr><td>YOX1</td><td>15</td><td>28,28,28</td><td>0.0/0.0</td><td>18/12.81</td><td>1/28</td><td>18/11</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt301"><p><sup>a</sup>The motif width m with which PhyloGibbs was run.</p></fn><fn id="nt302"><p><sup>b</sup>The number of motifs and sites with which PhyloGibbs was run, i.e., the argument of the &ndash;I option.</p></fn><fn id="nt303"><p><sup>c</sup>The probability of match with the literature WM (as reported by &lsqb;<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>&rsqb;) for the anneal and tracking WM.</p></fn><fn id="nt304"><p><sup>d</sup>The total number of sites in this motif in anneal and tracking.</p></fn><fn id="nt305"><p><sup>e</sup>The total number of upstream regions from the literature that we used for this TF, and the number of those that have annotated binding sites for this TF in &lsqb;<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>&rsqb;.</p></fn><fn id="nt306"><p><sup>f</sup>The number of upstream regions with on average more than 0.5 sites in anneal and in tracking.</p></fn></table-wrap-foot> --></table-wrap><p>Detailed results, and the locations of all the binding sites newly identified in these runs, can be found in <xref ref-type="supplementary-material" rid="pcbi-0010067-sd004">Datasets S4</xref> and <xref ref-type="supplementary-material" rid="pcbi-0010067-sd005">S5</xref>.</p></sec></sec><sec id="s5"><title>Supporting Information</title><supplementary-material id="pcbi-0010067-sd001" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sd001" xlink:type="simple"><label>Dataset S1</label><caption><title>Predicted Sites on Genes with Sites in SCPD</title><p>This file lists all sites with posterior probability 0.05 or higher that PhyloGibbs predicted on the upstream regions of the genes that have one or more binding sites annotated in the SCPD [<xref ref-type="bibr" rid="pcbi-0010067-b026">26</xref>]. The sites are ordered first by posterior probability, then by the name of the open reading frame (ORF), and finally by the number of the motif in which the site occurred. An example line from the file is “YPR191W (−175, −166) rev 0.97 taagaCGGGGCGGGCcttct 3.” The first column shows the name of the ORF, the second column shows the location of the site relative to the ATG of the ORF, the third column shows the strand on which the site occurs, the fourth column shows the posterior probability of the site, and the fifth column shows the sequence of the site (in capitals) plus five bases to the left and right of the site.</p><p>(141 KB TXT)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-sd002" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sd002" xlink:type="simple"><label>Dataset S2</label><caption><title>Comparison of the PhyloGibbs Predictions with Those of Harbison et al. [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]</title><p>This file summarizes the comparisons of the results of PhyloGibbs on the data from [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] with those reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>].</p><p>(99 KB TXT)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-sd003" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sd003" xlink:type="simple"><label>Dataset S3</label><caption><title>All Predicted Sites on the Data from [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]</title><p>This file contains all binding sites with posterior probability at least 0.05 that PhyloGibbs predicted for the 45 TFs with between three and 25 sites annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. For each TF PhyloGibbs was run on the five-species multiple alignments of all upstream regions with sites annotated in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] and asked to predict three motifs. In this file we show only the predictions for the motif that best matched the motif reported in [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>]. The format of the lines is very similar to that of the lines in <xref ref-type="supplementary-material" rid="pcbi-0010067-sd001">Dataset S1</xref>. Example for a predicted site for TF ADR1: ADR1 YKL016C (−388,–383) fwd 0.58 tacTCCAATatt harb_lit. The site occurs 388 to 383 bases upstream of the ATG of the ORF YKL016C. It occurs on the forward strand of the genome and has a posterior probability 0.58. The fifth column shows the sequence of the site in capitals plus half a site length to the left and right. Finally, the last column shows if [<xref ref-type="bibr" rid="pcbi-0010067-b027">27</xref>] found the WM of this TF by computational means or if they simply copied the motif reported in the literature.</p><p>(42 KB TXT)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-sd004" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sd004" xlink:type="simple"><label>Dataset S4</label><caption><title>Co-Regulated Gene Sets Gathered from the Literature</title><p>For 11 TFs we gathered lists of genes that are known to be regulated by the TF from the literature. This file gives the list of ORF names of these genes for each of the 11 TFs. Example: DAL80 YKR034W YIR032C YDL210W YFL021W. This line shows that the TF DAL80 is reported in the literature to regulate the ORFs YKR034W, YIR032C, YDL210W, and YFL021W.</p><p>(10 KB TXT)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-sd005" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sd005" xlink:type="simple"><label>Dataset S5</label><caption><title>Predicted Sites for the Literature Gene Sets</title><p>This file has the same format as <xref ref-type="supplementary-material" rid="pcbi-0010067-sd003">Dataset S3</xref> and shows all predicted sites for the 11 TFs in the upstream regions of the genes in <xref ref-type="supplementary-material" rid="pcbi-0010067-sd004">Dataset S4</xref>. Example: GCR1 YAL038W (−263, −256) rev 0.81 ttttAGGAAGACacta. This example shows a predicted site for TF GCR1 which occurs from 263 to 256 bases upstream of the ATG of YAL038W, occurs on the negative strand, and has posterior probability 0.81.</p><p>(9 KB TXT)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-sg001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sg001" xlink:type="simple"><label>Figure S1</label><caption><title>Analog of <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref> with Yeast WMs and Proximities</title><p>Results analogous to those shown in <xref ref-type="fig" rid="pcbi-0010067-g003">Figure 3</xref> but with “real” WMs representing known binding specificities of yeast TFs, and using a phylogenetic tree with branch lengths proportional of those of the <italic>Saccharomyces</italic> sensu stricto species.</p><p>(62 KB PDF)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-sg002" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sg002" xlink:type="simple"><label>Figure S2</label><caption><title>Analog of <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> with Yeast WMs and Proximities</title><p>Results analogous to those shown in <xref ref-type="fig" rid="pcbi-0010067-g005">Figure 5</xref> but with “real” WMs representing known binding specificities of yeast TFs, and using the phylogenetic tree of the <italic>Saccharomyces</italic> sensu stricto species.</p><p>(110 KB PDF)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-sg003" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.sg003" xlink:type="simple"><label>Figure S3</label><caption><title>Rescaled Specificity/Sensitivity of the Predictions on SCPD Genes</title><p>Results as in the left panel of <xref ref-type="fig" rid="pcbi-0010067-g006">Figure 6</xref> but with specificities rescaled assuming that only 40% of all true binding sites are documented.</p><p>(60 KB PDF)</p></caption></supplementary-material><supplementary-material id="pcbi-0010067-st001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0010067.st001" xlink:type="simple"><label>Table S1</label><caption><title>Accuracy of the WM Polynomial Approximation</title><p>This table shows a comparison of the exact WM integrals with the monomial approximation that our algorithm employs.</p><p>(7 KB PDF)</p></caption></supplementary-material></sec></body><back><ack><p>Support was provided from the National Science Foundation, grant DMR-0129848. EV received support from the Swiss National Science Foundation, project 3152A0–105972. Michael Mwangi programmed the script to reformat the Dialign output. Nicolas Buchler supplied 5′-UTR yeast sequences, based on the publicly available ones, from which coding shadows had been removed. RS thanks the Indian Lattice Gauge Theory Initiative for computer time on the “Kabru” cluster at the Institute of Mathematical Sciences. EV thanks Saurabh Sinha for help running PhyME and for useful comments on the manuscript.</p></ack><glossary><title>Abbreviations</title><def-list><def-item><term>EM</term><def><p>expectation maximization</p></def></def-item><def-item><term>ORF</term><def><p>open reading frame</p></def></def-item><def-item><term>SCPD</term><def><p>Promoter Database of <italic>Saccharomyces cerevisiae</italic></p></def></def-item><def-item><term>TF</term><def><p>transcription factor</p></def></def-item><def-item><term>WM</term><def><p>weight matrix</p></def></def-item></def-list></glossary><ref-list><title>References</title><ref id="pcbi-0010067-b001"><label>1</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Berg</surname><given-names>OG</given-names></name><name name-style="western"><surname>von Hippel</surname><given-names>PH</given-names></name></person-group>
					<year>1987</year>
					<article-title>Selection of DNA binding sites by regulatory proteins: Statistical-mechanical theory and application to operators and promoters.</article-title>
					<source>J Mol Biol</source>
					<volume>193</volume>
					<fpage>723</fpage>
					<lpage>750</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b002"><label>2</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Durbin</surname><given-names>R</given-names></name><name name-style="western"><surname>Eddy</surname><given-names>S</given-names></name><name name-style="western"><surname>Krogh</surname><given-names>G</given-names></name><name name-style="western"><surname>Mitchison</surname><given-names>G</given-names></name></person-group>
					<year>1998</year>
					<article-title>Biological sequence analysis.</article-title>
					<publisher-name>Cambridge University Press</publisher-name>
					<comment>356 p.</comment>
				</element-citation></ref><ref id="pcbi-0010067-b003"><label>3</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Djordjevic</surname><given-names>M</given-names></name><name name-style="western"><surname>Sengupta</surname><given-names>AM</given-names></name><name name-style="western"><surname>Shraiman</surname><given-names>BI</given-names></name></person-group>
					<year>2003</year>
					<article-title>A biophysical approach to transcription factor binding site discovery.</article-title>
					<source>Genome Res</source>
					<volume>13</volume>
					<fpage>2381</fpage>
					<lpage>2390</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b004"><label>4</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Lawrence</surname><given-names>CE</given-names></name><name name-style="western"><surname>Altschul</surname><given-names>SF</given-names></name><name name-style="western"><surname>Boguski</surname><given-names>MS</given-names></name><name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name><name name-style="western"><surname>Neuwald</surname><given-names>AF</given-names></name><etal/></person-group>
					<year>1993</year>
					<article-title>Detecting subtle sequence signals: A Gibbs sampling strategy for multiple alignment.</article-title>
					<source>Science</source>
					<volume>262</volume>
					<fpage>208</fpage>
					<lpage>214</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b005"><label>5</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name><name name-style="western"><surname>Neuwald</surname><given-names>AF</given-names></name><name name-style="western"><surname>Lawrence</surname><given-names>CE</given-names></name></person-group>
					<year>1999</year>
					<article-title>Markovian structures in biological sequence alignment.</article-title>
					<source>J Am Stat Assoc</source>
					<volume>94 </volume>
					<fpage>1</fpage>
					<lpage>15</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b006"><label>6</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bailey</surname><given-names>T</given-names></name><name name-style="western"><surname>Elkan</surname><given-names>C</given-names></name></person-group>
					<year>1994</year>
					<article-title>Fitting a mixture model by expectation maximization to discover motifs in biopolymers.</article-title>
					<source>Proc Int Conf Intell Syst Mol Biol</source>
					<volume>2</volume>
					<fpage>28</fpage>
					<lpage>36</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b007"><label>7</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Stormo</surname><given-names>GD</given-names></name><name name-style="western"><surname>Hartzell</surname><given-names>GW</given-names></name></person-group>
					<year>1989</year>
					<article-title>Identifying protein-binding sites from unaligned DNA fragments.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>86</volume>
					<fpage>1183</fpage>
					<lpage>1187</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b008"><label>8</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hughes</surname><given-names>JD</given-names></name><name name-style="western"><surname>Estep</surname><given-names>PW</given-names></name><name name-style="western"><surname>Tavazoie</surname><given-names>S</given-names></name><name name-style="western"><surname>Church</surname><given-names>GM</given-names></name></person-group>
					<year>2000</year>
					<article-title>Computational identification of cis-regulatory elements associated with groups of functionally related genes in <italic>Saccharomyces cerevisiae</italic>.</article-title>
					<source>J Mol Biol</source>
					<volume>296</volume>
					<fpage>1205</fpage>
					<lpage>1214</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b009"><label>9</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>X</given-names></name><name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name><name name-style="western"><surname>Brutlag</surname><given-names>DL</given-names></name></person-group>
					<year>2001</year>
					<source>Bioprospector: Discovering conserved DNA motifs in upstream regulatory regions of co-expressed genes</source>
					<publisher-loc>Pac Symp Biocomp</publisher-loc>
					<publisher-name>127–138</publisher-name>
				</element-citation></ref><ref id="pcbi-0010067-b010"><label>10</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>XS</given-names></name><name name-style="western"><surname>Brutlag</surname><given-names>DL</given-names></name><name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name></person-group>
					<year>2002</year>
					<article-title>An algorithm for finding protein-DNA binding sites with applications to chromatin immmunoprecipitation experiments.</article-title>
					<source>Nat Biotechnol</source>
					<volume>20</volume>
					<fpage>835</fpage>
					<lpage>839</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b011"><label>11</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>McCue</surname><given-names>LA</given-names></name><name name-style="western"><surname>Thompson</surname><given-names>W</given-names></name><name name-style="western"><surname>Carmack</surname><given-names>CS</given-names></name><name name-style="western"><surname>Ryan</surname><given-names>MP</given-names></name><name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name><etal/></person-group>
					<year>2001</year>
					<article-title>Phylogenetic footprinting of transcription factor binding sites in proteobacterial genomes.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>29</volume>
					<fpage>774</fpage>
					<lpage>782</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b012"><label>12</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>McCue</surname><given-names>LA</given-names></name><name name-style="western"><surname>Thompson</surname><given-names>W</given-names></name><name name-style="western"><surname>Carmack</surname><given-names>CS</given-names></name><name name-style="western"><surname>Lawrence</surname><given-names>CE</given-names></name></person-group>
					<year>2002</year>
					<article-title>Factors influencing the identification of transcription factor binding sites by cross-species comparison.</article-title>
					<source>Genome Res</source>
					<volume>12</volume>
					<fpage>1523</fpage>
					<lpage>1532</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b013"><label>13</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Blanchette</surname><given-names>M</given-names></name><name name-style="western"><surname>Schwikowski</surname><given-names>B</given-names></name><name name-style="western"><surname>Tompa</surname><given-names>M</given-names></name></person-group>
					<year>2002</year>
					<article-title>Algorithms for phylogenetic footprinting.</article-title>
					<source>J Comput Biol</source>
					<volume>9</volume>
					<fpage>211</fpage>
					<lpage>223</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b014"><label>14</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Blanchette</surname><given-names>M</given-names></name><name name-style="western"><surname>Tompa</surname><given-names>M</given-names></name></person-group>
					<year>2002</year>
					<article-title>Discovery of regulatory elements by a computational method for phylogenetic footprinting.</article-title>
					<source>Genome Res</source>
					<volume>12</volume>
					<fpage>739</fpage>
					<lpage>748</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b015"><label>15</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Cliften</surname><given-names>P</given-names></name><name name-style="western"><surname>Sudarsanam</surname><given-names>P</given-names></name><name name-style="western"><surname>Desikan</surname><given-names>A</given-names></name><name name-style="western"><surname>Fulton</surname><given-names>L</given-names></name><name name-style="western"><surname>Fulton</surname><given-names>B</given-names></name><etal/></person-group>
					<year>2003</year>
					<article-title>Finding functional features in <italic>Saccharomyces</italic> genomes by phylogenetic footprinting.</article-title>
					<source>Science</source>
					<volume>301</volume>
					<fpage>71</fpage>
					<lpage>76</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b016"><label>16</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Kellis</surname><given-names>M</given-names></name><name name-style="western"><surname>Patterson</surname><given-names>N</given-names></name><name name-style="western"><surname>Endrizzi</surname><given-names>M</given-names></name><name name-style="western"><surname>Birren</surname><given-names>B</given-names></name><name name-style="western"><surname>Lander</surname><given-names>ES</given-names></name></person-group>
					<year>2003</year>
					<article-title>Sequencing and comparison of yeast species to identify genes and regulatory elements.</article-title>
					<source>Nature</source>
					<volume>423</volume>
					<fpage>241</fpage>
					<lpage>254</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b017"><label>17</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rajewsky</surname><given-names>N</given-names></name><name name-style="western"><surname>Socci</surname><given-names>ND</given-names></name><name name-style="western"><surname>Zapotocky</surname><given-names>M</given-names></name><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2002</year>
					<article-title>The evolution of DNA regulatory regions for proteogamma bacteria by interspecies comparisons.</article-title>
					<source>Genome Res</source>
					<volume>12</volume>
					<fpage>298</fpage>
					<lpage>308</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b018"><label>18</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Dermitzakis</surname><given-names>ET</given-names></name><name name-style="western"><surname>Bergman</surname><given-names>CM</given-names></name><name name-style="western"><surname>Clark</surname><given-names>AG</given-names></name></person-group>
					<year>2003</year>
					<article-title>Tracing the evolutionary history of <italic>Drosophila</italic> regulatory regions with models that identify transcription factor binding sites.</article-title>
					<source>Mol Biol Evol</source>
					<volume>20</volume>
					<fpage>703</fpage>
					<lpage>714</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b019"><label>19</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Emberly</surname><given-names>E</given-names></name><name name-style="western"><surname>Rajewsky</surname><given-names>N</given-names></name><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2003</year>
					<article-title>Conservation of regulatory elements between two species of <italic>Drosophila</italic>.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>4</volume>
					<fpage>57</fpage>
				</element-citation></ref><ref id="pcbi-0010067-b020"><label>20</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2005</year>
					<article-title>Computational methods for transcriptional regulation.</article-title>
					<source>Curr Opin Genet Dev</source>
					<volume>15</volume>
					<fpage>214</fpage>
					<lpage>221</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b021"><label>21</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Siddharthan</surname><given-names>R</given-names></name><name name-style="western"><surname>van Nimwegen</surname><given-names>E</given-names></name><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2005</year>
					<article-title>PhyloGibbs: A Gibbs sampler incorporating phylogenetic information.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Eskin</surname><given-names>E</given-names></name><name name-style="western"><surname>Workman</surname><given-names>C</given-names></name></person-group>
					<source>RECOMB 2004 satellite workshop on regulatory genomics</source>
					<publisher-loc>Berlin</publisher-loc>
					<publisher-name>Springer-Verlag</publisher-name>
					<comment>pp.</comment>
					<fpage>30</fpage>
					<lpage>41</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b022"><label>22</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Morgenstern</surname><given-names>B</given-names></name><name name-style="western"><surname>Dress</surname><given-names>A</given-names></name><name name-style="western"><surname>Werner</surname><given-names>T</given-names></name></person-group>
					<year>1996</year>
					<article-title>Multiple DNA and protein sequence alignment based on segment-to-segment comparison.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>93</volume>
					<fpage>12098</fpage>
					<lpage>12103</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b023"><label>23</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>T</given-names></name><name name-style="western"><surname>Stormo</surname><given-names>G</given-names></name></person-group>
					<year>2003</year>
					<article-title>Combining phylogenetic data with co-regulated genes to identify regulatory motifs.</article-title>
					<source>Bioinformatics</source>
					<volume>19</volume>
					<fpage>2369</fpage>
					<lpage>2380</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b024"><label>24</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Moses</surname><given-names>AM</given-names></name><name name-style="western"><surname>Chiang</surname><given-names>DY</given-names></name><name name-style="western"><surname>Eisen</surname><given-names>MB</given-names></name></person-group>
					<year>2004</year>
					<source>Phylogenetic motif detection by expectation-maximization on evolutionary mixtures</source>
					<publisher-loc>Pac Symp Biocomput</publisher-loc>
					<publisher-name>324–335</publisher-name>
				</element-citation></ref><ref id="pcbi-0010067-b025"><label>25</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name><name name-style="western"><surname>Blanchette</surname><given-names>M</given-names></name><name name-style="western"><surname>Tompa</surname><given-names>M</given-names></name></person-group>
					<year>2004</year>
					<article-title>PhyME: A probabilistic algorithm for finding motifs in sets of orthologous sequences.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>5</volume>
					<fpage>170</fpage>
				</element-citation></ref><ref id="pcbi-0010067-b026"><label>26</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Zhu</surname><given-names>J</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>MQ</given-names></name></person-group>
					<year>1999</year>
					<article-title>SCPD: A promoter database of the yeast <italic>Saccharomyces cerevisiae</italic>.</article-title>
					<source>Bioinformatics</source>
					<volume>15</volume>
					<fpage>607</fpage>
					<lpage>611</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b027"><label>27</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Harbison</surname><given-names>CT</given-names></name><name name-style="western"><surname>Gordon</surname><given-names>DB</given-names></name><name name-style="western"><surname>Lee</surname><given-names>TI</given-names></name><name name-style="western"><surname>Rinaldi</surname><given-names>NJ</given-names></name><name name-style="western"><surname>Macisaac</surname><given-names>KD</given-names></name><etal/></person-group>
					<year>2004</year>
					<article-title>Transcriptional regulatory code of a eukaryotic genome.</article-title>
					<source>Nature</source>
					<volume>431</volume>
					<fpage>99</fpage>
					<lpage>104</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b028"><label>28</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>van Nimwegen</surname><given-names>E</given-names></name><name name-style="western"><surname>Zavolan</surname><given-names>M</given-names></name><name name-style="western"><surname>Rajewsky</surname><given-names>N</given-names></name><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2002</year>
					<article-title>Probabilistic clustering of sequences: Inferring new bacterial regulons by comparative genomics.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>99</volume>
					<fpage>7323</fpage>
					<lpage>7328</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b029"><label>29</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Brudno</surname><given-names>M</given-names></name><name name-style="western"><surname>Do</surname><given-names>CB</given-names></name><name name-style="western"><surname>Cooper</surname><given-names>GM</given-names></name><name name-style="western"><surname>Kim</surname><given-names>MF</given-names></name><name name-style="western"><surname>Davydov</surname><given-names>E</given-names></name><etal/></person-group>
					<year>2003</year>
					<article-title>LAGAN and Multi-LAGAN: Efficient tools for large-scale multiple alignment of genomic DNA.</article-title>
					<source>Genome Res</source>
					<volume>13</volume>
					<fpage>731</fpage>
					<lpage>731</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b030"><label>30</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Thompson</surname><given-names>JD</given-names></name><name name-style="western"><surname>Higgins</surname><given-names>DG</given-names></name><name name-style="western"><surname>Gibson</surname><given-names>TJ</given-names></name></person-group>
					<year>1994</year>
					<article-title>CLUSTAL W: Improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>22</volume>
					<fpage>4673</fpage>
					<lpage>4680</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b031"><label>31</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bray</surname><given-names>N</given-names></name><name name-style="western"><surname>Pachter</surname><given-names>L</given-names></name></person-group>
					<year>2004</year>
					<article-title>MAVID: Constrained ancestral alignment of multiple sequences.</article-title>
					<source>Genome Res</source>
					<volume>14</volume>
					<fpage>693</fpage>
					<lpage>699</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b032"><label>32</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Pollard</surname><given-names>DA</given-names></name><name name-style="western"><surname>Bergman</surname><given-names>CM</given-names></name><name name-style="western"><surname>Stoye</surname><given-names>J</given-names></name><name name-style="western"><surname>Celniker</surname><given-names>SE</given-names></name><name name-style="western"><surname>Eisen</surname><given-names>MB</given-names></name></person-group>
					<year>2004</year>
					<source>Benchmarking tools for the alignment of functional noncoding dna</source>
					<source>BMC Bioinformatics</source>
					<volume>5</volume>
				</element-citation></ref><ref id="pcbi-0010067-b033"><label>33</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Blanchette</surname><given-names>M</given-names></name><name name-style="western"><surname>Kent</surname><given-names>WJ</given-names></name><name name-style="western"><surname>Riemer</surname><given-names>C</given-names></name><name name-style="western"><surname>Elnitski</surname><given-names>L</given-names></name><name name-style="western"><surname>Smit</surname><given-names>AF</given-names></name><etal/></person-group>
					<year>2004</year>
					<article-title>Aligning multiple genomic sequences with the threaded blockset aligner.</article-title>
					<source>Genome Res</source>
					<volume>14</volume>
					<fpage>708</fpage>
					<lpage>715</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b034"><label>34</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name></person-group>
					<year>2001</year>
					<article-title>Monte Carlo strategies in scientific computing.</article-title>
					<source>Springer-Verlag</source>
					<comment>360 p.</comment>
				</element-citation></ref><ref id="pcbi-0010067-b035"><label>35</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Chin</surname><given-names>CS</given-names></name><name name-style="western"><surname>Chuang</surname><given-names>J</given-names></name><name name-style="western"><surname>Li</surname><given-names>H</given-names></name></person-group>
					<year>2005</year>
					<article-title>Genome-wide regulatory complexity in yeast promoters: Separation of functionally conserved and neutral sequence.</article-title>
					<source>Genome Res</source>
					<volume>15</volume>
					<fpage>205</fpage>
					<lpage>213</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b036"><label>36</label><element-citation publication-type="other" xlink:type="simple">
					<collab xlink:type="simple">Swiss Institute of Bioinformatics, Biozentrum Universität Basel</collab>
					<year>2005</year>
					<source>SwissRegulon [database]</source>
					<comment>Available: <ext-link ext-link-type="uri" xlink:href="http://www.swissregulon.unibas.ch" xlink:type="simple">http://www.swissregulon.unibas.ch</ext-link>. Accessed 7 November 2005.</comment>
				</element-citation></ref><ref id="pcbi-0010067-b037"><label>37</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Herrero</surname><given-names>P</given-names></name><name name-style="western"><surname>Flores</surname><given-names>L</given-names></name><name name-style="western"><surname>de la Cera</surname><given-names>T</given-names></name><name name-style="western"><surname>Moreno</surname><given-names>F</given-names></name></person-group>
					<year>1999</year>
					<article-title>Functional characterization of transcriptional regulatory elements in the upstream region of the yeast GLK1 gene.</article-title>
					<source>Biochem J</source>
					<volume>343</volume>
					<fpage>319</fpage>
					<lpage>325</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b038"><label>38</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sasaki</surname><given-names>H</given-names></name><name name-style="western"><surname>Kishimoto</surname><given-names>T</given-names></name><name name-style="western"><surname>Mizuno</surname><given-names>T</given-names></name><name name-style="western"><surname>Shinzato</surname><given-names>T</given-names></name><name name-style="western"><surname>Uemura</surname><given-names>H</given-names></name></person-group>
					<year>2005</year>
					<article-title>Expression of GCR1, the transcriptional activator of glycolytic enzyme genes in the yeast <italic>Saccharomyces cerevisiae,</italic> is positively autoregulated by Gcr1p.</article-title>
					<source>Yeast</source>
					<volume>4</volume>
					<fpage>305</fpage>
					<lpage>319</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b039"><label>39</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Axelrod</surname><given-names>JD</given-names></name><name name-style="western"><surname>Majors</surname><given-names>J</given-names></name><name name-style="western"><surname>Brandriss</surname><given-names>MC</given-names></name></person-group>
					<year>1991</year>
					<article-title>Proline-independent binding of PUT3 transcriptional activator protein detected by footprinting in vivo.</article-title>
					<source>Mol Cell Biol</source>
					<volume>11</volume>
					<fpage>564</fpage>
					<lpage>567</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b040"><label>40</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Blaiseau</surname><given-names>PL</given-names></name><name name-style="western"><surname>Isnard</surname><given-names>AD</given-names></name><name name-style="western"><surname>Surdin-Kerjan</surname><given-names>Y</given-names></name><name name-style="western"><surname>Thomas</surname><given-names>D</given-names></name></person-group>
					<year>1997</year>
					<article-title>Met31p and Met32p, two related zinc finger proteins, are involved in transcriptional regulation of yeast sulfur amino acid metabolism.</article-title>
					<source>Mol Cell Biol</source>
					<volume>17</volume>
					<fpage>3640</fpage>
					<lpage>3648</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b041"><label>41</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Blaiseau</surname><given-names>PL</given-names></name><name name-style="western"><surname>Thomas</surname><given-names>D</given-names></name></person-group>
					<year>1998</year>
					<article-title>Multiple transcriptional activation complexes tether the yeast activator Met4 to DNA.</article-title>
					<source>EMBO J</source>
					<volume>17</volume>
					<fpage>6327</fpage>
					<lpage>6336</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b042"><label>42</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Dormer</surname><given-names>UH</given-names></name><name name-style="western"><surname>Westwater</surname><given-names>J</given-names></name><name name-style="western"><surname>McLaren</surname><given-names>NF</given-names></name><name name-style="western"><surname>Kent</surname><given-names>NA</given-names></name><name name-style="western"><surname>Mellor</surname><given-names>J</given-names></name><etal/></person-group>
					<year>2000</year>
					<article-title>Cadmium-inducible expression of the yeast GSH1 gene requires a functional sulfur-amino acid regulatory network.</article-title>
					<source>J Biol Chem</source>
					<volume>275</volume>
					<fpage>32611</fpage>
					<lpage>32616</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b043"><label>43</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Young</surname><given-names>ET</given-names></name><name name-style="western"><surname>Dombek</surname><given-names>KM</given-names></name><name name-style="western"><surname>Tachibana</surname><given-names>C</given-names></name><name name-style="western"><surname>Ideker</surname><given-names>T</given-names></name></person-group>
					<year>2003</year>
					<article-title>Multiple pathways are co-regulated by the protein kinase Snf1 and the transcription factors Adr1 and Cat8.</article-title>
					<source>J Biol Chem</source>
					<volume>278</volume>
					<fpage>26146</fpage>
					<lpage>26158</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b044"><label>44</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Jungmann</surname><given-names>J</given-names></name><name name-style="western"><surname>Reins</surname><given-names>HA</given-names></name><name name-style="western"><surname>Lee</surname><given-names>J</given-names></name><name name-style="western"><surname>Romeo</surname><given-names>A</given-names></name><name name-style="western"><surname>Hassett</surname><given-names>R</given-names></name><etal/></person-group>
					<year>1993</year>
					<article-title>MAC1, a nuclear regulatory protein related to cu-dependent transcription factors is involved in cu/fe utilization and stress resistance in yeast.</article-title>
					<source>EMBO J</source>
					<volume>12</volume>
					<fpage>5051</fpage>
					<lpage>5056</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b045"><label>45</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Labbe</surname><given-names>S</given-names></name><name name-style="western"><surname>Zhu</surname><given-names>Z</given-names></name><name name-style="western"><surname>Thiele</surname><given-names>DJ</given-names></name></person-group>
					<year>1997</year>
					<article-title>Copper-specific transcriptional repression of yeast genes encoding critical components in the copper transport pathway.</article-title>
					<source>J Biol Chem</source>
					<volume>272</volume>
					<fpage>15951</fpage>
					<lpage>15958</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b046"><label>46</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rep</surname><given-names>M</given-names></name><name name-style="western"><surname>Proft</surname><given-names>M</given-names></name><name name-style="western"><surname>Remize</surname><given-names>F</given-names></name><name name-style="western"><surname>Tamas</surname><given-names>M</given-names></name><name name-style="western"><surname>Serrano</surname><given-names>R</given-names></name></person-group>
					<year>2001</year>
					<article-title>The <italic>Saccharomyces cerevisiae</italic> Sko1p transcription factor mediates HOG pathway-dependent osmotic regulation of a set of genes encoding enzymes implicated in protection from oxidative damage.</article-title>
					<source>Mol Microbiol</source>
					<volume>40</volume>
					<fpage>1067</fpage>
					<lpage>1083</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b047"><label>47</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Coffman</surname><given-names>JA</given-names></name><name name-style="western"><surname>Rai</surname><given-names>R</given-names></name><name name-style="western"><surname>Loprete</surname><given-names>DM</given-names></name><name name-style="western"><surname>Cunningham</surname><given-names>T</given-names></name><name name-style="western"><surname>Svetlov</surname><given-names>V</given-names></name><etal/></person-group>
					<year>1997</year>
					<article-title>Cross regulation of four GATA factors that control nitrogen catabolic gene expression in <italic>Saccharomyces cerevisiae</italic>.</article-title>
					<source>J Bacteriol</source>
					<volume>179</volume>
					<fpage>3416</fpage>
					<lpage>3429</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b048"><label>48</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Dodou</surname><given-names>E</given-names></name><name name-style="western"><surname>Treisman</surname><given-names>R</given-names></name></person-group>
					<year>1997</year>
					<article-title>The <italic>Saccharomyces cerevisiae</italic> MADS-Box transcription factor Rlm1 is a target for the Mpk1 mitogen-activated protein kinase pathway.</article-title>
					<source>J Bacteriol</source>
					<volume>17</volume>
					<fpage>1848</fpage>
					<lpage>1859</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b049"><label>49</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Cunningham</surname><given-names>TS</given-names></name><name name-style="western"><surname>Cooper</surname><given-names>TG</given-names></name></person-group>
					<year>1993</year>
					<article-title>The <italic>Saccharomyces cerevisiae</italic> DAL80 repressor protein binds to multiple copies of GATAA-containing sequences (URSGATA).</article-title>
					<source>J Bacteriol</source>
					<volume>175</volume>
					<fpage>5851</fpage>
					<lpage>5861</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b050"><label>50</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Cunningham</surname><given-names>TS</given-names></name><name name-style="western"><surname>Cooper</surname><given-names>TG</given-names></name></person-group>
					<year>1994</year>
					<article-title>The UGA4 UASNTR site required for GLN3-dependent transcriptional activation also mediates DAL80-responsive regulation and DAL80 protein binding in <italic>Saccharomyces cerevisiae</italic>.</article-title>
					<source>J Bacteriol</source>
					<volume>176</volume>
					<fpage>4718</fpage>
					<lpage>4725</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b051"><label>51</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hongay</surname><given-names>C</given-names></name><name name-style="western"><surname>Jia</surname><given-names>N</given-names></name><name name-style="western"><surname>Bard</surname><given-names>M</given-names></name><name name-style="western"><surname>Winston</surname><given-names>F</given-names></name></person-group>
					<year>2002</year>
					<article-title>Mot3 is a transcriptional repressor of ergosterol biosynthetic genes and is required for normal vacuolar function in <italic>Saccharomyces cerevisiae</italic>.</article-title>
					<source>EMBO J</source>
					<volume>21</volume>
					<fpage>4114</fpage>
					<lpage>4124</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b052"><label>52</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Linde</surname><given-names>JJT</given-names></name><name name-style="western"><surname>Steensma</surname><given-names>HY</given-names></name></person-group>
					<year>2002</year>
					<article-title>A microarray-assisted screen for potential hap1 and rox1 target genes in <italic>Saccharomyces cerevisiae</italic>.</article-title>
					<source>Yeast</source>
					<volume>19</volume>
					<fpage>825</fpage>
					<lpage>840</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b053"><label>53</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Fernandes</surname><given-names>L</given-names></name><name name-style="western"><surname>Rodrigues-Pousada</surname><given-names>C</given-names></name><name name-style="western"><surname>Struhl</surname><given-names>K</given-names></name></person-group>
					<year>1997</year>
					<article-title>Yap, a novel family of eight bZIP proteins in <italic>Saccharomyces cerevisiae</italic> with distinct biological functions.</article-title>
					<source>Mol Cel Biol</source>
					<volume>17</volume>
					<fpage>6982</fpage>
					<lpage>6993</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b054"><label>54</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Pramila</surname><given-names>T</given-names></name><name name-style="western"><surname>Miles</surname><given-names>S</given-names></name><name name-style="western"><surname>GuhaThakurta</surname><given-names>D</given-names></name><name name-style="western"><surname>Jemiolo</surname><given-names>D</given-names></name><name name-style="western"><surname>Breeden</surname><given-names>LL</given-names></name></person-group>
					<year>2002</year>
					<article-title>Conserved homeodomain proteins interact with MADS box protein Mcm1 to restrict ecb-dependent transcription to the M/G1 phase of the cell cycle.</article-title>
					<source>Genes Dev</source>
					<volume>16</volume>
					<fpage>3034</fpage>
					<lpage>3045</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b055"><label>55</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Yona</surname><given-names>E</given-names></name><name name-style="western"><surname>Bangio</surname><given-names>H</given-names></name><name name-style="western"><surname>Ehrlich</surname><given-names>P</given-names></name><name name-style="western"><surname>Tepper</surname><given-names>SH</given-names></name><name name-style="western"><surname>Katcoff</surname><given-names>DJ</given-names></name></person-group>
					<year>1995</year>
					<article-title>The c-terminal domain of SIN1 in yeast interacts with a protein that binds the URS1 region of the yeast HO gene.</article-title>
					<source>Mol Gen Genet</source>
					<volume>246</volume>
					<fpage>774</fpage>
					<lpage>777</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b056"><label>56</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Novoseler</surname><given-names>M</given-names></name><name name-style="western"><surname>Hershkovits</surname><given-names>G</given-names></name><name name-style="western"><surname>Katcof</surname><given-names>DJ</given-names></name></person-group>
					<year>2005</year>
					<article-title>Functional domains of the yeast chromatin protein Sin1p/Spt2p can bind four-way junction and crossing DNA structures.</article-title>
					<source>J Biol Chem</source>
					<volume>280</volume>
					<fpage>5169</fpage>
					<lpage>5177</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b057"><label>57</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Chellappa</surname><given-names>R</given-names></name><name name-style="western"><surname>Kandasamy</surname><given-names>P</given-names></name><name name-style="western"><surname>Oh</surname><given-names>CS</given-names></name><name name-style="western"><surname>Jiang</surname><given-names>Y</given-names></name><name name-style="western"><surname>Vemula</surname><given-names>M</given-names></name><etal/></person-group>
					<year>2001</year>
					<article-title>The membrane proteins, Spt23p and Mga2p, play distinct roles in the activation of <italic>Saccharomyces cerevisiae</italic> OLE1 gene expression. Fatty acid-mediated regulation of Mga2p activity is independent of its proteolytic processing into a soluble transcription activator.</article-title>
					<source>J Biol Chem</source>
					<volume>276</volume>
					<fpage>43548</fpage>
					<lpage>43556</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b058"><label>58</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rajewsky</surname><given-names>N</given-names></name><name name-style="western"><surname>Vergassola</surname><given-names>M</given-names></name><name name-style="western"><surname>Gaul</surname><given-names>U</given-names></name><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2002</year>
					<article-title>Computational detection of genomic cis regulatory modules, applied to body patterning in the early <italic>Drosophila</italic> embryo.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>3</volume>
					<fpage>30</fpage>
				</element-citation></ref><ref id="pcbi-0010067-b059"><label>59</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Zavolan</surname><given-names>M</given-names></name><name name-style="western"><surname>Rajewsky</surname><given-names>N</given-names></name><name name-style="western"><surname>Socci</surname><given-names>ND</given-names></name><name name-style="western"><surname>Gaasterland</surname><given-names>T</given-names></name></person-group>
					<year>2003</year>
					<article-title>Smashing regulatory sites in DNA by human-mouse sequence comparisons.</article-title>
					<comment>In:</comment>
					<source>IEEE Computer Society Bioinformatics Conference (CSB'03)</source>
					<comment>pp</comment>
					<fpage>277</fpage>
					<lpage>286</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b060"><label>60</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name><name name-style="western"><surname>van Nimwegen</surname><given-names>E</given-names></name><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2003</year>
					<article-title>A probabilistic method to detect regulatory modules.</article-title>
					<source>Bioinformatics</source>
					<volume>19</volume>
					<fpage>i292</fpage>
					<lpage>i301</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b061"><label>61</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name><name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name></person-group>
					<year>2005</year>
					<article-title>Sequence turnover and tandem repeats in cis-regulatory modules in drosophila.</article-title>
					<source>Mol Biol Evol</source>
					<volume>22</volume>
					<fpage>874</fpage>
					<lpage>885</lpage>
				</element-citation></ref><ref id="pcbi-0010067-b062"><label>62</label><element-citation publication-type="other" xlink:type="simple">
					<collab xlink:type="simple">National Human Genome Research Institute</collab>
					<year>2005</year>
					<source><italic>Saccharomyces</italic> Genome Database [database]</source>
					<comment>Available: <ext-link ext-link-type="uri" xlink:href="http://www.yeastgenome.org/" xlink:type="simple">http://www.yeastgenome.org/</ext-link>. Accessed 7 November 2005.</comment>
				</element-citation></ref><ref id="pcbi-0010067-b063"><label>63</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rokas</surname><given-names>A</given-names></name><name name-style="western"><surname>Williams</surname><given-names>BL</given-names></name><name name-style="western"><surname>King</surname><given-names>N</given-names></name><name name-style="western"><surname>Carroll</surname><given-names>SB</given-names></name></person-group>
					<year>2003</year>
					<article-title>Genome-scale approaches to resolving incongruence in molecular phylogenies.</article-title>
					<source>Nature</source>
					<volume>425</volume>
					<fpage>798</fpage>
					<lpage>804</lpage>
				</element-citation></ref></ref-list></back></article>