<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN" "http://jats.nlm.nih.gov/publishing/1.1d3/JATS-journalpublishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.1d3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1005575</article-id>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-17-00573</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Research facilities</subject><subj-group><subject>Information centers</subject><subj-group><subject>Archives</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Programming languages</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Molecular biology</subject><subj-group><subject>Macromolecular structure analysis</subject><subj-group><subject>Protein structure</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Proteins</subject><subj-group><subject>Protein structure</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Data visualization</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Physics</subject><subj-group><subject>Condensed matter physics</subject><subj-group><subject>Solid state physics</subject><subj-group><subject>Crystallography</subject><subj-group><subject>Crystal structure</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Social sciences</subject><subj-group><subject>Linguistics</subject><subj-group><subject>Phonology</subject><subj-group><subject>Syntax</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Chemistry</subject><subj-group><subject>Chemical physics</subject><subj-group><subject>Molecular structure</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Physics</subject><subj-group><subject>Chemical physics</subject><subj-group><subject>Molecular structure</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Computer software</subject></subj-group></subj-group></article-categories>
<title-group>
<article-title>MMTF—An efficient file format for the transmission, visualization, and analysis of macromolecular structures</article-title>
<alt-title alt-title-type="running-head">MMTF—An efficient file format for macromolecular structures</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-0881-3490</contrib-id>
<name name-style="western">
<surname>Bradley</surname>
<given-names>Anthony R.</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-0893-5551</contrib-id>
<name name-style="western">
<surname>Rose</surname>
<given-names>Alexander S.</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Pavelka</surname>
<given-names>Antonín</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Valasatava</surname>
<given-names>Yana</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-9544-5621</contrib-id>
<name name-style="western">
<surname>Duarte</surname>
<given-names>Jose M.</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Prlić</surname>
<given-names>Andreas</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0001-9981-9750</contrib-id>
<name name-style="western">
<surname>Rose</surname>
<given-names>Peter W.</given-names>
</name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
</contrib-group>
<aff id="aff001"><label>1</label> <addr-line>Structural Bioinformatics Laboratory, San Diego Supercomputer Center, University of California, San Diego, La Jolla, CA, United States of America</addr-line></aff>
<aff id="aff002"><label>2</label> <addr-line>RCSB Protein Data Bank, San Diego Supercomputer Center, University of California, San Diego, La Jolla, CA, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Schneidman</surname>
<given-names>Dina</given-names>
</name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1"><addr-line>Hebrew University of Jerusalem, ISRAEL</addr-line></aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<fn fn-type="con">
<p><list list-type="simple"> <list-item>
<p><bold>Conceptualization:</bold> PWR.</p></list-item> <list-item>
<p><bold>Data curation:</bold> ARB APa ASR YV.</p></list-item> <list-item>
<p><bold>Formal analysis:</bold> ARB APa ASR YV.</p></list-item> <list-item>
<p><bold>Funding acquisition:</bold> PWR.</p></list-item> <list-item>
<p><bold>Investigation:</bold> ARB ASR PWR.</p></list-item> <list-item>
<p><bold>Methodology:</bold> ARB ASR APa APr JMD PWR YV.</p></list-item> <list-item>
<p><bold>Project administration:</bold> PWR.</p></list-item> <list-item>
<p><bold>Resources:</bold> APr JMD PWR.</p></list-item> <list-item>
<p><bold>Software:</bold> ARB ASR APa APr JMD PWR YV.</p></list-item> <list-item>
<p><bold>Supervision:</bold> PWR.</p></list-item> <list-item>
<p><bold>Validation:</bold> ARB APa ASR PWR.</p></list-item> <list-item>
<p><bold>Visualization:</bold> ARB PWR YV.</p></list-item> <list-item>
<p><bold>Writing – original draft:</bold> ARB PWR.</p></list-item> <list-item>
<p><bold>Writing – review &amp; editing:</bold> ARB PWR.</p></list-item></list>
</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">pwrose@ucsd.edu</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<day>2</day>
<month>6</month>
<year>2017</year>
</pub-date>
<pub-date pub-type="collection">
<month>6</month>
<year>2017</year>
</pub-date>
<volume>13</volume>
<issue>6</issue>
<elocation-id>e1005575</elocation-id>
<history>
<date date-type="received">
<day>6</day>
<month>4</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>16</day>
<month>5</month>
<year>2017</year>
</date>
</history>
<permissions>
<copyright-year>2017</copyright-year>
<copyright-holder>Bradley et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1005575"/>
<abstract>
<p>Recent advances in experimental techniques have led to a rapid growth in complexity, size, and number of macromolecular structures that are made available through the Protein Data Bank. This creates a challenge for macromolecular visualization and analysis. Macromolecular structure files, such as PDB or PDBx/mmCIF files can be slow to transfer, parse, and hard to incorporate into third-party software tools. Here, we present a new binary and compressed data representation, the MacroMolecular Transmission Format, MMTF, as well as software implementations in several languages that have been developed around it, which address these issues. We describe the new format and its APIs and demonstrate that it is several times faster to parse, and about a quarter of the file size of the current standard format, PDBx/mmCIF. As a consequence of the new data representation, it is now possible to visualize structures with millions of atoms in a web browser, keep the whole PDB archive in memory or parse it within few minutes on average computers, which opens up a new way of thinking how to design and implement efficient algorithms in structural bioinformatics. The PDB archive is available in MMTF file format through web services and data that are updated on a weekly basis.</p>
</abstract>
<funding-group>
<award-group id="award001">
<funding-source>
<institution-wrap>
<institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100000054</institution-id>
<institution>National Cancer Institute</institution>
</institution-wrap>
</funding-source>
<award-id>U01 CA198942</award-id>
<principal-award-recipient>
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0001-9981-9750</contrib-id>
<name name-style="western">
<surname>Rose</surname>
<given-names>Peter W.</given-names>
</name>
</principal-award-recipient>
</award-group>
<funding-statement>This project was funded by the National Cancer Institute/National Institutes of Health Award U01 CA198942. The funder had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="12"/>
<table-count count="4"/>
<page-count count="16"/>
</counts>
<custom-meta-group>
<custom-meta>
<meta-name>PLOS Publication Stage</meta-name>
<meta-value>vor-update-to-uncorrected-proof</meta-value>
</custom-meta>
<custom-meta>
<meta-name>Publication Update</meta-name>
<meta-value>2017-06-16</meta-value>
</custom-meta>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>All relevant data are within the paper and its Supporting Information files.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<disp-quote>
<p>This is a <italic>PLOS Computational Biology</italic> Software paper.</p>
</disp-quote>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>The Protein Data Bank (PDB) [<xref ref-type="bibr" rid="pcbi.1005575.ref001">1</xref>] is the global archive of 3D structures of proteins, nucleic acids, and complex assemblies. Recent advances in experimental techniques have led to an explosion in both the number and size of such structures. The entire PDB now exceeds one billion atoms and the largest structure currently contains about 2.4 million atoms [<xref ref-type="bibr" rid="pcbi.1005575.ref002">2</xref>] (<xref ref-type="fig" rid="pcbi.1005575.g001">Fig 1A</xref>). In addition to a growing number of depositions per year (<xref ref-type="fig" rid="pcbi.1005575.g001">Fig 1B</xref>) and average number of atoms per structure (<xref ref-type="fig" rid="pcbi.1005575.g001">Fig 1C</xref>), 68 of the 100 largest structures were deposited in the past three years. In <xref ref-type="fig" rid="pcbi.1005575.g001">Fig 1D</xref>, we show the rising importance of Cryo-Electron microscopy as a technique [<xref ref-type="bibr" rid="pcbi.1005575.ref003">3</xref>]. It is expected that much larger molecular machines and molecular assemblies will be modeled by combining multiple experimental techniques [<xref ref-type="bibr" rid="pcbi.1005575.ref004">4</xref>].</p>
<fig id="pcbi.1005575.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g001</object-id>
<label>Fig 1</label>
<caption>
<title>Growth of the Protein Data Bank archive.</title>
<p>(A) The currently largest asymmetric structure in the PDB—the HIV Capsid (PDB ID 3J3Q) contains over 2.4 million atoms. (B) The number of depositions per year (obsoleted or superseded entries are excluded). (C) The average structure size (asymmetric unit size for crystallographic structures). (D) Electron microscopy structures are contributing ~10 million atoms per year for the past 3 years (1% of the archive).</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g001" xlink:type="simple"/>
</fig>
<p>Significant increases in data sizes have been seen in many fields. Efficient storage and transmission of data using novel file formats and data compression methods are integral to these development, e.g., for the transport of HD-TV, video, and audio. A similar trend has emerged in the handling of whole genome data [<xref ref-type="bibr" rid="pcbi.1005575.ref005">5</xref>].</p>
<p>Few notable developments have been made in developing such a format for macromolecules. First, WPDB [<xref ref-type="bibr" rid="pcbi.1005575.ref006">6</xref>] stored the data as binary files with limited precision, allowing efficient access. WPDB is however no longer maintained and was tied to the Windows operating system. The second development is mmJSON [<xref ref-type="bibr" rid="pcbi.1005575.ref007">7</xref>], which represents all data from the PDBx/mmCIF format (<ext-link ext-link-type="uri" xlink:href="http://mmcif.wwpdb.org/" xlink:type="simple">http://mmcif.wwpdb.org/</ext-link>) in the JSON serialization format that can be efficiently parsed by modern web browsers. After compression with gzip (a commonly used general purpose compression tool) the largest structure (PDB ID 3J3Q) takes up 27 MB in mmJSON. In addition, a “lite” version of mmJSON is available that contains a minimal amount of information to render backbone structures (3.3 MB for PDB ID 3J3Q). Neither WPDB, mmJSON, nor other formats such as PDBx/mmCIF, provide all data necessary to represent a full macromolecular model including bond information. Furthermore, as text based formats, they are slow to parse, and clean Application Programming Interfaces (APIs) are generally not made available.</p>
<p>Commercial software providers have produced their own internal representations of macromolecular structures. No such format, however, is openly available and thus they cannot be incorporated into third party software or developed with community involvement. For this reason, structural analysis is currently a laborious and error-prone process, often involving substantial duplicated effort to reliably process the entire PDB archive into a 3rd party data structure. Structure visualization can be equally challenging for large structures, due to slow data download and high client-side memory requirements to parse large structure files. Some of the largest structures in the PDB require more memory than is typically available within in web browser.</p>
<p>In this paper we describe a new data representation, the <bold>M</bold>acro<bold>M</bold>olecular <bold>T</bold>ransmission <bold>F</bold>ormat (MMTF) (<ext-link ext-link-type="uri" xlink:href="http://mmtf.rcsb.org/" xlink:type="simple">http://mmtf.rcsb.org/</ext-link>) that aims to resolve these deficiencies. MMTF is a binary machine-readable file format that can be parsed, in some instances at least an order of magnitude faster than existing text-based formats. Custom lossless and lossy compression methods with either full atom level detail and a reduced representation (C-alpha, P atoms) are applied [<xref ref-type="bibr" rid="pcbi.1005575.ref008">8</xref>] to reduce the file size and thus further improve transmission and parsing speeds. MMTF uses a combination of encoding and compression techniques, such as delta encoding, and reduced precision for lossy compression, which have also been used for MD trajectory compression [<xref ref-type="bibr" rid="pcbi.1005575.ref009">9</xref>–<xref ref-type="bibr" rid="pcbi.1005575.ref011">11</xref>]. Finally, MMTF is designed for interoperability and use by a broad community. APIs are provided in common programming languages and a full chemical description required to understand a structure is included in the file. The PDB archive is provided in MMTF format through web services and updated weekly. A number of third-party tools already support MMTF.</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Design and implementation</title>
<sec id="sec003">
<title>Design considerations</title>
<p>Above we demonstrated that existing file formats are becoming less suitable for modern macromolecular data. Due to these challenges, the MMTF format was designed with three core aims. First, to minimize data storage requirements and transfer times, the format should represent data in compressed form without loss of accuracy. Second, it should be fast to parse, since I/O is often a bottleneck in structural analysis and visualization. Third, we designed MMTF to be as extensible, self-contained, and interoperable as possible. As a binary, machine-readable format, the preferred access to MMTF data is through the APIs provided in several programming languages. This allows the developers to focus on scientific applications and not on developing custom file parsers.</p>
</sec>
<sec id="sec004">
<title>Data items and encoding</title>
<p>The MMTF format was designed to include the core data commonly used by macromolecular visualization and analysis tools (<xref ref-type="table" rid="pcbi.1005575.t001">Table 1</xref>), rather than support all metadata available in PDBx/mmCIF. A comprehensive list of the data items is available in the MMTF specification. Additional metadata present in PDBx/mmCIF files and other annotations, if required, can be accessed through web services [<xref ref-type="bibr" rid="pcbi.1005575.ref012">12</xref>][<xref ref-type="bibr" rid="pcbi.1005575.ref013">13</xref>][<xref ref-type="bibr" rid="pcbi.1005575.ref014">14</xref>].</p>
<table-wrap id="pcbi.1005575.t001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.t001</object-id>
<label>Table 1</label> <caption><title>Data categories described in MMTF format.</title></caption>
<alternatives>
<graphic id="pcbi.1005575.t001g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.t001" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left">Data Category</th>
<th align="left">Data Items</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Metadata</td>
<td align="left">PDB ID, title, deposition date, release date, experimental method(s)</td>
</tr>
<tr>
<td align="left">Crystallographic info</td>
<td align="left">Space group, unit cell, NCS operators, resolution, R<sub>free</sub>, R<sub>work</sub></td>
</tr>
<tr>
<td align="left">Primary structure</td>
<td align="left">Polymer sequences</td>
</tr>
<tr>
<td align="left">Secondary structure</td>
<td align="left">DSSP secondary structure assignments<xref ref-type="table-fn" rid="t001fn001">*</xref></td>
</tr>
<tr>
<td align="left">Structural model</td>
<td align="left">Models, chains, groups (residues), atoms, bonds<xref ref-type="table-fn" rid="t001fn001">*</xref> and bond orders<xref ref-type="table-fn" rid="t001fn001">*</xref></td>
</tr>
<tr>
<td align="left">Quaternary structure</td>
<td align="left">Biological assembly transformations</td>
</tr>
</tbody>
</table>
</alternatives>
<table-wrap-foot>
<fn id="t001fn001"><p>* These data items are not available in the PDBx/mmCIF files and are added to MMTF files.</p></fn>
</table-wrap-foot>
</table-wrap>
<p>MMTF files have been augmented with calculated DSSP [<xref ref-type="bibr" rid="pcbi.1005575.ref015">15</xref>] secondary structure using the BioJava implementation [<xref ref-type="bibr" rid="pcbi.1005575.ref016">16</xref>]. This information speeds up both visualization and analysis applications and ensures data consistency across all structures in the PDB archive. MMTF includes the full chemical description of all molecules in a PDB entry. Bonds and bond orders for both standard and non-standard residues, e.g., ligands, are included from the Chemical Component Dictionary [<xref ref-type="bibr" rid="pcbi.1005575.ref017">17</xref>] and additional covalent bonds (struct_conn category in the PDBx/mmCIF files), such as disulfide bonds or covalent bonds between ligands and polymers are also included in MMTF. Metal coordination and hydrogen bond information is not included in MMTF, since there are no generally agreed upon standards how to define them. <xref ref-type="fig" rid="pcbi.1005575.g002">Fig 2</xref> describes the creation of an MMTF file from a PDBx/mmCIF archive file.</p>
<fig id="pcbi.1005575.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Steps in the creation of a MMTF file from a PDBx/mmCIF file.</title>
<p>After parsing a PDBx/mmCIF file, DSSP secondary structure is calculated and bond information is added for all residues. Custom encoding strategies are applied to the different data categories to achieve a compact representation. These data are serialized in binary form and then further compressed with standard compression tools to create a compressed MMTF file.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g002" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec005">
<title>Encoding strategies</title>
<p>In order to reduce the overall file size, we applied specialized encoding techniques to make the data more compressible. These techniques either reduce redundancy in the data or reduce the dynamic range (entropy) of numbers, to make them more compressible using standard entropy encoding techniques.</p>
<p>Fields of the same type are grouped together in MMTF to create a flat data structure. For instance, the coordinates of all atoms are stored together, instead of in atom objects with other atom-related data. This avoids imposing a deeply nested hierarchical structure on consuming programs, while still allowing efficient traversal of models, chains, groups, and atoms. This approach represents a columnar encoding [<xref ref-type="bibr" rid="pcbi.1005575.ref018">18</xref>] of data, which facilitates data encoding and enhances data compressibility. Columnar encoding is also used in mmJSON [<xref ref-type="bibr" rid="pcbi.1005575.ref007">7</xref>] to increase compressibility.</p>
<p>Lossless integer encoding is applied to all fixed precision floating point numbers. Integer numbers have a simpler bitwise representation and are therefore more compressible than the equivalent floating-point numbers [<xref ref-type="bibr" rid="pcbi.1005575.ref008">8</xref>]. Atomic coordinates are typically represented with a precision of 3 decimal places, and temperature factors with 2 decimal places. For lossless encoding, we multiply coordinate and temperature factor values by 1000 and 100, respectively, and round the values to the nearest integer.</p>
<p>A further increase in compression can be obtained through lossy encoding by rounding coordinates to 0.1 Å precision and temperature factors and occupancy to 0.1 precision. Lossy compression is particularly important for the visualization of large complexes, for which the reduced precision is not visually perceptible [<xref ref-type="bibr" rid="pcbi.1005575.ref006">6</xref>,<xref ref-type="bibr" rid="pcbi.1005575.ref008">8</xref>].</p>
<p>Dictionary encoding is used for data repeated across multiple residues. In standard PDB and PDBx/mmCIF files, atoms within a residue are listed in a standard order. Exploiting this, atom name, element symbol, intra residue bonds and bond orders, etc. can be stored once for each unique residue type and not repeated across the file, as shown for the dictionary entry for serine (<xref ref-type="fig" rid="pcbi.1005575.g003">Fig 3</xref>). MMTF has been designed to handle exceptions to a consistent atom order, if they occur, however, the encoding will be less efficient.</p>
<fig id="pcbi.1005575.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Dictionary entry for amino acid serine.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g003" xlink:type="simple"/>
</fig>
<p>Delta encoding is applied to data of large magnitude that change in small increments. For example, instead of storing absolute atom coordinate values, differences in the x, y, and z coordinates are stored. Due to the covalent bond structure in molecules, these differences typically lie within a small dynamic range bound by their bond distances. Previous work determined this method to be the most effective encoding technique [<xref ref-type="bibr" rid="pcbi.1005575.ref008">8</xref>]. Temperature factors are also delta encoded, since their variation from residue to residue is typically low.</p>
<p>Run-length encoding compresses a list of repeated values, such as occupancy values in X-ray structures, most of which are constant (1.0). Here the value itself and the number of repetitions is stored. For atom serial numbers, delta and run-length encoding are combined to achieve a very compact encoding.</p>
<p>Recursive indexing—Given the small dynamic range of delta encoded coordinates, most, but not all values can be represented as 16-bit signed integers, rather than 32-bit signed integers. We have explored the effect of packing on compression [<xref ref-type="bibr" rid="pcbi.1005575.ref008">8</xref>] and identified recursive indexing as a simple and effective packing strategy for this data type. Any values that lie outside the 16-bit integer range [–32,768, 32,767] are decomposed into a series of values, such that the individual values fit into the 16-bit range (<xref ref-type="fig" rid="pcbi.1005575.g004">Fig 4D</xref>), and their sum adds up to the original value.</p>
<fig id="pcbi.1005575.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Workflow for encoding columnar data within MMTF.</title>
<p>(A) Columnar data are first converted to integer arrays. Depending on the type of the values in the array, three types of custom encoding are applied to: 1. Repeated values, 2. Sequential values, 3. Small differences between adjacent values. All encoded values are finally encoded as a byte array. (B) Example of encoding 2,000 occupancy values by integer encoding (x100) followed by run-length encoding. (C) Example of encoding 2000 atom serial numbers by applying delta and run-length encoding. (D) Example of encoding atom coordinate values by integer encoding (x1,000), delta encoding, and recursive index encoding into a 16 bit signed integer array. Here, the value 32,867 exceeds the maximum value (32,767) for a 16-bit signed integer. Therefore, recursive index encoding decomposes this value into two numbers 32,767 and 100 that sum up to the original value. All subsequent values are within range and are represented directly by their values 2,001, and 1,053.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g004" xlink:type="simple"/>
</fig>
<p>The overall workflow for the encoding of columnar data is shown in <xref ref-type="fig" rid="pcbi.1005575.g004">Fig 4</xref>.</p>
</sec>
<sec id="sec006">
<title>Serialization</title>
<p>MMTF data are stored in the MessagePack format (version 5, <ext-link ext-link-type="uri" xlink:href="http://msgpack.org/" xlink:type="simple">http://msgpack.org</ext-link>) binary container format. MessagePack is an efficient binary serialization format, similar to JSON, but faster to parse and more compact. Encoding and decoding libraries for MessagePack are available in many languages. The top-level of the container holds the field names as keys and field data as values. Non-columnar data are described using standard MessagePack data types. Columnar data, e.g., most data columns in the “ATOM” records, are custom encoded. The MMTF specification defines Codec Types used to custom encode columnar data. These data records are described by the following data structure (<xref ref-type="fig" rid="pcbi.1005575.g005">Fig 5</xref>), which is represented as a binary array in MessagePack.</p>
<fig id="pcbi.1005575.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Data structure of custom encoded record in MMTF.</title>
<p>A Codec Type describes the columnar encoding strategy. A Codec may describe the combination of several encoding strategies. For example, coordinate data are encoded by a Codec that combines integer encoding, delta encoding, recursive index encoding. Data Length represents the number of values that have been encoded, and here the Codec Parameter for coordinate encoding is a divisor to convert integers to floating point numbers.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g005" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec007">
<title>MMTF data files</title>
<p>MMTF files for all PDB entries are updated weekly as part of the RCSB PDB weekly update pipeline. Semantic versioning (<ext-link ext-link-type="uri" xlink:href="http://semver.org/" xlink:type="simple">http://semver.org</ext-link>) is employed to the file specification and the APIs. Major version changes of the specification may require code updates to decode and parse data. For this reason, after the release of a new major version of the specification, the previous major version will be retained for a number of months to allow time for code updates and testing. Such version changes will be disseminated through a mailing list and updates to the documentation.</p>
<p>MMTF files are generated with two types of molecular representation (<xref ref-type="table" rid="pcbi.1005575.t002">Table 2</xref>). The reduced representation, which uses lossy compression and less atomic level detail is suitable for 3D visualization, e.g., ribbon diagrams, or calculations that require only a C-alpha representation.</p>
<table-wrap id="pcbi.1005575.t002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.t002</object-id>
<label>Table 2</label> <caption><title>MMTF file types.</title></caption>
<alternatives>
<graphic id="pcbi.1005575.t002g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.t002" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left">Type</th>
<th align="left">Representation</th>
<th align="left">Coordinate precision (Å)</th>
<th align="left">Temperature factor (Å<sup>2</sup>) and<break/>Occupancy precision</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">full</td>
<td align="left">all atoms</td>
<td align="left">0.001</td>
<td align="left">0.01</td>
</tr>
<tr>
<td align="left">reduced</td>
<td align="left">C-alpha (polypeptide),<break/>P (polynucleotide),<break/>all atoms (non-polymers)</td>
<td align="left">0.1</td>
<td align="left">0.1</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
</sec>
<sec id="sec008">
<title>MMTF application programming interface</title>
<p>MMTF files are accessible through RESTful web services via HTTP and HTTPS protocols, or downloadable as individual gzipped files (<ext-link ext-link-type="uri" xlink:href="http://mmtf.rcsb.org/download.html" xlink:type="simple">http://mmtf.rcsb.org/download.html</ext-link>). A weekly update procedure ensures the availability of the latest structures, as provided by the wwPDB. For large-scale analysis of the PDB archive, where loading of thousands of individual files is inefficient, a single Hadoop Sequence file (<ext-link ext-link-type="uri" xlink:href="https://wiki.apache.org/hadoop/SequenceFile" xlink:type="simple">https://wiki.apache.org/hadoop/SequenceFile</ext-link>) is provided. These files can be efficiently processed in parallel by Big Data frameworks such as Apache Hadoop (<ext-link ext-link-type="uri" xlink:href="http://hadoop.apache.org/" xlink:type="simple">http://hadoop.apache.org/</ext-link>) or Apache Spark (<ext-link ext-link-type="uri" xlink:href="http://spark.apache.org/" xlink:type="simple">http://spark.apache.org/</ext-link>).</p>
<p>The preferred access to MMTF data is via the provided decoder APIs, which are available through open source GitHub repositories. API documentation and example code are available from the MMTF project page (<ext-link ext-link-type="uri" xlink:href="http://mmtf.rcsb.org/" xlink:type="simple">http://mmtf.rcsb.org/</ext-link>). <xref ref-type="fig" rid="pcbi.1005575.g006">Fig 6</xref> shows the integration of third-party applications and software libraries with the MMTF APIs.</p>
<fig id="pcbi.1005575.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Third party software integration through MMTF APIs and web services.</title>
<p>The PDB archive can be accessed in MMTF format through RESTful web services. APIs available in common programming languages provide efficient access to the MMTF data. Third party applications then access the data through the language-specific APIs.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g006" xlink:type="simple"/>
</fig>
</sec>
</sec>
<sec id="sec009" sec-type="results">
<title>Results</title>
<p>The benefits of the MMTF file format were assessed in three different ways. First, the relative sizes of the files in different formats were measured. Second, the file load time was benchmarked in Python, JavaScript, and Java. Third, the simplicity of using the new format is demonstrated.</p>
<sec id="sec010">
<title>File size comparison</title>
<p>In <xref ref-type="fig" rid="pcbi.1005575.g007">Fig 7</xref> we compare the size of the PDB archive in PDBx/mmCIF, PDB, and MMTF file formats. In the MMTF file format the PDB archive can be stored in about 8 GB, making it less than 1/4 the size of the PDBx/mmCIF files and 1/3 the size of the PDB files. In practice, being stored in about 8 GB also means the entire archive can be stored in RAM on many standard desktop and laptop computers.</p>
<fig id="pcbi.1005575.g007" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g007</object-id>
<label>Fig 7</label>
<caption>
<title>Comparison of the gzipped file sizes for the PDB archive (~127,000 entries) in PDBx/mmCIF, PDB, and MMTF formats as of March 2017.</title>
<p>About 500 large structures (&gt; 99,999 atoms or &gt; 62 chains) cannot be represented in the PDB format, however, they are available as split PDB files (.tar.gz files) and take up about 2.7 GB, which is included in the reported PDB file size. For MMTF, we report the size of the all atom representation (MMTF-full) and the reduced representation (MMTF-reduced).</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g007" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec011">
<title>Load time benchmarks</title>
<p>The following benchmarks assess the file load time for MMTF compared to PDBx/mmCIF and PDB data formats. The load times reported in the figures below consist of reading the files from a local disk, decompressing and parsing the data, instantiating a hierarchical molecular data structure (model-&gt;chain-&gt;residue-&gt;atom), and storing the metadata. All parsing benchmarks were performed using a single core on a MacMini, 2.6 GHz Intel Core i5, 16 GB RAM 1600 MHz DDR3, with a solid state drive.</p>
<p>The first benchmark uses the existing file parsers (PDBx/mmCIF, PDB) in BioJava and compares their performance with the new BioJava MMTF parser, which uses the MMTF-Java API. In <xref ref-type="fig" rid="pcbi.1005575.g008">Fig 8</xref> we compare the load times for ~127,000 PDB entries as individual gzip compressed PDBx/mmCIF, PDB, and MMTF files, and as uncompressed Hadoop Sequence files.</p>
<fig id="pcbi.1005575.g008" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g008</object-id>
<label>Fig 8</label>
<caption>
<title>Comparison of BioJava load time for the PDB archive using different file formats.</title>
<p>Load time for the PDB archive (~127,000) entries using the gzip compressed PDBx/mmCIF, PDB, and MMTF formats. For MMTF, we report the load time for individual gzipped files, as well as, the load time for uncompressed Hadoop Sequence Files containing MMTF records in the full (all atom, MMTF-full) and the reduced format (MMTF-reduced). For PDB file loading, about 500 large structures that cannot be represented in the PDB format (&gt;99,999 atom, &gt; 62 chains) were excluded.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g008" xlink:type="simple"/>
</fig>
<p>Next, we compared the load time of implementations in different programming languages. We benchmarked three commonly used software libraries: BioPython [<xref ref-type="bibr" rid="pcbi.1005575.ref019">19</xref>] (<ext-link ext-link-type="uri" xlink:href="http://biopython.org/" xlink:type="simple">http://biopython.org/</ext-link>), NGL Viewer [<xref ref-type="bibr" rid="pcbi.1005575.ref020">20</xref>] (<ext-link ext-link-type="uri" xlink:href="https://github.com/arose/ngl" xlink:type="simple">https://github.com/arose/ngl</ext-link>), and BioJava [<xref ref-type="bibr" rid="pcbi.1005575.ref021">21</xref>] (<ext-link ext-link-type="uri" xlink:href="http://biojava.org/" xlink:type="simple">http://biojava.org/</ext-link>) written in Python, JavaScript, and Java, respectively. A benchmark set of 1,000 randomly selected PDB entries was used for the assessment (<xref ref-type="supplementary-material" rid="pcbi.1005575.s001">S1 Table</xref>) (<xref ref-type="fig" rid="pcbi.1005575.g009">Fig 9</xref>).</p>
<fig id="pcbi.1005575.g009" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g009</object-id>
<label>Fig 9</label>
<caption>
<title>Comparison of the average load times for different file formats using three software libraries in three programming languages on a set of 1000 random PDB entries.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g009" xlink:type="simple"/>
</fig>
<p>The MMTF format has clear advantages over PDBx/mmCIF and PDB. For BioPython, MMTF is parsed about 4 times faster than PDBx/mmCIF using the FastMMCIFParser (353 seconds), and about 30 times faster compared to the default MMCIFParser (2650 seconds), which creates a more complete data model. For NGL (JavaScript), MMTF loading is about 18 times faster than PDBx/mmCIF. For BioJava, loading MMTF files is about 45 times faster than loading the corresponding PDBx/mmCIF files.</p>
<p>To assess the effect of structure size on load time (<xref ref-type="fig" rid="pcbi.1005575.g010">Fig 10</xref>), we created samples of 100 structures around the 25 percentile (<xref ref-type="supplementary-material" rid="pcbi.1005575.s002">S2 Table</xref>), 50 percentile (<xref ref-type="supplementary-material" rid="pcbi.1005575.s003">S3 Table</xref>), and 75 percentile (<xref ref-type="supplementary-material" rid="pcbi.1005575.s004">S4 Table</xref>) from the atom size distribution of the PDB archive. To create these subsets, we selected 100 structures symmetrically around the quartile values. <xref ref-type="supplementary-material" rid="pcbi.1005575.s005">S1 Appendix</xref> contains links to the software repositories to run the BioPython and BioJava benchmarks.</p>
<fig id="pcbi.1005575.g010" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g010</object-id>
<label>Fig 10</label>
<caption>
<title>Comparison of the average load times per structure using the MMTF format for three structure sizes.</title>
<p>The benchmarks contain 100 structures each around the 25, 50 and 75 percentile of the PDB size distribution: Q25 (2,309–2,313 atoms), Q50 (4,054–4,063 atoms), Q75 (7,862–7,885 atoms).</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g010" xlink:type="simple"/>
</fig>
<p>According to this benchmark, most small to medium sized PDB structures can be parsed in milliseconds using the BioJava/MMTF-Java API and NGL/MMTF-JavaScript API. The load time is approximately linear with the number of atoms in a PDB entry. MMTF file loading with BioPython is consistently about a factor of 40–50 slower than with BioJava. This is due in part that Python is an interpreted language. Our profiling points to the creation of the hierarchical molecular data structure as the time limiting factor for BioPython.</p>
<p>MMTF was specifically designed to handle the efficient transfer and visualization of very large structures that could not be parsed and visualized using the PDBx/mmCIF format due to the large memory overhead. For example, the currently largest asymmetric structure (PDB ID 3J3Q) in the PDB with 2,440,800 atoms, shown in <xref ref-type="fig" rid="pcbi.1005575.g001">Fig 1A</xref>, was rendered with NGL viewer using the MMTF-reduced format. <xref ref-type="table" rid="pcbi.1005575.t003">Table 3</xref> compares the load times for this entry using BioPython, NGL, and BioJava.</p>
<table-wrap id="pcbi.1005575.t003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.t003</object-id>
<label>Table 3</label> <caption><title>Average load time for large PDB entry 3J3Q with about 2.4 million atoms.</title></caption>
<alternatives>
<graphic id="pcbi.1005575.t003g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.t003" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left" rowspan="2">Library</th>
<th align="left">Load Time (seconds)</th>
<th align="left">Load Time (seconds)</th>
<th align="left">Load Time (seconds)</th>
</tr>
<tr>
<th align="left">PDBx/mmCIF (50.1 MB)</th>
<th align="left">MMTF-full (14.1 MB)</th>
<th align="left">MMTF-reduced (1.0 MB)</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">BioPython</td>
<td align="left">164.7</td>
<td align="left">59.7</td>
<td align="left">11.8</td>
</tr>
<tr>
<td align="left">NGL (JavaScript)</td>
<td align="left">26.0</td>
<td align="left">0.9</td>
<td align="left">0.3</td>
</tr>
<tr>
<td align="left">BioJava</td>
<td align="left">52.1</td>
<td align="left">2.2</td>
<td align="left">0.4</td>
</tr>
</tbody>
</table>
</alternatives>
<table-wrap-foot>
<fn id="t003fn001"><p>Average load time (100 repeats) for the gzip compressed PDBx/mmCIF and MMTF files from a local file system. MMTF-full represents the all atom model and MMTF-reduced represents the C-alpha only model.</p></fn>
</table-wrap-foot>
</table-wrap>
</sec>
<sec id="sec012">
<title>Simple application programming interfaces</title>
<p>The MMTF file format is designed to be easy to use and incorporate into 3rd party applications. While MMTF has a flat, columnar data structure, it can be traversed following the structure hierarchy: Models -&gt; Chains -&gt; Groups -&gt; Atoms. In <xref ref-type="fig" rid="pcbi.1005575.g011">Fig 11</xref>, we demonstrate the simplicity in retrieving data using the Java, JavaScript and Python APIs.</p>
<fig id="pcbi.1005575.g011" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g011</object-id>
<label>Fig 11</label>
<caption>
<title>Traversal of the structure hierarchy using the MMTF API.</title>
<p>These code snippets (A) Java, (B) JavaScript, and (C) Python demonstrate how to load and decode an MMTF file (PDB ID 4CUP) from <ext-link ext-link-type="uri" xlink:href="http://mmtf.rcsb.org/" xlink:type="simple">http://mmtf.rcsb.org</ext-link> and then traverse the hierarchical data structure (Models -&gt; Chains -&gt; Groups -&gt; Atoms). The code shown here loops through the Model and Chain hierarchy. For each model, the model index is printed, and for each chain, the chainId, chainName, and number of groups (residues) are printed. In an analogous fashion, the group and atom data can be traversed.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g011" xlink:type="simple"/>
</fig>
</sec>
</sec>
<sec id="sec013">
<title>Availability and future directions</title>
<p>In this paper we present a modern macromolecular transmission format. MMTF addresses the growing size and complexity of macromolecular structures in the PDB archive through a new binary, custom compressed file format. Furthermore, MMTF is self-contained and simple APIs are provided in multiple popular programming languages. Software developers do not need to implement their own parsers—often an error-prone process, but rather build on the tools provided by MMTF. Through both these advances MMTF allows rapid user-friendly access to any structure in the PDB archive with a few lines of code. We demonstrate that the format is 75% smaller, an order of magnitude faster to parse, and is provided along with a user friendly API that promotes interoperability.</p>
<p>The MMTF project page (<ext-link ext-link-type="uri" xlink:href="http://mmtf.rcsb.org/" xlink:type="simple">http://mmtf.rcsb.org</ext-link>) is the entry point to all documentation and software, including the MMTF specification, links to GitHub repositories of the MMTF APIs (Java, JavaScript, Python, C, and C++), and API descriptions. The versioned specification and all software libraries are available under either an Apache 2 or MIT license. A description how to download MMTF files is also available. A “Try it” feature demonstrates the transfer and parsing performance of MMTF-JavaScript in a web browser, and a “See it in Action” page demonstrates the fast data transfer, parsing, and rendering in NGL viewer [<xref ref-type="bibr" rid="pcbi.1005575.ref020">20</xref>].</p>
<p>Due to simple API, user-friendly specification and licensing model, the format has already been incorporated into several protein analysis tools and 3D structure visualization tools (<xref ref-type="table" rid="pcbi.1005575.t004">Table 4</xref>).</p>
<table-wrap id="pcbi.1005575.t004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.t004</object-id>
<label>Table 4</label> <caption><title>Applications that support the MMTF file format.</title></caption>
<alternatives>
<graphic id="pcbi.1005575.t004g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.t004" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left">Application</th>
<th align="left">Link</th>
<th align="left">Reference</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">3DMol.js</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="http://3dmol.csb.pitt.edu/" xlink:type="simple">http://3dmol.csb.pitt.edu/</ext-link></td>
<td align="left">[<xref ref-type="bibr" rid="pcbi.1005575.ref022">22</xref>]</td>
</tr>
<tr>
<td align="left">BioJava</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="http://biojava.org/" xlink:type="simple">http://biojava.org/</ext-link></td>
<td align="left">[<xref ref-type="bibr" rid="pcbi.1005575.ref021">21</xref>]</td>
</tr>
<tr>
<td align="left">BioPython</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="http://biopython.org/" xlink:type="simple">http://biopython.org/</ext-link></td>
<td align="left">[<xref ref-type="bibr" rid="pcbi.1005575.ref019">19</xref>]</td>
</tr>
<tr>
<td align="left">ICM</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="http://www.molsoft.com/icm_browser.html" xlink:type="simple">http://www.molsoft.com/icm_browser.html</ext-link></td>
<td align="left"/>
</tr>
<tr>
<td align="left">iCn3D</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/Structure/icn3d/icn3d.html" xlink:type="simple">https://www.ncbi.nlm.nih.gov/Structure/icn3d/icn3d.html</ext-link></td>
<td align="left">[<xref ref-type="bibr" rid="pcbi.1005575.ref023">23</xref>]</td>
</tr>
<tr>
<td align="left">JSmol/Jmol</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="http://www.jmol.org/" xlink:type="simple">http://www.jmol.org/</ext-link></td>
<td align="left"/>
</tr>
<tr>
<td align="left">MDAnalysis</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="http://www.mdanalysis.org/" xlink:type="simple">http://www.mdanalysis.org/</ext-link></td>
<td align="left"/>
</tr>
<tr>
<td align="left">NGL</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="https://github.com/arose/ngl" xlink:type="simple">https://github.com/arose/ngl</ext-link></td>
<td align="left">[<xref ref-type="bibr" rid="pcbi.1005575.ref020">20</xref>]</td>
</tr>
<tr>
<td align="left">PyMol</td>
<td align="left"><ext-link ext-link-type="uri" xlink:href="https://www.pymol.org/" xlink:type="simple">https://www.pymol.org/</ext-link></td>
<td align="left"/>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>We envisage the above advances will have a major impact in two areas of structural bioinformatics (<xref ref-type="fig" rid="pcbi.1005575.g012">Fig 12</xref>).</p>
<fig id="pcbi.1005575.g012" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005575.g012</object-id>
<label>Fig 12</label>
<caption>
<title>Main applications of the MMTF file format.</title>
<p>(A) MMTF enables fast transfer, parsing, and low client side overhead for high-performance visualization in web-based viewers and in particular mobile devices. (B) MMTF can be represented in “Big Data” formats and the small size enables high-performance, in-memory analysis and calculations of the entire PDB archive using Big Data frameworks for parallel processing.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.g012" xlink:type="simple"/>
</fig>
<p>The first key area of impact is visualization of macromolecular structures, in particular when used on mobile device or in a web browser. MMTF enables low bandwidth file transfer, low client-side memory consumption, and fast parsing of PDB structures. For example, the 3D visualization on the RCSB PDB website is powered by MMTF [<xref ref-type="bibr" rid="pcbi.1005575.ref024">24</xref>], using the MMTF-full representation for entries &lt; 10,000 residues and the MMTF-reduced representation for larger entries. Using the NGL viewer [<xref ref-type="bibr" rid="pcbi.1005575.ref020">20</xref>] and MMTF, the currently largest structure in the PDB, the HIV viral capsid (PDB ID 3J3Q) [<xref ref-type="bibr" rid="pcbi.1005575.ref002">2</xref>], can now be visualized on a mobile device (<xref ref-type="fig" rid="pcbi.1005575.g001">Fig 1A</xref>).</p>
<p>Second, by greatly increasing file-parsing speed, a rapid analysis of the entire PDB archive can be carried out. As an example, we have used the MMTF format to rapidly mine the PDB for interatomic distance distributions. Coupled with the use of an efficient geometric hashing algorithm in BioJava, the distances between all C-alpha carbons can be calculated in minutes. Parsing of the text-based PDBx/mmCIF format alone would take several hours. Using a Hadoop Sequence file with MMTF records enables the scalable analysis of the PDB using standard distributed parallel processing frameworks. Further work is ongoing to demonstrate the use of MMTF with Big Data frameworks.</p>
<p>MMTF is an open source project and we welcome additions and new applications that use the new technology. As an example, the MMTF-C and MMTF-C++ decoders were developed in collaboration with community members.</p>
</sec>
<sec id="sec014">
<title>Supporting information</title>
<supplementary-material id="pcbi.1005575.s001" mimetype="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.s001" xlink:type="simple">
<label>S1 Table</label>
<caption>
<title>Benchmark set of 1000 randomly selected PDB entries.</title>
<p>(XLSX)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005575.s002" mimetype="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.s002" xlink:type="simple">
<label>S2 Table</label>
<caption>
<title>Benchmark set Q25.</title>
<p>100 PDB entries symmetrically selected around the 25 percentile of the PDB atom size distribution (2,309–2,313 atoms).</p>
<p>(XLSX)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005575.s003" mimetype="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.s003" xlink:type="simple">
<label>S3 Table</label>
<caption>
<title>Benchmark set Q50.</title>
<p>100 PDB entries symmetrically selected around the 50 percentile of the PDB atom size distribution (4,054–4,063 atoms).</p>
<p>(XLSX)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005575.s004" mimetype="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.s004" xlink:type="simple">
<label>S4 Table</label>
<caption>
<title>Benchmark set Q75.</title>
<p>100 PDB entries symmetrically selected around the 75 percentile of the PDB atom size distribution (7,862–7,885 atoms).</p>
<p>(XLSX)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005575.s005" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005575.s005" xlink:type="simple">
<label>S1 Appendix</label>
<caption>
<title>Software and documentation.</title>
<p>Links to software repositories, documentation, and benchmarks.</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ack>
<p>We thank Robert Hanson, Thomas Holder, and David Koes for their feedback on the MMTF specification and API. We thank Thomas Holder, Julien Ferté, Gazal Kalyan for developing the MMTF-C decoding library and Gerardo Tauriello, Stefan Bienert, Gabriel Studer, and Andrew Waterhouse for developing the MMTF-C++ decoding library. Robert Hanson provided efficient Java code for decoding of MessagePack. We also thank all users who helped with MMTF file transfer benchmarks worldwide, and Shih-Cheng Huang for performing the BioPython benchmarks. We thank Ezra Peisach for help with data validation, and Cole Christie and Chris Randle for setting up the weekly update process and data download for MMTF files.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1005575.ref001"><label>1</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Berman</surname> <given-names>HM</given-names></name>. <article-title>The Protein Data Bank</article-title>. <source>Nucleic Acids Res</source>. <year>2000</year>;<volume>28</volume>: <fpage>235</fpage>–<lpage>242</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/28.1.235" xlink:type="simple">10.1093/nar/28.1.235</ext-link></comment> <object-id pub-id-type="pmid">10592235</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref002"><label>2</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Zhao</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Perilla</surname> <given-names>JR</given-names></name>, <name name-style="western"><surname>Yufenyuy</surname> <given-names>EL</given-names></name>, <name name-style="western"><surname>Meng</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Chen</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Ning</surname> <given-names>J</given-names></name>, <etal>et al</etal>. <article-title>Mature HIV-1 capsid structure by cryo-electron microscopy and all-atom molecular dynamics</article-title>. <source>Nature</source>. <year>2013</year>;<volume>497</volume>: <fpage>643</fpage>–<lpage>6</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nature12162" xlink:type="simple">10.1038/nature12162</ext-link></comment> <object-id pub-id-type="pmid">23719463</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref003"><label>3</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Callaway</surname> <given-names>E</given-names></name>. <article-title>The revolution will not be crystallized: a new method sweeps through structural biology</article-title>. <source>Nature</source>. <year>2015</year>;<volume>525</volume>: <fpage>172</fpage>–<lpage>174</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/525172a" xlink:type="simple">10.1038/525172a</ext-link></comment> <object-id pub-id-type="pmid">26354465</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref004"><label>4</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Callaway</surname> <given-names>E</given-names></name>. <article-title>Data bank struggles as protein imaging ups its game</article-title>. <source>Nature</source>. <year>2014</year>;<volume>514</volume>: <fpage>416</fpage>–<lpage>416</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/514416a" xlink:type="simple">10.1038/514416a</ext-link></comment> <object-id pub-id-type="pmid">25341769</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref005"><label>5</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Paten</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Diekhans</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Druker</surname> <given-names>BJ</given-names></name>, <name name-style="western"><surname>Friend</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Guinney</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Gassner</surname> <given-names>N</given-names></name>, <etal>et al</etal>. <article-title>The NIH BD2K center for big data in translational genomics</article-title>. <source>J Am Med Informatics Assoc</source>. <year>2015</year>;<volume>43</volume>: <fpage>ocv047</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/jamia/ocv047" xlink:type="simple">10.1093/jamia/ocv047</ext-link></comment></mixed-citation></ref>
<ref id="pcbi.1005575.ref006"><label>6</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Shindyalov</surname> <given-names>IN</given-names></name>, <name name-style="western"><surname>Bourne</surname> <given-names>PE</given-names></name>, <collab>IUCr</collab>. <article-title><italic>WPDB</italic>–PC Windows-based interrogation of macromolecular structure</article-title>. <source>J Appl Crystallogr</source>. <year>1995</year>;<volume>28</volume>: <fpage>847</fpage>–<lpage>852</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1107/S0021889895005723" xlink:type="simple">10.1107/S0021889895005723</ext-link></comment></mixed-citation></ref>
<ref id="pcbi.1005575.ref007"><label>7</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Bekker</surname> <given-names>G-J</given-names></name>, <name name-style="western"><surname>Nakamura</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Kinjo</surname> <given-names>AR</given-names></name>. <article-title>Molmil: a molecular viewer for the PDB and beyond</article-title>. <source>J Cheminform</source>. <year>2016</year>;<volume>8</volume>: <fpage>42</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/s13321-016-0155-1" xlink:type="simple">10.1186/s13321-016-0155-1</ext-link></comment> <object-id pub-id-type="pmid">27570544</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref008"><label>8</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Valasatava</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Bradley</surname> <given-names>AR</given-names></name>, <name name-style="western"><surname>Rose</surname> <given-names>AS</given-names></name>, <name name-style="western"><surname>Duarte</surname> <given-names>JM</given-names></name>, <name name-style="western"><surname>Prlić</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Rose</surname> <given-names>PW</given-names></name>. <article-title>Towards an efficient compression of 3D coordinates of macromolecular structures</article-title>. <source>PLoS One</source>. <year>2017</year>;<volume>12</volume>: <fpage>e0174846</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pone.0174846" xlink:type="simple">10.1371/journal.pone.0174846</ext-link></comment> <object-id pub-id-type="pmid">28362865</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref009"><label>9</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lundborg</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Apostolov</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Spångberg</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Gärdenäs</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>van der Spoel</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Lindahl</surname> <given-names>E</given-names></name>. <article-title>An efficient and extensible format, library, and API for binary trajectory data from molecular simulations</article-title>. <source>J Comput Chem</source>. <year>2014</year>;<volume>35</volume>: <fpage>260</fpage>–<lpage>269</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/jcc.23495" xlink:type="simple">10.1002/jcc.23495</ext-link></comment> <object-id pub-id-type="pmid">24258850</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref010"><label>10</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Huwald</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Richter</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Dittrich</surname> <given-names>P</given-names></name>. <article-title>Compressing molecular dynamics trajectories: breaking the one-bit-per-sample barrier</article-title>. <source>J. Comput Chem</source>. <year>2016</year>; <fpage>1</fpage>–<lpage>23</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/jcc.24405" xlink:type="simple">10.1002/jcc.24405</ext-link></comment></mixed-citation></ref>
<ref id="pcbi.1005575.ref011"><label>11</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Marais</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Kenwood</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Smith</surname> <given-names>KC</given-names></name>, <name name-style="western"><surname>Kuttel</surname> <given-names>MM</given-names></name>, <name name-style="western"><surname>Gain</surname> <given-names>J</given-names></name>. <article-title>Efficient compression of molecular dynamics trajectory files</article-title>. <source>J Comput Chem</source>. <year>2012</year>;<volume>33</volume>: <fpage>2131</fpage>–<lpage>2141</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/jcc.23050" xlink:type="simple">10.1002/jcc.23050</ext-link></comment> <object-id pub-id-type="pmid">22730053</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref012"><label>12</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Rose P</surname> <given-names>W.</given-names></name>, <name name-style="western"><surname>Beran</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Bi</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Bluhm</surname> <given-names>WF</given-names></name>, <name name-style="western"><surname>Dimitropoulos</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Goodsell</surname> <given-names>DS</given-names></name>, <etal>et al</etal>. <article-title>The RCSB Protein Data Bank: Redesigned web site and web services</article-title>. <source>Nucleic Acids Res</source>. <year>2011</year>;<volume>39</volume>: <fpage>D392</fpage>–<lpage>D401</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkq1021" xlink:type="simple">10.1093/nar/gkq1021</ext-link></comment> <object-id pub-id-type="pmid">21036868</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref013"><label>13</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Velankar</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>van Ginkel</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Alhroub</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Battle</surname> <given-names>GM</given-names></name>, <name name-style="western"><surname>Berrisford</surname> <given-names>JM</given-names></name>, <name name-style="western"><surname>Conroy</surname> <given-names>MJ</given-names></name>, <etal>et al</etal>. <article-title>PDBe: improved accessibility of macromolecular structure data from PDB and EMDB</article-title>. <source>Nucleic Acids Res</source>. <year>2016</year>;<volume>44</volume>: <fpage>D385</fpage>–<lpage>D395</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkv1047" xlink:type="simple">10.1093/nar/gkv1047</ext-link></comment> <object-id pub-id-type="pmid">26476444</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref014"><label>14</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kinjo</surname> <given-names>AR</given-names></name>, <name name-style="western"><surname>Bekker</surname> <given-names>G-J</given-names></name>, <name name-style="western"><surname>Suzuki</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Tsuchiya</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Kawabata</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Ikegawa</surname> <given-names>Y</given-names></name>, <etal>et al</etal>. <article-title>Protein Data Bank Japan (PDBj): updated user interfaces, resource description framework, analysis tools for large structures</article-title>. <source>Nucleic Acids Res</source>. <year>2017</year>;<volume>45</volume>: <fpage>D282</fpage>–<lpage>D288</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkw962" xlink:type="simple">10.1093/nar/gkw962</ext-link></comment> <object-id pub-id-type="pmid">27789697</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref015"><label>15</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kabsch</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Sander</surname> <given-names>C</given-names></name>. <article-title>Dictionary of protein secondary structure: Pattern recognition of hydrogen-bonded and geometrical features</article-title>. <source>Biopolymers</source>. <year>1983</year>;<volume>22</volume>: <fpage>2577</fpage>–<lpage>2637</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/bip.360221211" xlink:type="simple">10.1002/bip.360221211</ext-link></comment> <object-id pub-id-type="pmid">6667333</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref016"><label>16</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Prlić</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Yates</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Bliven</surname> <given-names>SE</given-names></name>, <name name-style="western"><surname>Rose</surname> <given-names>PW</given-names></name>, <name name-style="western"><surname>Jacobsen</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Troshin P</surname> <given-names>V</given-names></name>., <etal>et al</etal>. <article-title>BioJava: an open-source framework for bioinformatics in 2012</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>28</volume>: <fpage>2693</fpage>–<lpage>2695</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/bts494" xlink:type="simple">10.1093/bioinformatics/bts494</ext-link></comment> <object-id pub-id-type="pmid">22877863</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref017"><label>17</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Westbrook</surname> <given-names>JD</given-names></name>, <name name-style="western"><surname>Shao</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Feng</surname> <given-names>Z</given-names></name>, <name name-style="western"><surname>Zhuravleva</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Velankar</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Young</surname> <given-names>J</given-names></name>. <article-title>The chemical component dictionary: complete descriptions of constituent molecules in experimentally determined 3D macromolecules in the Protein Data Bank</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>31</volume>: <fpage>1274</fpage>–<lpage>1278</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btu789" xlink:type="simple">10.1093/bioinformatics/btu789</ext-link></comment> <object-id pub-id-type="pmid">25540181</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref018"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Abadi DJ, Madden SR, Hachem N. Column-stores vs. Row-stores: How Different Are They Really? Proceedings of the 2008 ACM SIGMOD International Conference on Management of Data. New York, NY, USA: ACM; 2008. pp. 967–980. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1145/1376616.1376712" xlink:type="simple">10.1145/1376616.1376712</ext-link></comment></mixed-citation></ref>
<ref id="pcbi.1005575.ref019"><label>19</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Cock</surname> <given-names>PJA</given-names></name>, <name name-style="western"><surname>Antao</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Chang</surname> <given-names>JT</given-names></name>, <name name-style="western"><surname>Chapman</surname> <given-names>BA</given-names></name>, <name name-style="western"><surname>Cox</surname> <given-names>CJ</given-names></name>, <name name-style="western"><surname>Dalke</surname> <given-names>A</given-names></name>, <etal>et al</etal>. <article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>: <fpage>1422</fpage>–<lpage>1423</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btp163" xlink:type="simple">10.1093/bioinformatics/btp163</ext-link></comment> <object-id pub-id-type="pmid">19304878</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref020"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">Rose AS, Bradley AR, Valasatava Y, Duarte JM, Prlić A, Rose PW. Web-based molecular graphics for large complexes. Proceedings of the 21st International Conference on Web3D Technology—Web3D ‘16. New York, New York, USA: ACM Press; 2016. pp. 185–186. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1145/2945292.2945324" xlink:type="simple">10.1145/2945292.2945324</ext-link></comment></mixed-citation></ref>
<ref id="pcbi.1005575.ref021"><label>21</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Prlić</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Yates</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Bliven</surname> <given-names>SE</given-names></name>, <name name-style="western"><surname>Rose</surname> <given-names>PW</given-names></name>, <name name-style="western"><surname>Jacobsen</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Troshin P</surname> <given-names>V</given-names></name>., <etal>et al</etal>. <article-title>BioJava: An open-source framework for bioinformatics in 2012</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>28</volume>: <fpage>2693</fpage>–<lpage>2695</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/bts494" xlink:type="simple">10.1093/bioinformatics/bts494</ext-link></comment> <object-id pub-id-type="pmid">22877863</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref022"><label>22</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Rego</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Koes</surname> <given-names>D</given-names></name>. <article-title>3Dmol.js: molecular visualization with WebGL</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>31</volume>: <fpage>1322</fpage>–<lpage>1324</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btu829" xlink:type="simple">10.1093/bioinformatics/btu829</ext-link></comment> <object-id pub-id-type="pmid">25505090</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref023"><label>23</label><mixed-citation publication-type="journal" xlink:type="simple"><collab>NCBI Resource Coordinators</collab>. <article-title>Database Resources of the National Center for Biotechnology Information</article-title>. <source>Nucleic Acids Res</source>. <year>2017</year>;<volume>45</volume>: <fpage>D12</fpage>–<lpage>D17</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkw1071" xlink:type="simple">10.1093/nar/gkw1071</ext-link></comment> <object-id pub-id-type="pmid">27899561</object-id></mixed-citation></ref>
<ref id="pcbi.1005575.ref024"><label>24</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Rose</surname> <given-names>PW</given-names></name>, <name name-style="western"><surname>Prlić</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Altunkaya</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Bi</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Bradley</surname> <given-names>AR</given-names></name>, <name name-style="western"><surname>Christie</surname> <given-names>CH</given-names></name>, <etal>et al</etal>. <article-title>The RCSB protein data bank: integrative view of protein, gene and 3D structural information</article-title>. <source>Nucleic Acids Res</source>. <year>2017</year>;<volume>45</volume>: <fpage>D271</fpage>–<lpage>D281</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkw1000" xlink:type="simple">10.1093/nar/gkw1000</ext-link></comment> <object-id pub-id-type="pmid">27794042</object-id></mixed-citation></ref>
</ref-list>
</back>
</article>