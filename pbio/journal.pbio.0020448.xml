<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="article-commentary" dtd-version="3.0" xml:lang="EN">
  <front>
    <journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pbio</journal-id><journal-id journal-id-type="nlm-ta">PLoS Biol</journal-id><journal-id journal-id-type="pmc">plosbiol</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Biology</journal-title></journal-title-group><issn pub-type="ppub">1544-9173</issn><issn pub-type="epub">1545-7885</issn><publisher>
        <publisher-name>Public Library of Science</publisher-name>
        <publisher-loc>San Francisco, USA</publisher-loc>
      </publisher></journal-meta>
    <article-meta><article-id pub-id-type="doi">10.1371/journal.pbio.0020448</article-id><article-categories>
        <subj-group subj-group-type="heading">
          <subject>Synopsis</subject>
        </subj-group>
        <subj-group subj-group-type="Discipline">
          <subject>Biotechnology/Bioengineering</subject>
          <subject>Computational Biology</subject>
        </subj-group>
        <subj-group subj-group-type="System Taxonomy">
          <subject>In Vitro</subject>
        </subj-group>
      </article-categories><title-group><article-title>Using Biology to Create Complex Patterns</article-title><alt-title alt-title-type="running-head">Synopsis</alt-title></title-group><pub-date pub-type="ppub">
        <month>12</month>
        <year>2004</year>
      </pub-date><pub-date pub-type="epub">
        <day>7</day>
        <month>12</month>
        <year>2004</year>
      </pub-date><volume>2</volume><issue>12</issue><elocation-id>e448</elocation-id><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2004</copyright-year><copyright-holder>Public Library of Science</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><related-article page="e424" related-article-type="companion" vol="2" xlink:href="info:doi/10.1371/journal.pbio.0020424" xlink:title="research article" xlink:type="simple">
				<article-title>Algorithmic Self-Assembly of DNA Sierpinski Triangles</article-title>
			</related-article><related-article page="e431" related-article-type="companion" vol="2" xlink:href="info:doi/10.1371/journal.pbio.0020431" xlink:title="primer" xlink:type="simple">
				<article-title>The Emergence of Complexity: Lessons from DNA</article-title>
			</related-article></article-meta>
  </front>
  <body>
    <sec id="s1">
      <title/>
      <p>In his seminal exploration of the properties of living organisms, <italic>What Is Life?</italic>, Erwin Schroedinger concluded that life depends in large part on storing and processing information. For genetic material to carry the diverse instructions required for living processes, he proposed, it must be stored in an aperiodic crystal. Just nine years later, it was clear that DNA is indeed an aperiodic crystal and that genetic information is conveyed through this irregular pattern. Much like computers, biological systems are programmed to follow a precise set of rules, or algorithms, to store information and solve problems. These biological algorithms direct all manner of biochemical processes to create complex patterns and structures by chemically modifying and assembling individual components.</p>
      <p>Of course, cells use biochemical circuits not electronic circuits. Single tubulin proteins, for example, follow precise rules of chemistry and physics to spontaneously self-assemble, or polymerize, into the microtubules essential for cell transport and motility. The proteins' binding interactions effect rules that specify how the pieces fit together to form the resulting structure. They also specify when and how tubulins assemble from a nucleation complex—a molecular algorithm governing the logic of polymerization. These complex structures self-assemble with remarkably few mistakes. Though considered quite simple, little is understood about the principles that govern programmable structural order underlying this type of spontaneous self-assembly.</p>
      <p>In crystals, the simplest example of spontaneous self-assembly, subunits of the whole are arranged in a repeating pattern that extends indefinitely in all directions. If you know the position of one unit in the pattern, you can tell the exact position of every other unit. In a new study, Rothemund and colleagues use DNA to show that crystal growth can be programmed to create specific aperiodic patterns. Inspired by a model of crystal growth as a computational process, they have programmed DNA molecules to act as molecular building blocks, arranging themselves according to local rules that in turn create a complex global pattern. The resulting two-dimensional structures, which self-assemble from knotted DNA complexes (called tiles), grow to create a fractal pattern known as a Sierpinski triangle. These DNA structures—neither periodic (as in quartz), nor random (as in glass), nor pseudorandom (as in quasicrystals with “forbidden” five-fold symmetries)—demonstrate a form of self organization in crystalline materials determined by programmable growth rules, and are hence dubbed “algorithmic crystals.”</p>
      <p>How can such growth algorithms be encoded in biological molecules? The rules of chemical base-pairing follow regular, predictable patterns, allowing the authors to use DNA to determine the tiles' binding interactions.<xref ref-type="fig" rid="pbio-0020448-g001"/></p>
      <fig id="pbio-0020448-g001" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pbio.0020448.g001</object-id>
        <caption>
          <title>Fractal patterns from DNA</title>
        </caption>
        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pbio.0020448.g001" xlink:type="simple"/>
      </fig>
      <p>Desired binding interactions between tiles were programmed by endowing each tile with single-stranded “sticky ends” whose sequence was complementary to the sticky ends of tiles it should stick to. Each tile was either white (0) or black (1): a black tile can fit at any site where the two neighboring tiles are opposite colors, while a white tile can fit at any site where the two neighboring tiles are the same color. Logically, the new tile's color is the exclusive-or (XOR) of the tiles in the previous layer.</p>
      <p>That such logical layer-by-layer iteration of XOR computations will produce the Sierpinski triangle is well known. What's remarkable is that DNA molecules can be programmed to grow according to this logic. With this programmable algorithmic crystal, Rothemund and colleagues demonstrate a method for designing DNA molecules capable of implementing any pattern of abstract logical tiles. What's more, the authors argue, any algorithmic crystal growth process can, in principle, be experimentally investigated using DNA self-assembly.</p>
      <p>So how is algorithmic self-assembly related to biology? Like the algorithmic crystals, many of the self-assembled structures in biology are ordered but aperiodic. The hope is that the theoretical insights of computer science—well-honed for describing, analyzing, and programming computational systems—can direct investigations of biochemical self-assembly and information processing. And with a method for demonstrating how simple chemical and physical elements can create complex organization, Rothemund and colleagues have added a concrete experimental framework to bolster that work. (For more on DNA and complexity, see “The Emergence of Complexity: Lessons from DNA” by Chengde Mao.)</p>
    </sec>
  </body>
</article>