<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN" "http://jats.nlm.nih.gov/publishing/1.1d3/JATS-journalpublishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="review-article" dtd-version="1.1d3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1005466</article-id>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-16-01677</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Review</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Physics</subject><subj-group><subject>Thermodynamics</subject><subj-group><subject>Entropy</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Gene identification and analysis</subject><subj-group><subject>Genetic networks</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Network analysis</subject><subj-group><subject>Genetic networks</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Research design</subject><subj-group><subject>Experimental design</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Gene expression</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Proteins</subject><subj-group><subject>DNA-binding proteins</subject><subj-group><subject>Transcription factors</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Gene expression</subject><subj-group><subject>Gene regulation</subject><subj-group><subject>Transcription factors</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Proteins</subject><subj-group><subject>Regulatory proteins</subject><subj-group><subject>Transcription factors</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Gene expression</subject><subj-group><subject>Gene regulation</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Network analysis</subject><subj-group><subject>Protein interaction networks</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Proteomics</subject><subj-group><subject>Protein interaction networks</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied mathematics</subject><subj-group><subject>Algorithms</subject><subj-group><subject>Machine learning algorithms</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject><subj-group><subject>Algorithms</subject><subj-group><subject>Machine learning algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Artificial intelligence</subject><subj-group><subject>Machine learning</subject><subj-group><subject>Machine learning algorithms</subject></subj-group></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>A review of active learning approaches to experimental design for uncovering biological networks</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-9851-8582</contrib-id>
<name name-style="western">
<surname>Sverchkov</surname>
<given-names>Yuriy</given-names>
</name>
<xref ref-type="corresp" rid="cor001">*</xref>
<xref ref-type="aff" rid="aff001"/>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-8917-7464</contrib-id>
<name name-style="western">
<surname>Craven</surname>
<given-names>Mark</given-names>
</name>
<xref ref-type="aff" rid="aff001"/>
</contrib>
</contrib-group>
<aff id="aff001"><addr-line>Department of Biostatistics and Medical Informatics, University of Wisconsin–Madison, Madison, Wisconsin, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Huang</surname>
<given-names>Haiyan</given-names>
</name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1"><addr-line>University of California, Berkeley, UNITED STATES</addr-line></aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">yuriy.sverchkov@wisc.edu</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<day>1</day>
<month>6</month>
<year>2017</year>
</pub-date>
<pub-date pub-type="collection">
<month>6</month>
<year>2017</year>
</pub-date>
<volume>13</volume>
<issue>6</issue>
<elocation-id>e1005466</elocation-id>
<permissions>
<copyright-year>2017</copyright-year>
<copyright-holder>Sverchkov, Craven</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1005466"/>
<abstract>
<p>Various types of biological knowledge describe networks of interactions among elementary entities. For example, transcriptional regulatory networks consist of interactions among proteins and genes. Current knowledge about the exact structure of such networks is highly incomplete, and laboratory experiments that manipulate the entities involved are conducted to test hypotheses about these networks. In recent years, various automated approaches to experiment selection have been proposed. Many of these approaches can be characterized as active machine learning algorithms. Active learning is an iterative process in which a model is learned from data, hypotheses are generated from the model to propose informative experiments, and the experiments yield new data that is used to update the model. This review describes the various models, experiment selection strategies, validation techniques, and successful applications described in the literature; highlights common themes and notable distinctions among methods; and identifies likely directions of future research and open problems in the area.</p>
</abstract>
<funding-group>
<funding-statement>This work was funded by NIH training grant T15 LM007359 (YS), NIH grant U54 AI117924 through the BD2K program (MC), and NSF grant IIS-1218880 (MC). The funders had no role in the decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="2"/>
<table-count count="0"/>
<page-count count="26"/>
</counts>
</article-meta>
</front>
<body>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>Biological processes are complex, involving many interactions among elementary units. To describe such processes, a common representation is a network model. For example, gene regulatory networks (GRNs) describe activation and inhibition relationships among genes, metabolic networks describe which enzymes yield which metabolites in a metabolic pathway, etc. Such biological networks are often quite large, with GRNs containing thousands of genes, for example. Current knowledge of many such networks is largely incomplete, and the primary means of uncovering details of these networks is through laboratory experiments.</p>
<p>In order to design an experiment that effectively adds to current knowledge, it is necessary to understand the current state of knowledge, as well as to have an idea of what the outcome of the experiment will add. What outcomes are likely? What would one conclude from each outcome? When the biological network in question is complex, and when there is uncertainty about the details of the network, these questions become hard to answer. Furthermore, the number of potential experiments from which to choose is often quite large. For example, when considering single gene knockdown experiments, there are as many potential experiments as there are genes, and when considering double knockdowns, the number of possibilities is quadratic in the number of genes. It is this challenge that creates a need for computational solutions to experimental design. This review discusses various methods that address this problem by using algorithms for the selection of experiments.</p>
<p>Active learning approaches for uncovering biological networks are meant to solve the problem of designing experiments when human decision-making is less than optimal for the task. Active machine learning is a subfield of machine learning that studies algorithms that select the data they need for the improvement of their own models. In a standard machine learning setting, an algorithm learns some sort of model from a sample of data, and the model is subsequently used for one of a variety of purposes (classification, clustering, prediction, etc.). This can be viewed as a linear pipeline from data to some end application of that data. Active machine learning adds an iterative refinement process to the pipeline. In addition to the machine learning component that learns a model from data, there is a component that uses the model to characterize what sort of additional data would best improve the model further. We call this characterization a query. In the context of experimental design, the query specifies the manipulation to be performed in the experiment, such as which gene(s) to knock down in a knockdown experiment or what growth media to use in a growth experiment. The active learner selects a query that would be most informative for improving the model. In response to the query, new data, such as measurements performed under the conditions specified by the query, are used to update the model accordingly. This cycle can be repeated multiple times until the model is sufficiently accurate. This process forms the active learning loop (<xref ref-type="fig" rid="pcbi.1005466.g001">Fig 1</xref>).</p>
<fig id="pcbi.1005466.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005466.g001</object-id>
<label>Fig 1</label>
<caption>
<title>The active learning loop.</title>
<p>In active machine learning, data from experiments informs a learner that formulates queries for further experiments that are expected to be most informative for refining a model.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005466.g001" xlink:type="simple"/>
</fig>
<p>In the particular setting of uncovering biological networks, the data is often gene expression data, but it can also be some other measurement of abundances of biological molecules involved in the network of interest or measurements of a reporter variable. The modeling component typically involves a mathematical representation of the network structure, often mirroring the believed causal relationships among the entities involved. Typically, the network inference process yields a collection of possible models that explain prior data equally well (or a distribution of models in which there are multiple likely models), and the challenge of improving the model is that of narrowing down this collection through additional experiments. The details of how this is accomplished depend on the modeling component (specifically, what the mathematical model is and how it is learned from data) and on some criterion or strategy to select experiments based on this model.</p>
<p>This review discusses a variety of works that fall in this category of approaches. The unique contributions of each work are highlighted throughout. Additionally, there are aspects that are present in all methods. First, there is the modeling component, which is essential in every machine learning and active machine learning method. There are many approaches to modeling biological networks in general. The methods we discuss are focused on either inferring a mathematical representation of the biological network from data or constructing it based on a combination of data and prior knowledge. The mathematical models we cover include models that represent variables as having discrete states (e.g., a gene being active or inactive) and models that represent variables as continuous quantities (e.g., protein abundances). Among those models, there are models with deterministic dynamics, wherein the value of one variable is a function of another, and models with stochastic dynamics, wherein the value of one variable is a random quantity sampled from a distribution that depends on the value of another variable. The biological networks covered by these methods include metabolic, signaling, and regulatory networks, as well as networks that describe combinations of these three groups of interactions.</p>
<p>Second, there are the queries that specify the experiments and the various types of responses to the queries. The types of possible queries correspond to various perturbations of the biological network that can be carried out in an experiment. These include changing the activity of specific genes, manipulating the abundances of specific proteins, changing the environment by specifying growth media, or applying some combination of these perturbations. The response to a query—the data collected in an experiment—also varies: it may be a multidimensional measurement that informs of the states of all or many of the entities in the model, such as a gene expression profile, or it may be a one-dimensional measurement, such as cell growth.</p>
<p>Third, there are the criteria for selecting experiments. The essential component that characterizes active machine learning is the criterion by which additional data (experiments) are selected to improve the model. Although the details of the experiment selection criterion are dependent on the particular model representation, there are some general themes that undergird all criteria. Ideally, the criterion selects experiments in such a way that the model can be most improved at the least cost. Each method discussed here uses a criterion based on either entropy, a difference between experimental outcomes, or an expected cost. The generalization of these common principles can direct future work, such as the application of active learning to new models.</p>
<p>Fourth, there is the approach to evaluating the methods. Ideally, to evaluate an active learning approach, one would run a sequence of active-learning-selected experiments and measure the cost (or number of experiments taken) to arrive at a sufficiently accurate model. However, it is typically impractical to do this for the purpose of merely testing the active learning strategy. Additionally, the true model of the biological system is unknown (hence the need for the method). This leads to two common approaches for evaluating active learning methods. One approach is to use some generative model to simulate a system that is like the biological system of interest and use these simulated experiments as input to the active learning method. An advantage of this approach is that the ground truth model is known, and it is easy to check the extent to which the model learned by the active learning algorithm matches the true generating model. Another approach is to use data from real, previously performed experiments. In this setup, data from an experiment is held out until the active learning algorithm proposes to perform that experiment, and the model performance is measured by how accurately it predicts the results of experiments it has not observed or how close the model is to one learned from all available data. In the case of biological networks, models learned from real data can also be validated by checking whether the information they represent matches previously discovered knowledge about the organisms studied. All of these approaches test the method without expending resources to actually perform new experiments.</p>
<p>Finally, a few of the methods discussed here have been applied in practice and validated against the literature or in lab experiments in terms of biological findings. In two cases, experiments were performed according to the algorithms' recommendations, and the experimental results led to gains in knowledge about the systems studied.</p>
<sec id="sec002">
<title>Mathematical notation</title>
<p>In mathematical formulae, we use lowercase, nonbold type for the atomic elements of sets, scalar values, and values taken by random variables; uppercase type for sets, random variables, and matrices; and bold type for vectors and matrices. We use ℙ to represent probabilities, <italic>f</italic> to represent probability density functions, and <inline-formula id="pcbi.1005466.e001"><alternatives><graphic id="pcbi.1005466.e001g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e001" xlink:type="simple"/><mml:math display="inline" id="M1"><mml:mi mathvariant="double-struck">E</mml:mi></mml:math></alternatives></inline-formula> to represent expectations. The mathematical notation that refers to entities that appear in most methods is kept as consistent as possible throughout this review: <italic>m</italic> ∈ <italic>M</italic> represent models (or their closest equivalents); observed states are represented by <italic>x</italic> or its bold and uppercase variants, depending on whether states are seen as atomic set elements, vectors, or random variables within the context of a particular method; and similarly, <italic>e</italic> or its bold and uppercase variants represent experiments.</p>
<p>The structure of the remainder of this review is as follows. The reviewed works are divided into two categories that correspond the following two sections, "Active learning de novo" and "Active learning with prior knowledge." We discuss the previously enumerated aspects for the approaches within these sections, and following them, a discussion concludes the review.</p>
</sec>
</sec>
<sec id="sec003">
<title>Active learning de novo</title>
<p>This section summarizes methods that do not require prior knowledge for inferring networks. The focus in this literature is on the mathematical and computational aspects involved in active learning of biological networks. In such work, generality is considered an advantage, and indeed, most of the methods do not limit themselves to a specific biological domain or specific type of network (regulatory, metabolic, etc.). Value is placed on a method's ability to infer a model from data with minimal or no prior knowledge and expert input. However, note that a method's ability to incorporate prior knowledge (without being completely dependent on the availability of prior knowledge) is also considered a strength.</p>
<p>We group the methods reviewed by the representations used for the models, starting with a review of work by Ideker et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref001">1</xref>], who use the Boolean network representation. The conceptual simplicity of the Boolean network model makes it a good foundation upon which to build when discussing aspects of the other models. For this reason, our review of the work by Ideker et al. also serves as an introduction to concepts that are used in discussing other methods.</p>
<sec id="sec004">
<title>Boolean networks</title>
<p>Ideker et al.[<xref ref-type="bibr" rid="pcbi.1005466.ref001">1</xref>] consider the task of learning a GRN. A node in the network may represent a gene or a stimulus, where a stimulus may be any factor that influences the network but is itself neither a gene nor a gene product. An edge in the network represents an influence of one gene on another, implicitly mediated by the product of the former gene, or the influence of a stimulus on a gene.</p>
<p>Inspired by the development of microarray technologies making global expression analysis feasible, Ideker et al. suppose that the available data consists of the expression levels of many (but not necessarily all) of the genes in the network. Each gene is represented by a variable, and the expression level of each gene is discretized into a Boolean value: 0 for low values indicating a repressed state, and 1 for high values indicating an activated state of the gene.</p>
<p>The Boolean variables representing the genes correspond to nodes in a directed acyclic graph (DAG) that forms the structure of a Boolean network. In a directed graph, nodes are connected by directed edges (usually represented by arrows when illustrated). We say that a directed edge points from a parent node to a child node. Hence, the parents of a node are all the nodes from which there are directed edges pointing directly to the node. A directed graph is a DAG if it contains no path that follows the directions of the edges and leads back to the node at which it started. The value of each node in the network is defined as a Boolean function of the values of its parents.</p>
<p>Ideker et al. developed a method for uncovering the structure and the Boolean functions of a network that describes the GRN of interest. The data available were gene expression measurements discretized to Boolean values. Global expression data from cells in an unperturbed steady-state yield a Boolean vector of 0s and 1s, with each element of the vector corresponding to a variable (gene or stimulus). There are many Boolean networks that are consistent with such a vector, but the underlying assumption is that one of these networks is the most accurate representation of the underlying biology. In order to uncover the most accurate network, additional data is needed (namely, expression data obtained from experiments in which the organism is perturbed). In such a perturbation, one or more of the genes or stimuli in the network are over- or under-expressed by the experimenter, effectively forcing the values of the manipulated variables to 1 (for over-expression) or 0 (for under-expression). Under the assumption that this perturbation does not change the dependencies that govern the unperturbed genes, the observations (Boolean vectors) produced by these experiments should also be consistent with the structure and functions of the Boolean network to be found. As the number of perturbation experiments grows, the number of Boolean networks that are consistent with all observations from all experiments decreases. The challenge of the task is not only to infer the most accurate network from a sequence of experiments but also to select the perturbations in a way that minimizes the number of experiments needed to infer the network.</p>
<p>Ideker et al. make explicit the division between these two tasks by describing two major components that make up their method: the “predictor,” which infers networks from data, and the “chooser,” which selects the next experiment in the sequence. The predictor takes as input a set of (Boolean) expression profiles and produces as output the set of networks that are both consistent with the profiles and have a minimal number of edges. That is to say that any network with fewer edges would necessarily be inconsistent with the data. See Ideker et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref001">1</xref>] for a detailed description of the predictor's operation.</p>
<sec id="sec005">
<title>The chooser and entropy as an experiment selection criterion</title>
<p>The chooser takes as input the set of candidate Boolean networks produced by the predictor along with a set of queries describing candidate experiments that could be performed and chooses one of those queries. A query for an experiment consists of the list of variables to be perturbed as well as the Boolean values to which these variables are to be set in the experiment. Conceptually, the best experiment is one whose outcome will most discriminate between the available set of networks. An experiment whose outcome is consistent with all candidate networks is least informative, while an experiment whose outcome is only consistent with one network is most informative.</p>
<p>More concretely, given a set <italic>M</italic> of candidate Boolean networks and a set of candidate perturbation experiments, the chooser does the following. For each candidate experiment <italic>e</italic>, the network state predicted to result from <italic>e</italic> is computed according to each network. The network state is an assignment of all the Boolean variables (genes) in the network to values according to the Boolean functions defining the network. A given perturbation <italic>e</italic> yields a total of <italic>X</italic><sub><italic>e</italic></sub> distinct states (indexed by <italic>x</italic>) over the networks (1 ≤ <italic>X</italic><sub><italic>e</italic></sub> ≤ |<italic>M</italic>|), and the number of networks that predicted state <italic>x</italic> is denoted by <inline-formula id="pcbi.1005466.e002"><alternatives><graphic id="pcbi.1005466.e002g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e002" xlink:type="simple"/><mml:math display="inline" id="M2"><mml:mrow><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>. The chooser selects the experiment <italic>e</italic> that maximizes the following entropy score <italic>H</italic><sub><italic>e</italic></sub>:
<disp-formula id="pcbi.1005466.e003">
<alternatives>
<graphic id="pcbi.1005466.e003g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e003" xlink:type="simple"/>
<mml:math display="block" id="M3">
<mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:munderover></mml:mstyle><mml:mfrac><mml:mrow><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>M</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mfrac><mml:mrow><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>M</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(1)</label>
</disp-formula></p>
<p><italic>H</italic><sub><italic>e</italic></sub> can be viewed as the expected decrease in entropy or, equivalently, a measure of the information gained in performing experiment <italic>e</italic>. To better see how this is a useful measure, consider two extreme cases: one in which all networks yield the same outcome (network state), and one in which all networks yield different states in response to experiment <italic>e</italic>. The value of <italic>H</italic><sub><italic>e</italic></sub> is at its minimum (<italic>H</italic><sub><italic>e</italic></sub> = 0) in the former case and at its maximum (<italic>H</italic><sub><italic>e</italic></sub> = log<sub>2</sub> |<italic>M</italic>|) in the latter, reflecting the intuition that the former experiment is not informative and the latter is maximally informative. Consequently, it is not surprising that entropy is widely used as an experiment selection criterion, both in the context of active learning for biological networks [<xref ref-type="bibr" rid="pcbi.1005466.ref002">2</xref>–<xref ref-type="bibr" rid="pcbi.1005466.ref005">5</xref>] and in other domains of active machine learning.</p>
</sec>
<sec id="sec006">
<title>The maximum difference criterion</title>
<p>Entropy is not the only criterion that might be used for selecting an experiment. Atias et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref006">6</xref>] propose an alternative approach, which stems from the idea of distinguishing between alternate best-fit models. The maximum difference criterion selects the experiment that yields maximally different states for some pair of models in the set of best-fit models.</p>
<p>The general problem setup considered by Atias et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref006">6</xref>] is similar to that considered by Ideker et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref001">1</xref>]: the given data consists of Boolean vectors representing gene expression profiles under a variety of conditions, the underlying model to be learned is a Boolean network, and the aim of the experiment selection strategy is to arrive at a single model after as few experiments as possible. Whereas Ideker et al. used their predictor, Atias et al. use an algorithm by Sharan and Karp [<xref ref-type="bibr" rid="pcbi.1005466.ref007">7</xref>] for learning a Boolean network given experimental data. The Sharan and Karp algorithm solves an integer linear programming (ILP) optimization problem to find a Boolean network that is a best fit for the data available so far. Like the task faced by the predictor, this optimization problem typically has many equally optimal solutions.</p>
<p>Atias et al. use a modified version of the ILP to find a pair of models, <italic>m</italic><sub>1</sub> and <italic>m</italic><sub>2</sub>, that solve the original optimization problem optimally and, additionally, find an experiment <italic>e</italic> that maximizes the difference between the network states that each model predicts for <italic>e</italic>. More precisely, let <inline-formula id="pcbi.1005466.e004"><alternatives><graphic id="pcbi.1005466.e004g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e004" xlink:type="simple"/><mml:math display="inline" id="M4"><mml:mrow><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1005466.e005"><alternatives><graphic id="pcbi.1005466.e005g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e005" xlink:type="simple"/><mml:math display="inline" id="M5"><mml:mrow><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> be the binary vectors representing the states of the measurable variables predicted for experiment <italic>e</italic> by <italic>m</italic><sub>1</sub> and <italic>m</italic><sub>2</sub> respectively. The ILP Atias et al. use solves for the experiment <italic>e</italic> that optimizes
<disp-formula id="pcbi.1005466.e006">
<alternatives>
<graphic id="pcbi.1005466.e006g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e006" xlink:type="simple"/>
<mml:math display="block" id="M6">
<mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mrow><mml:munder><mml:mrow><mml:mi mathvariant="normal">max</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mn>,</mml:mn><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:munder></mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>‖</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>‖</mml:mo></mml:mrow></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mrow><mml:mtext>s</mml:mtext><mml:mo>.</mml:mo><mml:mtext>t</mml:mtext><mml:mo>.</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="1em"/><mml:mtext>are both optimal solutions of the Sharan and Karp ILP</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow>
</mml:math>
</alternatives>
<label>(2)</label>
</disp-formula>
Here, since <inline-formula id="pcbi.1005466.e007"><alternatives><graphic id="pcbi.1005466.e007g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e007" xlink:type="simple"/><mml:math display="inline" id="M7"><mml:mrow><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1005466.e008"><alternatives><graphic id="pcbi.1005466.e008g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e008" xlink:type="simple"/><mml:math display="inline" id="M8"><mml:mrow><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> are binary vectors, <inline-formula id="pcbi.1005466.e009"><alternatives><graphic id="pcbi.1005466.e009g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e009" xlink:type="simple"/><mml:math display="inline" id="M9"><mml:mrow><mml:mo>‖</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mn>,</mml:mn><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mo>‖</mml:mo><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> is the Hamming distance between them (the number of variables that are predicted to be different by <italic>m</italic><sub>1</sub> and <italic>m</italic><sub>2</sub>).</p>
</sec>
<sec id="sec007">
<title>Model evaluations</title>
<p>Ideker et al. evaluated their method by simulation, a common evaluation technique for active learning methods. They generated random networks to act as ground truth and simulated the unperturbed measurements, as well as the outcomes of all single-node perturbations. This set of measurements was the initial dataset given to the method. They then had the method choose a double-perturbation experiment, simulated the outcome of the experiment using the ground-truth network, and fed the result back for the method to iteratively propose the next experiment. This process was repeated until only a single network was consistent with the data.</p>
<p>Atias et al. compared the performance of their method to the entropy-based approach used by Ideker et al. Both simulated and real data evaluations were used for these experiments. Specifically, two models of signaling systems in humans were used as evaluation contexts: a Boolean model of epidermal growth factor receptor (EGFR) signaling constructed by Samaga et al.[<xref ref-type="bibr" rid="pcbi.1005466.ref008">8</xref>], which contains 112 molecular species (Boolean variables with associated functions), and a Boolean model model of interleukin 1 (IL1) signaling created by Ryll et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref009">9</xref>] with 121 molecular species.</p>
<p>For simulated data experiments, the Boolean model (either EGFR or IL1) was used to generate Boolean vectors representing the measurements one would observe as a result of an experiment. Atias et al. generated a validation set for testing the performance of the methods. Any model that perfectly predicts the results of the validation set is considered an optimal model. The evaluation consisted of giving each method data from an initial pool of experimental results and measuring the number of additional experiments needed for each method to arrive at an optimal model.</p>
<p>For real data experiments, data published by Samaga et al. and Ryll et al. on phosphorylation levels under different cellular conditions in the two respective systems were used. For the EGFR system, the activity levels of 11 proteins were measured under 34 distinct conditions in Hep2G cells. For the IL1 system, the activity levels of 9 proteins were measured under 14 distinct conditions in primary hepatocytes. The evaluation consisted of starting each method with an initial subset of the available experiments and measuring the number of additional experiments selected from the pool of available experiments (34 for EGFR and 14 for IL1) that were needed to obtain a model as good as the one learned from all available experiments.</p>
<p>The maximum difference approach was found to perform better than the maximum entropy approach, and it was generally less sensitive to variation in the amount of initial data given and the number of unknown Boolean functions. Atias et al. reason that the maximum difference approach performed better because the entropy-based approach relied on estimation of the entropy from a sample of models, whereas the maximum difference approach was implemented using optimization over the full space of possible models.</p>
<p>The Boolean network representation used by Ideker et al. and Atias et al. is appealing in its simplicity and generality. However, one limitation is the representation's lack of robustness to noise in the data: observations are taken as binary values, and it is assumed that any model inconsistent with an observation must be rejected. In reality, measurements can be inaccurate and the outcomes of experiments may be influenced by uncontrolled factors. Thus, the inconsistency of a single observation with the model may not be sufficient reason to reject the model altogether. One approach to addressing the reality of noisy data is to explicitly model the outcomes of experiments as random variables. Probabilistic models do this, and one type of probabilistic model that has been applied to active learning of biological networks is the Bayesian network.</p>
</sec>
</sec>
<sec id="sec008">
<title>Causal Bayesian networks</title>
<p>Several approaches to active learning using causal Bayesian networks have been developed [<xref ref-type="bibr" rid="pcbi.1005466.ref005">5</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref010">10</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref011">11</xref>]. A Bayesian network is a probabilistic graphical model that consists of a DAG whose nodes represent random variables <bold>X</bold> = <italic>X</italic><sub>1</sub>,…,<italic>X</italic><sub><italic>p</italic></sub>. A Bayesian network is similar to a Boolean network in that the edges in the graph represent direct dependence between variables. The difference is that whereas in a Boolean network, the value of a variable is governed by a Boolean function of its parents in the graph, in a Bayesian network, the value of a variable is governed by a conditional distribution of that variable given the values of its parents in the graph. These conditional distributions may be multinomial if the variable is in a discrete domain or may be some continuous distribution if the variable is in a continuous domain. Taken together, the local conditional distributions in the Bayesian network describe a joint probability distribution over all the variables of the network. For discrete variables, the joint probability that the variables take the values corresponding to a particular instantiation <bold>x</bold> = <italic>x</italic><sub>1</sub>,…,<italic>x</italic><sub><italic>p</italic></sub> is
<disp-formula id="pcbi.1005466.e010">
<alternatives>
<graphic id="pcbi.1005466.e010g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e010" xlink:type="simple"/>
<mml:math display="block" id="M10">
<mml:mrow><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>p</mml:mi></mml:munderover></mml:mstyle><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(3)</label>
</disp-formula>
where <bold>X</bold><sub>pa(<italic>i</italic>)</sub> represents the subset of variables that are parents of <italic>X</italic><sub><italic>i</italic></sub> in the graph and <bold>x</bold><sub>pa(<italic>i</italic>)</sub> represents the corresponding values that these variables take in instantiation <bold>x</bold>. Similarly, for continuous variables, the joint probability density of the variables at <bold>x</bold> is
<disp-formula id="pcbi.1005466.e011">
<alternatives>
<graphic id="pcbi.1005466.e011g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e011" xlink:type="simple"/>
<mml:math display="block" id="M11">
<mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold">X</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>p</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mn>.</mml:mn></mml:mrow>
</mml:math>
</alternatives>
<label>(4)</label>
</disp-formula>
Within the context of biological networks, the variables represent measurable quantities such as gene expression levels, as well as potential targets for perturbations such as gene silencing or overexpression.</p>
<p>There is extensive work on approaches to learning Bayesian networks from observational data; Daly et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref012">12</xref>] provide a broad review. The main challenge in learning Bayesian networks is that of learning the graph structure from data. There are two main categories of approaches to Bayesian network structure learning: constraint-based methods, wherein conditional independencies (CIs) in the data are used to constrain the structure, and score search methods, wherein the space of Bayesian network structures is searched for a structure that has the best score according to some criterion.</p>
<p>Using observational data, Bayesian network structures can be inferred up to Markov equivalence. This concept of equivalence stems from the idea that a Bayesian network graph structure carries information about dependence and independence between variables. Consider a Bayesian network with three variables, <italic>X</italic><sub>1</sub>, <italic>X</italic><sub>2</sub>, and <italic>X</italic><sub>3</sub>. A structure of <italic>X</italic><sub>1</sub> → <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub> describes a situation in which <italic>X</italic><sub>1</sub> is independent of <italic>X</italic><sub>3</sub> given <italic>X</italic><sub>2</sub>, but marginally, <italic>X</italic><sub>1</sub> and <italic>X</italic><sub>3</sub> are not independent. The exact same independence also holds in two other network structures: <italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub> and <italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> ← <italic>X</italic><sub>3</sub>. Another network structure, <italic>X</italic><sub>1</sub> → <italic>X</italic><sub>2</sub> ← <italic>X</italic><sub>3</sub>, implies a different independence relationship: here, <italic>X</italic><sub>1</sub> and <italic>X</italic><sub>3</sub> are marginally independent but are not independent given <italic>X</italic><sub>2</sub>. The dependencies and independencies are key to determining how well a particular Bayesian network structure fits observational data. Because observational data is limited in that we can derive associations from it but not causal relationships, it generally cannot be used to distinguish between network structures that capture the same dependence relationships, for example, between <italic>X</italic><sub>1</sub> → <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub>, <italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub>, and <italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> ← <italic>X</italic><sub>3</sub>. For this reason, such sets of Bayesian networks are called equivalent.</p>
<p>Markov-equivalent structures can differ in the causal relationships they imply. For example, in the network <italic>X</italic><sub>1</sub> → <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub>, perturbing node <italic>X</italic><sub>1</sub> yields a change in <italic>X</italic><sub>2</sub> and <italic>X</italic><sub>3</sub>, but in <italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> ← <italic>X</italic><sub>3</sub>, perturbing node <italic>X</italic><sub>1</sub> does not affect the other two nodes. For this reason, it is difficult to infer causal relationships from observational data alone. There is existing work on predicting the effects of perturbations based on observational data in large-scale biological systems [<xref ref-type="bibr" rid="pcbi.1005466.ref013">13</xref>]. To uniquely determine a causal Bayesian network, however, perturbation experiments are needed.</p>
<p>According to a causal Bayesian network, a perturbation experiment changes the joint distribution of observations as follows. A perturbation at <italic>X</italic><sub><italic>i</italic></sub> affects only its descendants. More specifically, consider a perturbation or a randomized experiment <italic>E</italic> on a subset of variables <bold>X</bold><sub><italic>E</italic></sub>: <italic>E</italic> ⊂ {1,…,<italic>p</italic>}. Effectively, under such an experiment, each variable <italic>X</italic><sub><italic>i</italic></sub> in the subset is made to follow some new distribution <italic>U</italic><sub><italic>i</italic></sub>, and the intervention yields the joint probability distribution
<disp-formula id="pcbi.1005466.e012">
<alternatives>
<graphic id="pcbi.1005466.e012g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e012" xlink:type="simple"/>
<mml:math display="block" id="M12">
<mml:mrow><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>do</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>∼</mml:mo><mml:msub><mml:mi mathvariant="bold">U</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:menclose notation="updiagonalstrike"><mml:mo>∉</mml:mo></mml:menclose><mml:mi>E</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>U</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(5)</label>
</disp-formula>
for discrete variables or the joint density
<disp-formula id="pcbi.1005466.e013">
<alternatives>
<graphic id="pcbi.1005466.e013g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e013" xlink:type="simple"/>
<mml:math display="block" id="M13">
<mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold">X</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>do</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>∼</mml:mo><mml:msub><mml:mi mathvariant="bold">U</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:menclose notation="updiagonalstrike"><mml:mo>∉</mml:mo></mml:menclose><mml:mi>E</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mrow><mml:mtext>pa</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(6)</label>
</disp-formula>
for continuous variables, where do(<bold>X</bold><sub><italic>E</italic></sub> ∼ <bold>U</bold><sub><italic>E</italic></sub>) denotes the perturbation [<xref ref-type="bibr" rid="pcbi.1005466.ref014">14</xref>]. Using this formulation of the expected effect of a perturbation on the probability distribution of observations, structure learning methods can be extended to take advantage of perturbation data. Cooper and Yoo [<xref ref-type="bibr" rid="pcbi.1005466.ref015">15</xref>] have presented a score for Bayesian networks of discrete variables, which has been extended to Bayesian networks of Gaussian random variables by Pournara and Wernisch [<xref ref-type="bibr" rid="pcbi.1005466.ref005">5</xref>]. More recently, Rau et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref016">16</xref>] have presented an alternate method for scoring and efficiently searching for a best-fitting Gaussian Bayesian network from a mixture of observational and perturbation data for reconstructing regulatory networks.</p>
<sec id="sec009">
<title>Score-based active learning of causal Bayesian networks</title>
<p>Pournara and Wernisch [<xref ref-type="bibr" rid="pcbi.1005466.ref005">5</xref>] present a score-based active learning method for learning Bayesian networks. The scores they use [<xref ref-type="bibr" rid="pcbi.1005466.ref005">5</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref015">15</xref>] capture the property of transition sequence (TS)-equivalence, which is an extension to perturbation data of Markov equivalence. For example, the set of three-node DAGs <italic>X</italic><sub>1</sub> → <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub>, <italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> ← <italic>X</italic><sub>3</sub>, and <italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub> form a Markov equivalence class. A perturbation at <italic>X</italic><sub>1</sub> would affect <italic>X</italic><sub>2</sub> and <italic>X</italic><sub>3</sub> in the first structure but not in the latter two; thus, {<italic>X</italic><sub>1</sub> → <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub>} and {<italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> ← <italic>X</italic><sub>3</sub>,<italic>X</italic><sub>1</sub> ← <italic>X</italic><sub>2</sub> → <italic>X</italic><sub>3</sub>} form two TS-equivalence classes with respect to the sequence of perturbations {<italic>X</italic><sub>1</sub>}. The scores used by Pournara and Wernisch capture the property of TS-equivalence by always scoring TS-equivalent networks equally. Moreover, these particular scores are Bayesian marginal likelihoods, which, under the assumption of uniform priors over network structures, are proportional to the posterior probabilities of the networks given the data (see [<xref ref-type="bibr" rid="pcbi.1005466.ref005">5</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref015">15</xref>] for details).</p>
<p>Pournara and Wernisch use an entropy criterion for experiment selection, wherein the scores are used to define the probability distribution over which the entropy is calculated, as follows. Let <inline-formula id="pcbi.1005466.e014"><alternatives><graphic id="pcbi.1005466.e014g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e014" xlink:type="simple"/><mml:math display="inline" id="M14"><mml:mi mathvariant="script">D</mml:mi></mml:math></alternatives></inline-formula> represent all previously available observational and experimental data. From <inline-formula id="pcbi.1005466.e015"><alternatives><graphic id="pcbi.1005466.e015g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e015" xlink:type="simple"/><mml:math display="inline" id="M15"><mml:mi mathvariant="script">D</mml:mi></mml:math></alternatives></inline-formula>, infer the partition of the space of possible Bayesian network structures into TS-equivalence classes, score them, and (for purposes of tractability) keep only the <italic>n</italic> top-scoring classes. Each class indexed by <italic>q</italic>,(1 ≤ <italic>q</italic> ≤ <italic>n</italic>) is associated with the posterior probability <italic>P</italic><sub><italic>q</italic></sub> of a network in the class; recall that all the networks in the class have the same score. Let <italic>E</italic> represent an experiment under consideration. Without knowing the outcome of <italic>E</italic>, but knowing which variables are perturbed in experiment <italic>E</italic>, the TS-equivalence class <italic>q</italic> will be further partitioned into <italic>n</italic><sub><italic>q</italic></sub> ≥ 1 TS-equivalence subclasses <inline-formula id="pcbi.1005466.e016"><alternatives><graphic id="pcbi.1005466.e016g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e016" xlink:type="simple"/><mml:math display="inline" id="M16"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mi>s</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mn>,</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>s</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. Pournara and Wernisch define a loss function for experiment <italic>E</italic> as
<disp-formula id="pcbi.1005466.e017">
<alternatives>
<graphic id="pcbi.1005466.e017g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e017" xlink:type="simple"/>
<mml:math display="block" id="M17">
<mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>E</mml:mi><mml:mn>,</mml:mn><mml:mi mathvariant="script">D</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>q</mml:mi></mml:msub></mml:mrow></mml:munderover></mml:mstyle><mml:msub><mml:mi>P</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mi>s</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">log</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mi>s</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mn>.</mml:mn></mml:mrow>
</mml:math>
</alternatives>
<label>(7)</label>
</disp-formula>
The most informative experiment to select is the one under which this loss is minimized. Note that this loss function computes the negative of the entropy of the TS-equivalence classes, weighted by the model scores.</p>
<p>Pournara and Wernisch evaluated their method using simulated data, which were generated by Bayesian networks. One part of the evaluation compared their method to a previous method for active learning of Bayesian networks by Tong and Koller [<xref ref-type="bibr" rid="pcbi.1005466.ref017">17</xref>]. The evaluation was performed using data generated by the Cancer network used by Tong and Koller, a discrete domain network with five variables. The evaluation showed that Pournara and Wernisch's method performed better in terms of <italic>L</italic><sub>1</sub> edge error, a measure of agreement with the true generative network. The measure is described in detail by Tong and Koller [<xref ref-type="bibr" rid="pcbi.1005466.ref017">17</xref>] and Murphy [<xref ref-type="bibr" rid="pcbi.1005466.ref018">18</xref>].</p>
<p>A larger-scale evaluation compared Pournara and Wernisch's approach to a random experiment selection strategy using data from randomly generated discrete-domain networks with up to 10 nodes and continuous-domain networks containing up to 60 nodes. The results showed that the active learning strategy identified more causal relationships correctly, especially when fewer experiments had been performed.</p>
</sec>
<sec id="sec010">
<title>Constraint-based active learning of causal Bayesian networks</title>
<p>He and Geng [<xref ref-type="bibr" rid="pcbi.1005466.ref010">10</xref>] approach constraint-based active learning for Bayesian networks by considering the chain graph representations of equivalence classes. A chain graph is a graph that contains both directed and undirected edges, with the additional constraint that it contains no directed cycle. A Markov equivalence class of Bayesian networks can be represented by its essential chain graph, a graph that has the same skeleton as all the DAGs in the class. Each edge in the essential graph of a class is directed if and only if it is also directed in each DAG in the class. The task of identifying the causal DAG then becomes reframed as the task of correctly orienting all the edges in the essential chain graph. He and Geng show in a series of theorems how a randomized experiment (as described above) that perturbs a single node gives information about the orientation of undirected edges in the essential chain graph. They also show how similar orientation information can be obtained from quasi-experiments, in which a target variable may be affected by an experimenter but not perfectly isolated from its parents in the causal graph. Analogous to constraint-based graph structure learning, this yields a framework in which we can determine constraints on the graph structure by performing conditional independence tests on the observations that result from perturbations. In particular, a perturbation of the <italic>i</italic>-th variable <italic>X</italic><sub><italic>i</italic></sub> may yield one of <italic>n</italic> resultant edge orientations. An observation of orientation <italic>s</italic> ∈ {1,…,<italic>n</italic>} results in a reduced equivalence class containing <inline-formula id="pcbi.1005466.e018"><alternatives><graphic id="pcbi.1005466.e018g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e018" xlink:type="simple"/><mml:math display="inline" id="M18"><mml:mrow><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> DAGs.</p>
<p>For sequential experiments in which one variable is perturbed at a time, He and Geng propose two experiment selection criteria: a minimax criterion and an entropy criterion. The minimax criterion selects the variable <italic>X</italic><sub><italic>i</italic></sub> that minimizes <inline-formula id="pcbi.1005466.e019"><alternatives><graphic id="pcbi.1005466.e019g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e019" xlink:type="simple"/><mml:math display="inline" id="M19"><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="normal">max</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>. That is to say that it selects the perturbation such that the least informative experimental outcome for that perturbation is most informative as compared to the least informative outcomes from perturbing other variables. The entropy criterion selects the variable <italic>X</italic><sub><italic>i</italic></sub> that maximizes the entropy:
<disp-formula id="pcbi.1005466.e020">
<alternatives>
<graphic id="pcbi.1005466.e020g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e020" xlink:type="simple"/>
<mml:math display="block" id="M20">
<mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:mfrac><mml:mrow><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mi>L</mml:mi></mml:mfrac><mml:mi mathvariant="normal">log</mml:mi><mml:mfrac><mml:mrow><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mi>L</mml:mi></mml:mfrac></mml:mrow>
</mml:math>
</alternatives>
<label>(8)</label>
</disp-formula>
where <inline-formula id="pcbi.1005466.e021"><alternatives><graphic id="pcbi.1005466.e021g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e021" xlink:type="simple"/><mml:math display="inline" id="M21"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mstyle><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>. Selecting the variable to perturb that maximizes this score favors yielding small, equal-sized classes post-perturbation, which parallels the rationale behind the entropy criterion for Boolean networks. Note that, for large graphs, the number of possible postintervention orientations and the number of DAGs in each class make exact computation of the entropy infeasible, and the authors propose to randomly sample the space of DAGs to obtain an estimate of the quantity <inline-formula id="pcbi.1005466.e022"><alternatives><graphic id="pcbi.1005466.e022g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e022" xlink:type="simple"/><mml:math display="inline" id="M22"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi mathvariant="script">l</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mi>L</mml:mi></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula>.</p>
<p>He and Geng also present a batch algorithm for proposing a set of single-node perturbations that would identify the causal graph at once, rather than by sequentially selecting experiments. The algorithm exhaustively searches all possible combinations of variables to perturb to identify the smallest set that would guarantee that only one DAG satisfies all edge orientations, in every possible outcome. This approach is also computationally intensive, since it requires one to compute every possible edge orientation that results from every possible single-node perturbation and, in the worst case, it iterates over the power set of variables.</p>
<p>He and Geng evaluated their algorithms on simulated data using a five-node graph as a generating model and found that the sequential methods are more efficient (require fewer experiments to determine the graph structure) than the batch algorithm. Among the sequential methods, they found that the entropy criterion is most efficient.</p>
<p>Hauser and Bühlmann [<xref ref-type="bibr" rid="pcbi.1005466.ref011">11</xref>] similarly use the constraint-based framework. They present an alternative minimax criterion for sequentially selecting single-node perturbations. Denote by <italic>ε</italic> the set of perturbations performed thus far, each of which is a set <italic>E</italic> of indices of variables that are simultaneously perturbed in each intervention, and let <italic>C</italic><sub><italic>ε</italic></sub> denote the equivalence class of DAGs that is consistent with those prior perturbations and the associated observations. Note that the initial state in which only observational data are available can be denoted by <italic>ε</italic> = {∅}. The proposed criterion selects
<disp-formula id="pcbi.1005466.e023">
<alternatives>
<graphic id="pcbi.1005466.e023g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e023" xlink:type="simple"/>
<mml:math display="block" id="M23">
<mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.15em"/><mml:mo>:</mml:mo><mml:mspace width="0.10em"/><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:munderover><mml:mrow><mml:mi mathvariant="normal">argmin</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>p</mml:mi></mml:munderover><mml:mspace width="0.25em"/><mml:munder><mml:mrow><mml:mi mathvariant="normal">max</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>ε</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mspace width="0.25em"/><mml:mi>ξ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>ε</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:mo>{</mml:mo><mml:mi>j</mml:mi><mml:mo>}</mml:mo><mml:mo>}</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(9)</label>
</disp-formula>
where <italic>ξ</italic>(<italic>C</italic>) is the number of undirected edges in the essential chain graph of the equivalence class <italic>C</italic>, and <italic>C</italic><sub><italic>ε</italic>∪{{<italic>j</italic>}}|<italic>G</italic></sub> is the equivalence class that results when adding the outcome predicted by DAG <italic>G</italic> of the single-node perturbation of <italic>X</italic><sub><italic>j</italic></sub>. The rationale behind this criterion is based on the idea that undirected edges in the essential chain graph of an equivalence class are a measure of uncertainty. This criterion picks the single-node perturbation that would minimize the maximal (worst-case) number of undirected edges in the post-perturbation class. Here, worst-case is considered in terms of the the causal graph <italic>G</italic> in the pre-perturbation class <italic>C</italic><sub><italic>ε</italic></sub> that would yield the most undirected edges post-perturbation if <italic>G</italic> were indeed the underlying causal model.</p>
<p>Hauser and Bühlmann also present a criterion for multiple-node interventions. This criterion computes a set of nodes
<disp-formula id="pcbi.1005466.e024">
<alternatives>
<graphic id="pcbi.1005466.e024g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e024" xlink:type="simple"/>
<mml:math display="block" id="M24">
<mml:mrow><mml:mi>E</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="normal">argmin</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mi>E</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>⊂</mml:mo><mml:mo>{</mml:mo><mml:mn>1,</mml:mn><mml:mo>…</mml:mo><mml:mn>,</mml:mn><mml:mi>p</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:munder><mml:mspace width="0.25em"/><mml:munder><mml:mrow><mml:mi mathvariant="normal">max</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>ε</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mspace width="0.25em"/><mml:mi>ω</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>ε</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:msup><mml:mi>E</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>}</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(10)</label>
</disp-formula>
where <italic>ω</italic>(<italic>C</italic>) denotes the size of the largest undirected clique in the essential chain graph of class <italic>C</italic>. Similar minimax reasoning behind this criterion applies, with the additional intuition that large undirected cliques represent high uncertainty about the causal flow between the nodes in the clique. Hauser and Bühlmann also prove that maximally reducing the clique number after each perturbation yields full identifiability of the DAG with a minimal number of (multiple-node) perturbation experiments.</p>
<p>Hauser and Bühlmann evaluate their algorithms for optimizing these two objectives on simulated data from 4,000 randomly generated causal DAGs with <italic>p</italic> ∈ {10,20,30,40} nodes. Their results show that the single-node criterion recovers the DAG while perturbing the fewest number of nodes, while the multiple-node criterion recovers it using the fewest number of perturbation experiments (although, since multiple nodes are perturbed in each experiment, more nodes are perturbed in total).</p>
</sec>
</sec>
<sec id="sec011">
<title>Probabilistic temporal Boolean network</title>
<p>Dehghannasiri et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref019">19</xref>] apply the mean objective cost of uncertainty (MOCU) criterion for optimal experiment selection. Unlike other experiment selection criteria, MOCU is meaningful in the context of applying an intervention that may have undesirable outcomes. The motivation for this context is that of altering pathological phenotypes, a task of major interest in translational genomics. The objective is not simply to select experiments that are informative but to select experiments that would inform us in such a way that the probability of producing undesirable outcomes when using the model to select an intervention is minimized. MOCU can be generally computed when there is a distribution over states, some of which are undesirable.</p>
<p>Dehghannasiri et al. use probabilistic Boolean networks that model gene activity over time. Recall that Ideker et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref001">1</xref>] and Atias et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref006">6</xref>] use the Boolean network to model the steady state of the network directly. In contrast, Dehghannasiri et al. use the Boolean network as a discrete-time model of a GRN. In this context, the state of a gene at time <italic>t</italic> is a Boolean function of the states of its parents in the network at the previous time point <italic>t</italic>−1. The model is made probabilistic by further assuming that each variable has a small probability to take the value opposite to that which is governed by the Boolean function at each time point. This description of network dynamics is used to define the transition probabilities in a Markov chain and arrive at a steady-state distribution that describes the probability that a given gene is active at any given moment in the steady state [<xref ref-type="bibr" rid="pcbi.1005466.ref020">20</xref>].</p>
<p>Given the goal of applying an intervention to the GRN, assume that there are some undesired states (i.e., we prefer that some specific genes be activated/repressed). This is translated to a cost associated with seeing a given gene activated or repressed. Given these costs and a probabilistic steady-state distribution, a cost is associated with the steady state by taking a weighted average over the probabilities of the undesired states in the steady-state distribution. Suppose that we have a prior distribution over GRNs and a given intervention. We can compute the expected cost of performing the intervention as a weighted average according to the GRN distribution over the steady state costs of the GRNs post-intervention. Dehghannasiri et al. call the intervention that minimizes this expected cost the intrinsically Bayesian robust intervention. The MOCU is then defined as the expected cost of applying the robust intervention over all networks.</p>
<p>The uncertainty about the GRNs is represented in terms of parameters about which we are uncertain, and we call the set of all possible realizations of such parameters an uncertainty class of GRNs. Starting with a prior uncertainty class of GRNs, each potential experiment reduces the uncertainty class of GRNs. Note that Dehghannasiri et al. assume that each experiment can determine an unknown parameter, which in the case of a GRN means determining whether one particular gene up-regulates or down-regulates another, and they do not specify any particular lab technique to which this corresponds. The experiment to select is then defined as that which minimizes the MOCU of the reduced uncertainty class.</p>
<p>Dehghannasiri et al. tested their approach in simulations in which data were generated from both randomly generated networks and a 10-gene regulatory network of the mammalian cell cycle and a 6-gene network of p53, a tumor suppressor gene. In both cases, they considered the task when 2, 3, 4, or 5 regulatory relationships were unknown. The results with the randomly generated networks showed that the less uncertain the initial network, the larger the gain of selecting an experiment using MOCU over a random selection, where gain was measured in terms of the cost of applying the resultant robust intervention to the true network. Another evaluation metric used was the rate of success and failure of the intervention preventing undesirable states, which showed that MOCU led to a better success rate. The experiments with the mammalian cell cycle network and the p53 network showed similarly a general improvement in intervention success when using MOCU.</p>
</sec>
<sec id="sec012">
<title>Differential equation models</title>
<p>Another approach to modeling a biological network is that of differential equation models of expression levels. Steinke et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref004">4</xref>] represent the expression levels of the <italic>N</italic> genes in a model at time <italic>t</italic> by a vector <bold>x</bold>(<italic>t</italic>) ∈ ℝ<sup><italic>N</italic></sup>, which is governed by the stochastic differential equation (SDE)
<disp-formula id="pcbi.1005466.e025">
<alternatives>
<graphic id="pcbi.1005466.e025g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e025" xlink:type="simple"/>
<mml:math display="block" id="M25">
<mml:mrow><mml:mi>d</mml:mi><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:munder><mml:mrow><mml:mi mathvariant="bold">g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="true">︸</mml:mo></mml:munder><mml:mrow><mml:mtext>dynamics</mml:mtext></mml:mrow></mml:munder><mml:mi>d</mml:mi><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:munder><mml:munder><mml:mrow><mml:mi mathvariant="bold">e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="true">︸</mml:mo></mml:munder><mml:mrow><mml:mtext>perturbation</mml:mtext></mml:mrow></mml:munder><mml:mi>d</mml:mi><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:munder><mml:munder><mml:mrow><mml:mi>d</mml:mi><mml:mi mathvariant="bold">W</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="true">︸</mml:mo></mml:munder><mml:mrow><mml:mtext>noise</mml:mtext></mml:mrow></mml:munder></mml:mrow>
</mml:math>
</alternatives>
<label>(11)</label>
</disp-formula>
where <bold>g</bold>: ℝ<sup><italic>N</italic></sup> → ℝ<sup><italic>N</italic></sup> describes the nonlinear system dynamics of gene regulation, <bold>e</bold>(<italic>t</italic>) represents perturbation caused by an experiment, and <italic>d</italic><bold>W</bold>(<italic>t</italic>) is white noise. Tegnér et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref021">21</xref>] use an ordinary differential equation (ODE) variant of the model without the <italic>d</italic><bold>W</bold>(<italic>t</italic>) term. In both formulations, the goal is to uncover the unknown system dynamics <bold>g</bold>.</p>
<p>The problem of recovering <bold>g</bold> directly is underspecified. A common approach is to restrict the problem to that of discovering a linear approximation of the dynamics around the system's unperturbed steady state instead. Given that the system settles in a steady state <bold>x</bold><sub>0</sub> subject to the absence of perturbation (that is, <bold>e</bold>(<italic>t</italic>) ≡ <bold>0</bold>), linearization of the system about that point yields a linear model of a new steady state <bold>x</bold><sub><bold>e</bold></sub> that would result from applying a constant perturbation <bold>e</bold>(<italic>t</italic>) ≡ <bold>e</bold>:
<disp-formula id="pcbi.1005466.e026">
<alternatives>
<graphic id="pcbi.1005466.e026g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e026" xlink:type="simple"/>
<mml:math display="block" id="M26">
<mml:mrow><mml:mi mathvariant="bold">e</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mi mathvariant="bold">e</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>ε</mml:mi><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(12)</label>
</disp-formula>
Here, <bold>A</bold> is the matrix describing the local linear system dynamics, and <italic>ε</italic> is a noise term from the stochastic model, which Steinke et al. assume to be component-wise independent identically distributed (IID) Gaussian with variance <italic>σ</italic><sup>2</sup>. Nonzero <italic>a</italic><sub><italic>ij</italic></sub> entries correspond to edges in the gene regulatory network. Both Tegnér et al. and Steinke et al. take a common approach and focus on the steady-state differences <bold>x</bold> = <bold>x</bold><sub><bold>e</bold></sub> − <bold>x</bold><sub>0</sub>. This notation simplifies Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e026">12</xref>) to
<disp-formula id="pcbi.1005466.e027">
<alternatives>
<graphic id="pcbi.1005466.e027g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e027" xlink:type="simple"/>
<mml:math display="block" id="M27">
<mml:mrow><mml:mi mathvariant="bold">e</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mi mathvariant="bold">x</mml:mi><mml:mo>+</mml:mo><mml:mi>ε</mml:mi><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(13)</label>
</disp-formula>
The task of learning the gene regulatory network is therefore translated to the task of inferring <bold>A</bold> from observations of expression level differences <bold>x</bold> subject to perturbations <bold>e</bold>.</p>
<sec id="sec013">
<title>Sparse Bayesian model</title>
<p>Steinke et al. employ a Bayesian approach. They treat <bold>A</bold>, <bold>e</bold>, and <bold>x</bold> from Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e027">13</xref>) as random variables, thus converting the task of learning the matrix <bold>A</bold> to that of estimating the posterior distribution ℙ(<bold>A</bold>|<bold>E</bold>,<bold>X</bold>) of <bold>A</bold> given data consisting of the known perturbations <bold>E</bold> and measurements <bold>X</bold>. To estimate this probability, Bayes' rule is employed:
<disp-formula id="pcbi.1005466.e028">
<alternatives>
<graphic id="pcbi.1005466.e028g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e028" xlink:type="simple"/>
<mml:math display="block" id="M28">
<mml:mrow><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="bold">E</mml:mi><mml:mn>,</mml:mn><mml:mi mathvariant="bold">X</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∝</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mn>,</mml:mn><mml:mi mathvariant="bold">X</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mn>.</mml:mn></mml:mrow>
</mml:math>
</alternatives>
<label>(14)</label>
</disp-formula>
The distribution ℙ(<bold>E</bold>|<bold>A</bold>,<bold>X</bold>) is given by the linear model described in Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e027">13</xref>): For a given <bold>A</bold> and <bold>x</bold>, adding the Gaussian noise term <italic>ε</italic> yields a Gaussian centered at <bold>Ax</bold> with covariance matrix <italic>σ</italic><sup>2</sup><bold>I</bold>, or equivalently, <inline-formula id="pcbi.1005466.e029"><alternatives><graphic id="pcbi.1005466.e029g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e029" xlink:type="simple"/><mml:math display="inline" id="M29"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mn>,</mml:mn><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∼</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">Ax</mml:mi><mml:mn>,</mml:mn><mml:msup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi mathvariant="bold">I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. GRNs are known to be sparsely connected, typically averaging less than two transcriptional regulators per gene [<xref ref-type="bibr" rid="pcbi.1005466.ref022">22</xref>]. To reflect this, the prior distribution of <bold>A</bold> is taken to be a Laplace sparsity prior,
<disp-formula id="pcbi.1005466.e030">
<alternatives>
<graphic id="pcbi.1005466.e030g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e030" xlink:type="simple"/>
<mml:math display="block" id="M30">
<mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold">A</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mn>,</mml:mn><mml:mi>j</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mn>,</mml:mn><mml:mspace width="2em"/><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mi>τ</mml:mi><mml:mn>2</mml:mn></mml:mfrac><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(15)</label>
</disp-formula></p>
<p>The experiment selection criterion used by Steinke et al. is an information-theoretic one, conceptually similar to the entropy-based criteria described in methods above. The main principle at work is the estimation of the change in the posterior distribution of <bold>A</bold> that the next experiment (to be selected) would yield. Denote the data available thus far by <inline-formula id="pcbi.1005466.e031"><alternatives><graphic id="pcbi.1005466.e031g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e031" xlink:type="simple"/><mml:math display="inline" id="M31"><mml:mi mathvariant="script">D</mml:mi></mml:math></alternatives></inline-formula> and denote the posterior given data <inline-formula id="pcbi.1005466.e032"><alternatives><graphic id="pcbi.1005466.e032g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e032" xlink:type="simple"/><mml:math display="inline" id="M32"><mml:mi mathvariant="script">D</mml:mi></mml:math></alternatives></inline-formula> by <inline-formula id="pcbi.1005466.e033"><alternatives><graphic id="pcbi.1005466.e033g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e033" xlink:type="simple"/><mml:math display="inline" id="M33"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. Let (<bold>e</bold><sub>*</sub>,<bold>x</bold><sub>*</sub>) represent an experiment and its outcome, and denote the posterior after the additional experiment by <inline-formula id="pcbi.1005466.e034"><alternatives><graphic id="pcbi.1005466.e034g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e034" xlink:type="simple"/><mml:math display="inline" id="M34"><mml:mrow><mml:msup><mml:mi>Q</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">e</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mn>,</mml:mn><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>}</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. A measure of the uncertainty in <italic>Q</italic> is the differential entropy <inline-formula id="pcbi.1005466.e035"><alternatives><graphic id="pcbi.1005466.e035g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e035" xlink:type="simple"/><mml:math display="inline" id="M35"><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mi>Q</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mo>−</mml:mo><mml:mi mathvariant="normal">log</mml:mi><mml:mi>Q</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, hence, given the posterior <italic>Q</italic>′, the change in uncertainty due to observing the experiment is the Kullback–Leibler divergence [<xref ref-type="bibr" rid="pcbi.1005466.ref023">23</xref>] between <italic>Q</italic>′ and <italic>Q</italic>,
<disp-formula id="pcbi.1005466.e036">
<alternatives>
<graphic id="pcbi.1005466.e036g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e036" xlink:type="simple"/>
<mml:math display="block" id="M36">
<mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">e</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mn>,</mml:mn><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>K</mml:mi><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">‖</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:msup><mml:mi>Q</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi mathvariant="normal">log</mml:mi><mml:msup><mml:mi>Q</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>−</mml:mo><mml:mi mathvariant="normal">log</mml:mi><mml:mi>Q</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mn>.</mml:mn></mml:mrow>
</mml:math>
</alternatives>
<label>(16)</label>
</disp-formula>
The choice of model in this setting enables efficient computation of the information gain for a specific experimental outcome (<bold>e</bold><sub>*</sub>,<bold>x</bold><sub>*</sub>). The outcome of an experiment, however, is not known before it is performed. The current model, however, can yield a distribution <italic>Q</italic>(<bold>X</bold><sub>*</sub>|<bold>e</bold><sub>*</sub>) for the outcome as a random variable <bold>X</bold><sub>*</sub> predicted based on <bold>e</bold><sub>*</sub>, according to the current distribution <italic>Q</italic>(<bold>A</bold>). This distribution is used to obtain the expected information gain
<disp-formula id="pcbi.1005466.e037">
<alternatives>
<graphic id="pcbi.1005466.e037g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e037" xlink:type="simple"/>
<mml:math display="block" id="M37">
<mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">e</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold">e</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">e</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mn>,</mml:mn><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">X</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold">e</mml:mi><mml:mo>*</mml:mo></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>K</mml:mi><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">‖</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(17)</label>
</disp-formula>
which is used as the criterion for selecting an experiment. Given a list of candidate perturbations to perform, the method identifies the perturbation <bold>e</bold><sub>*</sub> which maximizes this score.</p>
<p>Steinke et al. evaluated the method on simulated data generated by randomly constructed networks with nonlinear Hill-type kinetics. They also evaluated the method using the Drosophila segment polarity network [<xref ref-type="bibr" rid="pcbi.1005466.ref024">24</xref>].</p>
</sec>
<sec id="sec014">
<title>Reverse engineering a linear gene network model</title>
<p>Tegnér et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref021">21</xref>] approach the task of reconstructing a GRN as that of fitting a linear gene network model. They take the approach of approximating the ODE by a linear function around the unperturbed steady state
<disp-formula id="pcbi.1005466.e038">
<alternatives>
<graphic id="pcbi.1005466.e038g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e038" xlink:type="simple"/>
<mml:math display="block" id="M38">
<mml:mrow><mml:mi mathvariant="bold">e</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold">Ax</mml:mi></mml:mrow>
</mml:math>
</alternatives>
<label>(18)</label>
</disp-formula>
where <bold>e</bold> is a vector representing the perturbation, and <bold>x</bold> is a vector representing the observed change from the steady state of gene expression levels. In order to fit this model, the system under study must be observed across a variety of deviations from the steady state.</p>
<p>Tegnér et al. present a reverse-engineering algorithm that ensures that changes are observed in all genes of interest (in the context of this review, “perturbation” means that a gene was directly manipulated by an experiment, while “change” encompasses all changes of expression [either from direct perturbation or indirectly as a result of perturbation in a different gene]; Tegnér et al. use slightly different terminology). Experiment selection is broken up into several stages. Initially, when no data is available, two measurements are performed: one of the unperturbed steady state and another of the steady state resulting from the perturbation of a single randomly selected gene. Presumably, the outcome of perturbing this gene will yield changes of varying degree in other genes as well.</p>
<p>The second phase ensures that the expression level of every gene has been changed beyond a prespecified threshold in some experiment, either from direct perturbation or indirectly as a consequence of perturbing another gene. The algorithm dictates that the next gene to be perturbed (of the genes that have not yet been perturbed) is the one that has shown the least change in any of the previous experiments. This is repeated until all genes have shown a change beyond the prespecified threshold.</p>
<p>In the third phase, genes to perturb are selected iteratively until the model matrix <italic>A</italic> is reconstructed. For each previously done experiment and each gene, a solution to Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e038">18</xref>) is produced that estimates the inputs to the gene (a gene <italic>j</italic> is an input to gene <italic>i</italic> when the corresponding entry in <italic>A</italic> is nonzero). Next, for each gene <italic>i</italic> and each gene <italic>j</italic>, the variance of the level of <italic>j</italic> when it is taken as input to gene <italic>i</italic> across all solutions is computed, and a ranked list of genes <italic>j</italic> is produced for each gene <italic>i</italic>. The ranking for each gene <italic>j</italic> is summed to produce a single number that represents how much that gene varies across solutions in a relative sense. The highest ranking genes are selected for perturbation experiments, and the process is repeated until sufficient perturbations have been performed to reconstruct <italic>A</italic>.</p>
<p>Tegnér et al. tested their method in simulations on a model of the segmentation polarity network in <italic>Drosophila</italic> and showed ability to recover the network structure even when the simulating model is nonlinear, in spite of the fact that the inferred model is linear.</p>
</sec>
<sec id="sec015">
<title>A difference criterion for differential equation models</title>
<p>Another experiment selection criterion that has been proposed for differential equation models is based on the idea of maximizing differences between the outcomes of an experiment under competing models. The maximum difference criterion of Atias et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref006">6</xref>] discussed above parallels a similar approach for ODE models by Mélykúti et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref025">25</xref>]. Mélykúti et al. focus abstractly on the problem of designing the experiment that would distinguish between a pair of ODE models. Specifically, experimental design consists of specifying the values of a subset of input variables that can be manipulated experimentally. Given that the system has a set of output variables that are measured and two rival models that need to be distinguished, the approach designs an experiment that maximizes the <italic>L</italic><sub>2</sub>-norm of the difference between the predicted outputs of the two models considered.</p>
</sec>
</sec>
<sec id="sec016">
<title>Purely structural model</title>
<p>Ud-Dean and Gunawan [<xref ref-type="bibr" rid="pcbi.1005466.ref026">26</xref>] take an approach to learning GRNs in which only the network structure is explicitly modeled. This is unlike Bayesian and Boolean networks, which explicitly model the expression levels or abundances of genes or proteins that correspond to nodes in the graph structure. Ud-Dean and Gunawan make the assumption that a knockout (KO) of a gene causes differential expression in all genes that are downstream of it (its descendants) in the network. This assumption is used to eliminate network structures that are inconsistent with data.</p>
<p>Taking in gene expression profiles under various single KO conditions as initial data, the algorithm determines ancestry relationships among all the genes in the network. The ancestries are determined by following the assumption above: if gene <italic>j</italic> shows differential expression between the wild-type and a knockout of gene <italic>i</italic>, then gene <italic>i</italic> is taken to be an ancestor of gene <italic>j</italic> in the network. Differential expression is determined by performing a two-sample <italic>t</italic> test on expression level measurements. These ancestry relationships are then translated into an “upperbound” network and a “lowerbound” network. The lowerbound contains only edges that are necessary to satisfy the ancestry relationships, meaning that removing any edge from the lowerbound network would make some node <italic>i</italic> a non-ancestor of node <italic>j</italic> when it was determined that <italic>i</italic> is an ancestor of <italic>j</italic>. The upperbound contains all edges that can possibly satisfy the ancestry relationships, meaning that adding any edge to the upperbound network would make some node <italic>i</italic> an ancestor of node <italic>j</italic> when it was determined that <italic>i</italic> is not ancestor of <italic>j</italic>. Edges that are present in the upperbound network and are absent in the lowerbound network are then considered uncertain.</p>
<p>The task of the active learning procedure is to test hypotheses about the presence of uncertain edges. The query that the procedure constructs consists of a collection of multiple-KO experiments, characterized by a background deletion <inline-formula id="pcbi.1005466.e039"><alternatives><graphic id="pcbi.1005466.e039g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e039" xlink:type="simple"/><mml:math display="inline" id="M39"><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mrow><mml:mi>K</mml:mi><mml:mi>O</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> of one or more genes and a set of genes <italic>I</italic><sup>*</sup> to be individually deleted in the presence of the background deletion. For example, referring to genes by numbers, if <inline-formula id="pcbi.1005466.e040"><alternatives><graphic id="pcbi.1005466.e040g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e040" xlink:type="simple"/><mml:math display="inline" id="M40"><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mrow><mml:mi>K</mml:mi><mml:mi>O</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>1,3,5</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> and <italic>I</italic><sup>*</sup> = {2,4}, one would perform the background triple-knockout {1,3,5} and the two quadruple-knockouts, {1,2,3,5} and {1,3,4,5}.</p>
<p>The purpose of using a background KO is to eliminate indirect paths from genes <italic>i</italic> to <italic>j</italic> when testing a hypothesis about the presence of an uncertain edge from <italic>i</italic> to <italic>j</italic>. The expression of gene <italic>j</italic> is measured subject to the background KO and subject to the KO of gene <italic>i</italic> in conjunction with the background KO, and a two-sample <italic>t</italic> test is used to determine differential expression of <italic>j</italic> between these KO conditions. Rejection of the null hypothesis indicates the presence of the edge from <italic>i</italic> to <italic>j</italic>, and the edge is consequently added to the lowerbound, while failure to reject the null hypothesis indicates the absence of the edge, and the edge is consequently removed from the upperbound.</p>
<p>The criterion that Ud-Dean and Gunawan use maximizes the number of uncertain edges that can be verified using a particular background KO. They apply some constraints to reduce the complexity of the optimization problem and use a genetic algorithm to solve it, meaning that the background KO's selected might not be perfectly optimal. Some other practical considerations include constraining the number of KOs that can be selected, as well as restricting the algorithm from selecting KO combinations that are known to be lethal. Simulations showed that the method was able to recover a GRN more faithfully than one can from the set of all double-KOs, using significantly fewer experiments. Moreover, the GRN was perfectly recovered in simulations with no noise in the data (that is, ones where differential expression was correctly identified) and the assumption about differential expression happening downstream of a perturbation knockout held.</p>
</sec>
</sec>
<sec id="sec017">
<title>Active learning with prior knowledge</title>
<p>This section summarizes methods that extensively incorporate prior knowledge about the biological system of interest in modeling the networks and designing experiments. While reliance on prior knowledge sacrifices generality, it often facilitates more accurate modeling of biological systems when targeting specific questions about those systems. Each work summarized here aims to answer a specific question in a specific biological domain. As a result, the type of model used, prior knowledge incorporated, and knowledge discovered in each method is different.</p>
<sec id="sec018">
<title>Validation and refinement of gene regulatory models in yeast</title>
<p>Yeang et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref003">3</xref>] aimed to elucidate regulatory relationships among genes and proteins in yeast (<italic>Saccharomyces cerevisiae</italic>). They combined data from prior knowledge and data from knockout experiments in order to produce a network representation of the regulatory relationships, the physical network model. In a physical network, nodes represent genes and proteins, and the edges between them represent induction/repression for protein–DNA interaction and activation/inhibition for protein–protein interactions. In this setting, multiple networks can provide equally probable competing explanations for the data available, and the role of active learning is to design additional knockout experiments that would resolve such uncertainty.</p>
<p>The prior knowledge Yeang et al. use comes from databases of protein–protein and protein–gene interactions. Specifically, they used promoter-binding interactions for transcription factors measured by Chromatin immunoprecipitation microarray (ChIP-chip) [<xref ref-type="bibr" rid="pcbi.1005466.ref027">27</xref>] and protein–protein interactions recorded in the Database of Interacting Proteins (DIP) [<xref ref-type="bibr" rid="pcbi.1005466.ref028">28</xref>]. This data is combined to build a skeleton graph of possible interactions between proteins and genes. In the skeleton graph, protein–protein interactions are undirected. Protein–gene interactions are directed from the proteins to the genes, since these are promoter-binding interactions. The resulting skeleton graph constitutes a summary of potentially relevant interactions. Yeang et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref029">29</xref>] developed a method that takes this information and combines it with experimental data (specifically, mRNA expression profiles from individual gene-deletion experiments) to produce an output network that contains a subset of the skeleton graph's edges and in which all edges are directed and have signs (are annotated as inducing/repressing for protein–DNA interactions and activating/inhibiting for protein–protein interactions).</p>
<p>To infer a fully specified physical network from the skeleton graph, prior knowledge, and experimental data, Yeang et al. use a factor graph [<xref ref-type="bibr" rid="pcbi.1005466.ref030">30</xref>], a type of probabilistic graphical model, to formalize the problem mathematically. In a factor graph, a joint probability distribution is defined over a collection of variables <bold>Y</bold> = <italic>Y</italic><sub>1</sub>,…,<italic>Y</italic><sub><italic>p</italic></sub> (taking values in some space <inline-formula id="pcbi.1005466.e041"><alternatives><graphic id="pcbi.1005466.e041g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e041" xlink:type="simple"/><mml:math display="inline" id="M41"><mml:mi mathvariant="script">Y</mml:mi></mml:math></alternatives></inline-formula>) in terms of a collection of <italic>factors</italic> (also known as potential functions). Each factor is a function <inline-formula id="pcbi.1005466.e042"><alternatives><graphic id="pcbi.1005466.e042g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e042" xlink:type="simple"/><mml:math display="inline" id="M42"><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi mathvariant="script">Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>→</mml:mo><mml:mi>ℝ</mml:mi></mml:mrow></mml:math></alternatives></inline-formula> of a subset of the variables <bold>Y</bold><sub><italic>i</italic></sub> ⊂ <bold>Y</bold>. The joint probability of a particular assignment of all variables to values <bold>y</bold> is then defined as proportional to the product of all factors evaluated at <bold>y</bold>:
<disp-formula id="pcbi.1005466.e043">
<alternatives>
<graphic id="pcbi.1005466.e043g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e043" xlink:type="simple"/>
<mml:math display="block" id="M43">
<mml:mrow><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>Z</mml:mi></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mi>i</mml:mi></mml:munder></mml:mstyle><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="2em"/><mml:mtext>where</mml:mtext><mml:mspace width="1em"/><mml:mi>Z</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold">y</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Y</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mi>i</mml:mi></mml:munder></mml:mstyle><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold">y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mn>.</mml:mn></mml:mrow>
</mml:math>
</alternatives>
<label>(19)</label>
</disp-formula>
In order to frame the problem of finding a physical network as a factor graph, Yeang et al. define binary variables that represent edge presence and direction for every possible edge (based on the skeleton graph); they define factors that correspond to evidence for protein–gene edge presence from chIP location analysis p-values, factors that correspond to evidence for protein–protein edge presence based on expression profile reliability (EPR) and paralogous verification method (PVM) [<xref ref-type="bibr" rid="pcbi.1005466.ref031">31</xref>] tests; and they define factors that correspond to each knockout experiment (representing the constraint that there must be a causal path from a knockout to its observed effects). Once the factor graph is defined, the maximum a posteriori (MAP) physical network is produced using the max-product algorithm, an efficient algorithm for finding the MAP variable assignment of a factor graph [<xref ref-type="bibr" rid="pcbi.1005466.ref030">30</xref>]. When there are multiple output networks that are equally most probable, additional experiments are necessary to arrive at a single network.</p>
<p>To efficiently select experiments, Yeang et al. use expected information gain as the criterion for selecting experiments. The information gain is computed as follows: let <italic>M</italic> represent the set of most-likely networks that were inferred from available data, and let <italic>X</italic> be the set of possible expression changes (outcomes) due to an experiment <italic>e</italic>. The information gain is a difference between the entropies of the model space before and after an experiment:
<disp-formula id="pcbi.1005466.e044">
<alternatives>
<graphic id="pcbi.1005466.e044g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e044" xlink:type="simple"/>
<mml:math display="block" id="M44">
<mml:mrow><mml:mi mathvariant="script">I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mo>;</mml:mo><mml:mi>X</mml:mi><mml:mn>,</mml:mn><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi><mml:mn>,</mml:mn><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:mi>X</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mn>,</mml:mn><mml:mi>x</mml:mi><mml:mn>,</mml:mn><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mn>,</mml:mn><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(20)</label>
</disp-formula>
The factor graph is used to compute the probabilities to obtain the information gain for each potential deletion experiment <italic>e</italic>, and the experiment that maximizes this quantity is selected. This follows the common theme present throughout this review, wherein the experiment is selected based on the decrease in model-space entropy it is expected to yield.</p>
<p>In the process of refining and validating the GRN of yeast, Yeang et al. used factor graph inference to account for 273 individual gene-deletion experiments, wherein gene expression profiles were measured by microarray. The effects of the knockouts were explained by paths in the physical network produced by the factor graph inference; these paths covered 965 interactions, of which 194 effects were uniquely determined and 771 were ambiguous. An example of an ambiguous interaction that they present is the explanation of up-regulation of promoters bound by Msn4p in a <italic>swi</italic>Δ knockout: "[O]ne scenario is that <italic>SWI4</italic> activates <italic>SOK2</italic> and <italic>SOK2</italic> represses <italic>MSN4</italic>, whereas another is that <italic>SWI4</italic> represses <italic>SOK2</italic> and <italic>SOK2</italic> activates <italic>MSN4</italic>." Paths with such ambiguous interactions were partitioned into 37 independent network models (numbered 1–37), and all remaining unambiguous interactions were put into one model (numbered as Model 0). Yeang et al. found confirmation in the literature for 50 of the 132 interactions in Model 0. To validate the ambiguous models, the information theoretic criterion was used to produce a ranked list of knockout experiments and found that 3 of the top 10 highest ranked experiments were targeting Model 1. For this reason, they focused on Model 1 in their analysis and reported that the four highest-ranking knockouts for Model 1 were conducted (namely <italic>sok</italic>2Δ,<italic>yap</italic>6Δ,<italic>hap</italic>4Δ, and <italic>msn</italic>4Δ). Using the data from these experiments, factor graph inference fully disambiguated Model 1 by disambiguating 60 protein–DNA interactions.</p>
</sec>
<sec id="sec019">
<title>Adam the Robot Scientist</title>
<p>King et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref032">32</xref>] aimed to identify the genes that encode orphan enzymes in the aromatic amino acid (AAA) synthesis pathway in <italic>S</italic>. <italic>cerevisiae</italic>. Orphan enzymes are those for which the encoding genes are not known. These enzymes are nevertheless believed to be present because they catalyze reactions that are thought to occur in the given organism. King et al. combine knowledge of the yeast metabolic pathway and a database of genes and proteins involved in metabolism to design experiments that test whether a particular gene codes for a particular enzyme. The role of active learning in this setting is to select experiments in a manner that minimizes the total cost of identifying the genes that code for all the orphan enzymes in the pathway.</p>
<p>To accomplish this task, King et al. designed and implemented Adam the Robot Scientist. Adam was remarkable in that it was more than just a software system that selects experiments: it autonomously controlled lab equipment that conducted the proposed experiments, recorded the results, and used the results to update the model without any human intervention at any point of the active learning loop (beyond maintenance of the equipment and replenishment of supplies for experiments). Adam combined prior knowledge of the AAA pathway and results from its own experiments to iteratively perform auxotrophic growth experiments until all orphan enzymes were associated with their genes.</p>
<p>The prior knowledge that Adam used consists of a model of yeast metabolism and a database of genes and proteins involved in metabolism. This knowledge was encoded manually into a Prolog program. The resultant model could then be used to infer how the AAA pathway would behave in the absence of a particular enzyme in a particular growth medium. The uncertain component of the model is the assignment of orphan enzymes to genes, and the goal was to find the correct assignment.</p>
<p>Auxotrophic growth experiments are a common technique for discovering the details of a metabolic pathway. In such an experiment, a deletion mutant is grown in a specified growth medium, and growth is measured. For example, to test whether a gene codes for a specific enzyme, one would grow mutants where that gene is deleted. When grown in a medium that contains the metabolite product of the enzyme's reaction, the cells should grow as normal, but growth in the absence of the metabolite should be hindered. The outcome of each experiment can be viewed as either positive or negative, depending on whether growth was hindered. Therefore, to design an auxotrophic growth experiment, a decision must be made about what gene is to be deleted and what metabolites the growth medium should contain.</p>
<p>The experiments in this study were designed using a cost function. Many of the approaches discussed in this review focus on minimizing the number of experiments performed, which can be viewed as minimizing a cost function where each experiment has equal cost. King et al., however, use a cost function that also factors in the monetary cost of the materials used. The cost function calculates the expected cost of narrowing down from a set of mutually exclusive hypotheses to a single hypothesis using a set of possible experiments, where each hypothesis is an assignment of a gene to an enzyme. The idea is that each experiment <italic>e</italic> divides a set of mutually exclusive hypotheses <italic>M</italic> into two subsets, <italic>M</italic><sub>[<italic>e</italic>]</sub> and <inline-formula id="pcbi.1005466.e045"><alternatives><graphic id="pcbi.1005466.e045g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e045" xlink:type="simple"/><mml:math display="inline" id="M45"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, representing, respectively, those hypotheses that are consistent with a positive outcome of <italic>e</italic> and those that are consistent with a negative outcome. Given a set of hypotheses <italic>M</italic> and a set of possible experiments <italic>E</italic>, the minimum expected cost of arriving at the single correct hypothesis by experimentation is defined by the recurrence:
<disp-formula id="pcbi.1005466.e046">
<alternatives>
<graphic id="pcbi.1005466.e046g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e046" xlink:type="simple"/>
<mml:math display="block" id="M46">
<mml:mrow><mml:mi>E</mml:mi><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>∅</mml:mo><mml:mn>,</mml:mn><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow>
</mml:math>
</alternatives>
<label>(21)</label>
</disp-formula>
<disp-formula id="pcbi.1005466.e047">
<alternatives>
<graphic id="pcbi.1005466.e047g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e047" xlink:type="simple"/>
<mml:math display="block" id="M47">
<mml:mrow><mml:mi>E</mml:mi><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>{</mml:mo><mml:mi>m</mml:mi><mml:mo>}</mml:mo><mml:mn>,</mml:mn><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow>
</mml:math>
</alternatives>
<label>(22)</label>
</disp-formula>
<disp-formula id="pcbi.1005466.e048">
<alternatives>
<graphic id="pcbi.1005466.e048g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e048" xlink:type="simple"/>
<mml:math display="block" id="M48">
<mml:mrow><mml:mi>E</mml:mi><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mn>,</mml:mn><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="normal">min</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>E</mml:mi><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mn>,</mml:mn><mml:mi>E</mml:mi><mml:mo>−</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mi>E</mml:mi><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:msub><mml:mn>,</mml:mn><mml:mi>E</mml:mi><mml:mo>−</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow>
</mml:math>
</alternatives>
<label>(23)</label>
</disp-formula>
where <italic>C</italic><sub><italic>e</italic></sub> is the cost of experiment <italic>e</italic> and ℙ(<italic>e</italic>) is the probability that the outcome of <italic>e</italic> is positive. Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e046">21</xref>) represents the case in which we have no plausible hypotheses remaining and the expected cost is therefore 0, since no more experiments are needed; and Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e047">22</xref>) represents the case where we have successfully narrowed down our hypothesis set to a single hypothesis <italic>m</italic>, and the expected cost is again 0, since no additional experiments are needed. The probability of a positive experiment outcome is computed as the sum of the probabilities of the hypotheses that are consistent with that outcome. It is generally intractable to compute the expected cost exactly, because every possible sequence of experiments with both positive and negative outcomes for each experiment would need to be considered. Consequently, the system uses an approximation to this cost function [<xref ref-type="bibr" rid="pcbi.1005466.ref033">33</xref>]
<disp-formula id="pcbi.1005466.e049">
<alternatives>
<graphic id="pcbi.1005466.e049g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e049" xlink:type="simple"/>
<mml:math display="block" id="M49">
<mml:mrow><mml:mi>E</mml:mi><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mn>,</mml:mn><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≈</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="normal">min</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>−</mml:mo><mml:mo>{</mml:mo><mml:mi>e</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:munder></mml:mstyle><mml:msub><mml:mi>C</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow>
</mml:math>
</alternatives>
<label>(24)</label>
</disp-formula>
<disp-formula id="pcbi.1005466.e050">
<alternatives>
<graphic id="pcbi.1005466.e050g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e050" xlink:type="simple"/>
<mml:math display="block" id="M50">
<mml:mrow><mml:mtext>where</mml:mtext><mml:mspace width="2em"/><mml:msub><mml:mi>J</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">⌊</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">⌋</mml:mo><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(25)</label>
</disp-formula>
In this approximation, the term <inline-formula id="pcbi.1005466.e051"><alternatives><graphic id="pcbi.1005466.e051g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e051" xlink:type="simple"/><mml:math display="inline" id="M51"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>−</mml:mo><mml:mo>{</mml:mo><mml:mi>e</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msub></mml:mstyle><mml:msub><mml:mi>C</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> is the average cost of an experiment in <italic>E</italic> excluding <italic>e</italic> (the cost <italic>C</italic><sub><italic>e</italic></sub> of <italic>e</italic> is added directly), and the term <inline-formula id="pcbi.1005466.e052"><alternatives><graphic id="pcbi.1005466.e052g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e052" xlink:type="simple"/><mml:math display="inline" id="M52"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> is an estimate of the number of future experiments that would be performed after <italic>e</italic>. The estimate for the number of future experiments is based on Shannon's source coding theorem [<xref ref-type="bibr" rid="pcbi.1005466.ref034">34</xref>]. Given the task of designing a code to transmit a message, where the probability of encountering a message <italic>i</italic> is ℙ(<italic>i</italic>), the length of a binary code for <italic>i</italic> in an optimal coding scheme is −log<sub>2</sub>ℙ(<italic>i</italic>). If we consider the outcomes of experiments to be analogous to bits in a coding scheme, where the outcomes of a series of experiments “encode” each hypothesis by eliminating all other hypotheses, then we get that the number of experiments needed to eliminate all hypotheses except <italic>m</italic> is at most ⌈−log<sub>2</sub>ℙ(<italic>m</italic>)⌉, where the quantity is rounded up to ensure an integer number of trials. <italic>J</italic><sub><italic>M</italic></sub> in Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e050">25</xref>) is simply the probability-weighted average of this quantity for any hypothesis in <italic>M</italic>, and it corresponds to the entropy of the set of hypotheses. Adam used the approximation in Eq (<xref ref-type="disp-formula" rid="pcbi.1005466.e049">24</xref>) to select the next experiment <italic>e</italic> at each iteration of the process of narrowing down the hypothesis space.</p>
<p>King et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref035">35</xref>] document development of the system, including testing of the cost function against previously collected data on known-function genes. The tests showed that the system outperformed both a random strategy and a "cheapest trial" strategy—one in which the next cheapest available experiment is selected at each iteration, without consideration of the hypotheses it rejects or the projected cost of future experiments. Additionaly, performance was comparable, in terms of cost and number of trials, to that of humans (computer science and biology graduate students).</p>
<p>King et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref032">32</xref>] report that Adam formulated and tested 20 hypotheses concerning gene encodings of 13 orphan enzymes. Twelve hypotheses with no previous evidence were confirmed. A hypothesis about one enzyme was confirmed experimentally. A literature survey confirmed strong empirical evidence for the correctness of six of the hypotheses (i.e., the enzymes were not orphans in retrospect).</p>
</sec>
<sec id="sec020">
<title>Regulatory mechanisms downstream of a signaling pathway</title>
<p>Szczurek et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref002">2</xref>] aim to reveal mechanisms of transcription regulation in the cell (specifically, to match transcription factors in a signaling pathway to the genes they regulate based on expression profiles under gene knockout and overexpression experiments). They identify two major challenges that cause ambiguity in inferring such relationships from expression profile data. One issue occurs when a transcription factor is inactive in all experiments conducted. In this case, its targets cannot be revealed. The second issue occurs when two transcription factors in two distinct pathways are both activated in a set of experiments. In this event, genes that are regulated by either one of the transcription factors erroneously appear to be coregulated by both, even if there is no coregulation. The role of active learning in this setting is to design experiments that reduce such ambiguities.</p>
<p>Szczurek et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref002">2</xref>] introduce model expansion experimental design (MEED), an active learning algorithm for the task. MEED requires knowledge of the signaling pathway as input in the form of a predictive logical model. The process MEED uses has two parts: an expansion procedure that identifies regulatory modules and an experimental design step that uses the model to propose a collection of experiments that would disambiguate any ambiguous modules.</p>
<p>A regulatory module is a group of genes such that all the genes in the group are regulated by the same transcription factor. A simplifying modeling assumption that Szczurek at al. make is that each gene is regulated by only one transcription factor. A regulatory module is considered ambiguous when there are multiple possible transcription factors that may regulate a gene in a manner that is consistent with the data.</p>
<p>The matching of transcription factors to genes is done by the expansion procedure. The procedure uses the model of the signaling network and data from previous experiments. The type of experiment conducted may involve the manipulation (deletion or overexpression) of a gene in the signaling pathway and some input stimulus. The data measured in the experiment represent levels of gene expression. The signaling network model is used to predict the activation of the downstream genes in the network based on the stimulus and manipulation. Some of these downstream genes code for potential transcription factors. The expansion procedure searches for genes whose activation patterns are statistically associated with the predicted activation patterns of the potential transcription factors. Thus, a set of genes that matches the activation pattern of a particular potential transcription factor is identified as a regulatory module that is regulated by that transcription factor. When there are multiple transcription factors that show the same activation patterns throughout all experiments observed, a regulatory module that matches any one of the factors consequently matches the others in that group as well. When there are multiple transcription factors that match a regulatory module, the module is ambiguous in the sense that it is unknown which transcription factor regulates which genes in the module. In order to disambiguate ambiguous regulatory modules, the goal of MEED is to propose a set of experiments that maximizes the number of different activation patterns exhibited by all potential transcription factors and, moreover, to do so using the smallest possible number of experiments.</p>
<p>The principle that the experimental design follows is that of maximizing entropy. Specifically, for a set of experiments <italic>E</italic>, the calculation is as follows. A set of transcription factors that show the same activation patterns and regulate genes in the same manner form a regulatory program. Let <italic>r</italic> be the number of possible regulatory programs. A set of experiments <italic>E</italic> partitions the space of possible regulatory programs into <italic>n</italic> disjoint blocks with <italic>n</italic><sub><italic>b</italic></sub>,(1 ≤ <italic>n</italic><sub><italic>b</italic></sub> ≤ <italic>r</italic>) programs in each block indexed by <italic>b</italic>,(1 ≤ <italic>b</italic> ≤ <italic>n</italic>). Each block is consistent with a different potential set of gene expression profiles as outcomes of the set of experiments. The entropy of this partition is
<disp-formula id="pcbi.1005466.e053">
<alternatives>
<graphic id="pcbi.1005466.e053g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e053" xlink:type="simple"/>
<mml:math display="block" id="M53">
<mml:mrow><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:mfrac><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mi>r</mml:mi></mml:mfrac><mml:mi mathvariant="normal">log</mml:mi><mml:mfrac><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mi>r</mml:mi></mml:mfrac><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(26)</label>
</disp-formula></p>
<p>Ideally, the set of experiments <italic>E</italic> selected is one that maximizes this entropy. However, because it is intractable to consider all possible sets of experiments <italic>E</italic>, MEED instead constructs a list of experiments <italic>e</italic><sub>1</sub>,<italic>e</italic><sub>2</sub>,<italic>e</italic><sub>3</sub>,… in a greedy fashion. The first experiment <italic>e</italic><sub>1</sub> is the single experiment that maximizes the entropy <italic>H</italic>({<italic>e</italic><sub>1</sub>}) for sets of one experiment. Each subsequent experiment <italic>e</italic><sub><italic>j</italic></sub> is chosen such that it maximizes the entropy of the list <italic>H</italic>({<italic>e</italic><sub>1</sub>,…,<italic>e</italic><sub><italic>j</italic></sub>}) given that the the selections of the preceding experiments <italic>e</italic><sub>1</sub>,…,<italic>e</italic><sub><italic>j</italic>−1</sub> have been fixed. MEED adds experiments to the list in this manner until either all potential experiments are listed or the entropy cannot be further maximized. The top several experiments in the resulting list can then be conducted in the laboratory, with practical considerations dictating the precise number of experiments.</p>
<p>MEED is unlike most other active learning methods discussed in this review in that it is designed to select sets of experiments rather than a single experiment at a time. If the active learning procedure selects one experiment at a time, this necessitates performing the experiments sequentially, performing a single experiment before feeding its results to the method to select the next one. In practice, performing multiple experiments in parallel rather than sequentially can be more time- and cost-efficient. Szczurek et al. tested whether it is actually necessary to score experiments jointly as MEED does or whether selecting top-ranked (by <italic>H</italic>({<italic>e</italic>})) individual experiments suffices for parallel experimentation. Using a simulation, they found that the MEED strategy performs much more efficiently.</p>
<p>In quantifying the performance of compared methods, Szczurek et al. measure the fraction of undistinguished pairs (FUP) for a set of experiments <italic>E</italic>. This is defined formally as
<disp-formula id="pcbi.1005466.e054">
<alternatives>
<graphic id="pcbi.1005466.e054g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005466.e054" xlink:type="simple"/>
<mml:math display="block" id="M54">
<mml:mrow><mml:mi>F</mml:mi><mml:mi>U</mml:mi><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow>
</mml:math>
</alternatives>
<label>(27)</label>
</disp-formula>
where <italic>n</italic><sub><italic>c</italic></sub>, <italic>C</italic>, and <italic>r</italic> are as above. This score computes the fraction of regulatory program pairs that were not distinguished by the set of experiments out of the total set of regulatory program pairs; a value of 0 corresponds to distinguishing all regulatory programs, while a value of 1 corresponds to distinguishing none.</p>
<p>Szczurek et al. applied MEED to the yeast signaling pathway responsible for cellular response to hypersonic and pheromone triggers [<xref ref-type="bibr" rid="pcbi.1005466.ref002">2</xref>]. They report that MEED outperforms other methods (including the method developed by Ideker et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref001">1</xref>]) when tested with real data from 25 experiments previously reported in the literature. Performance was evaluated by plotting a learning curve of FUP score over number of experiments performed, with MEED showing consistently lower (hence, better) FUP scores throughout the learning process. As additional validation, having provided MEED with all available experimental results, they examine the regulatory modules identified by the expansion procedure and identify corroborating evidence for their validity in the literature.</p>
</sec>
</sec>
<sec id="sec021" sec-type="conclusions">
<title>Conclusions</title>
<p>There are several dimensions across which methods for active learning of biological networks can be readily compared. <xref ref-type="fig" rid="pcbi.1005466.g002">Fig 2</xref> summarizes the models discussed in this review in terms of these dimensions. The defining feature of active learning is the selection of experiments to improve the underlying model. The majority of methods reviewed here use entropy or a related measure (such as information gain or Kullback–Leibler divergence) to select experiments. The intuitive explanation for the effectiveness of these measures is that the experiments that lead to high entropy in the model space or outcome space highly fragment those spaces. This means that a single outcome of the experiment will select one of many small fragments of the space, thereby significantly narrowing down that space.</p>
<fig id="pcbi.1005466.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005466.g002</object-id>
<label>Fig 2</label>
<caption>
<title>A brief summary of reviewed methods.</title>
<p>Icons arranged in the table represent individual methods. The columns represent the various experiment selection criteria, and the methods are divided vertically between de novo methods and methods that use prior knowledge. Visual elements in each icon indicate whether the method is deterministic (cog) or stochastic (die), whether it models continuous (circle) or discrete (diamond) variables, what is specified in a query for an experiment (G for genetic and E for environmental perturbations), and the dimensionality of the data used (dot array for multidimensional data and a ruler for one-dimensional data).</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005466.g002" xlink:type="simple"/>
</fig>
<p>Other experiment selection criteria also share themes across approaches. Both King et al. and Dehgahannasiri et al. minimize a variant of expected cost. Both Atias et al. and and Mélykúti et al. maximize the difference between predicted outcomes of competing models. Somewhat similarly, Tegnér et al. select experiments that maximize variation in predicted expression among perturbed genes across competing solutions. Minimax criteria are explored by He and Geng as well as Hauser and Bühlmann. Ud-Dean and Gunawan select background knockout combinations that can be used to test a maximal number of hypotheses about individual edges.</p>
<p><xref ref-type="fig" rid="pcbi.1005466.g002">Fig 2</xref> also characterizes multiple modeling aspects in the methods. The models by Ud-Dean and Gunawan and by Yeang et al. only represent characteristics of the edges in the network structure and treat those as discrete variables. The other approaches reviewed involve some modeling of gene expression levels or molecular abundances, which may be represented as discrete or continuous variables, where the values of the variables are viewed as deterministic quantities or as random quantities. The methods also differ in whether they have mechanisms for incorporating prior knowledge and how this knowledge is incorporated.</p>
<p>We find that the entropy-based criteria have the advantage of following a simple mathematical paradigm that translates well across models: there is typically a natural way to express entropy in a model space, whether the model is a Boolean network, a Bayesian network, a differential equation, a physical network, etc. The main weakness is that the entropy calculation requires counting models in the model space or having an expression for the probability distribution over models. Since the model space is often large, this makes entropy computationally intractable to compute in many cases, and approximate methods such as sampling the model space need to be used. The problem of computational complexity applies to all the methods discussed here, as none of the methods have been demonstrated to scale well to large datasets of thousands of nodes.</p>
<p>Prior knowledge can be incorporated into the model in a "soft" way, as in Yeang et al., or in a "hard" way, as in Szczurek et al. and King et al. In the soft approach of Yeang et al., the prior knowledge contributes to the inference of the model, but it can be outweighed by evidence from experimental data. For example, a protein–protein interaction may have strong prior knowledge support but not be included in the final model if there are no experiments that support it. In the hard approach of Szczurek et al. and King et al., on the other hand, the prior knowledge is used as a fixed part of the inference logic, and inference is performed only about those parts of the model that are not determined by prior knowledge. The model in Szczurek et al. uses a fixed model of signaling pathways to infer relationships downstream of them, and the model in King et al. uses a fixed model of metabolic reactions to infer which genes code for which enzymes. The decision regarding how prior knowledge should be incorporated boils down to the relevance of the knowledge to the experimental data and amount of certainty one has about the knowledge: Yeang et al. allowed the possibility of data outweighing prior knowledge because the prior knowledge about interactions in the network was known to be uncertain and because many interactions may exist that are not relevant to the experiments performed. Conversely, the metabolic pathways used by King et al. and the signaling pathways used by Szczurek et al. are well-studied, and there is much less uncertainty about their validity, justifying the hard incorporation of this kind of prior knowledge.</p>
<p>There are tradeoffs in modeling decisions that apply more generally, beyond active learning. In general, discrete variable modeling and deterministic dynamics yield simpler modeling, both computationally and conceptually, which in turn makes these models easier to implement and easier to interpret. The main weakness of discrete variable modeling is the danger of oversimplification; for example, if genes are considered to follow a binary on-or-off state model, one might miss nuances in gene expression data in which a gene's expression may decrease partially in response to a perturbation. The main weakness of deterministic modeling is that if inherent noise is present in the data from variations in instrument performance, biological variation, or uncontrolled-for variables, a deterministic model may not be able to account for this variation. Conversely, continuous variable modeling and stochastic dynamics address these weaknesses but do so at the cost of higher complexity, which may lead to models that are more difficult to interpret and harder to implement in practice.</p>
<p>The approaches reviewed also vary in the types of queries that specify each experiment and in the types of data that an experiment yields. The query specification is often constrained to a perturbation in only one or two elements in the network, such as single-gene knockout/overexpression [<xref ref-type="bibr" rid="pcbi.1005466.ref003">3</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref005">5</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref010">10</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref011">11</xref>] or a single- or double-gene perturbation paired with a simple environmental perturbation [<xref ref-type="bibr" rid="pcbi.1005466.ref001">1</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref002">2</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref035">35</xref>]. The approaches that select these simpler queries typically select from a predefined set of possible experiments to perform. In contrast, the approaches that select arbitrarily complex perturbations [<xref ref-type="bibr" rid="pcbi.1005466.ref004">4</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref006">6</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref010">10</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref011">11</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref021">21</xref>, <xref ref-type="bibr" rid="pcbi.1005466.ref025">25</xref>] or higher-order multiple-gene knockouts [<xref ref-type="bibr" rid="pcbi.1005466.ref026">26</xref>] form queries constructively, rather than selecting from a set of possible experiments. An even clearer trend is seen in the sort of data that experiments yield, wherein most of the methods rely on multidimensional data from each experiment, such as a gene expression profile or a profile of differential expression calls. Only the method by King et al. [<xref ref-type="bibr" rid="pcbi.1005466.ref035">35</xref>] views each experiment as yielding a one-dimensional binary outcome.</p>
<p>The approaches reviewed are diverse in the particular type of biological knowledge captured, the details of the mathematical models used, the degree of reliance on prior knowledge, robustness to noisy data, the type of data used, and the the type of query that specifies each experiment. Most of the approaches reviewed use entropy-based criteria for experiment selection. It is likely that future active learning approaches will continue to use entropy and similar criteria, based on previously demonstrated success as well as a strong conceptual motivation. The main challenge for future active learning approaches is that of scaling to big datasets, as high-dimensional screens have become the norm in systems biology. Another scaling problem to overcome is that of proposing not single experiments but batches of experiments, something that is explicitly explored by Szczurek et al. in the context of discovering regulatory relationships downstream of a given signaling pathway. The method by Ud-Dean and Gunawan also explicitly considers batches of experiments but relies on the ability to determine the presence of individual interactions in a targeted way. There is still a need for methods that design batches of experiments outside of these specific settings. The ability to propose batches of experiments is important for real-world application because it is often more practical to perform multiple perturbation experiments simultaneously in the lab. The nature of experimentation is such that noisy observations are a reality due to uncontrollable factors and measurement errors. It is therefore important to develop methods that are robust to noise in observations, a challenge better addressed by models with stochastic dynamics. Finally, existing work demonstrates that the leveraging of prior knowledge has been essential in fruitful discovery of biological knowledge using active learning.</p>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="pcbi.1005466.ref001"><label>1</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ideker</surname> <given-names>TE</given-names></name>, <name name-style="western"><surname>Thorsson</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Karp</surname> <given-names>RM</given-names></name>. <article-title>Discovery of regulatory interactions through perturbation: inference and experimental design</article-title>. In: <source>Pacific Symposium on Biocomputing</source>. vol. <volume>5</volume>; <year>2000</year>. p. <fpage>302</fpage>–<lpage>313</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref002"><label>2</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Szczurek</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Gat-Viks</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Tiuryn</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Vingron</surname> <given-names>M</given-names></name>. <article-title>Elucidating regulatory mechanisms downstream of a signaling pathway using informative experiments</article-title>. <source>Molecular Systems Biology</source>. <year>2009</year>;<volume>5</volume>(<issue>287</issue>):<fpage>287</fpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref003"><label>3</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Yeang</surname> <given-names>CH</given-names></name>, <name name-style="western"><surname>Mak</surname> <given-names>HC</given-names></name>, <name name-style="western"><surname>McCuine</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Workman</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Jaakkola</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Ideker</surname> <given-names>T</given-names></name>. <article-title>Validation and refinement of gene-regulatory pathways on a network of physical interactions</article-title>. <source>Genome Biology</source>. <year>2005</year>;<volume>6</volume>(<issue>7</issue>):<fpage>R62</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/gb-2005-6-7-r62" xlink:type="simple">10.1186/gb-2005-6-7-r62</ext-link></comment> <object-id pub-id-type="pmid">15998451</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref004"><label>4</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Steinke</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Seeger</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Tsuda</surname> <given-names>K</given-names></name>. <article-title>Experimental design for efficient identification of gene regulatory networks using sparse Bayesian models</article-title>. <source>BMC Systems Biology</source>. <year>2007</year>;<volume>1</volume>(<issue>1</issue>):<fpage>51</fpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref005"><label>5</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Pournara</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Wernisch</surname> <given-names>L</given-names></name>. <article-title>Reconstruction of gene networks using Bayesian learning and manipulation experiments</article-title>. <source>Bioinformatics</source>. <year>2004</year>;<volume>20</volume>(<issue>17</issue>):<fpage>2934</fpage>–<lpage>42</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/bth337" xlink:type="simple">10.1093/bioinformatics/bth337</ext-link></comment> <object-id pub-id-type="pmid">15180938</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref006"><label>6</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Atias</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Gershenzon</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Labazin</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Sharan</surname> <given-names>R</given-names></name>. <article-title>Experimental design schemes for learning Boolean network models</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>(<issue>17</issue>):<fpage>i445</fpage>–<lpage>i452</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btu451" xlink:type="simple">10.1093/bioinformatics/btu451</ext-link></comment> <object-id pub-id-type="pmid">25161232</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref007"><label>7</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Sharan</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Karp</surname> <given-names>RM</given-names></name>. <article-title>Reconstructing Boolean models of signaling</article-title>. <source>Journal of Computational Biology</source>. <year>2013</year>;<volume>20</volume>(<issue>3</issue>):<fpage>249</fpage>–<lpage>257</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1089/cmb.2012.0241" xlink:type="simple">10.1089/cmb.2012.0241</ext-link></comment> <object-id pub-id-type="pmid">23286509</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref008"><label>8</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Samaga</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Alexopoulos</surname> <given-names>LG</given-names></name>, <name name-style="western"><surname>Sorger</surname> <given-names>PK</given-names></name>, <name name-style="western"><surname>Klamt</surname> <given-names>S</given-names></name>. <article-title>The logic of EGFR/ErbB signaling: Theoretical properties and analysis of high-throughput data</article-title>. <source>PLoS Comput Biol</source>. <year>2009</year>;<volume>5</volume>(<issue>8</issue>).</mixed-citation></ref>
<ref id="pcbi.1005466.ref009"><label>9</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ryll</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Samaga</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Schaper</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Alexopoulos</surname> <given-names>LG</given-names></name>, <name name-style="western"><surname>Klamt</surname> <given-names>S</given-names></name>. <article-title>Large-scale network models of IL-1 and IL-6 signalling and their hepatocellular specification</article-title>. <source>Molecular BioSystems</source>. <year>2011</year>;<volume>7</volume>(<issue>12</issue>):<fpage>3253</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1039/c1mb05261f" xlink:type="simple">10.1039/c1mb05261f</ext-link></comment> <object-id pub-id-type="pmid">21968890</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref010"><label>10</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>He</surname> <given-names>YB</given-names></name>, <name name-style="western"><surname>Geng</surname> <given-names>Z</given-names></name>. <article-title>Active learning of causal networks with intervention experiments and optimal designs</article-title>. <source>Journal of Machine Learning Research</source>. <year>2008</year>;<volume>9</volume>:<fpage>2523</fpage>–<lpage>47</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref011"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Hauser A, Bühlmann P. Two optimal strategies for active learning of causal models from interventions. Proceedings of the 6th European Workshop on Probabilistic Graphical Models. 2012.</mixed-citation></ref>
<ref id="pcbi.1005466.ref012"><label>12</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Daly</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Shen</surname> <given-names>Q</given-names></name>, <name name-style="western"><surname>Aitken</surname> <given-names>S</given-names></name>. <article-title>Learning Bayesian networks: Approaches and issues</article-title>. <source>The Knowledge Engineering Review</source>. <year>2011</year>;<volume>26</volume>(<issue>2</issue>):<fpage>99</fpage>–<lpage>157</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref013"><label>13</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Maathuis</surname> <given-names>MH</given-names></name>, <name name-style="western"><surname>Colombo</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Kalisch</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Bühlmann</surname> <given-names>P</given-names></name>. <article-title>Predicting causal effects in large-scale systems from observational data</article-title>. <source>Nature Methods</source>. <year>2010</year>;<volume>7</volume>(<issue>4</issue>):<fpage>247</fpage>–<lpage>8</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nmeth0410-247" xlink:type="simple">10.1038/nmeth0410-247</ext-link></comment> <object-id pub-id-type="pmid">20354511</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref014"><label>14</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Pearl</surname> <given-names>J</given-names></name>. <source>Causality: Models, Reasoning and Inference</source>. <publisher-loc>New York, NY, USA</publisher-loc>: <publisher-name>Cambridge University Press</publisher-name>; <year>2000</year>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref015"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Cooper G, Yoo C. Causal discovery from a mixture of experimental and observational data. In: Proceedings of the 15th Conference on Uncertainty in Artificial Intelligence; 1999. p. 116–125.</mixed-citation></ref>
<ref id="pcbi.1005466.ref016"><label>16</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Rau</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Jaffrézic</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Nuel</surname> <given-names>G</given-names></name>. <article-title>Joint estimation of causal effects from observational and intervention gene expression data</article-title>. <source>BMC Systems Biology</source>. 3013;<volume>7</volume>(<issue>1</issue>):<fpage>111</fpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref017"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Tong S, Koller D. Active learning for structure in Bayesian networks. In: International Joint Conference on Artificial Intelligence. vol. 17; 2001. p. 863–869.</mixed-citation></ref>
<ref id="pcbi.1005466.ref018"><label>18</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Murphy</surname> <given-names>KP</given-names></name>. <source>Active learning of causal Bayes net structure</source>. <publisher-name>University of California</publisher-name>, <publisher-loc>Berkeley</publisher-loc>; <year>2001</year>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref019"><label>19</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Dehghannasiri</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Yoon</surname> <given-names>BJ</given-names></name>, <name name-style="western"><surname>Dougherty</surname> <given-names>ER</given-names></name>. <article-title>Optimal Experimental Design for Gene Regulatory Networks in the Presence of Uncertainty</article-title>. <source>IEEE/ACM Transactions on Computational Biology and Bioinformatics</source>. <year>2015</year>;<volume>12</volume>(<issue>4</issue>):<fpage>938</fpage>–<lpage>950</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1109/TCBB.2014.2377733" xlink:type="simple">10.1109/TCBB.2014.2377733</ext-link></comment> <object-id pub-id-type="pmid">26357334</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref020"><label>20</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Pal</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Datta</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Dougherty</surname> <given-names>ER</given-names></name>. <article-title>Robust intervention in probabilistic Boolean networks</article-title>. <source>IEEE Transactions on Signal Processing</source>. <year>2008</year>;<volume>56</volume>(<issue>3</issue>):<fpage>1280</fpage>–<lpage>1294</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref021"><label>21</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tegnér</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Yeung</surname> <given-names>MKS</given-names></name>, <name name-style="western"><surname>Hasty</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Collins</surname> <given-names>JJ</given-names></name>. <article-title>Reverse engineering gene networks: integrating genetic perturbations with dynamical modeling</article-title>. <source>Proceedings of the National Academy of Sciences of the United States of America</source>. <year>2003</year>;<volume>100</volume>(<issue>10</issue>):<fpage>5944</fpage>–<lpage>5949</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1073/pnas.0933416100" xlink:type="simple">10.1073/pnas.0933416100</ext-link></comment> <object-id pub-id-type="pmid">12730377</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref022"><label>22</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Leclerc</surname> <given-names>RD</given-names></name>. <article-title>Survival of the sparsest: robust gene networks are parsimonious</article-title>. <source>Molecular systems biology</source>. <year>2008</year>;<volume>4</volume>(<issue>1</issue>):<fpage>213</fpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref023"><label>23</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kullback</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Leibler</surname> <given-names>RA</given-names></name>. <article-title>On information and sufficiency</article-title>. <source>The Annals of Mathematical Statistics</source>. <year>1951</year>;<volume>22</volume>(<issue>1</issue>):<fpage>79</fpage>–<lpage>86</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref024"><label>24</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>von Dassow</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Meir</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Munro</surname> <given-names>EM</given-names></name>, <name name-style="western"><surname>Odell</surname> <given-names>GM</given-names></name>. <article-title>The segment polarity network is a robust developmental module</article-title>. <source>Nature</source>. <year>2000</year>;<volume>406</volume>(<issue>6792</issue>):<fpage>188</fpage>–<lpage>192</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/35018085" xlink:type="simple">10.1038/35018085</ext-link></comment> <object-id pub-id-type="pmid">10910359</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref025"><label>25</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Mélykúti</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>August</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Papachristodoulou</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>El-Samad</surname> <given-names>H</given-names></name>. <article-title>Discriminating between rival biochemical network models: three approaches to optimal experiment design</article-title>. <source>BMC Systems Biology</source>. <year>2010</year>;<volume>4</volume>:<fpage>38</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/1752-0509-4-38" xlink:type="simple">10.1186/1752-0509-4-38</ext-link></comment> <object-id pub-id-type="pmid">20356406</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref026"><label>26</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ud-Dean</surname> <given-names>SM</given-names></name>, <name name-style="western"><surname>Gunawan</surname> <given-names>R</given-names></name>. <article-title>Optimal design of gene knockout experiments for gene regulatory network inference</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>32</volume>(<issue>6</issue>):<fpage>875</fpage>–<lpage>883</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btv672" xlink:type="simple">10.1093/bioinformatics/btv672</ext-link></comment> <object-id pub-id-type="pmid">26568633</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref027"><label>27</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lee</surname> <given-names>TI</given-names></name>, <name name-style="western"><surname>Rinaldi</surname> <given-names>NJ</given-names></name>, <name name-style="western"><surname>Robert</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Odom</surname> <given-names>DT</given-names></name>, <name name-style="western"><surname>Bar-Joseph</surname> <given-names>Z</given-names></name>, <name name-style="western"><surname>Gerber</surname> <given-names>GK</given-names></name>, <etal>et al</etal>. <article-title>Transcriptional regulatory networks in Saccharomyces cerevisiae</article-title>. <source>Science</source>. <year>2002</year>;<volume>298</volume>(<issue>5594</issue>):<fpage>799</fpage>–<lpage>804</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1126/science.1075090" xlink:type="simple">10.1126/science.1075090</ext-link></comment> <object-id pub-id-type="pmid">12399584</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref028"><label>28</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Xenarios</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Salwinski</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Duan</surname> <given-names>XJ</given-names></name>, <name name-style="western"><surname>Higney</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Kim</surname> <given-names>SM</given-names></name>, <name name-style="western"><surname>Eisenberg</surname> <given-names>D</given-names></name>. <article-title>DIP, the Database of Interacting Proteins: a research tool for studying cellular networks of protein interactions</article-title>. <source>Nucleic Acids Research</source>. <year>2002</year>;<volume>30</volume>(<issue>1</issue>):<fpage>303</fpage>–<lpage>305</lpage>. <object-id pub-id-type="pmid">11752321</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref029"><label>29</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Yeang</surname> <given-names>CH</given-names></name>, <name name-style="western"><surname>Ideker</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Jaakkola</surname> <given-names>T</given-names></name>. <article-title>Physical network models</article-title>. <source>Journal of Computational Biology</source>. <year>2004</year>;<volume>11</volume>(<issue>2–3</issue>):<fpage>243</fpage>–<lpage>262</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1089/1066527041410382" xlink:type="simple">10.1089/1066527041410382</ext-link></comment> <object-id pub-id-type="pmid">15285891</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref030"><label>30</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kschischang</surname> <given-names>FR</given-names></name>, <name name-style="western"><surname>Frey</surname> <given-names>BJ</given-names></name>, <article-title>Loeliger HAa. Factor Graphs and Sum Product Algorithm</article-title>. <source>IEEE Transactions on Information Theory</source>. <year>2001</year>;<volume>47</volume>(<issue>2</issue>):<fpage>498</fpage>–<lpage>519</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref031"><label>31</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Deane</surname> <given-names>CM</given-names></name>, <name name-style="western"><surname>Salwiski</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Xenarios</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Eisenberg</surname> <given-names>D</given-names></name>. <article-title>Protein interactions: two methods for assessment of the reliability of high throughput observations</article-title>. <source>Molecular &amp; Cellular Proteomics</source>. <year>2002</year>;<volume>1</volume>(<issue>5</issue>):<fpage>349</fpage>–<lpage>356</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref032"><label>32</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>King</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Rowland</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Oliver</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Young</surname> <given-names>M</given-names></name>. <article-title>The automation of science</article-title>. <source>Science</source>. <year>2009</year>;<volume>324</volume>(<issue>5923</issue>):<fpage>85</fpage>–<lpage>89</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1126/science.1165620" xlink:type="simple">10.1126/science.1165620</ext-link></comment> <object-id pub-id-type="pmid">19342587</object-id></mixed-citation></ref>
<ref id="pcbi.1005466.ref033"><label>33</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Bryant</surname> <given-names>CH</given-names></name>, <name name-style="western"><surname>Muggleton</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Kell</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Reiser</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>King</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Oliver</surname> <given-names>S</given-names></name>. <article-title>Combining inductive logic programming, active learning and robotics to discover the function of genes</article-title>. <source>Electronic Transactions in Artificial Intelligence</source>. <year>2001</year>;<volume>5</volume>(<issue>B</issue>):<fpage>1</fpage>–<lpage>36</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005466.ref034"><label>34</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Shannon</surname> <given-names>CE</given-names></name>. <article-title>A mathematical theory of communication</article-title>. <source>Bell Systems Technical Journal</source>. <year>1948</year>;<volume>27</volume>:<fpage>379</fpage>–<lpage>423</lpage>,623–656</mixed-citation></ref>
<ref id="pcbi.1005466.ref035"><label>35</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>King</surname> <given-names>RD</given-names></name>, <name name-style="western"><surname>Whelan</surname> <given-names>KE</given-names></name>, <name name-style="western"><surname>Jones</surname> <given-names>FM</given-names></name>, <name name-style="western"><surname>Reiser</surname> <given-names>PGK</given-names></name>, <name name-style="western"><surname>Bryant</surname> <given-names>CH</given-names></name>, <name name-style="western"><surname>Mugggleton</surname> <given-names>SH</given-names></name>, <etal>et al</etal>. <article-title>Functional genomic hypothesis generation and experimentation by a robot scientist</article-title>. <source>Nature</source>. <year>2004</year>;<volume>427</volume>(<issue>January</issue>):<fpage>247</fpage>–<lpage>252</lpage>.</mixed-citation></ref>
</ref-list>
</back>
</article>