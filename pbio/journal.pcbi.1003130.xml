<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id><journal-title-group>
<journal-title>PLoS Computational Biology</journal-title></journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-12-01879</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1003130</article-id>
<article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Biology</subject><subj-group><subject>Immunology</subject><subj-group><subject>Immune cells</subject><subj-group><subject>T cells</subject></subj-group></subj-group><subj-group><subject>Immunity</subject><subj-group><subject>Adaptive immunity</subject><subject>Immunotherapy</subject></subj-group></subj-group><subj-group><subject>Immunologic subspecialties</subject><subj-group><subject>Tumor immunology</subject></subj-group></subj-group><subj-group><subject>Immunologic techniques</subject><subj-group><subject>Immunoassays</subject></subj-group></subj-group><subj-group><subject>Immune response</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Mathematics</subject><subj-group><subject>Statistics</subject><subj-group><subject>Biostatistics</subject><subject>Statistical methods</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Medicine</subject><subj-group><subject>Clinical immunology</subject><subj-group><subject>Immunologic techniques</subject><subj-group><subject>Immunoassays</subject></subj-group></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>Hierarchical Modeling for Rare Event Detection and Cell Subset Alignment across Flow Cytometry Samples</article-title>
<alt-title alt-title-type="running-head">Hierarchical Modeling for Flow Cytometry Analysis</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Cron</surname><given-names>Andrew</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Gouttefangeas</surname><given-names>Cécile</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Frelinger</surname><given-names>Jacob</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Lin</surname><given-names>Lin</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Singh</surname><given-names>Satwinder K.</given-names></name><xref ref-type="aff" rid="aff5"><sup>5</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Britten</surname><given-names>Cedrik M.</given-names></name><xref ref-type="aff" rid="aff6"><sup>6</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Welters</surname><given-names>Marij J. P.</given-names></name><xref ref-type="aff" rid="aff5"><sup>5</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>van der Burg</surname><given-names>Sjoerd H.</given-names></name><xref ref-type="aff" rid="aff5"><sup>5</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>West</surname><given-names>Mike</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Chan</surname><given-names>Cliburn</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff7"><sup>7</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group>
<aff id="aff1"><label>1</label><addr-line>Department of Statistical Science, Duke University, Durham, North Carolina, United States of America</addr-line></aff>
<aff id="aff2"><label>2</label><addr-line>Interfaculty Institute for Cell Biology, Department of Immunology, Eberhard Karls University, Tuebingen, Germany</addr-line></aff>
<aff id="aff3"><label>3</label><addr-line>Program in Computational Biology and Bioinformatics, Duke University, Durham, North Carolina, United States of America</addr-line></aff>
<aff id="aff4"><label>4</label><addr-line>Population Sciences, Fred Hutchinson Cancer Research Center, Seattle, Washington, United States of America</addr-line></aff>
<aff id="aff5"><label>5</label><addr-line>Department of Clinical Oncology, Leiden University Medical Center, Leiden, The Netherlands</addr-line></aff>
<aff id="aff6"><label>6</label><addr-line>Translational Oncology at the University Medical Center of the Johannes Gutenberg-University Mainz gGmbH, Mainz, Germany</addr-line></aff>
<aff id="aff7"><label>7</label><addr-line>Department of Biostatistics and Bioinformatics, Duke University Medical Center, Durham, North Carolina, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Altan-Bonnet</surname><given-names>Grégoire</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group>
<aff id="edit1"><addr-line>Memorial Sloan-Kettering Cancer Center, United States of America</addr-line></aff>
<author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">cliburn.chan@duke.edu</email></corresp>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn>
<fn fn-type="con"><p>Conceived and designed the experiments: CG SKS CMB MJPW SHvdB CC. Performed the experiments: CG SKS CMB MJPW SHvdB. Analyzed the data: AC JF LL CC. Contributed reagents/materials/analysis tools: AC JF CG SKS CMB MJPW SHvdB. Wrote the paper: AC CG MW CC.</p></fn>
</author-notes>
<pub-date pub-type="collection"><month>7</month><year>2013</year></pub-date>
<pub-date pub-type="epub"><day>11</day><month>7</month><year>2013</year></pub-date>
<volume>9</volume>
<issue>7</issue>
<elocation-id>e1003130</elocation-id>
<history>
<date date-type="received"><day>27</day><month>11</month><year>2012</year></date>
<date date-type="accepted"><day>17</day><month>5</month><year>2013</year></date>
</history>
<permissions>
<copyright-year>2013</copyright-year>
<copyright-holder>Cron et al</copyright-holder><license xlink:type="simple"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions>
<abstract>
<p>Flow cytometry is the prototypical assay for multi-parameter single cell analysis, and is essential in vaccine and biomarker research for the enumeration of antigen-specific lymphocytes that are often found in extremely low frequencies (0.1% or less). Standard analysis of flow cytometry data relies on visual identification of cell subsets by experts, a process that is subjective and often difficult to reproduce. An alternative and more objective approach is the use of statistical models to identify cell subsets of interest in an automated fashion. Two specific challenges for automated analysis are to detect extremely low frequency event subsets without biasing the estimate by pre-processing enrichment, and the ability to align cell subsets across multiple data samples for comparative analysis. In this manuscript, we develop hierarchical modeling extensions to the Dirichlet Process Gaussian Mixture Model (DPGMM) approach we have previously described for cell subset identification, and show that the hierarchical DPGMM (HDPGMM) naturally generates an aligned data model that captures both commonalities and variations across multiple samples. HDPGMM also increases the sensitivity to extremely low frequency events by sharing information across multiple samples analyzed simultaneously. We validate the accuracy and reproducibility of HDPGMM estimates of antigen-specific T cells on clinically relevant <italic>reference</italic> peripheral blood mononuclear cell (PBMC) samples with known frequencies of antigen-specific T cells. These cell samples take advantage of retrovirally TCR-transduced T cells spiked into autologous PBMC samples to give a defined number of antigen-specific T cells detectable by HLA-peptide multimer binding. We provide open source software that can take advantage of both multiple processors and GPU-acceleration to perform the numerically-demanding computations. We show that hierarchical modeling is a useful probabilistic approach that can provide a consistent labeling of cell subsets and increase the sensitivity of rare event detection in the context of quantifying antigen-specific immune responses.</p>
</abstract>
<abstract abstract-type="summary"><title>Author Summary</title>
<p>The use of flow cytometry to count antigen-specific T cells is essential for vaccine development, monitoring of immune-based therapies and immune biomarker discovery. Analysis of such data is challenging because antigen-specific cells are often present in frequencies of less than 1 in 1,000 peripheral blood mononuclear cells (PBMC). Standard analysis of flow cytometry data relies on visual identification of cell subsets by experts, a process that is subjective and often difficult to reproduce. Consequently, there is intense interest in automated approaches for cell subset identification. One popular class of such automated approaches is the use of statistical mixture models. We propose a <italic>hierarchical</italic> extension of statistical mixture models that has two advantages over standard mixture models. First, it increases the ability to detect extremely rare event clusters that are present in multiple samples. Second, it enables direct comparison of cell subsets by aligning clusters across multiple samples in a natural way arising from the hierarchical formulation. We demonstrate the algorithm on clinically relevant <italic>reference</italic> PBMC samples with known frequencies of CD8 T cells engineered to express T cell receptors specific for the cancer-testis antigen (NY-ESO-1) and compare its performance with other popular automated analysis approaches.</p>
</abstract>
<funding-group><funding-statement>This research was partially supported by grants from the Wallace Coulter Foundation (<ext-link ext-link-type="uri" xlink:href="http://www.whcf.org/" xlink:type="simple">http://www.whcf.org/</ext-link>), the U.S. National Science Foundation (DMS 1106516), and the National Institutes of Health (P50-GM081883, RC1 AI086032, 5P30 AI064518). Any opinions, findings and conclusions or recommendations expressed in this work are those of the authors and do not necessarily reflect the views of the Wallace Coulter Foundation, the NIH or the NSF. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="14"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<sec id="s1a">
<title>Model-based analysis for cell subset identification in flow cytometry</title>
<p>Flow cytometry is the prototypical assay for multi-parameter single cell analysis, and is essential in vaccine development, monitoring of T cell-based immune therapies and the search for immune biomarkers. In many clinical research applications, the cell subsets of interest are <italic>antigen specific</italic> T lymphocytes that are often found in extremely low frequencies (0.1% or less). These antigen-specific T cells can be detected using HLA-peptide multimers or by their expression of effector proteins upon specific antigen stimulation in intracellular staining (ICS) assays. Current methods of flow cytometry analysis rely on visual gating of cell events to identify and quantify cell subsets of interest. However, the choice of sequence for the dot plots (gating strategy) and where to draw the gating boundaries is highly dependent on assay protocols and operator experience and may not be easily harmonized, as illustrated in recent international proficiency panels <xref ref-type="bibr" rid="pcbi.1003130-Britten1">[1]</xref>, <xref ref-type="bibr" rid="pcbi.1003130-Welters1">[2]</xref>.</p>
<p>There has therefore been increasing interest in the use of objective, automated methods for cell subset identification <xref ref-type="bibr" rid="pcbi.1003130-Aghaeepour1">[3]</xref>. One approach that we and others have promoted is the use of statistical models to estimate the data distribution <xref ref-type="bibr" rid="pcbi.1003130-Chan1">[4]</xref>–<xref ref-type="bibr" rid="pcbi.1003130-Lo1">[6]</xref>, followed by a mapping of summaries of the statistical distribution to cell subsets of biological interest. This model-based approach tends to be more numerically intensive than other <italic>ad hoc</italic> approaches to data clustering, but as we have previously demonstrated, this can be overcome by exploiting the cheap massively parallel capabilities of modern graphical processing units (GPUs). Importantly, the model-based approach has the advantage of using a declarative probabilistic framework that can be extended using well-established and understood mechanisms to improve discriminative power. In particular, hierarchical models that incorporate information from both the individual and group levels when fitted to flow cytometry data samples can increase both interpretability and sensitivity. These hierarchical models increase interpretability by aligning clusters in a way that enables direct comparison of cell subsets across data samples, and increase sensitivity for detecting very low frequency cell subsets by sharing information across multiple samples. Hierarchical models thus improve the ability of model-based approaches to detect low frequency event subsets, and enable the comparative analysis that is essential to any downstream analysis of multiple data samples.</p>
<p>We briefly describe three alternative software packages for automated analysis to contrast the approach of HDPGMM. FLOCK 2.0 (FLOw cytometry Clustering without K) <xref ref-type="bibr" rid="pcbi.1003130-Scheuermann1">[7]</xref> is widely used because it is a resource provided by IMMPORT (Immunology Database and Analysis Portal), a repository of data generated by investigators funded through the NIAID/DAIT. Similar to DPGMM and HDPGMM, FLOCK is able to estimate the optimal number of data partitions from the data. However, FLOCK uses an adaptive multi-dimensional mesh to estimate local density followed by hierarchical merging of adjacent regions based on density differentials rather than a mixture model, and does not appear to either provide a statistical model (e.g. for goodness-of-fit calculations) or methods for alignment of cell subsets across different samples. In contrast, flowClust <xref ref-type="bibr" rid="pcbi.1003130-Lo1">[6]</xref> and FLAME (FLow analysis with Automated Multivariate Estimation) <xref ref-type="bibr" rid="pcbi.1003130-Pyne1">[5]</xref> both use a statistical mixture model approach for density estimation and clustering. Both packages are likely to be widely used, since flowClust is provided as a library in R/BioConductor, and FLAME is part of GenePattern. Apart from the choice of base distribution (T distribution for flowClust and skewed distributions for FLAME), the main differences with DPGMM are the use of optimization (Expectation-Maximization) rather than simulation (MCMC) to estimate the density, the need for the user to specify the number of partitions and differences in the type of transform applied in data pre-processing. FlowClust does not provide any method to align cell subsets across samples, while FLAME provides a heuristic algorithm to do so as described in their original publication <xref ref-type="bibr" rid="pcbi.1003130-Pyne1">[5]</xref>. Unlike HDPGMM, none of the three algorithms use a hierarchical approach to model group and individual specific effects.</p>
<p>With this in mind, the developments reported here concern the implementation of a hierarchical Gaussian mixture model based on a Dirichlet process prior, and extensions of the basic model to identify and quantify rare cell subsets in flow cytometry data. Simulated data is first used to demonstrate the advantages of hierarchical models over conventional clustering approaches. This is followed by validation of the model on experimental samples, using retrovirally TCR-transduced T cells that are spiked into autologous peripheral blood mononuclear cell (PBMC) samples to give a defined number of antigen-specific T cells <xref ref-type="bibr" rid="pcbi.1003130-Singh1">[8]</xref>. Finally, the reproducibility and accuracy of this approach for rare cell quantification is compared to that of standard DPGMM and manual analysis performed by a group of ten flow cytometry users, and compared with the results from FLOCK, FLAME and flowClust.</p>
</sec><sec id="s1b">
<title>Statistical mixture models</title>
<p>The basic concept in model-based approaches is to consider events in a flow cytometry data set as being random samples drawn from a multi-dimensional probability distribution. The objective of analysis is then to define the probability distribution model and evaluate inferences over the model parameters based on fit to the specific data set. Statistical mixture models are a standard approach for the construction of the underlying distribution, using the sum of many simpler probability distributions (e.g. multivariate Gaussian, Student-t or skewed distributions) to approximate arbitrary multi-dimensional distributions. For biological interpretation, fitted models are then used for clustering, i.e. using statistical properties of individual events to assign them to biological cell subsets. For example, with statistical mixture models, this can be done by grouping events with the highest probability of coming from a specific mixture component together, or merging of multiple components using specified criteria such as having a common mode in the estimated distribution over markers <xref ref-type="bibr" rid="pcbi.1003130-Finak1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1003130-Chan2">[10]</xref>.</p>
<p>Of course, the number of distinguishable cell subsets and Gaussian components necessary to fit the model satisfactorily is not known in advance. To avoid having to specify the number of mixture components needed in the model, we use a Dirichlet process prior in which the number of components necessary is directly estimated from the data <xref ref-type="bibr" rid="pcbi.1003130-Escobar1">[11]</xref>. Computationally, the use of Dirichlet process priors is more efficient than fitting multiple models with different numbers of components and testing with some penalized likelihood (e.g. Akaike or Bayesian information criteria) to choose the best model, as only a single model fit is performed. Since we use multivariate Gaussian distributions as components, the overall approach is described as a Dirichlet process Gaussian mixture model (DPGMM). DPGMM are extremely flexible models that can fit flow data from flow cytometry experiments using different antibody-fluorochrome labels (e.g. 4-color HLA-peptide multimer and 11-color intracellular staining (ICS) panels), and a natural evolution of the fixed <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e001" xlink:type="simple"/></inline-formula> Gaussian mixture models we originally proposed <xref ref-type="bibr" rid="pcbi.1003130-Chan1">[4]</xref>. Finally, while the model uses Gaussian components, cell subsets are identified with <italic>merged</italic> components using the consensus modal clustering strategy described in <xref ref-type="sec" rid="s4">Methods</xref>. As a result, cell subsets can have arbitrarily complex distributions and are not restricted to symmetric Gaussian clusters.</p>
</sec><sec id="s1c">
<title>Limitations of clustering approaches</title>
<p>Clustering methods applied to data samples independently face two major limitations. The first is that cluster labels are not aligned across data samples, posing a problem for comparing subsets across multiple samples which is usually the purpose of the original experiment. The second is that there are limits to the ability of clustering models to identify very rare event clusters due to <italic>masking</italic> by abundant event clusters <xref ref-type="bibr" rid="pcbi.1003130-Lin1">[12]</xref>. In particular, this makes it difficult to identify clusters matching antigen-specific HLA-peptide multimer labeled or polyfunctional T cells in ICS assays that may be biologically meaningful at frequencies of 0.1% or lower. We show in this paper that both issues are successfully addressed by the use of hierarchical Dirichlet process Gaussian mixture models (HDPGMM).</p>
</sec><sec id="s1d">
<title>Hierarchical Dirichlet process for information sharing</title>
<p>Hierarchical, or multi-level models, represent individual events in flow cytometry data as being organized into successively higher units. For example, individual events belong to a sample, and a sample may belong to a collection of similar samples. The critical idea is that cell subset phenotypes that are common across data samples can be used to inform and hence better characterize events in individual samples. For example, one hierarchical Dirichlet process model formulation partitions components into those common across data samples and those unique to a specific sample <xref ref-type="bibr" rid="pcbi.1003130-Mller1">[13]</xref>, <xref ref-type="bibr" rid="pcbi.1003130-deOliveiraSales1">[14]</xref> – this provides a different notion of sharing that is useful for identifying fixed and variable components across heterogeneous data samples but lacks a straightforward alignment of all clusters necessary for multi-sample comparison.</p>
<p>Instead, we model information sharing by placing all data samples under a common prior, such that the mean and covariance in any of the individual sample Gaussian components are shared across all samples, but the weight (proportion) of the component in each sample is unique. As described by Teh et al (2006) <xref ref-type="bibr" rid="pcbi.1003130-Teh1">[15]</xref>, this can be achieved by using a set of random measures <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e002" xlink:type="simple"/></inline-formula>, one for each data sample, where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e003" xlink:type="simple"/></inline-formula> is distributed according to a sample-specific Dirichlet process <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e004" xlink:type="simple"/></inline-formula>. The sample-specific DPs are then linked by a common discrete prior defined by another <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e005" xlink:type="simple"/></inline-formula>. This hierarchical model leaves the cluster locations and shapes constant across datasets, and hence aligns the clusters in that the location of the normal components is common to all data samples.</p>
<p>As depicted in the summary schematic of the HDPGMM model shown in <xref ref-type="fig" rid="pcbi-1003130-g001">Figure 1</xref>, there are basically 6 parameters that control the sensitivity. The parameter <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e006" xlink:type="simple"/></inline-formula> controls the spread of the (standardized) cluster means and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e007" xlink:type="simple"/></inline-formula> controls how informative our prior is about the shape of the covariances. The default for these parameters is vague and it is our opinion that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e008" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e009" xlink:type="simple"/></inline-formula> should not be tuned since it is unlikely that a user is knowledgeable about these constraints. The next set of parameters <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e010" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e011" xlink:type="simple"/></inline-formula> are hyper-parameters for the Gamma distribution on <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e012" xlink:type="simple"/></inline-formula> which controls the overall number of clusters. Small values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e013" xlink:type="simple"/></inline-formula> will encourage fewer clusters and large values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e014" xlink:type="simple"/></inline-formula> will encourage more clusters. The mean and variance of the Gamma distribution are <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e015" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e016" xlink:type="simple"/></inline-formula> respectively, and the default is set such that both mean and variance are 1. As an example of how we can tune this, if we set <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e017" xlink:type="simple"/></inline-formula>, the variance will be fixed, and the mean will vary as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e018" xlink:type="simple"/></inline-formula> – in that case we can encourage larger values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e019" xlink:type="simple"/></inline-formula> and more clusters by choosing small values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e020" xlink:type="simple"/></inline-formula>. The final set of parameters <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e021" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e022" xlink:type="simple"/></inline-formula> are hyper-parameters for the Gamma distribution on <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e023" xlink:type="simple"/></inline-formula> which specifies how similar the weights for each sample are to the other samples' distribution – when <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e024" xlink:type="simple"/></inline-formula> is small, the amount of information shared is small (weights for each batch can be very different from the overall distribution); when <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e025" xlink:type="simple"/></inline-formula> is large, the weights for each batch are likely to be similar to the base distribution. Tuning of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e026" xlink:type="simple"/></inline-formula> via <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e027" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e028" xlink:type="simple"/></inline-formula> is analogous to tuning <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e029" xlink:type="simple"/></inline-formula> via <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e030" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e031" xlink:type="simple"/></inline-formula>.</p>
<fig id="pcbi-1003130-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g001</object-id><label>Figure 1</label><caption>
<title>Schematic summary illustrating the HDP model framework.</title>
<p>A graphical model provides a declarative representation of the HDPGMM. The figure shows a compact plate representation of the graphical model, in which plates (rounded rectangles) are used to group variables in a subgraph. Each subgraph in a plate is replicated a number of times as indicated by the label within the plate. The <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e032" xlink:type="simple"/></inline-formula> event in the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e033" xlink:type="simple"/></inline-formula> sample is represented by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e034" xlink:type="simple"/></inline-formula>, and the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e035" xlink:type="simple"/></inline-formula> component for the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e036" xlink:type="simple"/></inline-formula> sample is a multivariate Gaussian with proportion <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e037" xlink:type="simple"/></inline-formula>, mean <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e038" xlink:type="simple"/></inline-formula> and covariance matrix <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e039" xlink:type="simple"/></inline-formula>.s. Hyper-parameters that can be set are <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e040" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e041" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e042" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e043" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e044" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e045" xlink:type="simple"/></inline-formula> as described in <xref ref-type="sec" rid="s4">Methods</xref>. Given the declarative graphical model, standard and GPU-accelerated MCMC sampling algorithms can be used to implement the model as previously described <xref ref-type="bibr" rid="pcbi.1003130-Suchard1">[16]</xref>.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g001" position="float" xlink:type="simple"/></fig>
<p>In the context of flow cytometry, a data sample typically consists of an <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e046" xlink:type="simple"/></inline-formula> by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e047" xlink:type="simple"/></inline-formula> data matrix from a single FCS file, where there are <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e048" xlink:type="simple"/></inline-formula> events and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e049" xlink:type="simple"/></inline-formula> features reporting scatter and fluorescent intensities. The HDPGMM is a model that fits a collection of such data samples, and makes the assumption that the same cell subsets are present in every sample with frequencies that vary from sample to sample. The model does not make any further assumptions about whether the samples in a collection come from the same or different subjects, experimental conditions, treatment groups etc. Different flow cytometry technologies generate data sets that mainly vary in the maximum number of features that can be observed rather than in the standardized locations of cell subsets or their covariances, and hence <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e050" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e051" xlink:type="simple"/></inline-formula> do not need tuning. With more features, it is likely that more cell subsets can be distinguished, and it would be reasonable to tune <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e052" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e053" xlink:type="simple"/></inline-formula> to encourage larger values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e054" xlink:type="simple"/></inline-formula>. The values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e055" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e056" xlink:type="simple"/></inline-formula> do not depend on the flow cytometry technology, but rather on how similar or different samples are from each other, and can be tuned accordingly. The number of mixture components that are needed for a good model fit is also likely to increase, and we present a diagnostic for model goodness-of-fit that can be used to guide choice of the lower bound for the number of components used in the results and discussion.</p>
<p>The hierarchical DP mixture model allows information sharing over data sets. In the hierarchical model, each flow cytometry data sample can be thought of as a representative of the collection of data samples being simultaneously analyzed. The individual data samples then provide information on the properties of the collection, and this information, in turn, provides information on any particular data sample. In this way, an HDPGMM fitted to a single data sample “borrows strength” from all other samples in the collection being analyzed. In other words, if a rare cell subtype is found in more than one of the samples, we share this information across the samples in the collection to detect the subtype even though the frequency in a particular data sample may be vanishingly small. HDPGMM thus increases sensitivity for clustering cell subsets that are of extremely low frequency in one sample but common to many samples or present in high frequency in one or more samples. In principle, there is no lower limit to the size of a cluster that can be detected in a particular sample. In practice, vanishingly small clusters (e.g. 3–5 events out of 100,000) require expert interpretation to distinguish background from signal, but it is not uncommon for biologically significant antigen-specific cells to be present at such frequencies.</p>
</sec></sec><sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>Simulation study</title>
<p>We illustrate the ability of hierarchical modeling to simultaneously overcome the problem of masking of rare event clusters and provide an alignment of cell subsets over multiple data samples. Four simulated data sets were created, each with up to 4 bivariate normal clusters in 4 quadrants. Clusters in each quadrant may have different means or covariance matrices, or be absent entirely; see <xref ref-type="fig" rid="pcbi-1003130-g002">Figure 2</xref>. We compared four different approaches to clustering the data – independent fitting of DPGMM to each data sample, using a reference data set, using pooled data, and using hierarchical modeling.</p>
<fig id="pcbi-1003130-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g002</object-id><label>Figure 2</label><caption>
<title>HDPGMM results in more accurate classification of events in simulated data than other statistical mixture model approaches.</title>
<p>(Left) Row 1 shows independent fitting of DPGMMs to each data set; row 2 shows the use of reference posterior distribution from data set 3 to classify events in other data set; row 3 shows a DPGMM fitted to pooled data from all data sets; and row 4 shows fitting of an HDPGMM to all 4 data sets. <xref ref-type="sec" rid="s2">Results</xref> are described in the text. Within each row, if two events are assigned to the same cluster, they are given the same color - it can be seen that clusters are aligned in Rows 2–4, but not in Row 1. All models used a truncated DPGMM base with 16 components, a burn-in of 10,000 iterations, and sampling of 100 post burn-in iterations for the calculation of the posterior distribution. (Right) Contour plots of the log posterior distribution. The HDPGMM distributions (Row 4) are most similar to the independently fitted distributions (Row 1), with the advantage that the small cluster in data set 3 masked by its larger neighboring cluster on top has a distinct mode. In contrast, the reference and pooled distribution strategies have the exact same distribution for all data sets and lack the flexibility to model sample-specific features.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g002" position="float" xlink:type="simple"/></fig><sec id="s2a1">
<title>Independent fitting of DPGMM to simulated data</title>
<p>In <xref ref-type="fig" rid="pcbi-1003130-g002">Figure 2</xref> row 1, DPGMM were independently fitted to each of the data samples and modal clustering performed on the posterior distribution averaged over post burn-in iterations. Events were assigned to the modal clusters for which the posterior probability was highest and color coded by the identity of the modal cluster. The first obvious issue with this approach is that modal cluster labels are not coherent over data samples, as shown in the top row of <xref ref-type="fig" rid="pcbi-1003130-g002">Figure 2</xref>, and also by the different assignments of similar cell subsets in different samples in the middle panel of <xref ref-type="fig" rid="pcbi-1003130-g003">Figure 3</xref>. Consequently, it is not possible to directly compare modal cluster frequencies across data sets without further post-processing. The second more subtle issue is that the small (5 event) cluster in data sample 3 (circled in red) has been masked by the large green cluster even though it matches the distinct blue cluster in data sample 1 and the red cluster in data sample 2 and should be interpreted as a separate cell subset.</p>
<fig id="pcbi-1003130-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g003</object-id><label>Figure 3</label><caption>
<title>Comparison of manual, DPGMM and HDPGMM detection of rare antigen-specific events.</title>
<p>The panels show the estimated frequencies of antigen-specific cells (large red dots) expressed as a percentage of all events (yellow boxes). These percentages were estimated using manual gating by a representative user (left), DPGMM (middle) and HDPGMM (right). Text in red in the first column shows the spiked-in frequency of retrovirally transduced T cells for the data sample in that row. The red polygons in the left panel are gates used for identifying antigen-specific cells by manual gating; the exact shape, sequence and location of these gates is determined by the operator and may vary between different operators depending on their training, experience and expertise. With the DPGMM approach, cell subsets across the samples from top to bottom are not directly comparable as indicated by the event colors, posing a problem for quantification of the same cell subset in different samples. In contrast, with the HDPGMM approach, cell subsets are aligned and directly comparable across all samples. HDPGMM is more sensitive at detecting antigen-specific cells when the frequency is extremely low (first 3 rows). HDPGMM is also more consistent in labeling events across different samples, while DPGMM is prone to detect likely false positive antigen-specific cells that are CD3-low or negative (arrows in rows 1 and 4 of middle panel). HDPGMM improves on the accuracy and consistency because the model incorporates both sample-specific and group-specific information, in contrast to DPGMM which only has access to sample-specific information. For both DPGMM and HDPGMM, model fitting was done with an MCMC sampler running 20,000 burn-in and 2,000 averaged iterations.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g003" position="float" xlink:type="simple"/></fig></sec><sec id="s2a2">
<title>Using a reference data set</title>
<p>In row 2, we fitted a DPGMM to sample 3 (reference data set), then used the posterior distribution found to classify events in all the other samples. While this ensures that all clusters are aligned across the data sets, it has several limitations. The first issue is the need to choose a specific reference data sample, which introduces an element of subjectivity. A more worrying issue is that differences in distribution across data samples are simply ignored, and this can result in artifacts as shown with data sample 1 and data sample 2, where there is mixing of the red/green clusters because the mean or covariance matrices of those clusters deviated from that of the reference data sample 3. Also, because the small cluster (circled in red) is masked in data sample 3, it is also missed in all the other samples. While another data sample could have been chosen as the reference, it is clear from inspection of the variation across the simulated data samples that no single reference can give a satisfactory result.</p>
</sec><sec id="s2a3">
<title>Using pooled data</title>
<p>In row 3, we fitted a DPGMM to pooled data from all four data samples. Pooled data is problematic because the resulting distribution is for an “averaged” data sample, and may result in the loss of information specific to a particular sample. We observe artifacts from clusters present in the pooled distribution but not in the specific sample in data sample 2 (green events in blue cluster) and data sample 4 (red events in blue cluster). A subtle issue is the over-counting of red cluster events in data sample 3 (9 events circled in red) due to the excessive influence of the red clusters in data samples 1 and 2.</p>
</sec><sec id="s2a4">
<title>Hierarchical modeling</title>
<p>Finally, in row 4, we fitted a HDPGMM to all four data sets simultaneously with the consensus modal clustering approach to identify cell subsets as described in <xref ref-type="sec" rid="s4">Methods</xref>. Clusters are aligned across data sets, there is no spurious mixing of clusters, and the rare event cluster in data sample 3 is correctly classified as having 5 events (circled in red).</p>
</sec></sec><sec id="s2b">
<title>Experimental study</title>
<p>To evaluate the utility of HDPGMM for identifying rare event clusters in real data, we used reference cell samples containing a predefined number of T cells with known TCR specificity for the NY-ESO-1 cancer-testis antigen. TCR-transduced cells were added to autologous PBMC samples at final concentrations of 0%, 0.013125%, 0.02625%, 0.0525%, 0.105% and 0.21% <xref ref-type="bibr" rid="pcbi.1003130-Singh1">[8]</xref>. There is also a small background contribution by antigen-specific T cells that are already present in the unspiked sample, which is estimated to be 0.0154% using the mean frequency from manual gating by 10 flow practitioners. A total of 50,000 events was then collected from each sample for analysis. At the highest spike frequency, we would therefore expect to detect a maximum of 0.2254%, or 113 antigen-specific T cell events out of 50,000 total events. This is a challenging clustering problem as the frequency of expected multimer-positive events is extremely low, but ideal for validation since the expected number of T cells that bind with high-affinity to the HLA-peptide multimer is known.</p>
<p>DPGMM and HDPGMM models were separately fitted to these six data samples using the FSC, SSC, CD45, CD3 and HLA-multimer channels (5 dimensional), using a truncated Dirichlet process with 128 mixture components, 20,000 burn-in steps and 2,000 identified iterations to calculate the posterior distribution as described in <xref ref-type="sec" rid="s4">Methods</xref>. The trace plots of log-likelihood shown in <xref ref-type="fig" rid="pcbi-1003130-g004">Figure 4</xref> provides evidence for model convergence, and the distribution of mixture component proportions in <xref ref-type="fig" rid="pcbi-1003130-g005">Figure 5</xref> provides evidence for model goodness of fit. After consensus modal clustering, the multimer positive clusters were defined using the gating scheme shown in the left panel of <xref ref-type="fig" rid="pcbi-1003130-g003">Figure 3</xref>, but applied to event clusters found by HDPGMM rather than individual events. Since the clustering is done in the full set of markers rather than in two-dimensional slices, events that look close together in a particular projection but are further apart when all dimensions are considered will not belong to the same cluster. The frequency of multimer-positive events as a percentage of all 50,000 events was then calculated. We also ran trials of HDPGMM to evaluate the lower bound needed to find the antigen specific clusters in all samples; 3 out of 4 runs were successful with 32 components, and all runs were successful when 40 or more components were used.</p>
<fig id="pcbi-1003130-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g004</object-id><label>Figure 4</label><caption>
    <title>Trace plots of log likelihood for the final 2,000 MCMC iterations of the HDP model sampled every <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e057" xlink:type="simple"/></inline-formula> iterations showing mixing and convergence.</title><p>The MCMC was run for 22,000 iterations, and samples obtained from the final 2,000 iterations were used to calculate and plot the log likelihood at each iteration. The log likelihood appears to vary stochastically about an equilibrium distribution indicating convergence, and the chain traverses its distribution indicating mixing, but the steps tend to be small indicating some degree of autocorrelation. Text in yellow boxes indicates the frequencies of the spiked antigen-specific T cells in the sample being fitted.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g004" position="float" xlink:type="simple"/></fig><fig id="pcbi-1003130-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g005</object-id><label>Figure 5</label><caption>
<title>Log of the proportion or weight of each of the 128 components in the model.</title>
<p>Each panel shows a scatter plot of the log component proportions ordered by size for the HDP model fitted to each flow cytometry data sample. The largest component has a log probability of approximately -1, indicating that this single component can account for about 10% of the total events in the data sample. In contrast, the smallest component has a log probability of between -5 and -6, indicating that the smallest component only accounts for 0.001–0.0001% of the total events in the data sample. Since each sample has 50,000 events, components with log probabilities of -5 and below are likely to be empty of events. Hence, the dip at the right of each plot is an indication of cutting back by the Dirichlet process model, and provides evidence that the number of components is adequate for a good model fit. If there is no dip in the size of smallest component proportions, there is a need to increase the maximal number of components if rare event clusters are to be adequately modeled. Text in yellow boxes indicates the frequencies of the spiked antigen-specific T cells in the sample being fitted.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g005" position="float" xlink:type="simple"/></fig>
<p>A side-by-side comparison of manually gated, DPGMM and HDPGMM classifications is shown in <xref ref-type="fig" rid="pcbi-1003130-g003">Figure 3</xref>. All 3 approaches are comparable in terms of being able to identify and quantify the antigen-specific cluster of events. Across all runs, DPGMM consistently finds occasional outlier events that are likely to be false positives (e.g. the CD3 negative to low events in the DPGMM fits shown in rows 1 and 4). HDPGMM does not appear to suffer from the same false positive detection, and is also more sensitive for the samples with the lower spiked-in frequencies than DPGMM. However, the most striking advantage of HDPGMM over DPGMM is the interpretability of the hierarchical modeling – cell subsets are consistently labeled across data samples, allowing direct comparison of any cell subset of interest, not just of the multimer positive events.</p>
<p><xref ref-type="fig" rid="pcbi-1003130-g006">Figure 6</xref> shows the results from the application of FLOCK, FLAME and flowClust on the same data set. FLOCK only detects the antigen-specific cell subset at the highest spiked-in concentration with a moderate number of probable false positive events that are CD3-negative. As indicated by the color coding of events, FLOCK does not provide any alignment of cell subsets across samples. Using the default settings, FLAME failed to identify any antigen-specific cell subsets. Cell subsets found were aligned but there were alignment artifacts when the event partitioning was different across samples (arrowed example). Using a 64 component mixture, flowClust only detects antigen-specific clusters at the highest spiked-in concentration, and does not provide any alignment of cell subsets. Unlike FLOCK and Dirichlet process based models, the number of components for FLAME and flowClust is not estimated from the data. Hence, in practice, one would have to fit a variety of models with different numbers of components and subsequently perform model selection when using FLAME or flowClust.</p>
<fig id="pcbi-1003130-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g006</object-id><label>Figure 6</label><caption>
<title>Comparison of FLOCK, FLAME and flowClust for detection of rare antigen-specific events.</title>
<p>The panels show the estimated frequencies of antigen-specific cells (large red dots) expressed as a percentage of all events (yellow boxes). (Left panel) FLOCK detects the antigen-specific cluster at the highest spiked-in frequency but not in the other samples. There are several CD3-negative events included in the detected cluster that are most likely false positive events. As indicated by the color coding of events, FLOCK does not provide any alignment of cell subsets across samples. (Middle panel) Using the default settings, FLAME failed to identify any antigen-specific cell subsets. Cell subsets found were aligned but there were alignment artifacts when the event partitioning was different across samples (arrowed example). (Right panel) Using 64 components and 1000 iterations, flowClust only identified antigen-specific clusters at the highest spiked-in levels and did not provide any methods to align clusters across samples.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g006" position="float" xlink:type="simple"/></fig>
<p>In <xref ref-type="supplementary-material" rid="pcbi.1003130.s001">Figure S1</xref>, we compare HDPGMM, FLAME and flowClust models with 48 components fitted to the same data set. HDPGMM completed in 3 hours and 30 minutes (20,000 burn-in and 2,000 identified iterations), FLAME took 4 days 12 hours and 28 min, and flowClust completed in 25 minutes (1,000 iterations). With 48 components, HDPGMM found antigen-specific clusters in all samples. FLAME found the clusters when the spiked in concentration was greater or equal to 0.02625%, but cluster alignment failed with the error “missing value where TRUE/FALSE needed”. In contrast, flowClust did not detect any antigen-specific clusters. Both HDPGMM and FLAME clusters included a fair number of CD3-negative events, in agreement with the goodness-of-fit analysis shown in <xref ref-type="fig" rid="pcbi-1003130-g005">Figure 5</xref> that 48 components is inadequate for modeling rare event clusters in this data set. We tried to run FLAME with 128 components but this was not practical since the program did not terminate after more than 10 days. It took 26 hours for flowClust to run 1,000 iterations with 128 components, and 4 out of 6 samples gave “NA” indicating missing data for all cluster centroids. The wide variation in run-times seen with flowClust (25 minutes to 26 hours) probably reflects early termination with fewer than 1,000 iterations due to tolerance thresholds being met in the 48 component case. We suspect that the missing data might be caused by the Expectation-Maximization algorithm failing when there are zero-event components, but cannot confirm this since the program terminated with no error messages.</p>
<p>Finally, to evaluate the robustness of the DPGMM and HDPGMM frequency estimates, the fitting was repeated 10 times for each algorithm using different random number seeds, and compared to manual gating results from 10 users. Manual gating was performed by operators who were instructed to gate using the same sequence of 2D plots (common gating strategy), but were free to set gate boundaries within any given plot. The results are shown in <xref ref-type="fig" rid="pcbi-1003130-g007">Figure 7</xref>. With respect to linear regression, all three methods perform comparably well with respect to correlation coefficient, but manual gating has slightly less deviation from a straight line fit than HDPGMM which in turn is better than DPGMM. From the figure, it can also be seen that HDPGMM is more accurate than manual gating in that the absolute deviation of the median of the estimates from the “true” concentration is lower than that for manual gating at every concentration. Since the “true” value is taken to be background estimated from 10 manual estimates in the autologous PBMC only sample added to the known spiked-in frequency, accuracy is not evaluated for autologous sample alone. In <xref ref-type="fig" rid="pcbi-1003130-g008">Figure 8</xref>, we show that the algorithm is robust to changes in the hyper-parameters across a 9-fold range.</p>
<fig id="pcbi-1003130-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g007</object-id><label>Figure 7</label><caption>
<title>Comparison of accuracy, reproducibility and linearity of manual gating, DPGMM and HDPGMM.</title>
<p>For gating estimates, frequency estimates from 10 flow cytometry operators were collected. For both DPGMM and HDPGMM, 10 MCMC runs with unique random number seeds were performed to evaluate the reproducibility of antigen-specific cell frequency estimates. Estimates of the antigen-specific frequencies from manual, DPGMM and HDPGMM approaches are shown as open blue circles, with the blue bar representing the mean of all 10 estimates at each spike frequency. The red crosses represent the “true” frequency of antigen-specific cells combining the known spiked-in frequencies and the average background from 10 manual evaluations. As shown in the figure, HDPGMM (right panel) estimates have equal or less variability at every spike dilution when compared with DPGMM (middle panel). A linear regression fit (red line) shows that the standard errors and correlation coefficient of all 3 approaches are comparable. The number in red text above each set of estimates is the absolute value of (median of estimates – “true value”), a measure of accuracy. This shows that HDPGMM is more accurate than manual gating at every spiked-in concentration. The number in blue text below each set of estimates is the coefficient of variation (CV), which is lower for HDPGMM than manual gating for all concentrations except autologous sample only. For both DPGMM and HDPGMM, model fitting was done with an MCMC sampler running 20,000 burn-in and 2,000 averaged iterations.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g007" position="float" xlink:type="simple"/></fig><fig id="pcbi-1003130-g008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g008</object-id><label>Figure 8</label><caption>
<title>Sensitivity analysis for the 4 configurable hyper-parameters</title><p><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e058" xlink:type="simple"/></inline-formula><bold>, </bold><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e059" xlink:type="simple"/></inline-formula><bold>, </bold><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e060" xlink:type="simple"/></inline-formula><bold> and </bold><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e061" xlink:type="simple"/></inline-formula><bold>.</bold> To evaluate the robustness of the algorithm to changes in the configurable hyper-parameters, we repeated the analysis of the spiked in data sample multiple times with different parameters, using 10 independent MCMC runs to obtain statistics for each set of hyper-parameter configurations. Each mini-panel has the same axes as <xref ref-type="fig" rid="pcbi-1003130-g007">Figure 7</xref> with estimated frequency of multimer-positive events on the vertical axis and spiked-in frequency on the horizontal axis. A boxplot is used to display the results for each model configuration. Configurable parameters were set to be either the default value (1.0), 3-fold lower (0.3) or 3-fold higher (3.0), giving 81 hyper-parameter configurations. Three replicate runs with 10,000 burn-in and 1,000 MCMC iterations were performed for each configuration. The default configuration is in the center panel with red text.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g008" position="float" xlink:type="simple"/></fig></sec></sec><sec id="s3">
<title>Discussion</title>
<p>We have shown that HDPGMM improves on fitting individual samples with DPGMM in two ways - 1) it aligns clusters, making direct comparison of cluster counts across samples possible, and 2) by sharing information across samples, it can identify biologically relevant cell subsets present at frequencies in the 0.01–0.1% range, since “real” cell subsets would naturally be expected to be present in multiple data samples. The hierarchical model is also preferable to using a reference data sample or pooling the data from all samples, since individual sample characteristics are lost with these alternative strategies.</p>
<p>Unlike HDPGMM, other approaches for automated flow cytometry analysis treat data in the same way as DPGMM, that is, fitting a model to independent samples separately, then using a heuristic or algorithm to match up clusters in one data set with another. However, since the model fitting is performed independently, the way that events are partitioned in individual data sets into clusters may be different even across samples that are otherwise very similar, resulting in poor alignment as seen in the FLAME analysis. We are not aware of any other automated flow cytometry analysis software that directly models contributions from individual and grouped samples to align cell subsets, and believe that the HDPGMM approach fills a useful niche in multi-sample comparisons, especially for the quantification of rare event clusters.</p>
<p>One limitation of the HDPGMM model is that all the data to be fitted need to be simultaneously available. This is not an issue for most studies, but may be limiting for longitudinal studies that collect samples serially over an extended period where interim analyses need to be performed. Even in these cases, it may be useful to batch process cell samples in stages using a hierarchical model, then perform post-processing to align cell subsets over different stages. Because of information sharing, cell subsets that are consistent across data samples will be extremely robust features in the posterior distribution. Hence, it is likely that features across batches will be more consistent and easier to align for HDPGMM-fitted batch samples than if every sample was independently fitted.</p>
<p>As described in the text, HDPGMM achieves alignment by assuming that the cluster locations and shapes are constant across datasets, and only their proportions vary from sample to sample. This is similar to the standard practice of using a gating template common to all samples for manual analysis. However, the HDPGMM approach has several advantages over the use of a common gating template. Because the locations and shapes of the clusters are inferred from the data and not imposed top-down by an expert, there is less risk of a subjective bias and failure to detect novel cell subsets. Since classification of events is done by assignment to the maximum probability cluster, cell subsets are not demarcated by arbitrary (typically polygonal) boundaries. In addition, it is simple to tune for higher sensitivity or specificity depending on experimental context by setting the probability necessary for an event to be included in a cluster; events that fall below this threshold are considered to be indeterminate. However, clusters that are doubly rare in the sense of being found in only a small proportion of the samples, and which also constitute a tiny fraction of the total events in any given sample, risk being masked by other more common and high abundance clusters. In many cases, this limitation can be addressed by the inclusion of appropriate positive controls in the samples. Where such positive controls are not available, a post-processing step to scan for “anomalous” events that are found in extremely low probability regions of the posterior distribution at higher frequencies than predicted, may be effective for identifying these doubly rare events.</p>
<p>Technically, our implementation of the HDPGMM integrates several innovations necessary to make such hierarchical models a practical tool for flow cytometry analysis, including the use of a Metropolis-within-Gibbs step for sampling, an identification strategy to maintain consistent component labels across iterations that allows us to calculate the posterior distribution from multiple MCMC iterations, and a consensus modal map to merge components in such a way that non-Gaussian cell subsets are aligned across multiple data sets. To ensure scalability, we have implemented Message Passing Interface (MPI) and Compute Unified Device Architecture (CUDA) optimized code that can take advantage of multiple CPUs and GPUs from a cluster of machines to fit a single HDPGMM model to multiple data sets.</p>
<p>We provide software for HDPGMM fitting to flow cytometry data sets, together with pre-specified robust default parameters and hyper-parameters that make practical usage simple. In our experience, we have never needed to adjust these parameters for data sets ranging from 3-color to 11-color flow cytometry data sets. The only parameters we individually set are the number of burn-ins, the number of iterations to collect for the posterior distribution, and the maximal number of components for the truncated DP algorithm. These parameters are tuned mainly for computational efficiency since conservative defaults that would be expected to be effective in all common use cases can be given, with the trade-off being longer run times. In addition, the use of prior information to set the starting values for component means and covariances (e.g. from fits to previously collected similar data) would reduce the number of iterations necessary to achieve convergence.</p>
<p>The fitting of HDPGMM is computationally demanding but can be accelerated with cheap commodity graphics cards as previously described <xref ref-type="bibr" rid="pcbi.1003130-Suchard1">[16]</xref>. For example, running an MCMC sampler for 20,000 burn-in and 2,000 identified iterations to fit a 128-component HDPGMM to the six multimer data sets shown in <xref ref-type="fig" rid="pcbi-1003130-g003">Figure 3</xref> took less than 6 hours on a Linux workstation using a single NVidia GTX 580 card costing under USD 500. The algorithm has runtime complexity of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e062" xlink:type="simple"/></inline-formula>, and benchmark experiments shown in <xref ref-type="fig" rid="pcbi-1003130-g009">Figure 9</xref> confirm that the performance is linear in the number of events and samples and quadratic in the number of markers. Open source code for fitting DPGMM and HDPGMM models to flow cytometry data is available from <ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/py-fcm/" xlink:type="simple">http://code.google.com/p/py-fcm/</ext-link>. The code is written in the Python programming language, and will run on regular CPUs, but is optimized for massively parallel computing using the CUDA interface (a suitable Nvidia GPU is required for CUDA). Flow cytometry data samples, source code and a sample script to fit a HDPGMM model to the data are provided in Supplementary Materials.</p>
<fig id="pcbi-1003130-g009" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003130.g009</object-id><label>Figure 9</label><caption>
<title>Performance of HDPGMM with different numbers of events, samples and markers.</title>
<p>Left panel shows time taken to fit HDPGMM to 10 samples with 50,000 to 500,000 events and 10 markers. Middle panel shows time taken to fit HDPGMM to 3 to 30 samples each with 100,000 events and 10 markers. Right panel shows time taken to fit 10 samples each with 100,000 events with the number of markers varying from 5 to 15. In each case, the model was run for 1,000 MCMC steps with an upper limit of 128 mixture components on a NVidia GTX 580 GPU, and the times from three replicate runs are shown.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003130.g009" position="float" xlink:type="simple"/></fig>
<p>In summary, we describe and provide code for a hierarchical modeling extension to statistical mixture models that improves on the robustness, sensitivity and interpretability of model-based approaches for automated flow cytometry analysis. We demonstrate the consistency of frequency of HDPGMM estimates on reference data samples spiked with extremely low frequencies of antigen-specific cells, a scenario directly relevant to many clinical research studies in vaccine development, immune monitoring and immune biomarker discovery where the frequency of rare antigen-specific T cells is of interest.</p>
</sec><sec id="s4" sec-type="methods">
<title>Methods</title>
<sec id="s4a">
<title>Hierarchical modeling</title>
<sec id="s4a1">
<title>Dirichlet process mixture of Gaussians</title>
<p>Assume we observe flow cytometry measurements <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e063" xlink:type="simple"/></inline-formula> where each <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e064" xlink:type="simple"/></inline-formula> is a <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e065" xlink:type="simple"/></inline-formula> dimensional vector. Let the probability density function for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e066" xlink:type="simple"/></inline-formula> be<disp-formula id="pcbi.1003130.e067"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e067" xlink:type="simple"/><label>(1)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e068" xlink:type="simple"/></inline-formula> is the complete set of parameters in the model, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e069" xlink:type="simple"/></inline-formula> is the number of possible clusters, and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e070" xlink:type="simple"/></inline-formula> is the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e071" xlink:type="simple"/></inline-formula> dimensional multivariate normal density evaluated at <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e072" xlink:type="simple"/></inline-formula> with mean <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e073" xlink:type="simple"/></inline-formula> and covariance matrix <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e074" xlink:type="simple"/></inline-formula>. The mixture weights <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e075" xlink:type="simple"/></inline-formula>, are all positive and sum to one. The <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e076" xlink:type="simple"/></inline-formula> are modeled as random probabilities from a so-called “stick-breaking” prior process. Specifically,<disp-formula id="pcbi.1003130.e077"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e077" xlink:type="simple"/><label>(2)</label></disp-formula>where Beta denotes a beta distribution <xref ref-type="bibr" rid="pcbi.1003130-Ishwaran1">[17]</xref>. Note that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e078" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e079" xlink:type="simple"/></inline-formula>. A key advantage of the (truncated) Dirichlet process specification is that it results in automated inference on the number of clusters based on a pre-specified large value <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e080" xlink:type="simple"/></inline-formula>. That is, with such an encompassing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e081" xlink:type="simple"/></inline-formula>, many of the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e082" xlink:type="simple"/></inline-formula> will be inferred as very close to zero, leaving a reduced set of effective clusters. A complete Bayesian model specification is completed by putting priors on <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e083" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e084" xlink:type="simple"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e085" xlink:type="simple"/></inline-formula>.</p>
<p>An alternative and equivalent representation of (1) is to assume that for each observation <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e086" xlink:type="simple"/></inline-formula> we have an unknown label <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e087" xlink:type="simple"/></inline-formula>. If we assume <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e088" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e089" xlink:type="simple"/></inline-formula>, marginalizing the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e090" xlink:type="simple"/></inline-formula> yields (1). This parametrization makes posterior computation more tractable, and inference about <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e091" xlink:type="simple"/></inline-formula> is equivalent to inferring the cluster assignment for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e092" xlink:type="simple"/></inline-formula>.</p>
</sec><sec id="s4a2">
<title>Hierarchical Dirichlet process mixture of Gaussians</title>
<p>We now generalize DPGMM to simultaneously classify T cells across multiple datasets. Assume we observe <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e093" xlink:type="simple"/></inline-formula> different sets of FCM measurements <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e094" xlink:type="simple"/></inline-formula>. Each dataset then has its own probability density function given by<disp-formula id="pcbi.1003130.e095"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e095" xlink:type="simple"/><label>(3)</label></disp-formula>Note the primary difference between DPGMM and HDPGMM is <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e096" xlink:type="simple"/></inline-formula>. The sets of cluster locations and shapes, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e097" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e098" xlink:type="simple"/></inline-formula>, are assumed to be the same across datasets while the prevalence of the clusters <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e099" xlink:type="simple"/></inline-formula> is allowed to vary across datasets. A similar two level parametrization holds here as in DPGMM. The approach now introduces the inherent, latent component indicators <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e100" xlink:type="simple"/></inline-formula> such that, for each observation <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e101" xlink:type="simple"/></inline-formula> and component <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e102" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e103" xlink:type="simple"/></inline-formula>; this leads to conditional distributions <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e104" xlink:type="simple"/></inline-formula> and opens the path to routine computational methods.</p>
<p>Our interest is in extensions of this basic framework to hierarchical models on the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e105" xlink:type="simple"/></inline-formula> that effectively picks the number of clusters in the model, but shares information across datasets to facilitate rare subtype discovery. Teh et al (2006) <xref ref-type="bibr" rid="pcbi.1003130-Teh1">[15]</xref> give multiple representations for a hierarchical Dirichlet process for clustering across multiple datasets. We take their stick breaking approach:<disp-formula id="pcbi.1003130.e106"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e106" xlink:type="simple"/><label>(4)</label></disp-formula>As before, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e107" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e108" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e109" xlink:type="simple"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e110" xlink:type="simple"/></inline-formula>. Teh et al (2006) <xref ref-type="bibr" rid="pcbi.1003130-Teh1">[15]</xref> show that this construction is equivalent to letting each dataset have its own Dirichlet process where the base measures also arise from a common base measure. We complete the prior specification by placing multivariate normal and inverse Wishart priors on each <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e111" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e112" xlink:type="simple"/></inline-formula> respectively. We also use gamma priors on <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e113" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e114" xlink:type="simple"/></inline-formula> <xref ref-type="bibr" rid="pcbi.1003130-Escobar1">[11]</xref>.</p>
<p>In summary, within each sample every cell is assumed to come from some unknown cluster where the number of clusters is learned from the data and the shape of each cluster is unknown. Note that we can assume this to be true because we group many parametric Gaussian clusters into flexibly shaped groups. See the consensus modal clustering below. Since the model is hierarchical in the sense that cluster shapes are shared between samples while their prevalence variance between samples, information is shared when cells from multiple samples are assigned to the same cluster giving us more information about the cluster's shape. This is especially prevalent when the number of cells in a particular cluster is small for a given sample.</p>
</sec><sec id="s4a3">
<title>Posterior computation</title>
<p>We perform posterior inference by sampling via a Markov chain Monte Carlo (MCMC) algorithm using the latent classification variable <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e115" xlink:type="simple"/></inline-formula>. However, several challenges arise. First, the usual Gibbs sampling approach does not work because the conditional distributions of the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e116" xlink:type="simple"/></inline-formula> are difficult to work with. Crepet et al (2011) <xref ref-type="bibr" rid="pcbi.1003130-Crepet1">[18]</xref> use a similar model, but do not give details for sampling these key parameters. Secondly, the naming, or labeling, of the clusters is not well defined, so we need to deal with relabeling issues. Finally, the computation within each sampling iteration is very expensive.</p>
</sec><sec id="s4a4">
<title>Metropolis within Gibbs</title>
<p>Since the conditional distributions for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e117" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e118" xlink:type="simple"/></inline-formula> are not conjugate, we propose a Metropolis within Gibbs approach. For each MCMC iteration, all other parameters are sampled via their full conditional distributions given in the HDPGMM implementation section below. We then propose a new <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e119" xlink:type="simple"/></inline-formula> from a normal distribution centered at <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e120" xlink:type="simple"/></inline-formula> where we reflect negative values onto the positive half line and accept or reject the move according to the Metropolis Hastings (MH) ratio. We take the same approach for each <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e121" xlink:type="simple"/></inline-formula> except that we reflect onto the unit interval. The variability in the random walks is tuned during the burn-in period to target a 50% acceptance rate supported by Gelman et al <xref ref-type="bibr" rid="pcbi.1003130-Gelman1">[19]</xref>.</p>
</sec><sec id="s4a5">
<title>Identification</title>
<p>To address the label switching issue, we use the method of Cron and West <xref ref-type="bibr" rid="pcbi.1003130-Cron1">[20]</xref> that maintains a coherent classification of the data across the MCMC iterates. This is enabled by defining a “reference” classification taken from the last iteration of the burn-in phase of the MCMC; this is simply the most likely cluster assignment for each event in all the datasets at that iterate. This labeling is chosen as a reference since it is assumed to be a representative labeling of the cells. Then, at every further iteration the clusters are relabeled to minimize the misclassification rate when compared to the reference. In essence, we pick a representative clustering then we choose the cluster labelings at every iterate that labels the data most like the reference. This method is used because of its computational efficiency and good performance in other settings. Critically, this allows us to estimate the true posterior by component-wise averaging over multiple iterations after the burn-in phase, instead of using a point estimate as is typically done. Complete details are given by Cron and West <xref ref-type="bibr" rid="pcbi.1003130-Cron1">[20]</xref> including a flow cytometry example.</p>
</sec><sec id="s4a6">
<title>GPU computation</title>
<p>In each iteration of the MCMC, the multivariate normal distribution must be evaluated at every event (in every dataset) for each of the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e122" xlink:type="simple"/></inline-formula> clusters to get assignment probabilities. Without parallel computing, this takes the majority of the computation time. Therefore, we adapted the GPU computing ideas by Suchard et al <xref ref-type="bibr" rid="pcbi.1003130-Suchard1">[16]</xref>, <xref ref-type="bibr" rid="pcbi.1003130-Suchard2">[21]</xref> used in the “gpustats” python library to accelerate the computation. We also employed MPI techniques that use multiple GPUs across potentially multiple machines simultaneously to optimize performance.</p>
</sec><sec id="s4a7">
<title>Consensus modal clustering for cell subset identification and alignment</title>
<p>As cell subsets may have non-Gaussian distributions, it is often necessary to merge several mixture components to represent a single cell subtype. An intuitively appealing concept is to cluster components together when the components share a common mode, since the mode is an objective feature of the posterior distribution that links multiple components - here we adapt the procedure to find a coherent modal assignment across data sets. We first create a reference distribution whose whose components have the same means and covariance matrices as the fitted HDPGMM model, but whose component weights are averaged over all data sets. We first create a consensus Gaussian mixture model distribution whose components have the same means and covariance matrices as the fitted HDPGMM model, but whose component weights are averaged over all data sets. Starting from the location of each component mean, we use a numerically efficient iterative procedure to identify the mode associated with that location as previously described <xref ref-type="bibr" rid="pcbi.1003130-Chan2">[10]</xref>. Components in the consensus GMM that approach the same mode to within a small tolerance are then merged to create a mapping of Gaussian components to modal clusters. The mapping is then used for all the fitted data sets, resulting in cell subset (modal cluster) alignment across multiple data sets. Note that only the <italic>mapping</italic> of component to modal cluster is shared by all data sets, the component weights for each data set remain unique.</p>
</sec></sec><sec id="s4b">
<title>HDPGMM implementation</title>
<p>We give posterior computational details only for HDPGMM since details for our implementation of DPGMM have been previously published <xref ref-type="bibr" rid="pcbi.1003130-Suchard1">[16]</xref>. First, let <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e123" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e124" xlink:type="simple"/></inline-formula> so that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e125" xlink:type="simple"/></inline-formula>. Furthermore, let <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e126" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e127" xlink:type="simple"/></inline-formula>. These along with <xref ref-type="disp-formula" rid="pcbi.1003130.e095">equations (3)</xref> and <xref ref-type="disp-formula" rid="pcbi.1003130.e106">(4)</xref> give a complete specification of the model. Metropolis within Gibbs is performed by updating each parameter with a draw from its conditional distribution in turn and when the conditional distribution is intractable, use a Metropolise Hastings update instead. We give the specifics of the sampling in the remainder of this section.</p>
<sec id="s4b1">
<title>Sampling classification indicators</title>
<p>For each observation calculate<disp-formula id="pcbi.1003130.e128"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e128" xlink:type="simple"/></disp-formula>then sample each <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e129" xlink:type="simple"/></inline-formula> with pmf<disp-formula id="pcbi.1003130.e130"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e130" xlink:type="simple"/></disp-formula>Note that we use the shorthand “<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e131" xlink:type="simple"/></inline-formula>” to denote all other parameters in the model. This calculation occupies most of the computational effort for large datasets. However, this is completely parallelizable across observations and datasets. To achieve very large performance gains, we place one or more datasets <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e132" xlink:type="simple"/></inline-formula> on each GPU available and use “gpustats” to perform the computations similar to <xref ref-type="bibr" rid="pcbi.1003130-Suchard1">[16]</xref>.</p>
</sec><sec id="s4b2">
<title>Sampling cluster parameters</title>
<p>Given the cluster assignments, sampling each <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e133" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e134" xlink:type="simple"/></inline-formula> is simply a matter of drawing from their conjugate normal and inverse Wishart distributions respectively. Let, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e135" xlink:type="simple"/></inline-formula> be all observations such that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e136" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e137" xlink:type="simple"/></inline-formula> be the number of said observations. Sample<disp-formula id="pcbi.1003130.e138"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e138" xlink:type="simple"/></disp-formula>and<disp-formula id="pcbi.1003130.e139"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e139" xlink:type="simple"/></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e140" xlink:type="simple"/></inline-formula></p>
<p>Updating the cluster weights, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e141" xlink:type="simple"/></inline-formula>, is slightly less routine but still conjugate. Define,<disp-formula id="pcbi.1003130.e142"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e142" xlink:type="simple"/></disp-formula><disp-formula id="pcbi.1003130.e143"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e143" xlink:type="simple"/></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e144" xlink:type="simple"/></inline-formula> is the number of points in dataset <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e145" xlink:type="simple"/></inline-formula> assigned to cluster <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e146" xlink:type="simple"/></inline-formula>. Sample <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e147" xlink:type="simple"/></inline-formula>.</p>
<p>Furthermore, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e148" xlink:type="simple"/></inline-formula> can be updated simply by<disp-formula id="pcbi.1003130.e149"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e149" xlink:type="simple"/></disp-formula></p>
</sec><sec id="s4b3">
<title>Metropolis Hasting sampling</title>
<p>The conditional distributions for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e150" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e151" xlink:type="simple"/></inline-formula> are not tractable for sampling directly. Therefore, we use Metropolis Hastings samples with reflected normal proposals for each <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e152" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e153" xlink:type="simple"/></inline-formula> in turn. The algorithm is essentially the same in both cases, so we give a general description of the approach for sampling the parameter of interest, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e154" xlink:type="simple"/></inline-formula>, constrained between <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e155" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e156" xlink:type="simple"/></inline-formula>. Note that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e157" xlink:type="simple"/></inline-formula> or <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e158" xlink:type="simple"/></inline-formula> can be <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e159" xlink:type="simple"/></inline-formula> or <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e160" xlink:type="simple"/></inline-formula> respectively.</p>
<p>First, sample <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e161" xlink:type="simple"/></inline-formula> and set <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e162" xlink:type="simple"/></inline-formula> where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e163" xlink:type="simple"/></inline-formula> recursively reflects <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e164" xlink:type="simple"/></inline-formula> over the bounaries. While the pdf for this proposal distribution <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e165" xlink:type="simple"/></inline-formula> is tedious to write analytically, it can be shown that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e166" xlink:type="simple"/></inline-formula>. Finally, set <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e167" xlink:type="simple"/></inline-formula> with probability<disp-formula id="pcbi.1003130.e168"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e168" xlink:type="simple"/></disp-formula>and leave <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e169" xlink:type="simple"/></inline-formula> unchanged otherwise. Note that the proposal distribution does not enter the probability because it is symmetric. To choose the appropriate <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e170" xlink:type="simple"/></inline-formula>, we track the acceptance rate during the burn in period. On a fixed interval, we check if the acceptance rate is above 50% or below 40% and reduce or increase <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e171" xlink:type="simple"/></inline-formula> respectively. When sampling <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e172" xlink:type="simple"/></inline-formula>,<disp-formula id="pcbi.1003130.e173"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e173" xlink:type="simple"/></disp-formula>and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e174" xlink:type="simple"/></inline-formula>. For <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e175" xlink:type="simple"/></inline-formula>,<disp-formula id="pcbi.1003130.e176"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003130.e176" xlink:type="simple"/></disp-formula></p>
</sec></sec><sec id="s4c">
<title>Generation of experimental data and data preprocessing</title>
<p>The generation of the standard samples with a defined number of antigen-specific CD8 T cells spiked into autologous PBMC for use in HLA-peptide multimer has been described <xref ref-type="bibr" rid="pcbi.1003130-Singh1">[8]</xref>. Briefly, Phytohemagglutinin (PHA; <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e177" xlink:type="simple"/></inline-formula>) and IL-2 (20 U/ml) stimulated HLA-A*0201 positive PBMC were retrovirally transduced with an HLA-A*0201 restricted <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003130.e178" xlink:type="simple"/></inline-formula> specific TCR construct after the CD4 T cells were depleted using Dynabeads (Invitrogen). After 5 days, the transduced cells were harvested and purified using APC-conjugated NY-ESO-1 specific HLA multimer and magnetic cell sorting. Purified cells were clonally expanded, harvested and spiked at the desired percentage of NY-ESO-1 specific TCR expressing CD8 T cells into autologous PBMC. These samples were stained with monoclonal antibodies specific for CD45 (pan leukocyte) CD3 (T-lymphocytes) and HLA-A*0201 NY-ESO-1 157–165 multimers to identify spiked T cells. For details, please refer to reference <xref ref-type="bibr" rid="pcbi.1003130-Singh1">[8]</xref>).</p>
<p>Sample preparation conditions were set so that results (i.e. generated FCS files) would be as comparable as possible: Cell staining was performed simultaneously by the same operator, using the same batches of staining reagents, and data acquisition was subsequently done in a single experiment using the same cytometer settings (voltages, compensations) for all samples. The data were generated using a FACSCalibur and CellQuest Pro 6.0, with values ranging from 0 to 1023. No further transformations were performed on the data but standardization to have zero mean and unit standard deviation was performed before fitting the mixture model so all markers would have equal contributions. The standardization was reversed before plotting - i.e. all plots are based on the original 0 to 1023 scale. For gating estimates, frequency estimates from 10 flow cytometry operators using the same gating strategy were collected.</p>
</sec></sec><sec id="s5">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1003130.s001" mimetype="image/tiff" xlink:href="info:doi/10.1371/journal.pcbi.1003130.s001" position="float" xlink:type="simple"><label>Figure S1</label><caption>
<p><bold>Comparison of HDPGMM, FLAME and flowClust with same number of mixture components.</bold> The panels show the estimated frequencies of antigen-specific cells (large red dots) expressed as a percentage of all events (yellow boxes). (Left panel) HDPGMM detects the antigen-specific cluster at all spiked-in frequencies with cell subset alignment as indicated by the color coding of events. (Middle panel), FLAME identified antigen-specific cell subsets at spiked-in frequencies of 0.02625% of greater, but the alignment stage failed with an error message and hence clusters are not aligned. (Right panel) FlowClust failed to identify any antigen-specific clusters and cell subsets are not aligned. Note that both HDPGMM and FLAME detect a moderate number of CD3-negative false positive events, suggesting that 48 components are insufficient to adequately model rare event subsets in this data set.</p>
<p>(TIF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003130.s002" mimetype="application/zip" xlink:href="info:doi/10.1371/journal.pcbi.1003130.s002" position="float" xlink:type="simple"><label>Text S1</label><caption>
<p><xref ref-type="supplementary-material" rid="pcbi.1003130.s002">Text S1</xref> contains instructions on how to install the software and run the examples provided.</p>
<p>(ZIP)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003130.s003" mimetype="application/zip" xlink:href="info:doi/10.1371/journal.pcbi.1003130.s003" position="float" xlink:type="simple"><label>Software S1</label><caption>
<p><xref ref-type="supplementary-material" rid="pcbi.1003130.s003">Software S1</xref> contains a Makefile, source code and scripts to generate the figures shown in the manuscript.</p>
<p>(ZIP)</p>
</caption></supplementary-material></sec></body>
<back>
<ack>
<p>We would also like to thank our ten flow cytometry users for providing the estimates using manual gating, and Dr. T.N. Schumacher (NKI, Amsterdam, The Netherlands) for providing the NY-ESO-1 specific TCR.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1003130-Britten1"><label>1</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Britten</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Gouttefangeas</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Welters</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Pawelec</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Koch</surname><given-names>S</given-names></name>, <etal>et al</etal>. (<year>2008</year>) <article-title>The CIMT-monitoring panel: a two-step approach to harmonize the enumeration of antigen-specific CD8+ T lymphocytes by structural and functional assays</article-title>. <source>Cancer Immunology, Immunotherapy</source> <volume>57</volume>: <fpage>289</fpage>–<lpage>302</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Welters1"><label>2</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Welters</surname><given-names>MJP</given-names></name>, <name name-style="western"><surname>Gouttefangeas</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Ramwadhdoebe</surname><given-names>TH</given-names></name>, <name name-style="western"><surname>Letsch</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Ottensmeier</surname><given-names>CH</given-names></name>, <etal>et al</etal>. (<year>2012</year>) <article-title>Harmonization of the intracellular cytokine staining assay</article-title>. <source>Cancer Immunology, Immunotherapy</source> <volume>61</volume>: <fpage>1</fpage>–<lpage>12</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Aghaeepour1"><label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Aghaeepour</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Finak</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Hoos</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Mosmann</surname><given-names>TR</given-names></name>, <name name-style="western"><surname>Brinkman</surname><given-names>R</given-names></name>, <etal>et al</etal>. (<year>2013</year>) <article-title>Critical assessment of automated ow cytometry data analysis techniques</article-title>. <source>Nature methods</source> <volume>10</volume>: <fpage>228</fpage>–<lpage>238</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Chan1"><label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chan</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Feng</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Ottinger</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Foster</surname><given-names>D</given-names></name>, <name name-style="western"><surname>West</surname><given-names>M</given-names></name>, <etal>et al</etal>. (<year>2008</year>) <article-title>Statistical mixture modeling for cell subtype identification in ow cytometry</article-title>. <source>Cytometry Part A</source> <volume>73A</volume>: <fpage>693</fpage>–<lpage>701</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Pyne1"><label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Pyne</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Hu</surname><given-names>X</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Rossin</surname><given-names>E</given-names></name>, <name name-style="western"><surname>Lin</surname><given-names>T</given-names></name>, <etal>et al</etal>. (<year>2009</year>) <article-title>Automated high-dimensional ow cytometric data analysis</article-title>. <source>Proceedings of the National Academy of Sciences</source> <volume>106</volume>: <fpage>8519</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Lo1"><label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lo</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Hahne</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Brinkman</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Gottardo</surname><given-names>R</given-names></name> (<year>2009</year>) <article-title>flowClust: a Bioconductor package for automated gating of ow cytometry data</article-title>. <source>BMC Bioinformatics</source> <volume>10</volume>: <fpage>145</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Scheuermann1"><label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Scheuermann</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Qian</surname><given-names>Y</given-names></name>, <name name-style="western"><surname>Wei</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Sanz</surname><given-names>I</given-names></name> (<year>2009</year>) <article-title>ImmPort FLOCK: Automated cell population identification in high dimensional ow cytometry data</article-title>. <source>The Journal of Immunology</source> <volume>182</volume>: <fpage>42</fpage>–<lpage>17</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Singh1"><label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Singh</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Tummers</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Schumacher</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Gomez</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Franken</surname><given-names>K</given-names></name>, <etal>et al</etal>. (<year>2012</year>) <article-title>The development of standard samples with a defined number of antigen-specific T cells to harmonize T cell assays: a proof-of-principle study</article-title>. <source>Cancer Immunology, Immunotherapy</source> <volume>62</volume>: <fpage>1</fpage>–<lpage>13</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Finak1"><label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Finak</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Bashashati</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Brinkman</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Gottardo</surname><given-names>R</given-names></name> (<year>2009</year>) <article-title>Merging mixture components for cell population identification in flow cytometry</article-title>. <source>Advances in Bioinformatics</source> <volume>2009</volume>: <fpage>Article ID 247646</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Chan2"><label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chan</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Lin</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Frelinger</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Hebert</surname><given-names>V</given-names></name>, <name name-style="western"><surname>Gagnon</surname><given-names>D</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>Optimization of a highly standardized carboxyuorescein succinimidyl ester ow cytometry panel and gating strategy design using discriminative information measure evaluation</article-title>. <source>Cytometry Part A</source> <volume>77</volume>: <fpage>1126</fpage>–<lpage>1136</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Escobar1"><label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Escobar</surname><given-names>MD</given-names></name>, <name name-style="western"><surname>West</surname><given-names>M</given-names></name> (<year>1995</year>) <article-title>Bayesian density estimation and inference using mixtures</article-title>. <source>Journal of the American Statistical Association</source> <volume>90</volume>: <fpage>577</fpage>–<lpage>588</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Lin1"><label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lin</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Chan</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Hadrup</surname><given-names>SR</given-names></name>, <name name-style="western"><surname>Froesig</surname><given-names>TM</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Q</given-names></name>, <etal>et al</etal>. (<year>2013</year>) <article-title>Hierarchical bayesian mixture modelling for antigen-specific T-cell subtyping in combinatorially encoded ow cytometry studies</article-title>. <source>Statistical Applications in Genetics and Molecular Biology</source> <fpage>1</fpage>–<lpage>23</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Mller1"><label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Müller</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Quintana</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Rosner</surname><given-names>G</given-names></name> (<year>2004</year>) <article-title>A method for combining inference across related nonparametric Bayesian models</article-title>. <source>Journal of the Royal Statistical Society: Series B (Statistical Methodology)</source> <volume>66</volume>: <fpage>735</fpage>–<lpage>749</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-deOliveiraSales1"><label>14</label>
<mixed-citation publication-type="other" xlink:type="simple">de Oliveira Sales AP (2011) Clustering Multiple Related Datasets with a Hierarchical Dirichlet Process. Master's thesis, Duke University.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Teh1"><label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Teh</surname><given-names>YW</given-names></name>, <name name-style="western"><surname>Jordan</surname><given-names>MI</given-names></name>, <name name-style="western"><surname>Beal</surname><given-names>MJ</given-names></name>, <name name-style="western"><surname>Blei</surname><given-names>DM</given-names></name> (<year>2006</year>) <article-title>Hierarchical Dirichlet processes</article-title>. <source>Journal of the American Statistical Association</source> <volume>101</volume>: <fpage>1566</fpage>–<lpage>1581</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Suchard1"><label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Suchard</surname><given-names>MA</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Q</given-names></name>, <name name-style="western"><surname>Chan</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Frelinger</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Cron</surname><given-names>AJ</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>Understanding GPU programming for statistical computation: Studies in massively parallel massive mixtures</article-title>. <source>Journal of Computational and Graphical Statistics</source> <volume>19</volume>: <fpage>419</fpage>–<lpage>438</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Ishwaran1"><label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ishwaran</surname><given-names>H</given-names></name>, <name name-style="western"><surname>James</surname><given-names>L</given-names></name> (<year>2001</year>) <article-title>Gibbs sampling methods for stick-breaking priors</article-title>. <source>Journal of the American Statistical Association</source> <volume>96</volume>: <fpage>161</fpage>–<lpage>173</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Crepet1"><label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Crepet</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Tressou</surname><given-names>J</given-names></name> (<year>2011</year>) <article-title>Bayesian nonparametric model for clustering individual co-exposure to pesticides found in the French diet</article-title>. <source>Bayesian Analysis</source> <volume>6</volume>: <fpage>127</fpage>–<lpage>144</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Gelman1"><label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gelman</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Roberts</surname><given-names>GO</given-names></name>, <name name-style="western"><surname>Gilks</surname><given-names>WR</given-names></name> (<year>1996</year>) <article-title>Efficient Metropolis jumping rules</article-title>. <source>Bayesian Statistics</source> <volume>5</volume>: <fpage>599</fpage>–<lpage>607</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Cron1"><label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Cron</surname><given-names>AJ</given-names></name>, <name name-style="western"><surname>West</surname><given-names>M</given-names></name> (<year>2011</year>) <article-title>Efficient classification-based relabeling in mixture models</article-title>. <source>The American Statistician</source> <volume>65</volume>: <fpage>16</fpage>–<lpage>20</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003130-Suchard2"><label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Suchard</surname><given-names>MA</given-names></name>, <name name-style="western"><surname>Holmes</surname><given-names>C</given-names></name>, <name name-style="western"><surname>West</surname><given-names>M</given-names></name> (<year>2010</year>) <article-title>Some of the What?, Why?, How?, Who? and Where? Of graphics processing unit computing for Bayesian analysis</article-title>. <source>Bulletin of the International Society for Bayesian Analysis</source> <volume>17</volume>: <fpage>12</fpage>–<lpage>16</lpage>.</mixed-citation>
</ref>
</ref-list></back>
</article>