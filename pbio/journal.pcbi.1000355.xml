<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
    <front>
        <journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
                <publisher-name>Public Library of Science</publisher-name>
                <publisher-loc>San Francisco, USA</publisher-loc>
            </publisher></journal-meta>
        <article-meta><article-id pub-id-type="publisher-id">08-PLCB-RA-0503R2</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1000355</article-id><article-categories>
                <subj-group subj-group-type="heading">
                    <subject>Research Article</subject>
                </subj-group>
                <subj-group subj-group-type="Discipline">
                    <subject>Computational Biology/Evolutionary Modeling</subject>
                    <subject>Evolutionary Biology</subject>
                    <subject>Mathematics</subject>
                    <subject>Physics/Interdisciplinary Physics</subject>
                </subj-group>
            </article-categories><title-group><article-title>An Analytically Solvable Model for Rapid Evolution of Modular
                    Structure</article-title><alt-title alt-title-type="running-head">A Simple Model for Rapid Evolution of
                    Modularity</alt-title></title-group><contrib-group>
                <contrib contrib-type="author" equal-contrib="yes" xlink:type="simple">
                    <name name-style="western">
                        <surname>Kashtan</surname>
                        <given-names>Nadav</given-names>
                    </name>
                    <xref ref-type="aff" rid="aff1">
                        <sup>1</sup>
                    </xref>
                </contrib>
                <contrib contrib-type="author" equal-contrib="yes" xlink:type="simple">
                    <name name-style="western">
                        <surname>Mayo</surname>
                        <given-names>Avi E.</given-names>
                    </name>
                    <xref ref-type="aff" rid="aff1">
                        <sup>1</sup>
                    </xref>
                </contrib>
                <contrib contrib-type="author" xlink:type="simple">
                    <name name-style="western">
                        <surname>Kalisky</surname>
                        <given-names>Tomer</given-names>
                    </name>
                    <xref ref-type="aff" rid="aff1">
                        <sup>1</sup>
                    </xref>
                </contrib>
                <contrib contrib-type="author" xlink:type="simple">
                    <name name-style="western">
                        <surname>Alon</surname>
                        <given-names>Uri</given-names>
                    </name>
                    <xref ref-type="aff" rid="aff1">
                        <sup>1</sup>
                    </xref>
                    <xref ref-type="aff" rid="aff2">
                        <sup>2</sup>
                    </xref>
                    <xref ref-type="corresp" rid="cor1">
                        <sup>*</sup>
                    </xref>
                </contrib>
            </contrib-group><aff id="aff1">
                <label>1</label>
                <addr-line>Department of Molecular Cell Biology, Weizmann Institute of Science,
                    Rehovot, Israel</addr-line>
            </aff><aff id="aff2">
                <label>2</label>
                <addr-line>Physics of Complex Systems, Weizmann Institute of Science, Rehovot,
                    Israel</addr-line>
            </aff><contrib-group>
                <contrib contrib-type="editor" xlink:type="simple">
                    <name name-style="western">
                        <surname>Bergstrom</surname>
                        <given-names>Carl T.</given-names>
                    </name>
                    <role>Editor</role>
                    <xref ref-type="aff" rid="edit1"/>
                </contrib>
            </contrib-group><aff id="edit1">University of Washington, United States of America</aff><author-notes>
                <corresp id="cor1">* E-mail: <email xlink:type="simple">urialon@weizmann.ac.il</email></corresp>
                <fn fn-type="con">
                    <p>Conceived and designed the experiments: NK AEM TK UA. Performed the
                        experiments: NK AEM TK. Analyzed the data: NK AEM TK UA. Wrote the paper: NK
                        AEM TK UA.</p>
                </fn>
            <fn fn-type="conflict">
                <p>The authors have declared that no competing interests exist.</p>
            </fn></author-notes><pub-date pub-type="collection">
                <month>4</month>
                <year>2009</year>
            </pub-date><pub-date pub-type="epub">
                <day>10</day>
                <month>4</month>
                <year>2009</year>
            </pub-date><volume>5</volume><issue>4</issue><elocation-id>e1000355</elocation-id><history>
                <date date-type="received">
                    <day>23</day>
                    <month>6</month>
                    <year>2008</year>
                </date>
                <date date-type="accepted">
                    <day>10</day>
                    <month>3</month>
                    <year>2009</year>
                </date>
            </history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2009</copyright-year><copyright-holder>Kashtan et al</copyright-holder><license><license-p>This is an open-access article distributed under the
                terms of the Creative Commons Attribution License, which permits unrestricted use,
                distribution, and reproduction in any medium, provided the original author and
                source are credited.</license-p></license></permissions><abstract>
                <p>Biological systems often display modularity, in the sense that they can be
                    decomposed into nearly independent subsystems. Recent studies have suggested
                    that modular structure can spontaneously emerge if goals (environments) change
                    over time, such that each new goal shares the same set of sub-problems with
                    previous goals. Such modularly varying goals can also dramatically speed up
                    evolution, relative to evolution under a constant goal. These studies were based
                    on simulations of model systems, such as logic circuits and RNA structure, which
                    are generally not easy to treat analytically. We present, here, a simple model
                    for evolution under modularly varying goals that can be solved analytically.
                    This model helps to understand some of the fundamental mechanisms that lead to
                    rapid emergence of modular structure under modularly varying goals. In
                    particular, the model suggests a mechanism for the dramatic speedup in evolution
                    observed under such temporally varying goals.</p>
            </abstract><abstract abstract-type="summary">
                <title>Author Summary</title>
                <p>Biological systems often display modularity, in the sense that they can be
                    decomposed into nearly independent subsystems. The evolutionary origin of
                    modularity has recently been the focus of renewed attention. A series of studies
                    suggested that modularity can spontaneously emerge in environments that vary
                    over time in a modular fashion—goals composed of the same set of
                    subgoals but each time in a different combination. In addition to spontaneous
                    generation of modularity, evolution was found to be dramatically accelerated
                    under such varying environments. The time to achieve a given goal was much
                    shorter under varying environments in comparison to constant conditions. These
                    studies were based on computer simulations of simple model systems such as logic
                    circuits and RNA secondary structure. Here, we take this a step forward. We
                    present a simple mathematical model that can be solved analytically and suggests
                    mechanisms that lead to the rapid emergence of modular structure.</p>
            </abstract><funding-group><funding-statement>NIH, Kahn Family foundation, Center of Complexity Science. The funders had no
                    role in study design, data collection and analysis, decision to publish, or
                    preparation of the manuscript.</funding-statement></funding-group><counts>
                <page-count count="14"/>
            </counts></article-meta>
    </front>
    <body>
        <sec id="s1">
            <title>Introduction</title>
            <p>Biological systems often display modularity, defined as the seperability of the
                design into units that perform independently, at least to a first approximation
                    <xref ref-type="bibr" rid="pcbi.1000355-Simon1">[1]</xref>–<xref ref-type="bibr" rid="pcbi.1000355-Wagner1">[5]</xref>. Modularity can be seen
                in the design of organisms (organs, limbs, sensory systems), in the design of
                regulatory networks in the cell (signaling pathways, transcription modules) and even
                in the design of many bio-molecules (protein domains).</p>
            <p>The evolution of modularity has been a puzzle because computer simulations of
                evolution are well-known to lead to non-modular solutions. This tendency of
                simulations to evolve non-modular structures is familiar in fields such as evolution
                of neural networks, evolution of hardware and evolution of software. In almost all
                cases, the evolved systems cannot be decomposed into sub-systems, and are difficult
                to understand intuitively <xref ref-type="bibr" rid="pcbi.1000355-Thompson1">[6]</xref>. Non-modular solutions are found because they are
                far more numerous than modular designs, and are usually more optimal. Even if a
                modular solution is provided as an initial condition, evolution in simulations
                rapidly moves towards non-modular solutions. This loss of modularity occurs because
                there are so many changes that reduce modularity, by forming connections between
                modules, that almost always a change is found that increases fitness.</p>
            <p>Several suggestions have been made to address the origin of modularity in biological
                evolution <xref ref-type="bibr" rid="pcbi.1000355-Wagner1">[5]</xref>, <xref ref-type="bibr" rid="pcbi.1000355-Ancel1">[7]</xref>–<xref ref-type="bibr" rid="pcbi.1000355-Hintze1">[16]</xref>, recently reviewed by
                Wagner et al <xref ref-type="bibr" rid="pcbi.1000355-Wagner2">[17]</xref>. Here we focus on a recent series of studies that
                demonstrated the spontaneous evolution of modular structure when goals vary over
                time. These studies used computer simulations of a range of systems including logic
                circuits, neural networks and RNA secondary structure. They showed that modular
                structures spontaneously arise if goals vary over time, such that each new goal
                shares the same set of sub-problems with previous goals <xref ref-type="bibr" rid="pcbi.1000355-Kashtan1">[18]</xref>. This scenario is
                called <italic>modularly varying goals</italic>, or MVG. Under MVG, modules
                spontaneously evolve. Each module corresponds to one of the sub-goals shared by the
                different varying goals. When goals change, mutations that rewire these modules are
                rapidly fixed in the population to adapt to the new goal (<xref ref-type="fig" rid="pcbi-1000355-g001">Figure 1 A,B</xref>).</p>
            <fig id="pcbi-1000355-g001" position="float">
                <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g001</object-id>
                <label>Figure 1</label>
                <caption>
                    <title>Evolution under Fixed Goals (FG) and Modularly Varying Goals (MVG).</title>
                    <p>Examples of data from a series of studies <xref ref-type="bibr" rid="pcbi.1000355-Kashtan1">[18]</xref>,<xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref> that suggest that modularity spontaneously
                        evolves when goals change over time in a modular fashion (modularly varying
                        goals or MVG). (A) Logic circuits made of NAND gates evolved under a
                        constant goal (fixed goal, abbreviated FG) that does not vary over time,
                            <italic>G</italic><sub>1</sub> = (x XOR
                        y) AND (w XOR z). The circuit is composed of 10 NAND gates. Evolution under
                        a constant goal typically yields compact non-modular circuits. (B) Circuits
                        evolved under MVG evolution, varying every 20 generations between goal
                            <italic>G</italic><sub>1</sub> and goal
                        <italic>G</italic><sub>2</sub> = (x XOR y)
                        OR (w XOR z). Note that these two goals share the same sub-goals, namely two
                        XOR functions. Connections that are rewired when the goal switches are
                        marked in red. Evolution under MVG typically yields modular circuits that
                        are less compact, composed in this case of 11 gates. The circuits are
                        composed of three modules: two XOR modules and a third module that
                        implements an AND/OR function, depending on the goal.</p>
                </caption>
                <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g001" xlink:type="simple"/>
            </fig>
            <p>In addition to promoting modularity, MVG was also found to dramatically speed
                evolution relative to evolution under a constant goal <xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>. MVG speeds evolution
                in the sense that it reduces the number of generations needed to achieve the goal,
                starting from initial random genomes. Despite the fact that goals change over time,
                a situation that might be thought to confuse the evolutionary search, the
                convergence to the solution is much faster than in the case of a constant goal
                    (<xref ref-type="fig" rid="pcbi-1000355-g002">Figure 2 A,B</xref>).
                Intriguingly, the harder the goal, the faster the speedup afforded by MVG evolution.</p>
            <fig id="pcbi-1000355-g002" position="float">
                <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g002</object-id>
                <label>Figure 2</label>
                <caption>
                    <title>Speedup of evolution under MVG.</title>
                    <p>(A) A schematic view of fitness as a function of generations in evolution
                        under MVG and fixed (constant) goal (FG). Evolution time
                            (<italic>T<sub>MVG</sub></italic> and <italic>T<sub>FG</sub></italic>)
                        is defined as the median number of generations it takes to achieve the goal
                        (i.e. reach a perfect solution) starting from random initial genomes. (B)
                        Speedup of evolution under MVG based on simulations of logic circuits with
                        goals of increasing complexity (see <xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>). The speedup
                        is defined as evolution time under a fixed goal, divided by evolution time
                        under MVG that switches between the same goal and other modularly related
                        goals:
                            <italic>S = T<sub>FG</sub>/T<sub>MVG</sub></italic>.
                        Shown is the speedup <italic>S</italic> versus the evolution time under
                        fixed goal (<italic>T<sub>FG</sub></italic>). Speedup scales approximately
                        as a power law <italic>S∼(T<sub>FG</sub>)
                        <sup>α</sup></italic> with an exponent
                        α = 0.7±0.1. Thus, the
                        harder the goal the larger the speedup.</p>
                </caption>
                <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g002" xlink:type="simple"/>
            </fig>
            <p>To summarize the main findings of <xref ref-type="bibr" rid="pcbi.1000355-Kashtan1">[18]</xref>,<xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>:</p>
            <list list-type="roman-lower">
                <list-item>
                    <p>A constant goal (that does not change over time) leads to non-modular
                        structures.</p>
                </list-item>
                <list-item>
                    <p>Modularly varying goals lead to modular structures.</p>
                </list-item>
                <list-item>
                    <p>Evolution converges under MVG much faster than under a constant goal.</p>
                </list-item>
                <list-item>
                    <p>The harder the goals, the faster the speedup observed in MVG relative to
                        constant goal evolution.</p>
                </list-item>
                <list-item>
                    <p>Random (non-modular) goals that vary over time usually lead to evolutionary
                        confusion without generating modular structure, and rarely lead to
                    speedup.</p>
                </list-item>
            </list>
            <p>Since these findings were based on simulations, it is of interest to try to find a
                model that can be solved analytically so that the reasons for the emergence of
                modular structure, and for the speedup of evolution, can be more fully understood.
                Here we present such a simple, exactly solvable model. The model allows one to
                understand some of the mechanisms that lead to modularity and speedup in
            evolution.</p>
        </sec>
        <sec id="s2">
            <title>Model</title>
            <sec id="s2a">
                <title>Definition of the system</title>
                <p>The guiding principle in building the model was to find the simplest system that
                    shows the salient features described in the <xref ref-type="sec" rid="s1">introduction</xref>. It turns out that many of these features can be
                    studied using a linear system, similar to those used in previous theoretical
                    work on evolution <xref ref-type="bibr" rid="pcbi.1000355-Lipson1">[8]</xref>, <xref ref-type="bibr" rid="pcbi.1000355-Taylor1">[20]</xref>–<xref ref-type="bibr" rid="pcbi.1000355-Siegal1">[23]</xref>.
                    Consider a system that provides an output for each given input. The input is a
                    vector of <italic>N</italic> numbers. For example, the input can represent the
                    abundance of <italic>N</italic> different resources in the environment. The
                    output is also a vector of <italic>N</italic> numbers, for example the
                    expression of the genes that utilize the resources. The structure that evolves
                    is represented by an <italic>N</italic>×<italic>N</italic> matrix,
                        <bold>A</bold>, that transforms the input vector <bold>v</bold> to a desired
                    output vector <bold>u</bold> such that:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e001" xlink:type="simple"/><label>(1)</label></disp-formula></p>
                <p>The matrix <bold>A</bold> can be thought of, quite generally, as the linearized
                    response of a biological regulatory system that maps inputs to outputs, taken
                    near a steady-state of the system. In this case the vectors <bold>u</bold> and
                        <bold>v</bold> represent perturbations around a mean level, and can have
                    negative or positive elements.</p>
            </sec>
            <sec id="s2b">
                <title>Goals are desired input-output relations</title>
                <p>An evolutionary goal in the present study is that an input vector <bold>v</bold>
                    gives a certain output vector <bold>u</bold>. We will generally consider goals
                        <italic>G</italic> that are composed of <italic>k</italic> such input-output
                    vector pairs.</p>
            </sec>
            <sec id="s2c">
                <title>The fitness is the benefit minus the cost of matrix elements</title>
                <p>To evaluate the fitness of the system, we follow experimental studies in
                    bacteria, that suggest that biological circuits can be assigned benefit and cost
                        <xref ref-type="bibr" rid="pcbi.1000355-Dekel1">[24]</xref>. The benefit is the increase in fitness due to
                    the proper function of the circuit, and the cost is the decrease in fitness due
                    to the burden of producing and maintaining the circuit elements. In this
                    framework, fitness is the benefit minus the cost of a given structure
                    <bold>A</bold>.</p>
                <p>We begin with the cost of the system, related to the magnitude of the elements of
                        <bold>A</bold>. We use a cost proportional to the sum over the squares of
                    all the elements of <bold>A</bold>:<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e002" xlink:type="simple"/></inline-formula>. This cost represents the reduction in fitness due to the need
                    to produce the system elements. A quadratic cost function resembles the cost of
                    protein production in <italic>E. coli</italic>
                    <xref ref-type="bibr" rid="pcbi.1000355-Dekel1">[24]</xref>–<xref ref-type="bibr" rid="pcbi.1000355-Nguyen1">[26]</xref>. The cost tends to
                    make the elements of <bold>A</bold> as small as possible. Other forms for the
                    cost function, including sum of absolute values of
                    <italic>a<sub>ij</sub></italic> and saturating functions of
                        <italic>a<sub>ij</sub></italic>, are found to give similar conclusions as
                    the quadratic cost function (see <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text S1</xref>).</p>
                <p>In addition to the cost, each structure has a benefit. The benefit
                    <italic>b</italic> of a structure <bold>A</bold> is higher the closer the actual
                    output is to the desired output: <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e003" xlink:type="simple"/></inline-formula> (where <italic>F<sub>o</sub></italic> represents the maximal
                    benefit). In the case where the goal includes <italic>k</italic> input-output
                    pairs, one can arrange all input vectors in a matrix <bold>V</bold>, and all
                    output vectors in a matrix <bold>U</bold>, and the benefit is the sum over the
                    distances between the actual outputs and the desired outputs <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e004" xlink:type="simple"/></inline-formula>. In total, the fitness of <bold>A</bold> is the benefit minus
                    the cost:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e005" xlink:type="simple"/><label>(2)</label></disp-formula></p>
                <p>The first term on the right hand side represents the cost of the elements of
                        <bold>A</bold>, and the second term is the benefit based on the distance
                    between the actual output, <bold>AV</bold>, and the desired output,
                    <bold>U</bold>. The parameter <italic>ε</italic> sets the relative
                    importance of the first term relative to the second.</p>
                <p>In realistic situations, the parameter <italic>ε</italic> is relatively
                    small, because getting the correct output is more important for fitness than
                    minimizing the elements of <bold>A</bold>. Thus, throughout, we will work in the
                    limit of <italic>ε</italic> much smaller than the typical values of the
                    elements of the input-output vectors.</p>
                <p>Now that we have defined the fitness function, we turn to the definition of
                    modularity in structures and in goals.</p>
            </sec>
            <sec id="s2d">
                <title>Definition of modularity</title>
                <p>A modular structure, which corresponds to a modular matrix <bold>A</bold>, is
                    simply a matrix with a block diagonal form (<xref ref-type="fig" rid="pcbi-1000355-g003">Figure 3</xref>). Such matrices have non-zero
                    elements in blocks around the diagonal, and zero elements everywhere else. Each
                    block on the diagonal maps a group of input vector components to the
                    corresponding group of output vector components. An example of a modular
                    structure is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e006" xlink:type="simple"/></disp-formula></p>
                <fig id="pcbi-1000355-g003" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g003</object-id>
                    <label>Figure 3</label>
                    <caption>
                        <title>Modularity of matrices and their corresponding networks.</title>
                        <p>The <italic>NxN</italic> matrix <bold>A</bold> can be represented as a
                            directed network of weighted interactions between the inputs and the
                            outputs (with 2<italic>N</italic> nodes). Modularity is measured using
                            normalized measure of community structure of the interaction network,
                                    <italic>Q<sub>m</sub></italic> (see <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text
                            S1</xref>) <xref ref-type="bibr" rid="pcbi.1000355-Kashtan1">[18]</xref>. (A) Examples of two modular matrices
                            and their corresponding modularity measure
                            <italic>Q<sub>m</sub></italic>. Modular matrices typically show
                                    <italic>Q<sub>m</sub></italic>&gt;0.2, with a maximal value
                            of <italic>Q<sub>m</sub></italic> = 1
                            for a diagonal matrix. (B) An example of a non-modular matrix.
                            Non-modular matrices have <italic>Q<sub>m</sub></italic> around 0.</p>
                    </caption>
                    <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g003" xlink:type="simple"/>
                </fig>
                <p>In addition to the modularity of the structure <bold>A</bold>, one needs to
                    define the modularity of varying goals. In the present study, modularity of a
                    goal is defined as the ability to separate the input and output components of
                        <bold>u</bold> and <bold>v</bold> into two or more groups, such that the
                    outputs in each groups are a function only of the inputs in that group, and not
                    on the inputs in other groups. Thus, the inputs and outputs in a modular goal
                    are separable into modules, which can be considered independently (<xref ref-type="fig" rid="pcbi-1000355-g003">Figure 3</xref>). In the present
                    linear model we require that the outputs in each group are a linear function of
                    the inputs in that group. For example, consider the following goal
                            <italic>G<sub>o</sub></italic> that is made of two input-output pairs:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e007" xlink:type="simple"/></disp-formula>and<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e008" xlink:type="simple"/></disp-formula></p>
                <p>Here the first component of each output vector is a linear function of the first
                    component of the corresponding input vectors, namely the identity function. The
                    next two components of each output vector are equal to a linear 2×2
                    matrix,
                    <bold>L</bold> = [(0.5,0.5);(−0.5,
                    0.5)], times the same two components of the input vector. In fact, the
                    modular matrix <bold>A</bold> given above satisfies this goal, since
                            <bold>Av<sub>1</sub> = u<sub>1</sub></bold>
                    and
                    <bold>Av<sub>2</sub> = u<sub>2</sub></bold>.
                    Thus, the input-output vectors in <italic>G</italic><sub>o</sub> can be
                    decomposed into independent groups of components, using the same linear
                    functions. Hence, the goal <italic>G</italic><sub>o</sub> is modular. Note that
                    most goals (most input-output vector sets with <italic>N</italic>&gt;2)
                    cannot be so decomposed, and are thus non-modular.</p>
                <p>To quantify the modularity of a structure <bold>A</bold> we used the modularity
                    measure <italic>Q<sub>m</sub></italic> based on the Newman and Girvan measure
                        <xref ref-type="bibr" rid="pcbi.1000355-Kashtan1">[18]</xref>,<xref ref-type="bibr" rid="pcbi.1000355-Newman1">[27]</xref>, described in <xref ref-type="bibr" rid="pcbi.1000355-Kashtan1">[18]</xref>
                    and also in the <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text S1</xref>. Under this measure, diagonal matrices have high modularity,
                    block modular matrices show intermediate modularity and matrices with non-zero
                    elements that are uniformly spread over the matrix have modularity close to zero
                        (<xref ref-type="fig" rid="pcbi-1000355-g003">Figure 3</xref>).</p>
            </sec>
        </sec>
        <sec id="s3">
            <title>Results</title>
            <p>In the following sections we analyze the dynamics and convergence of evolution under
                both fixed goal conditions and under MVG conditions. For clarity we first present a
                two–dimensional system
                (<italic>N</italic> = 2), and then move to present
                the general case of high-dimension systems. Each of the sections is accompanied by
                detailed examples that are given to help to understand the system behavior. The
                third section describes full analytic solutions and proofs.</p>
            <sec id="s3a">
                <title>Evolution dynamics and convergence in two-dimensions</title>
                <sec id="s3a1">
                    <title>A constant goal generally leads to a non-modular structure</title>
                    <p>We begin with two-dimensional system
                        (<italic>N</italic> = 2), so that
                        <bold>A</bold> is a two by two matrix. We note that the two-dimensional case
                        is a degenerate case of MVG, but has the advantage of easy visualization. It
                        thus can serves as an introduction to the more general case of higher
                        dimensions, to which we will turn later.</p>
                    <p>Consider the goal <italic>G<sub>1</sub></italic> defined by the input vector
                            <bold>v</bold> = (1, 1) and its desired
                        output <bold>u</bold> = (1, 1). Note that
                        in the case of <italic>N</italic> = 2 all
                        goals are modular according to the above definition (because there exists a
                        diagonal matrix that satisfies
                            <bold>Av</bold> = <bold>u</bold>). In
                        the case of goal <italic>G<sub>1</sub></italic>, the identity matrix
                        <bold>A</bold> = [(1, 0), (0,
                        1)] satisfies the goal.</p>
                    <p>Let us find the most fit structure <bold>A</bold>, given the goal
                                <italic>G<sub>1</sub></italic>. To find the structure <bold>A</bold>
                        that maximizes the fitness <italic>F</italic>(<bold>A</bold>), we ask when
                        the matrix elements of <bold>A</bold>, <italic>a<sub>ij</sub></italic>,
                        satisfy <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e009" xlink:type="simple"/></inline-formula>. From Eq. 2, this leads to the following 4 equations, one
                        for each of the 4 elements of <bold>A</bold>:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e010" xlink:type="simple"/><label>(3)</label></disp-formula></p>
                    <p>Solving these equations, we find that the highest fitness structure is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e011" xlink:type="simple"/></inline-formula>. Upon substituting <bold>v</bold> and <bold>u</bold> we get:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e012" xlink:type="simple"/></disp-formula>and when the cost is small (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e013" xlink:type="simple"/></inline-formula>) one has<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e014" xlink:type="simple"/></disp-formula></p>
                    <p>Note that indeed,
                            <bold>A</bold>·<bold>v</bold> = <bold>u</bold>,
                        so that the goal is satisfied. Thus, <italic>the optimal solution is non
                            modular</italic>. This non-modular matrix satisfies the goal and also
                        keeps the elements of the matrix small to minimize the cost (see section
                            <italic>Full analytic solutions (A)</italic>). The modular solution,<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e015" xlink:type="simple"/></disp-formula>is less fit because of the higher cost of its elements: the
                        cost is proportional to the sum of the squares of the elements, so that the
                        cost for the modular matrix <bold>A<sub>m</sub></bold>,
                            <italic>c = 2ε</italic> , is
                        higher than the cost for the highest-fitness matrix
                            <bold>A<sup>*</sup></bold>,
                            <italic>c = ε</italic>.</p>
                    <p>It is also helpful to graphically display this solution. <xref ref-type="fig" rid="pcbi-1000355-g004">Figure 4A</xref> shows the two-dimensional space
                        defined by the first row of <bold>A</bold>, the elements
                            <italic>a<sub>11</sub></italic> and <italic>a<sub>12</sub></italic>. The
                        matrices <bold>A</bold> that satisfy the goal (give
                            <bold>Av = u</bold>) correspond to a
                        line,
                        <italic>a<sub>11</sub>+a<sub>12</sub></italic> = 1.
                        The modular solution is the point that intersects the axes at
                                <italic>a<sub>11</sub></italic> = 1,<italic>a<sub>12</sub></italic> = 0.
                        The optimal solution <bold>A<sup>*</sup></bold> is at the point
                                (<italic>a<sub>11</sub>,
                            a<sub>12</sub></italic>) = (<italic>1/2,
                            1/2</italic>).</p>
                    <fig id="pcbi-1000355-g004" position="float">
                        <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g004</object-id>
                        <label>Figure 4</label>
                        <caption>
                            <title>Dynamics of evolution under a constant goal.</title>
                            <p>(A) Matrix elements are portrayed in a two dimensional space defined
                                by <italic>a<sub>11</sub></italic> and
                                <italic>a<sub>12</sub></italic>, the first row elements of the
                                matrix <bold>A</bold>. The goal is
                                    <italic>G<sub>1</sub></italic> = [<bold>v</bold> = (1,1),
                                    <bold>u</bold> = (1,1)],
                                empty circle: optimal non-modular solution (0.5, 0.5). Full circle:
                                modular solution (1,0). The line
                                        <italic>a<sub>12</sub></italic> = 1−<italic>a<sub>11</sub></italic>
                                represents all configurations that satisfy the goal (satisfy
                                    <italic>Av</italic><italic> = </italic><italic>u</italic>).
                                (B) A typical trajectory under the constant goal
                                    <italic>G</italic><sub>1</sub>. Black dots display the dynamics
                                at 100/r time unit resolution, where <italic>r</italic> is the rate
                                in Eq. 4. (C) Same as (B) for the goal
                                    <italic>G<sub>2</sub></italic> = [<bold>v</bold> = (1,−1),
                                    <bold>u</bold> = (1,−1)].</p>
                        </caption>
                        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g004" xlink:type="simple"/>
                    </fig>
                    <p>A non-modular solution is the general solution for this type of goal (proof
                        in section <italic>Full analytic solutions (A)</italic>). For the benefit of
                        the next section, we consider briefly a second example, the goal
                                <italic>G<sub>2</sub></italic>,
                        <bold>v</bold> = (1, −1),
                        <bold>u</bold> = (1, −1). As in
                        the case of <italic>G</italic><sub>1</sub>, the highest-fitness structure
                        for G<sub>2</sub> is non-modular, (<xref ref-type="fig" rid="pcbi-1000355-g004">Figure 4C</xref>)<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e016" xlink:type="simple"/></disp-formula></p>
                </sec>
                <sec id="s3a2">
                    <title>Convergence is slow under a constant goal</title>
                    <p>We now turn to discuss the dynamics of the evolutionary process. We ask how
                        long it takes to reach the maximum-fitness structure starting from a random
                        initial structure. For this purpose, one needs to define the dynamics of
                        evolutionary change and selection. For simplicity, we consider a
                        Hill-climbing picture, in which the rate of change of the structure
                        <bold>A</bold> is proportional to the slope of the fitness function. The
                        rate of change is high along directions with high fitness gradients and slow
                        along directions with small gradients. Thus <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e017" xlink:type="simple"/></inline-formula> where <italic>r</italic> is the ‘rate’
                        of evolution, based on the rate at which mutations that change
                                <italic>a<sub>ij</sub></italic> occur and are fixed in the
                        population. We note that similar results are found when using genetic
                        algorithms with more realistic mutation and selection strategies (see <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text
                        S1</xref>).</p>
                    <p>The Hill-climbing dynamical model is simple enough to analytically solve for
                        the dynamics of the matrix elements <italic>a<sub>ij</sub></italic>. For a
                        constant goal, one has (with time rescaled to take the evolution rate into
                        account, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e018" xlink:type="simple"/></inline-formula>):<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e019" xlink:type="simple"/><label>(4)</label></disp-formula></p>
                    <p>These are linear ordinary differential equations, and hence the solution for
                                <italic>a<sub>ij</sub></italic> is of the form:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e020" xlink:type="simple"/><label>(5)</label></disp-formula>where {λ<italic>
                            <sub>n</sub>
                        </italic>} are the eigenvalues of Eq. 4. The prefactors
                            {<italic>K<sub>n</sub></italic>} are determined by the eigenvectors
                        corresponding to {<italic>λ<sub>n</sub></italic>}, and the initial
                        conditions. The structures converge to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e021" xlink:type="simple"/></inline-formula>, which is the value of the matrix elements
                                <italic>a<sub>ij</sub></italic> in the optimal solution.</p>
                    <p>The convergence times are thus governed by the eignevalues
                                <italic>λ<sub>n</sub></italic>. In particular, the smallest
                        eigenvalue corresponds to the longest convergence time. We find that in the
                        case of a constant goal that does not vary with time, the smallest
                        eigenvalue is always equal to 2<italic>ε</italic> (for a proof see
                            <xref ref-type="sec" rid="s3">results</xref> section <italic>Full
                            analytic solutions (B)</italic>).</p>
                    <p>For example, for the goal <italic>G<sub>1</sub></italic>, the four
                        eigenvalues of Eq. 4 are
                            <italic>λ</italic><sub>1</sub> = <italic>λ</italic><sub>2</sub> = <italic>2ε</italic>
                        and
                            <italic>λ</italic><sub>3</sub> = <italic>λ</italic><sub>4</sub> = <italic>2</italic>(<italic>2+ε</italic>).
                        The large eigenvalues <italic>λ</italic><sub>3</sub> and
                            <italic>λ</italic><sub>4</sub> correspond to rapid evolution to
                        the line shown in <xref ref-type="fig" rid="pcbi-1000355-g004">Figure
                        4B</xref>. The small eigenvalues
                            <italic>λ</italic><sub>1</sub> = <italic>λ</italic><sub>2</sub> = <italic>2ε</italic>
                        correspond to motion along the line, converging as
                                <italic>exp</italic>(<italic>−λ<sub>1</sub>
                        t</italic>) to the optimal solution. Thus, the convergence time for small
                            <italic>ε</italic> is very long,
                                <italic>T<sub>FG</sub>∼1/λ<sub>1</sub>∼1/ε</italic>
                        (‘FG’ stands for fixed goal). The same applies to the
                        goal <italic>G<sub>2</sub></italic>, in which the two small eigenvalues
                            <italic>λ</italic><sub>1</sub> = <italic>λ</italic><sub>2</sub> = <italic>2ε</italic>
                        govern the slow motion along the line on <xref ref-type="fig" rid="pcbi-1000355-g004">Figure 4C</xref>. The lines in <xref ref-type="fig" rid="pcbi-1000355-g004">Figure 4B</xref> and <xref ref-type="fig" rid="pcbi-1000355-g004">Figure 4C</xref> along which
                        evolution moves slowly are analogous to the fitness plateaus or neutral
                        networks observed in the evolution of more complex systems <xref ref-type="bibr" rid="pcbi.1000355-Wagner4">[28]</xref>–<xref ref-type="bibr" rid="pcbi.1000355-Eldredge1">[31]</xref>.</p>
                </sec>
                <sec id="s3a3">
                    <title>Varying between modular goals leads to modular structure</title>
                    <p>We next consider the case where the environment changes over time, switching
                        between the two modular goals mentioned above. For example, the structure
                            <bold>A</bold> evolves towards goal <italic>G<sub>1</sub></italic>,
                        defined by <bold>v<sub>1</sub></bold> = (1,
                        1) and <bold>u<sub>1</sub></bold> = (1, 1).
                        Then, the goal changes to a different goal <italic>G<sub>2</sub></italic>,
                        defined by <bold>v<sub>2</sub></bold> = (1,
                        −1) and
                        <bold>u<sub>2</sub></bold> = (1,
                        −1). After some time, the goal returns to the first goal, and so
                        on. The goals thus switch from time to time from
                        <italic>G<sub>1</sub></italic> to <italic>G<sub>2</sub></italic> and back.
                        Looking at these two goals, it is seen that each component of the output
                        vectors can be determined only by the corresponding component in the input
                        vector. Another way to say this is that the same modular matrix
                        <bold>A</bold> = [(1,0),(0,1)],
                        satisfies both <italic>G<sub>1</sub></italic> and
                        <italic>G<sub>2</sub></italic>. This is thus an example of modularly varying
                        goals, or MVG for short.</p>
                    <p>What is the structure that evolves under MVG? We use the dynamical equations
                        (Eq. 4) to describe the MVG process which switches between the goals.<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e022" xlink:type="simple"/><label>(6a)</label></disp-formula><disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e023" xlink:type="simple"/><label>(6b)</label></disp-formula></p>
                    <p>Here Eqs. 6a and 6b are valid for times when the goals are
                            <italic>G<sub>1</sub></italic> and <italic>G<sub>2</sub></italic>
                        respectively. One finds that the structure <bold>A</bold> evolves towards
                        the modular solution
                        <bold>A</bold> = [(1, 0);(0,
                        1)]. As shown in <xref ref-type="fig" rid="pcbi-1000355-g005">Figure 5</xref>, when the goal is equal to
                        <italic>G<sub>1</sub></italic>, the elements of <bold>A</bold> move towards
                        the line of <italic>G<sub>1</sub></italic> solutions, and when the goal
                        changes to <italic>G<sub>2</sub></italic>, the elements of <bold>A</bold>
                        move towards the line of <italic>G<sub>2</sub></italic> solutions. Together,
                        these two motions move <bold>A</bold> towards the modular solution at which
                        the two lines intersect (<xref ref-type="fig" rid="pcbi-1000355-g005">Figure
                            5</xref>).</p>
                    <fig id="pcbi-1000355-g005" position="float">
                        <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g005</object-id>
                        <label>Figure 5</label>
                        <caption>
                            <title>Evolutionary dynamics under modularly varying goals (MVG)
                                converges to the modular solution.</title>
                            <p>Goals are switched between
                                <italic>G</italic><sub>1</sub> = [<bold>v</bold> = (1,1),
                                <bold>u</bold> = (1,1)] and
                                <italic>G</italic><sub>2</sub> = [<bold>v</bold> = (1,−1),
                                <bold>u</bold> = (1,−1)]
                                every <italic>t = 100/r</italic>
                                time units. A typical trajectory of the matrix elements is shown,
                                where small black dots represent the dynamics of the system in
                                    <italic>100/r</italic> time steps resolution. Empty and full
                                circles represent the optimal and modular solutions
                            respectively.</p>
                        </caption>
                        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g005" xlink:type="simple"/>
                    </fig>
                    <p>To analyze this scenario, consider the limiting case where switches between
                        the two goals occur very rapidly. In this case, one can average the fitness
                        over time, and ask which structure maximizes the average fitness. If the
                        environment spends, say, half of the time with goal
                        <italic>G<sub>1</sub></italic>, and half of the time with goal
                                <italic>G<sub>2</sub></italic>, then the average fitness is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e024" xlink:type="simple"/><label>(7)</label></disp-formula></p>
                    <p>One can then solve the equations for the elements
                        <italic>a<sub>ij</sub></italic> of the matrix <bold>A</bold> that maximize
                        fitness. The result is that the structure that optimizes fitness is the
                        modular matrix
                            <bold>A</bold> = [(<italic>1,0</italic>),(<italic>0,1</italic>)]
                        (see section <italic>Full analytic solutions (A)</italic> for the general
                        proof). This modular solution is found regardless of the fraction of time
                        spent in each of the goals (as long as this fraction is not close to
                            <italic>1/ε</italic>, in which case one returns to a
                        constant-goal scenario).</p>
                    <p>Intuitively, supplying two modular goals provides ‘extra
                        information’ that helps evolution find the unique structure that
                        satisfies both goals – even though the different goals do not
                        appear at the same time. If one stops varying the goals and presents a
                        constant goal <italic>G<sub>1</sub></italic> or
                        <italic>G<sub>2</sub></italic>, the structure evolves to the non-modular
                        structures mentioned in previous sections. Thus, when the goals vary in
                        time, the system ‘remembers’ the previous goal. This
                        memory guides it towards the modular solution, even though at each time
                        point, the current goal does not contain sufficient information to specify
                        that solution.</p>
                </sec>
                <sec id="s3a4">
                    <title>Varying between modular goals speeds convergence to solution</title>
                    <p>We have seen that MVG leads to a modular structure. Let us now analyze the
                        time that it takes the evolutionary process to approach this modular
                        solution, starting from a random initial condition. In contrast to the small
                        eigenvalues (long convergence time) found under a constant goal, a different
                        situation is found under MVG. Here, evolution converges rapidly to the
                        modular solution, with convergence time of order one
                            <italic>T<sub>MVG</sub>∼1</italic>. In MVG, the small,
                            order-<italic>ε</italic> eigenvalues are eliminated and all
                        eigenvalues are generally large resulting in fast dynamics (see proof for
                        the general case in the section <italic>Full analytic solutions
                        (B)</italic>).</p>
                    <p>To understand why dynamics are rapid, consider the view depicted in <xref ref-type="fig" rid="pcbi-1000355-g005">Figure 5</xref>, showing the
                        trajectories of <bold>A</bold> as the goal varies over time. One sees a
                        rapid convergence to the line representing the current goal, and then, once
                        the goal changes, a rapid move to the line representing the new goal. Thus,
                        provided that switching is not very slow (that is when the switching time
                            <italic>E</italic> are shorter than the time to solve under a constant
                        goal: <italic>E</italic>&lt;<italic>T<sub>FG</sub>
                        ∼1/ε</italic>), it is the large eigenvalues that governs the
                        dynamics and lead to rapid convergence. Modularly varying goals cause
                        evolution to converge rapidly on the modular solution. Similar results are
                        found using genetic algorithms instead of Hill-climbing evolutionary
                        equations (see <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text S1</xref>).</p>
                    <p>It is also helpful to visually examine the fitness landscapes that govern the
                        dynamics of MVG. One can get a feeling for the shape of the landscape by
                        looking at the fitness function averaged over both goals. The rapid
                        convergence to a modular solution is due to the formation of a steep peak in
                        the ‘effective’ combined fitness landscape, as opposed
                        to a flat ridge in the case of evolution under a constant goal (<xref ref-type="fig" rid="pcbi-1000355-g006">Figure 6</xref>).</p>
                    <fig id="pcbi-1000355-g006" position="float">
                        <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g006</object-id>
                        <label>Figure 6</label>
                        <caption>
                            <title>Fitness landscape illustration (a two dimensional system).</title>
                            <p>Goals <italic>G<sub>1</sub></italic>, <italic>G<sub>2</sub></italic>
                                are as described in <xref ref-type="fig" rid="pcbi-1000355-g004">Figures 4</xref>,<xref ref-type="fig" rid="pcbi-1000355-g005">5</xref>. The fitness landscapes are presented as a projection on
                                the hyper-surfaces (<italic>a<sub>21</sub>, a<sub>22</sub></italic>)
                                of the optimal solution [i.e. (0.5,0.5) for
                                    <italic>G<sub>1</sub></italic>, (−0.5, 0.5) for
                                        <italic>G<sub>2</sub></italic>, and (0, 1) for
                                MVG]. A typical trajectory is shown under MVG, switching
                                between <italic>G<sub>1</sub></italic> and
                                <italic>G<sub>2</sub></italic> as described in <xref ref-type="fig" rid="pcbi-1000355-g005">Figure 5</xref>. red/blue: dynamics
                                under fitness landscape <italic>G<sub>1</sub></italic> and
                                        <italic>G<sub>2</sub></italic> respectively. Fitness is
                                presented in log scale. Full/empty circle represents the
                                modular/non-modular solutions. The fitness landscapes under constant
                                goals are characterized by a single ridge (with slow dynamics as
                                shown in <xref ref-type="fig" rid="pcbi-1000355-g004">Figures 4B and
                                    4C</xref>). Under MVG the effective fitness landscape forms a
                                steep peak where a solution that solves both goals resides (the
                                modular solution). To ease comprehension, we chose a different
                                viewing angle from the one of <xref ref-type="fig" rid="pcbi-1000355-g004">Figures 4</xref>,<xref ref-type="fig" rid="pcbi-1000355-g005">5</xref>. Switching time is
                                    <italic>E</italic> = 100/<italic>r</italic>.</p>
                        </caption>
                        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g006" xlink:type="simple"/>
                    </fig>
                </sec>
            </sec>
            <sec id="s3b">
                <title>Evolution dynamics, convergence and modularity in higher dimensions</title>
                <sec id="s3b1">
                    <title>In higher dimensions, MVG also leads to a modular structure and speedup</title>
                    <p>The two dimensional case we have discussed is relatively easy to visualize.
                        Let us now consider higher dimensions. We will consider a three-dimensional
                        problem (<italic>N = 3</italic>), bearing
                        in mind that the conclusions turn out to be valid for all dimensions <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e025" xlink:type="simple"/></inline-formula>. Here, each goal will be composed of <italic>k</italic>
                        input-output pairs. In general evolutionary problems, involving systems such
                        as logic gates, neuronal networks or RNA molecules, there are numerous
                        different solutions to each goal. To mimic this, we keep the number of
                        input-output pairs in each goal not too large, specifically
                            <italic>k = N−1</italic>.
                        This assures an infinite number of solutions to the goal (if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e026" xlink:type="simple"/></inline-formula>, at most a single solution exists since the number of
                        unknown matrix elements is smaller than the number of equations given by the
                            <italic>k</italic> input-output pairs). In our
                            <italic>N = 3</italic> example, each
                        goal is thus be made of
                        <italic>k = 2</italic> input-output vector
                        pairs.</p>
                    <p>Let us begin with the goal <italic>G<sub>1</sub></italic> which consists of
                        the following pairs<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e027" xlink:type="simple"/></disp-formula></p>
                    <p>Note that <italic>G<sub>1</sub></italic> is modular: the input-output vectors
                        in <italic>G<sub>1</sub></italic> can be decomposed into independent groups:
                        the first component in the input is simply equal to the first component in
                        the output, and the next two components are related to the output components
                        by a linear transformation
                        <bold>L</bold> = [(1,1);(1,−1)].
                        Hence, there exists a block-modular matrix
                        <bold>A</bold> = [(1,0,0);(0,1,1);(0,1,−1)]
                        that satisfies this goal. However, when <italic>G<sub>1</sub></italic> is
                        applied as a constant goal, the optimal solution (assuming <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e028" xlink:type="simple"/></inline-formula>) is non-modular (fitness = −3.7ε)<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e029" xlink:type="simple"/></disp-formula></p>
                    <p>The dynamical equations have a small eigenvalue
                            <italic>λ = 2ε</italic>.
                        Hence, convergence is slow, and takes
                            <italic>T<sub>FG</sub>∼1/ε</italic>. The evolutionary
                        process converges slowly along the line shown in <xref ref-type="fig" rid="pcbi-1000355-g007">Figure 7A</xref>, reaching the non-modular
                        optimal structure.</p>
                    <fig id="pcbi-1000355-g007" position="float">
                        <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g007</object-id>
                        <label>Figure 7</label>
                        <caption>
                            <title>Dynamics on a 3-dimensional system
                                    (A = <italic>3</italic>×<italic>3
                                    matrix</italic>).</title>
                            <p>Presented is the three dimensional space defined by
                                    <italic>a<sub>11</sub></italic>,
                                <italic>a<sub>12</sub></italic>, and
                                <italic>a<sub>13</sub></italic>, the first row elements of the
                                matrix <bold>A</bold>. The goal is defined by two pairs of input-output vectors.
                                Empty circle: optimal non-modular solutions. Full circle: modular
                                solutions. A typical trajectory is shown for a number of different
                                cases. Lines represent all configurations that achieve the goal
                                (satisfy
                                <bold>Av</bold><sub><bold>1</bold></sub> = <bold>u</bold><sub><bold>1</bold></sub> and
                                <bold>Av</bold><sub><bold>2</bold></sub> = <bold>u</bold><sub><bold>2</bold></sub>).
                                (A) A Constant goal
                                <italic>G<sub>1</sub></italic> = {
                                [<bold>v</bold><sub>11</sub> = (1,−1,−1.4),
                                <bold>u</bold><sub><bold>11</bold></sub> = (1,−2.4,0.4)];
                                [<bold>v</bold><sub><bold>12</bold></sub> = (0.5,1.2,−1.9),
                                <bold>u</bold><sub><bold>12</bold></sub> = (0.5,−0.7,3.1)
                                ] }. (B) Modularly varying goals.
                                <italic>G</italic><sub>1</sub> as above, and
                                <italic>G<sub>2</sub></italic> = {
                                [
                                <bold> v</bold><sub><bold>11</bold></sub> = (1,1.7,−0.7),
                                <bold>u</bold><sub><bold>11</bold></sub> = (1,1,2.4)
                                ]; [
                                <bold>v</bold><sub><bold>12</bold></sub> = (−0.7,−2.3,−1.1),
                                <bold>u</bold><sub><bold>12</bold></sub> = (−0.7,−3.4,−1.2)
                                ] }. Switching rate is
                                    <italic>E</italic> = 100/<italic>r</italic>
                                time steps. (C) Modularly varying goals with nearly identical
                                modules:
                                <italic>G<sub>1</sub></italic> = {
                                [ (1,1.7,−0.7), (1,1,2.4) ]; [
                                (−0.7,−2.3,−1.1),
                                (−0.7,−3.4,−1.2) ] } and
                                        <italic>G<sub>2</sub></italic> = {
                                [ (1,−1,−1.4),
                                    (1+<italic>η</italic>,−2.4,0.4)
                                ]; [ (0.5,1.2,−1.9),
                                    (0.5+0.5<italic>η</italic>,−0.7,3.1)
                                ] }. The distance between the two modular solutions for
                                each of the goals is
                                    <italic>η = 0.1</italic>.
                                Zoom in: adaptation dynamics between the modular solutions. (D)
                                Random non-modular varying goals:
                                <italic>G<sub>1</sub></italic> = {
                                [ (−2.5,1,1), (0,1,1) ]; [
                                (5.4,−1,1), (3,−1,1) ] },
                                G<sub>2</sub> = { [
                                (1.1,1,1), (1.1,1,1) ]; [ (0.6,−1,1),
                                (0.6,−1,1) ] }.
                                    <italic>E = 100/r</italic> time
                                steps. There is no solution that solves both goals well, and
                                therefore the dynamics lead to ‘confusion’, a
                                situation where none of the goals are achieved.</p>
                        </caption>
                        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g007" xlink:type="simple"/>
                    </fig>
                    <p>In contrast, if MVG is applied, switching between
                        <italic>G<sub>1</sub></italic> and a second goal
                        <italic>G<sub>2</sub></italic>, which share the same modular structure, say<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e030" xlink:type="simple"/></disp-formula>one finds a rapid convergence to a modular structure (<xref ref-type="fig" rid="pcbi-1000355-g007">Figure 7B</xref>; with
                            fitness = −5<italic>ε</italic>):<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e031" xlink:type="simple"/></disp-formula></p>
                    <p>Modularity increases rapidly as shown in <xref ref-type="fig" rid="pcbi-1000355-g008">Figure 8A</xref>. These results are similar to
                        the ones discussed in the
                        <italic>N</italic> = 2 case of the previous
                        section. Generalizing the results shows that MVG produces modular structures
                        in any dimension, as shown below in the section <italic>Full analytic
                            solutions (A)</italic>.</p>
                    <fig id="pcbi-1000355-g008" position="float">
                        <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g008</object-id>
                        <label>Figure 8</label>
                        <caption>
                            <title>Modularity rises under MVG, and drops when goals stop varying
                                over time.</title>
                            <p>Modularity of the system measured by normalized community structure
                                        <italic>Q<sub>m</sub></italic> (see <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text
                                    S1</xref>). (A) MVG and FG scenarios. Mean±SE is of
                                20 different goals each with 20 different random initial conditions;
                                    <italic>E = 10/r</italic> (B)
                                Starting from initial modular matrix
                                <bold>A</bold> = [(1,0,0);(0,1,1);(0,1,−1)]
                                evolved under MVG, at time
                                    <italic>t = 0</italic> the
                                goals stopped changing (i.e. evolution under FG conditions from time
                                    <italic>t = 0</italic>).
                                Mean±SE is of 20 different goals.</p>
                        </caption>
                        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g008" xlink:type="simple"/>
                    </fig>
                </sec>
                <sec id="s3b2">
                    <title>MVG with nearly identical modules</title>
                    <p>Up to now, the varying goals shared the same modular solution. Let us
                        consider a more general case where the varying goals
                        <italic>G<sub>1</sub></italic> and <italic>G<sub>2</sub></italic> have
                        similar, but different, modular solutions. Specifically, the two goals share
                        the same general modular structure but with slightly different modules. They
                        can thus be solved by the same block matrix except for corrections on the
                        order of a small parameter <italic>η</italic>. This situation is
                        more similar, in a sense, to our previous simulations on complex model
                        systems where each of the varying goals was solved by a different modular
                        structure.</p>
                    <p>As an example, which represents the typical case, let
                        <italic>G<sub>1</sub></italic> = {
                        [ (1, 1.7, −0.7), (1, 1, 2.4) ]; [
                        (−0.7, −2.3, −1.1), (−0.7,
                        −3.4, −1.2) ] } which can be satisfied by the
                        modular matrix<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e032" xlink:type="simple"/></disp-formula>and
                        <italic>G<sub>2</sub></italic> = {
                        [ (1, −1, −1.4),
                        (1+<italic>η</italic>, −2.4, 0.4) ];
                        [ (0.5, 1.2, −1.9),
                        (0.5(1+<italic>η</italic>), −0.7, 3.1)
                        ] } which can be satisfied by the slightly different modular matrix<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e033" xlink:type="simple"/></disp-formula></p>
                    <p>We find that evolution under varying goals in such cases rapidly leads to a
                        structure that is modular. Once the modular structure was established, the
                        system moves between the two similar modular matrices every time the goal
                        switches (<xref ref-type="fig" rid="pcbi-1000355-g007">Figure 7C</xref>).
                        The degree of adaptation depends on the switching time between the goals:
                        nearly perfect adaptation occurs when the switching time is large enough to
                        allow the matrix elements to reach the modular matrix relevant for the
                        current goal (roughly, switching that is slower than
                        <italic>η</italic>/r, the ratio between distance between matrices
                            <italic>η</italic> and the evolution rate <italic>r</italic>)
                            (<xref ref-type="fig" rid="pcbi-1000355-g009">Figure 9A</xref>). Such
                        cases suggest that evolved modular structure, although sub-optimal, is
                        selected for the ability to adapt rapidly when the goal switches.</p>
                    <fig id="pcbi-1000355-g009" position="float">
                        <object-id pub-id-type="doi">10.1371/journal.pcbi.1000355.g009</object-id>
                        <label>Figure 9</label>
                        <caption>
                            <title>Evolution Speedup.</title>
                            <p>(A) Speedup as a function of goal switching times <italic>E</italic>.
                                Speedup is presented for the goal <italic>G<sub>1</sub></italic>
                                with MVG between the nearly modular pair of goals
                                    <italic>G<sub>1</sub></italic> and <italic>G<sub>2</sub> :
                                        G<sub>1</sub></italic> = {
                                [ (−0.4,−1.6,0.7),
                                (−0.4,−1,−2.3) ]; [
                                (0,0.9,−0.3), (0,0.7,1.2) ] },
                                    <italic>G<sub>2</sub></italic> = {
                                [ (2,−1.9,1.7),
                                (2.9,−0.3,−3.6) ];[
                                (0.3,0.3,0.3), (0.4,0.6,−0.1) ] }, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e034" xlink:type="simple"/></inline-formula>. High speedup <italic>S</italic> is found for a
                                wide range of goal switching times. (B) Speedup under MVG is greater
                                the harder the goal (the more time it takes to solve the goal in FG
                                evolution starting from random initial conditions). The Speedup
                                        <italic>S = T<sub>FG</sub>
                                    / T<sub>MVG</sub></italic> as a function of goal complexity,
                                defined as the time to solve the goal under fixed goal evolution,
                                        <italic>T<sub>FG</sub></italic>. The speedup scales linearly
                                with <italic>T<sub>FG</sub></italic>. Goals are as in (a). <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e035" xlink:type="simple"/></inline-formula> and
                                    <italic>E = 10/r</italic>.</p>
                        </caption>
                        <graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.g009" xlink:type="simple"/>
                    </fig>
                    <p>What is the effect of switching time (rate at which goals are switched) on
                        the speedup? We find that speedup is high over a wide range of switching
                        times. Speedup occurs provided that the switching times <italic>E</italic>
                        are shorter than the time to solve under a constant goal (that is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e036" xlink:type="simple"/></inline-formula>). When switching times are long, the system behaves as if
                        under a constant goal (for details see <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text
                        S1</xref>).</p>
                    <p>In the case of nearly-modular varying goals, speedup occurs provided that
                        epoch times <italic>E</italic> are also long enough to allow evolution to
                        adapt to the close-by modular solutions of the two goals (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e037" xlink:type="simple"/></inline-formula> where <italic>r</italic> is the rate of evolution), but
                        not too long, to avoid a crawl to the optimal solution (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e038" xlink:type="simple"/></inline-formula>) (<xref ref-type="fig" rid="pcbi-1000355-g009">Figure
                        9A</xref>).</p>
                </sec>
                <sec id="s3b3">
                    <title>Evolution of block-modular structures in higher dimensions</title>
                    <p>We briefly consider also a higher dimensional example with
                        <italic>N</italic> = 6 and two goals, each
                        composed of two input-output vectors as follows (values are rounded):
                                <italic>G<sub>1</sub></italic> is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e039" xlink:type="simple"/></disp-formula><disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e040" xlink:type="simple"/></disp-formula>and <italic>G<sub>2</sub></italic> is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e041" xlink:type="simple"/></disp-formula><disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e042" xlink:type="simple"/></disp-formula></p>
                    <p>MVG evolution with these two goals converges to a block-modular structure<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e043" xlink:type="simple"/></disp-formula></p>
                    <p>At this point, it is interesting to note that, in all dimensions, the block
                        structure of the evolved matrix relates to the correlations within the goal
                        input and output vectors. In fact, the block structure of <bold>A</bold>
                        (the size and position of the blocks, not the value of each element) is the
                        same as the block structure of the pair-wise linear correlation matrix
                        between the goal inputs and outputs pairs (e.g. the correlation between the
                        ‘input’ matrix whose rows are <bold>v<sub>11</sub>,
                                v<sub>12</sub>, v<sub>21</sub>, v<sub>22</sub></bold> to the
                        ‘output’ matrix whose rows are <bold>u<sub>11</sub>,
                                u<sub>12</sub>, u<sub>21</sub>, u<sub>22</sub></bold> in the present
                        example). A general proof is given in <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text
                        S1</xref>.</p>
                </sec>
                <sec id="s3b4">
                    <title>Modularity declines if goals become constant</title>
                    <p>What happens to modularity under a constant goal if one begins with a modular
                        solution as an initial condition? We find that modularity decays over time
                            (<xref ref-type="fig" rid="pcbi-1000355-g008">Figure 8B</xref>) with a
                        typical time constant of 1/ε. Generally, this decay corresponds to
                        motion along the low-gradient ridge towards the non-modular fixed point.
                        (For a proof in <italic>N</italic> = 2 see
                            <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text
                        S1</xref>). Thus, goals need to keep varying over time in order to maintain
                        the modular structure.</p>
                </sec>
                <sec id="s3b5">
                    <title>Varying between random goals typically leads to evolutionary confusion</title>
                    <p>So far, we have considered modularly varying goals - that is goals that have
                        a special feature: their components can be decomposed into modules, with the
                        same (or nearly the same) modules for all goals. Thus, there exists a
                        modular matrix <bold>A</bold> that satisfies (or nearly satisfies) all of
                        the varying goals. What about randomly chosen goals, which are not modular
                        in this sense?</p>
                    <p>Pairs of randomly chosen goals (with <italic>N&gt;2,
                            k = N−1</italic>) do not
                        generally have a matrix <bold>A</bold> that satisfies both goals. Solving
                        the dynamics in this case shows that temporally switching between the goals
                        leads to confusion, where evolution does not find a good solution to either
                        goal (<xref ref-type="fig" rid="pcbi-1000355-g007">Figure 7D</xref>).</p>
                    <p>It is easy to understand this using a geometrical picture. One can represent
                        the set of solutions for each goal as a line (or hyper-plane) in the space
                        of matrix elements. The solution lines of two random goals in the high
                        dimension space have very low probability to cross or even to come close to
                        each other. Switching between goals generally leads to a motion around the
                        point where the lines come closest, which is generally a rather poor
                        solution for each of the goals (<xref ref-type="fig" rid="pcbi-1000355-g007">Figure 7D</xref>).</p>
                    <p>Such confusion is avoided in the case of MVG, because goals share the same
                        (or nearly the same) modular structure. Such a set of modular goals is
                        special: it ensures that the corresponding lines intersect (or nearly
                        intersect), and in particular that they intersect on one of the axes. One
                        can prove (see section <italic>Full analytic solutions (B)</italic>), that
                        all eigenvalues are of order one in the case of <italic>g</italic> modular
                        goals each made of <italic>k</italic> input-output vectors (with
                            <italic>gk≥N</italic> , so that sufficient information is
                        available in the goals to specify a unique solution). Thus, in any
                        dimension, a modular structure is rapidly found under MVG evolution.</p>
                    <p>There are special cases in which the goals are non-modular but still afford a
                        speedup in evolution. This happens when the goal vectors happen to be
                        linearly dependent such that a non-modular structure <bold>A</bold> exists
                        that satisfies all goals. Here, rapid convergence under varying goals is
                        found towards a non-modular structure. Geometrically, the hyper-planes
                        corresponding to the goals happen to intersect at a point which is off the
                        axes. This may correspond to the finding that randomly varying goals
                        sometimes show mild speedup in simulations of complex models <xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>.</p>
                </sec>
                <sec id="s3b6">
                    <title>Speedup is greater the harder the goal</title>
                    <p>One can define the <italic>speedup</italic> of MVG compared to a constant
                        goal, as the ratio of the convergence time under a constant goal to the
                        convergence time in an MVG scenario <xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>,<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e044" xlink:type="simple"/><label>(8)</label></disp-formula></p>
                    <p>As pointed out above, the convergence time in a fixed goal (with dynamics
                        mostly <italic>along</italic> the low-gradient lines) is determined by the
                        small eigenvalues on the order of <italic>ε</italic>. Hence,
                                <italic>T<sub>FG</sub>∼1/ε</italic>. In contrast,
                        the convergence time in a modularly varying goal is determined by the larger
                        eigenvalues <italic>λ</italic> which are order 1. Hence,
                                <italic>T<sub>MVG</sub>∼1/λ</italic>, and<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e045" xlink:type="simple"/><label>(9)</label></disp-formula></p>
                    <p>Thus, the ‘harder’ the fixed goal problem is (that is,
                        the smaller <italic>ε</italic> and hence the longer
                            <italic>T<sub>FG</sub></italic>), the greater the speedup afforded by
                        MVG (<xref ref-type="fig" rid="pcbi-1000355-g009">Figure 9B</xref>). A
                        similar finding was made by simulations of the complex models such as logic
                        circuits and RNA structures, which displayed
                                <italic>S</italic>∝<italic>(T<sub>FG</sub>)<sup>α</sup></italic>
                        with <italic>α</italic> between 0.7 and 1.0 (<xref ref-type="fig" rid="pcbi-1000355-g002">Figure 2B</xref>) <xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>.</p>
                </sec>
            </sec>
            <sec id="s3c">
                <title>Full analytic solutions</title>
                <sec id="s3c1">
                    <title>(A) The optimal solution in a fixed goal (FG) and in modularly varying
                        goals (MVG)</title>
                    <p>Here we calculate the optimal solution in a problem in which the goal is
                        fixed (FG), and in a problem with modularly varying goals (MVG). We show
                        that the fitness of the optimal solution in a FG problem is higher than the
                        fitness of the solution in a MVG problem.</p>
                    <p>We begin by considering the fitness function of Eq. 2 written in matrix form.<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e046" xlink:type="simple"/><label>(A1)</label></disp-formula></p>
                    <p>Here <bold>A</bold> is an <italic>N</italic>×<italic>N</italic>
                        matrix. <bold>V</bold> and <bold>U</bold> are both
                            <italic>N</italic>×<italic>k</italic> matrices whose columns
                        corresponds to the goal input vectors and output vectors <italic>G</italic>.
                        The goal <italic>G</italic> is modular if there exists a block diagonal
                        matrix <bold>M</bold> such that
                            <bold>MV = U</bold> (up to permutations
                        of the columns of <bold>V</bold> and <bold>U</bold>). We assume that the
                            <italic>k</italic> columns of <bold>V</bold> are linearly independent.
                        Note that if
                        <italic>k</italic> = <italic>N</italic>
                        then <bold>V</bold> is invertible and so <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e047" xlink:type="simple"/></inline-formula>. In the present study <italic>k&lt;N</italic> so that
                        there exist infinite number of matrices <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e048" xlink:type="simple"/></inline-formula> such that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e049" xlink:type="simple"/></inline-formula>.</p>
                    <p>The equation of motion for <bold>A</bold> in matrix notation (Eq. 3) is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e050" xlink:type="simple"/><label>(A2)</label></disp-formula>where <bold>I</bold><sub>N</sub> is the
                            <italic>N</italic>×<italic>N</italic> identity matrix.
                                <bold>VV<sup>T</sup></bold> and <bold>UV<sup>T</sup></bold> are both
                            <italic>N</italic>×<italic>N</italic> matrices.</p>
                    <p>The optimum of <italic>F</italic> (Eq. A1) can be calculated from the
                        equation of motion (Eq. A2) by setting the left hand side to zero and
                        solving for <bold>A</bold>:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e051" xlink:type="simple"/><label>(A3)</label></disp-formula></p>
                    <p>Taking the limit <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e052" xlink:type="simple"/></inline-formula> reduces Eq. (A3) to<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e053" xlink:type="simple"/><label>(A4)</label></disp-formula>where <bold>V<sup>+</sup></bold> is the
                        pseudo-inverse of <bold>V</bold> satisfying <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e054" xlink:type="simple"/></inline-formula>. Using the fact that
                            <bold>U = MV</bold> we obtain
                                <bold>A<sup>*</sup> = MVV<sup>+</sup></bold>.</p>
                    <p>The solution in an MVG problem with <italic>g</italic> goals each with
                            <italic>k</italic> input-output pairs can be calculated by taking the
                        limit of vanishing small switching time. In this case the MVG problem is
                        equivalent to the average problem<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e055" xlink:type="simple"/><label>(A5)</label></disp-formula>with the equation of motion<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e056" xlink:type="simple"/><label>(A6)</label></disp-formula></p>
                    <p>Here we assume that equal amounts of time are spent in each goal. If this is
                        not the case then the average over goals should be replaced by a weighted
                        mean. Eq. (A6) can be further simplified by noting that<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e057" xlink:type="simple"/><label>(A7)</label></disp-formula></p>
                    <p>Here <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e058" xlink:type="simple"/></inline-formula>, and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e059" xlink:type="simple"/></inline-formula> are both
                        <italic>N</italic>×<italic>(gk)</italic> matrices in which all the
                        input-output pairs are concatenated: the input vectors in a matrix <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e060" xlink:type="simple"/></inline-formula>, and the output vectors in a matrix <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e061" xlink:type="simple"/></inline-formula>.</p>
                    <p>With this, the equation of motion reads<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e062" xlink:type="simple"/><label>(A8)</label></disp-formula>with the optimal solution<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e063" xlink:type="simple"/><label>(A9)</label></disp-formula></p>
                    <p>We assume that <italic>N</italic> out of the
                            <italic>g</italic>×<italic>k</italic> columns of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e064" xlink:type="simple"/></inline-formula> are linearly independent. Accordingly the rank of the rows
                        is <italic>N</italic>. Thus <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e065" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e066" xlink:type="simple"/></inline-formula> and so<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e067" xlink:type="simple"/><label>(A10)</label></disp-formula></p>
                    <p>The fitness, <italic>F</italic>, in the MVG problem is then<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e068" xlink:type="simple"/><label>(A11)</label></disp-formula>and similarly for a FG (fixed goal, in which the goal is
                        constant over time) problem<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e069" xlink:type="simple"/><label>(A12)</label></disp-formula></p>
                    <p>Here we used the inequality <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e070" xlink:type="simple"/></inline-formula>. The conclusion is that
                                <italic>F<sub>m</sub>&lt;F<sup>*</sup></italic>, that is
                        the optimal fitness in an FG problem is higher than the fitness in an MVG
                        problem.</p>
                </sec>
                <sec id="s3c2">
                    <title>(B) Eigenvalues of FG and MVG problems in <italic>N</italic> dimensional
                        space</title>
                    <p>First we show that goals with <italic>k</italic> input-output pairs in
                            <italic>N</italic> dimensions leads to evolutionary dynamics with
                            <italic>N−k</italic> eigenvalues equal to
                        <italic>2ε</italic>. Thus convergence (whose time goes as the
                        inverse of the smallest eigenvalue) is slow. Then we show that in an MVG
                        problem with <italic>g</italic> goals each with <italic>k</italic> input
                        output pairs in <italic>N</italic> dimensions generically leads to
                        evolutionary dynamics with effectively <italic>no</italic> eigenvalues equal
                        to <italic>2ε</italic>. Thus convergence is faster.</p>
                    <p>We begin by writing the solution of Eq. (A2):<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e071" xlink:type="simple"/><label>(B1)</label></disp-formula>where <bold>A</bold>(0) is the initial condition.
                        <bold>B</bold> is the coefficients matrix in Eq. (A2). Its eigensystem
                        determine the dynamics described by Eq. (A2) and the solution (B1):<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e072" xlink:type="simple"/><label>(B2)</label></disp-formula>where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e073" xlink:type="simple"/></inline-formula> are the eigenvectors and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e074" xlink:type="simple"/></inline-formula> are their corresponding eigenvalues. The <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e075" xlink:type="simple"/></inline-formula> are the roots of the characteristic polynomial<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e076" xlink:type="simple"/><label>(B3)</label></disp-formula></p>
                    <p>We will show now that <italic>N−k</italic> of the roots of the
                        characteristic polynomial <italic>p</italic>(<italic>λ</italic>)
                        equal to 2<italic>ε</italic>. Using the formula for modified
                        determinants <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e077" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e078" xlink:type="simple"/></inline-formula>, and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e079" xlink:type="simple"/></inline-formula>, we can write:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e080" xlink:type="simple"/><label>(B4)</label></disp-formula></p>
                    <p>Here <italic>I<sub>k</sub></italic> and the
                            <italic>k</italic>×<italic>k</italic> identity matrix, and
                            <bold>V</bold><italic>
                            <sup>T</sup>
                        </italic><bold>V</bold> is a <italic>k</italic>×<italic>k</italic>
                        Gram matrix – a symmetric semi-positive definite matrix whose
                        eigenvalues are all nonnegative. Since we further assume that the columns of
                            <bold>V</bold> are linearly independent then <bold>V</bold><italic>
                            <sup>T</sup>
                        </italic><bold>V</bold> is actually a positive definite matrix of rank
                            <italic>k</italic>, whose eigenvalues are all positive. After factoring
                        we find<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e081" xlink:type="simple"/><label>(B5)</label></disp-formula></p>
                    <p>Using the rule <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e082" xlink:type="simple"/></inline-formula> we find:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e083" xlink:type="simple"/><label>(B6)</label></disp-formula>where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e084" xlink:type="simple"/></inline-formula> is a polynomial of degree <italic>k</italic>. In the limit <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e085" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e086" xlink:type="simple"/></inline-formula> is the characteristic polynomial of the matrix <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e087" xlink:type="simple"/></inline-formula>, which is a full rank matrix. Thus, it has
                        <italic>k</italic> non-vanishing eigenvalues. Accordingly the characteristic
                        polynomial <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e088" xlink:type="simple"/></inline-formula> has <italic>N−k</italic> roots equal to
                            <italic>2ε</italic> and <italic>k</italic> roots of
                        <italic>O(1)</italic>.</p>
                    <p>Geometrically, this means that the dynamics in the <italic>N</italic>
                        dimensional space can be separated into two regimes: fast dynamics on a
                            <italic>k</italic> dimensional hyperplane (characterized by
                        <italic>k</italic> large eigenvalues), and slow dynamics on the
                        complementary <italic>N−k</italic> hyperplane (characterized by
                            <italic>N−k</italic> eigenvalues equal each to
                            <italic>2ε</italic>).</p>
                    <p>For completeness we write the solution (B1) in terms of the eigensystem of
                        the coefficient matrix:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e089" xlink:type="simple"/><label>(B7)</label></disp-formula></p>
                    <p>Note that this solution holds for MVG problems. At the beginning of each
                        epoch (after a goal switch) we update the initial conditions (equal to the
                        value of the matrix <bold>A</bold> at the end of the previous epoch), and
                        change the goal and corresponding eigensystem (update <bold>V</bold> and
                            <bold>U</bold> for the next epoch).</p>
                    <p>Now we show that in an MVG problem with <italic>g</italic> goals each with
                            <italic>k</italic> input-output pairs in <italic>N</italic> dimension
                        generically leads to evolutionary dynamics with only large eignevalues, and
                            <italic>no</italic> eigenvalues on the order of
                        <italic>ε</italic>. Thus convergence is fast.</p>
                    <p>We approach this problem by taking the limit of vanishing small switching
                        time. In this case the MVG problem is equivalent to the average problem with
                        the equation of motion Eq. (A8). Thus the eigensystem in this case is
                        determined by the characteristic polynomial of the average problem:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e090" xlink:type="simple"/><label>(B8)</label></disp-formula></p>
                    <p>In the generic case <italic>N</italic> out of the
                            <italic>g</italic>×<italic>k</italic> columns of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e091" xlink:type="simple"/></inline-formula> are linearly independent. Accordingly the rank of the rows
                        is <italic>N</italic> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e092" xlink:type="simple"/></inline-formula>. So that in the limit <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e093" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e094" xlink:type="simple"/></inline-formula> has <italic>N</italic> non-vanishing eigenvalues.</p>
                    <p>Geometrically, this means that unlike the dynamics in a FG problem, the
                        dynamics in an MVG problem in <italic>N</italic> dimensional space is fast
                        and generally characterized by <italic>N</italic> large eigenvalues. Note
                        that if the epoch time is finite, then one can define a critical epoch time
                        for which this result still holds (see <xref ref-type="supplementary-material" rid="pcbi.1000355.s001">Text
                        S1</xref>).</p>
                    <p>For completeness we write the solution for the equation of motion (A8)<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.e095" xlink:type="simple"/><label>(B9)</label></disp-formula></p>
                </sec>
            </sec>
        </sec>
        <sec id="s4">
            <title>Discussion</title>
            <p>We studied a model for evolution under temporally varying goals that can be exactly
                solved. This model captures some of the features previously observed with
                simulations of more complex systems <xref ref-type="bibr" rid="pcbi.1000355-Kashtan1">[18]</xref>,<xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>: MVG leads to
                evolution of modular structures. The modules correspond to the correlations in the
                goals. Furthermore, evolution is speeded up under MVG relative to constant goals.
                The harder the goal is, the faster the speedup of MVG relative to evolution under a
                constant goal. Most random non-modular goals do not generally lead to speedup or
                evolution of modularity, but rather to evolutionary confusion. Although the modular
                solution is sub-optimal, it is selected for its ability to adapt to the different
                varying goals.</p>
            <p>The speedup of evolution under MVG is a phenomenon that was previously found using
                simulations, but lacked an analytical understanding. The present model offers an
                analytical explanation for the speedup observed under MVG. The speedup in the model
                is related to small eigenvalues that correspond to motion along fitness plateaus
                when the goal is constant in time. These eigenvalues become large when the goal
                changes over time, because in MVG, the plateaus of one goal become a high-slope
                fitness region for the other goal. Switching between goals guides evolution along a
                ‘ramp’ that leads to the modular solution. This analytical
                solution of the dynamics agrees with the qualitative analysis based on sampling of
                the fitness landscape during the evolutionary simulations of complex models <xref ref-type="bibr" rid="pcbi.1000355-Kashtan2">[19]</xref>.</p>
            <p>One limitation in comparing the present model to more complex simulations is that the
                present model lacks a complex fitness landscape with many plateaus and local maxima.
                Such plateaus and local fitness maxima make constant-goal evolution even more
                difficult, and are expected to further augment the speed of MVG relative to constant
                goal conditions. A second limitation of the present linear model is that it can
                solve different MVG goals when presented simultaneously - a feature not possible for
                nonlinear systems. This linearity of the model, however, provides a clue to how MVG
                evolution works: whereas each goal supplies only partial information, all goals
                together specify the unique modular solution. Under MVG evolution, the system
                effectively remembers previous goals, supplying the information needed to guide
                evolution to the modular solution, even though at each time point the current goal
                provides insufficient information. This memory effect is likely to occur in the
                nonlinear systems as well.</p>
            <p>The series of studies on MVG, including the present theory, predict that organisms or
                molecules whose environment does not change over time should gradually lose their
                modular structure and approach a non-modular (but more optimal) structure. This
                suggestion was supported by a study that showed that bacteria that live in
                relatively constant niches such as obligate parasites that live inside cells, seem
                to have a less modular metabolic network than organisms in varying environments such
                as the soil <xref ref-type="bibr" rid="pcbi.1000355-Parter1">[32]</xref>,<xref ref-type="bibr" rid="pcbi.1000355-Kreimer1">[33]</xref>. Another study considered modularity in proteins,
                which corresponds to distinct functional domains within the protein. It was found
                that proteins whose function is relatively constant over evolutionary time, such as
                the ribosomal proteins present in all cells, are typically less modular in structure
                than proteins that are specific to a few cell types and that repeatedly duplicate
                and specialize over evolution <xref ref-type="bibr" rid="pcbi.1000355-CohenGihon1">[34]</xref>. Thus, one might envisage a tradeoff in
                biological design between modularity and optimality. Modularity is favored by
                varying goals, and non-modular optimality tends to occur under more constant goals.</p>
            <p>In summary, the present model provides an analytical explanation for the evolution of
                modular structures and for the speedup of evolution under MVG, previously found by
                means of simulations. In the present view, the modularity of evolved structures is
                an internal representation of the modularity found in the world <xref ref-type="bibr" rid="pcbi.1000355-Parter1">[32]</xref>. The
                modularity in the environmental goals is learned by the evolving structures when
                conditions vary systematically (as opposed to randomly) over time. Conditions that
                vary, but which preserve the same modular correlations between inputs and outputs,
                promote the corresponding modules in the internal structure of the organism. The
                present model may be extended to study additional features of the interplay between
                spatio-temporal changes in environment and the design of evolved molecules and
                organisms.</p>
        </sec>
        <sec id="s5">
            <title>Supporting Information</title>
            <supplementary-material id="pcbi.1000355.s001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000355.s001" xlink:type="simple">
                <label>Text S1</label>
                <caption>
                    <p>A Simple Model for Rapid Evolution of Modularity</p>
                    <p>(0.42 MB PDF)</p>
                </caption>
            </supplementary-material>
        </sec>
    </body>
    <back>
        <ack>
            <p>We thank Elad Noor, Merav Parter, Yuval Hart and Guy Shinar for comments and
                discussions.</p>
        </ack>
        <ref-list>
            <title>References</title>
            <ref id="pcbi.1000355-Simon1">
                <label>1</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Simon</surname>
                            <given-names>HA</given-names>
                        </name>
                    </person-group>
                    <year>1962</year>
                    <article-title>The Architecture of Complexity.</article-title>
                    <source>Proceedings of the American Philosophical Society</source>
                    <volume>106</volume>
                    <fpage>467</fpage>
                    <lpage>482</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Hartwell1">
                <label>2</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Hartwell</surname>
                            <given-names>LH</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Hopfield</surname>
                            <given-names>JJ</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Leibler</surname>
                            <given-names>S</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Murray</surname>
                            <given-names>AW</given-names>
                        </name>
                    </person-group>
                    <year>1999</year>
                    <article-title>From molecular to modular cell biology.</article-title>
                    <source>Nature</source>
                    <volume>402</volume>
                    <fpage>C47</fpage>
                    <lpage>52</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Raff1">
                <label>3</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Raff</surname>
                            <given-names>EC</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Raff</surname>
                            <given-names>RA</given-names>
                        </name>
                    </person-group>
                    <year>2000</year>
                    <article-title>Dissociability, modularity, evolvability.</article-title>
                    <source>Evol Dev</source>
                    <volume>2</volume>
                    <fpage>235</fpage>
                    <lpage>237</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Schlosser1">
                <label>4</label>
                <element-citation publication-type="other" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Schlosser</surname>
                            <given-names>G</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Wagner</surname>
                            <given-names>G</given-names>
                        </name>
                    </person-group>
                    <year>2004</year>
                    <source>Modularity in Development and Evolution</source>
                    <publisher-loc>Chicago, IL, U.S.A.</publisher-loc>
                    <publisher-name>Chicago University Press</publisher-name>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Wagner1">
                <label>5</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Wagner</surname>
                            <given-names>GP</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Altenberg</surname>
                            <given-names>L</given-names>
                        </name>
                    </person-group>
                    <year>1996</year>
                    <article-title>Complex Adaptations and the Evolution of Evolvability.</article-title>
                    <source>Evolution</source>
                    <volume>50</volume>
                    <fpage>967</fpage>
                    <lpage>976</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Thompson1">
                <label>6</label>
                <element-citation publication-type="other" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Thompson</surname>
                            <given-names>A</given-names>
                        </name>
                    </person-group>
                    <year>1998</year>
                    <source>Hardware Evolution: Automatic design of electronic circuits in
                        reconfigurable hardware by artificial evolution</source>
                    <publisher-name>Springer-Verlag</publisher-name>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Ancel1">
                <label>7</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Ancel</surname>
                            <given-names>LW</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Fontana</surname>
                            <given-names>W</given-names>
                        </name>
                    </person-group>
                    <year>2000</year>
                    <article-title>Plasticity, evolvability, and modularity in RNA.</article-title>
                    <source>J Exp Zool</source>
                    <volume>288</volume>
                    <fpage>242</fpage>
                    <lpage>283</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Lipson1">
                <label>8</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Lipson</surname>
                            <given-names>H</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Pollack</surname>
                            <given-names>JB</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Suh</surname>
                            <given-names>NP</given-names>
                        </name>
                    </person-group>
                    <year>2002</year>
                    <article-title>On the origin of modular variation.</article-title>
                    <source>Evolution</source>
                    <volume>56</volume>
                    <fpage>1549</fpage>
                    <lpage>1556</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Fraser1">
                <label>9</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Fraser</surname>
                            <given-names>HB</given-names>
                        </name>
                    </person-group>
                    <year>2005</year>
                    <article-title>Modularity and evolutionary constraint on proteins.</article-title>
                    <source>Nat Genet</source>
                    <volume>37</volume>
                    <fpage>351</fpage>
                    <lpage>352</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Sun1">
                <label>10</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Sun</surname>
                            <given-names>J</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Deem</surname>
                            <given-names>MW</given-names>
                        </name>
                    </person-group>
                    <year>2007</year>
                    <article-title>Spontaneous Emergence of Modularity in a Model of Evolving
                        Individuals.</article-title>
                    <source>Phys Rev Lett</source>
                    <volume>99</volume>
                    <fpage>228107</fpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Calabretta1">
                <label>11</label>
                <element-citation publication-type="other" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Calabretta</surname>
                            <given-names>R</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Nolfi</surname>
                            <given-names>S</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Parisi</surname>
                            <given-names>D</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Wagner</surname>
                            <given-names>GP</given-names>
                        </name>
                    </person-group>
                    <source>A case study of the evolution of modularity: towards a bridge between
                        evolutionary biology, artificial life, neuro- and cognitive science; 1998</source>
                    <publisher-loc>Cambridge, , MA</publisher-loc>
                    <publisher-name>The MIT Press</publisher-name>
                    <fpage>275</fpage>
                    <lpage>284</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Sole1">
                <label>12</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Sole</surname>
                            <given-names>RV</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Valverde</surname>
                            <given-names>S</given-names>
                        </name>
                    </person-group>
                    <year>2008</year>
                    <article-title>Spontaneous emergence of modularity in cellular networks.</article-title>
                    <source>J R Soc Interface</source>
                    <volume>5</volume>
                    <fpage>129</fpage>
                    <lpage>133</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Guimera1">
                <label>13</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Guimera</surname>
                            <given-names>R</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Sales-Pardo</surname>
                            <given-names>M</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Amaral</surname>
                            <given-names>LA</given-names>
                        </name>
                    </person-group>
                    <year>2004</year>
                    <article-title>Modularity from fluctuations in random graphs and complex
                        networks.</article-title>
                    <source>Phys Rev E Stat Nonlin Soft Matter Phys</source>
                    <volume>70</volume>
                    <fpage>025101</fpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Ward1">
                <label>14</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Ward</surname>
                            <given-names>JJ</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Thornton</surname>
                            <given-names>JM</given-names>
                        </name>
                    </person-group>
                    <year>2007</year>
                    <article-title>Evolutionary models for formation of network motifs and
                        modularity in the Saccharomyces transcription factor network.</article-title>
                    <source>PLoS Comput Biol</source>
                    <volume>3</volume>
                    <fpage>1993</fpage>
                    <lpage>2002</lpage>
                    <comment>doi:10.1371/journal.pcbi.0030198</comment>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Pigliucci1">
                <label>15</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Pigliucci</surname>
                            <given-names>M</given-names>
                        </name>
                    </person-group>
                    <year>2008</year>
                    <article-title>Is evolvability evolvable.</article-title>
                    <source>Nat Rev Genet</source>
                    <volume>9</volume>
                    <fpage>75</fpage>
                    <lpage>81</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Hintze1">
                <label>16</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Hintze</surname>
                            <given-names>A</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Adami</surname>
                            <given-names>C</given-names>
                        </name>
                    </person-group>
                    <year>2008</year>
                    <article-title>Evolution of complex modular biological networks.</article-title>
                    <source>PLoS Comput Biol</source>
                    <volume>4</volume>
                    <fpage>e23</fpage>
                    <comment>doi:10.1371/journal.pcbi.0040023</comment>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Wagner2">
                <label>17</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Wagner</surname>
                            <given-names>GP</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Pavlicev</surname>
                            <given-names>M</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Cheverud</surname>
                            <given-names>JM</given-names>
                        </name>
                    </person-group>
                    <year>2007</year>
                    <article-title>The road to modularity.</article-title>
                    <source>Nat Rev Genet</source>
                    <volume>8</volume>
                    <fpage>921</fpage>
                    <lpage>931</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Kashtan1">
                <label>18</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Kashtan</surname>
                            <given-names>N</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Alon</surname>
                            <given-names>U</given-names>
                        </name>
                    </person-group>
                    <year>2005</year>
                    <article-title>Spontaneous evolution of modularity and network motifs.</article-title>
                    <source>Proc Natl Acad Sci U S A</source>
                    <volume>102</volume>
                    <fpage>13773</fpage>
                    <lpage>13778</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Kashtan2">
                <label>19</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Kashtan</surname>
                            <given-names>N</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Noor</surname>
                            <given-names>E</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Alon</surname>
                            <given-names>U</given-names>
                        </name>
                    </person-group>
                    <year>2007</year>
                    <article-title>Varying environments can speed up evolution.</article-title>
                    <source>Proc Natl Acad Sci U S A</source>
                    <volume>104</volume>
                    <fpage>13711</fpage>
                    <lpage>13716</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Taylor1">
                <label>20</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Taylor</surname>
                            <given-names>CF</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Higgs</surname>
                            <given-names>PG</given-names>
                        </name>
                    </person-group>
                    <year>2000</year>
                    <article-title>A population genetics model for multiple quantitative traits
                        exhibiting pleiotropy and epistasis.</article-title>
                    <source>J Theor Biol</source>
                    <volume>203</volume>
                    <fpage>419</fpage>
                    <lpage>437</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Gardner1">
                <label>21</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Gardner</surname>
                            <given-names>A</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Zuidema</surname>
                            <given-names>W</given-names>
                        </name>
                    </person-group>
                    <year>2003</year>
                    <article-title>Is evolvability involved in the origin of modular variation?</article-title>
                    <source>Evolution Int J Org Evolution</source>
                    <volume>57</volume>
                    <fpage>1448</fpage>
                    <lpage>1450</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Wagner3">
                <label>22</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Wagner</surname>
                            <given-names>A</given-names>
                        </name>
                    </person-group>
                    <year>1996</year>
                    <article-title>Does evolutionary plasticity evolve?</article-title>
                    <source>Evolution</source>
                    <volume>50</volume>
                    <fpage>1008</fpage>
                    <lpage>1023</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Siegal1">
                <label>23</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Siegal</surname>
                            <given-names>ML</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Bergman</surname>
                            <given-names>A</given-names>
                        </name>
                    </person-group>
                    <year>2002</year>
                    <article-title>Waddington's canalization revisited: developmental
                        stability and evolution.</article-title>
                    <source>Proc Natl Acad Sci U S A</source>
                    <volume>99</volume>
                    <fpage>10528</fpage>
                    <lpage>10532</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Dekel1">
                <label>24</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Dekel</surname>
                            <given-names>E</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Alon</surname>
                            <given-names>U</given-names>
                        </name>
                    </person-group>
                    <year>2005</year>
                    <article-title>Optimality and evolutionary tuning of the expression level of a
                        protein.</article-title>
                    <source>Nature</source>
                    <volume>436</volume>
                    <fpage>588</fpage>
                    <lpage>592</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Koch1">
                <label>25</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Koch</surname>
                            <given-names>AL</given-names>
                        </name>
                    </person-group>
                    <year>1983</year>
                    <article-title>The protein burden of lac operon products.</article-title>
                    <source>J Mol Evol</source>
                    <volume>19</volume>
                    <fpage>455</fpage>
                    <lpage>462</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Nguyen1">
                <label>26</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Nguyen</surname>
                            <given-names>TN</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Phan</surname>
                            <given-names>QG</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Duong</surname>
                            <given-names>LP</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Bertrand</surname>
                            <given-names>KP</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Lenski</surname>
                            <given-names>RE</given-names>
                        </name>
                    </person-group>
                    <year>1989</year>
                    <article-title>Effects of carriage and expression of the Tn10
                        tetracycline-resistance operon on the fitness of Escherichia coli K12.</article-title>
                    <source>Mol Biol Evol</source>
                    <volume>6</volume>
                    <fpage>213</fpage>
                    <lpage>225</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Newman1">
                <label>27</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Newman</surname>
                            <given-names>MEJ</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Girvan</surname>
                            <given-names>M</given-names>
                        </name>
                    </person-group>
                    <year>2004</year>
                    <article-title>Finding and evaluating community structure in networks.</article-title>
                    <source>Phys Rev E</source>
                    <volume>69</volume>
                    <fpage>026113</fpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Wagner4">
                <label>28</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Wagner</surname>
                            <given-names>A</given-names>
                        </name>
                    </person-group>
                    <year>2005</year>
                    <article-title>Robustness, evolvability, and neutrality.</article-title>
                    <source>FEBS Lett</source>
                    <volume>579</volume>
                    <fpage>1772</fpage>
                    <lpage>1778</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Huynen1">
                <label>29</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Huynen</surname>
                            <given-names>MA</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Stadler</surname>
                            <given-names>PF</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Fontana</surname>
                            <given-names>W</given-names>
                        </name>
                    </person-group>
                    <year>1996</year>
                    <article-title>Smoothness within ruggedness: the role of neutrality in
                        adaptation.</article-title>
                    <source>Proc Natl Acad Sci U S A</source>
                    <volume>93</volume>
                    <fpage>397</fpage>
                    <lpage>401</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Kimura1">
                <label>30</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Kimura</surname>
                            <given-names>M</given-names>
                        </name>
                    </person-group>
                    <year>1979</year>
                    <article-title>The neutral theory of molecular evolution.</article-title>
                    <source>Sci Am</source>
                    <volume>241</volume>
                    <fpage>98</fpage>
                    <lpage>100, 102, 108 passim</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Eldredge1">
                <label>31</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Eldredge</surname>
                            <given-names>N</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Gould</surname>
                            <given-names>SJ</given-names>
                        </name>
                    </person-group>
                    <year>1997</year>
                    <article-title>On punctuated equilibria.</article-title>
                    <source>Science</source>
                    <volume>276</volume>
                    <fpage>338</fpage>
                    <lpage>341</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Parter1">
                <label>32</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Parter</surname>
                            <given-names>M</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Kashtan</surname>
                            <given-names>N</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Alon</surname>
                            <given-names>U</given-names>
                        </name>
                    </person-group>
                    <year>2007</year>
                    <article-title>Environmental variability and modularity of bacterial metabolic
                        networks.</article-title>
                    <source>BMC Evol Biol</source>
                    <volume>7</volume>
                    <fpage>169</fpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-Kreimer1">
                <label>33</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Kreimer</surname>
                            <given-names>A</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Borenstein</surname>
                            <given-names>E</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Gophna</surname>
                            <given-names>U</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Ruppin</surname>
                            <given-names>E</given-names>
                        </name>
                    </person-group>
                    <year>2008</year>
                    <article-title>The evolution of modularity in bacterial metabolic networks.</article-title>
                    <source>Proc Natl Acad Sci U S A</source>
                    <volume>105</volume>
                    <fpage>6976</fpage>
                    <lpage>6981</lpage>
                </element-citation>
            </ref>
            <ref id="pcbi.1000355-CohenGihon1">
                <label>34</label>
                <element-citation publication-type="journal" xlink:type="simple">
                    <person-group person-group-type="author">
                        <name name-style="western">
                            <surname>Cohen-Gihon</surname>
                            <given-names>I</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Lancet</surname>
                            <given-names>D</given-names>
                        </name>
                        <name name-style="western">
                            <surname>Yanai</surname>
                            <given-names>I</given-names>
                        </name>
                    </person-group>
                    <year>2005</year>
                    <article-title>Modular genes with metazoan-specific domains have increased
                        tissue specificity.</article-title>
                    <source>Trends Genet</source>
                    <volume>21</volume>
                    <fpage>210</fpage>
                    <lpage>213</lpage>
                </element-citation>
            </ref>
        </ref-list>
        
    </back>
</article>