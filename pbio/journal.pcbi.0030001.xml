<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="discussion" dtd-version="3.0" xml:lang="EN">
	<front>
		<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="flc">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
				<publisher-name>Public Library of Science</publisher-name>
				<publisher-loc>San Francisco, USA</publisher-loc>
			</publisher></journal-meta>
		<article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0030001</article-id><article-id pub-id-type="sici">plcb-03-01-04</article-id><article-categories>
				<subj-group subj-group-type="heading">
					<subject>Education</subject>
				</subj-group>
				<subj-group subj-group-type="Discipline">
					<subject>Genetics and Genomics/Comparative Genomics</subject>
				</subj-group>
			</article-categories><title-group><article-title>Automated Querying of Genome Databases</article-title></title-group><contrib-group>
				<contrib contrib-type="author" xlink:type="simple">
					<name name-style="western">
						<surname>Schattner</surname>
						<given-names>Peter</given-names>
					</name>
					<xref ref-type="corresp" rid="cor1"/>
				</contrib>
			</contrib-group><contrib-group>
				<contrib contrib-type="editor" xlink:type="simple">
					<name name-style="western">
						<surname>Lewitter</surname>
						<given-names>Fran</given-names>
					</name>
					<role>Editor</role><xref ref-type="aff" rid="edit1"/>
				</contrib>
			</contrib-group><aff id="edit1">Whitehead Institute, United States of America</aff><author-notes>
				<corresp id="cor1">Peter Schattner is with the Department of Biomolecular Engineering, University of California Santa Cruz, Santa Cruz, California, United States of America. E-mail: <email xlink:type="simple">schattner@soe.ucsc.edu</email></corresp>
			<fn fn-type="conflict" id="ack3">
				<p> The author has declared that no competing interests exist.</p>
			</fn></author-notes><pub-date pub-type="ppub">
				<month>1</month>
				<year>2007</year>
			</pub-date><pub-date pub-type="epub">
				<day>26</day>
				<month>1</month>
				<year>2007</year>
			</pub-date><volume>3</volume><issue>1</issue><elocation-id>e1</elocation-id><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2007</copyright-year><copyright-holder>Peter Schattner</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><funding-group><funding-statement>The authors received no specific funding for this article.</funding-statement></funding-group><counts>
				<page-count count="6"/>
			</counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group>
				<custom-meta>
					<meta-name>citation</meta-name>
					<meta-value>Schattner P (2007) Automated querying of genome databases. PLoS Comput Biol 3(1): e1. doi:<ext-link ext-link-type="doi" xlink:href="http://dx.doi.org/10.1371/journal.pcbi.0030001" xlink:type="simple">10.1371/journal.pcbi.0030001</ext-link></meta-value>
				</custom-meta>
			</custom-meta-group></article-meta>
	</front>
	<body>
		<p><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030001.tutorial_logo" xlink:type="simple"/></p>
		<sec id="s1">
			<title>Introduction</title>
			<p>The number of molecular biology databases continues to explode. Presently, few problems in genomic molecular biology can be addressed without analyzing data stored in them. However, these databases reside in many different locations and often use nonstandard data formats requiring specialized data parsers. As a result, integrating and comparing data from multiple biological databases is difficult and tedious. Genome databases offer solutions to this problem by integrating data from multiple databases in a uniform and standardized manner. However, principally because of the intrinsic complexity of genome data, exploiting the full power of these databases also has a considerable learning curve. This is particularly true if one wants to query multiple genomic regions in an automated manner, rather than simply analyze individual genes, one at a time. Here, using the University of California Santa Cruz (UCSC) Genome Database for illustration, I describe tools that have been developed for facilitating automated, genome-database–querying and present some applications for which they are well-suited.</p>
			<p>The genome browsers at UCSC [<xref ref-type="bibr" rid="pcbi-0030001-b001">1</xref>], Ensembl [<xref ref-type="bibr" rid="pcbi-0030001-b002">2</xref>], and the National Center for Biotechnology Information (NCBI) [<xref ref-type="bibr" rid="pcbi-0030001-b003">3</xref>], as well as the model organism databases (e.g., Wormbase [<xref ref-type="bibr" rid="pcbi-0030001-b004">4</xref>], Flybase [<xref ref-type="bibr" rid="pcbi-0030001-b005">5</xref>], Saccharomyces Genome Database (SGD) [<xref ref-type="bibr" rid="pcbi-0030001-b006">6</xref>], and Mouse Genome Database (MGD) [<xref ref-type="bibr" rid="pcbi-0030001-b007">7</xref>]), have become essential tools for the analysis of genomic, molecular biology data. By integrating data from multiple biological databases and visually displaying the results, these tools enable the exploration of relationships among genomic data in ways that were previously not possible. The power of this approach can be illustrated by a simple example. We can imagine a scenario in which we have found a polymorphism in a human disease gene and want to check various properties of this polymorphism. Is it in the Single Nucleotide Polymorphism Database (dbSNP), indicating that it has been previously identified? Does it overlap a known repeat sequence? Does it overlap a CpG island? Does it occur in any known expressed sequence tag (EST)? Is the more common variant at the polymorphism site conserved in other vertebrates? It is of course possible to answer these questions without a genome browser. However, this approach requires identifying, becoming familiar with, and using multiple different resources—dbSNP, NIH Genetic Sequence Databank (GenBank), the Expressed Sequence Tag Database (dbEST), etc. [<xref ref-type="bibr" rid="pcbi-0030001-b003">3</xref>]—each with its own idiosyncrasies and learning curves. In contrast, using one of the genome browsers, all we need to do is to select the appropriate genome and genomic location, select the browser annotation tracks for SNPs, ESTs, repeats, CpG islands, and interspecies conservation, and view the results.</p>
			<p>However, for all its power and convenience, interactive querying of genome databases does have limitations. For example, we can imagine a situation where we have identified <italic>one hundred</italic> polymorphisms rather than just a single one. Interactively verifying which ones are already in dbSNP, or are within CpG islands, or are represented by ESTs, or are at highly conserved sites would quickly become tedious, time-consuming, and error prone, even with an integrated genome browser. Similarly, if one has identified hundreds, or even thousands, of genome locations of interest from a microarray experiment, and wants to ask a set of biological questions about each of them, interactive querying is not feasible.</p>
			<p>Moreover, without batch-querying, many important biological questions cannot practically be addressed at all. One might want to search for new genes, by looking for regions where ESTs overlap gene predictions and also are highly conserved among related species. Or one might want to study exon evolution, by searching for ALU repeat sequences found in coding exons [<xref ref-type="bibr" rid="pcbi-0030001-b008">8</xref>]. Yet another example occurs in the identification of candidate target sites for adenosine deaminase enzymes that convert specific adenosines in RNA to inosine (ADARs). One effective method [<xref ref-type="bibr" rid="pcbi-0030001-b009">9</xref>] for identifying ADAR sites is by searching for genomic locations that code for an A while a G has been observed at the corresponding location in an mRNA or EST (inosine is generally interpreted as guanosine by both reverse transcriptase and the ribosome). Such queries can be addressed in a straightforward manner by batch-querying the genome databases. In contrast, they are essentially impossible to answer via interactive genome browsing.</p>
			<p>Consequently, both the UCSC and Ensembl Genome Browsers include tools for direct and automated “batch”-querying of their underlying databases. Currently the NCBI MapViewer Browser and the model organism databases do not offer integrated batch-querying tools, but NCBI is planning to introduce such tools for the MapViewer Database in the future (D. Church, personal communication). The aim of the present work is to introduce the reader to the available, batch-querying tools, to illustrate some of their features and capabilities, and to indicate the types of applications for which they are useful. The reader is assumed to be familiar with interactive use of at least one of the genome browsers. No programming experience is required for performing basic batch-querying procedures. However, for the more complex tasks described, experience with some computer language such as C, Perl, or Java, as well as familiarity with database-querying, i.e., Structured Query Language (SQL) [<xref ref-type="bibr" rid="pcbi-0030001-b010">10</xref>], is necessary. For simplicity, much of the discussion will be focused on a single database, the UCSC Browser Database. However, comparable capabilities are available via Ensembl.</p>
		</sec>
		<sec id="s2">
			<title>Interactive Batch Database–Querying</title>
			<p>Batch queries of the Ensembl and UCSC Genome Databases are possible using the conventional database SQL [<xref ref-type="bibr" rid="pcbi-0030001-b010">10</xref>] or using the Application Programmer Interfaces (APIs), described below. Moreover, since relatively few biologists are experienced with SQL or programming, both Ensembl and UCSC also provide Web-based user interfaces for batch-querying by the nonprogrammer. These interfaces, which are suitable for simple queries involving one or two database tables, are referred to as the “Table Browser” at UCSC [<xref ref-type="bibr" rid="pcbi-0030001-b011">11</xref>] and “BioMart” at Ensembl [<xref ref-type="bibr" rid="pcbi-0030001-b012">12</xref>]. A screen shot of the Table Browser Interface is shown in <xref ref-type="fig" rid="pcbi-0030001-g001">Figure 1</xref>. Using the Table Browser, one can query any table in the UCSC Browser database, restrict the retrieved records to ones satisfying various constraints, perform intersections between tables, and obtain the output data in multiple useful formats. BioMart's capabilities are similar.</p>
			<fig id="pcbi-0030001-g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.0030001.g001</object-id>
				<label>Figure 1</label>
				<caption>
					<title>Table Browser Interface</title>
					<p>As shown in the screenshot, from the Table Browser Interface, one can select essentially any table in the UCSC Genome Database and obtain descriptions of the table's fields as well as download all or part of the table's records in a variety of formats.</p>
				</caption>
				<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030001.g001" xlink:type="simple"/>
			</fig>
			<p>So, for example, with the Table Browser, we can answer our earlier question of identifying which of 100 polymorphisms were previously known (as evidenced by dbSNP annotations), in the following manner. First, we would make a custom table (actually called a “custom track” in UCSC database parlance) of the genomic coordinates of our polymorphisms, if necessary obtaining the coordinates from the gene sequences themselves using the UCSC BLAT tool [<xref ref-type="bibr" rid="pcbi-0030001-b013">13</xref>]. Then we would intersect our custom table with the appropriate UCSC SNP table (e.g., table “snp126” for the March 2006 build of the UCSC database). The result of the table intersection would be a list of those polymorphisms present in dbSNP.</p>
			<p>However, our example also indicates some of the limitations of the Table Browser approach. One problem becomes apparent if we attempt to identify those polymorphisms that are in dbSNP, are also in CpG islands, and also have polymorphism sites that align with ESTs found in other mammals. To identify these polymorphisms, we would need to perform multiple table intersections with the Table Browser. However, performing multiple table intersections within the Table Browser is awkward. To address this problem, we could access the “Galaxy” Web site User Interface [<xref ref-type="bibr" rid="pcbi-0030001-b014">14</xref>] (<ext-link ext-link-type="uri" xlink:href="http://g2.bx.psu.edu" xlink:type="simple">http://g2.bx.psu.edu</ext-link>). Galaxy is a relatively new Web site that provides a set of built-in post-processing tools (including tools from EMBOSS [<xref ref-type="bibr" rid="pcbi-0030001-b015">15</xref>], PHYLIP [<xref ref-type="bibr" rid="pcbi-0030001-b016">16</xref>], PAML [<xref ref-type="bibr" rid="pcbi-0030001-b017">17</xref>], and R [<xref ref-type="bibr" rid="pcbi-0030001-b018">18</xref>]) that can act directly on data acquired from the Table Browser, Biomart, and other sources. In particular, the Galaxy User Interface includes a “history” mechanism, which facilitates performing intersections of multiple tables from the Table Browser.</p>
			<p>Although Galaxy alleviates the difficulties of multiple table intersections, our example also highlights a more fundamental limitation to the Table Browser approach. This limitation is that answering biological questions often requires data post-processing, and this post-processing may sometimes be more involved than what one can be accomplished using just the Galaxy toolset. For example, to determine if our polymorphisms have been observed in an EST not only requires intersecting our custom table with the EST table, but also obtaining the actual EST sequences, and, finally, inspecting those ESTs at the polymorphism locations. If we have 100 polymorphisms and multiple ESTs overlapping any single one, manually screening all of the ESTs is not feasible. Similarly, the example of searching for candidate ADAR sites by comparing genomic DNA with EST data also requires writing sequence-comparison software in addition to batch-downloading of data.</p>
		</sec>
		<sec id="s3">
			<title>Programmatic Batch-Querying and Post-Processing</title>
			<p>For more complex types of genomic data analysis, it may be necessary to write one's own computer program or script to perform the required post-processing of the data. Now, in such cases, it is of course possible to simply take the data downloaded from the Table Browser or Biomart and analyze it with software written “from scratch” in any computer language of one's choice. However, this is typically an inefficient approach. Rather, it is generally preferable to use the extensive API libraries of data extraction and manipulation tools that have already been developed by the Browser Teams for these purposes. In this way one has immediate access to functions that perform essentially all the data manipulations that we are accustomed to performing interactively on the respective browsers.</p>
			<p>For the UCSC Databases, the principal API is in C and contains a comprehensive collection of utility programs and library routines (<ext-link ext-link-type="uri" xlink:href="http://hgdownload.cse.ucsc.edu/admin/jksrc.zip" xlink:type="simple">http://hgdownload.cse.ucsc.edu/admin/jksrc.zip</ext-link>). These programs were originally developed by Jim Kent and are typically referred to as the “kent source tree.” The included utility programs, which can generally be run either in stand-alone mode or be incorporated into one's own code, include programs for sorting, splitting, or merging fasta sequences; record parsing and data conversion using GenBank, fasta, nib, and blast data formats; sequence alignment; motif searching; hidden Markov model development; and much more. Library subroutines are available for everything from managing C data structures such as linked lists, balanced trees, hashes, and directed graphs to developing routines for SQL, HTML, or CGI code. Additional library functions are available for biological sequence and data manipulation tasks such as reverse complementation, codon and amino acid lookup and sequence translation, as well as functions specifically designed for extracting, loading, and manipulating data in the UCSC Genome Browser Databases. The code is open-source and, except for the browser-specific libraries, is completely free to all. The UCSC-Browser–specific code, while free for academic, research, and personal use, does require licensing for commercial use.</p>
			<p>The Ensembl code base has comparable capabilities to UCSC's with APIs implemented for either Perl or Java. The Ensembl software is also open-source and is completely free for all use. See <ext-link ext-link-type="uri" xlink:href="http://www.ensembl.org/info/software/core/index.html" xlink:type="simple">http://www.ensembl.org/info/software/core/index.html</ext-link> for links to more information on the Ensembl APIs.</p>
			<p>The main cost of using these databases and their associated software (apart from possible commercial licensing fees) is the time required to learn how to use them and to obtain access to a copy of all or part of the database. The steepness of the learning curve is primarily due to the complexity of the data, but is also because these databases were designed more for interactive querying than for programmed use. In particular, programmed access to the UCSC database can be challenging to learn, since the appropriate table and code documentation are sometimes not easy to locate. For UCSC database table descriptions, often a good place to start is by selecting the table of interest in the Table Browser (<ext-link ext-link-type="uri" xlink:href="http://genome.ucsc.edu/cgi-bin/hgTables" xlink:type="simple">http://genome.ucsc.edu/cgi-bin/hgTables</ext-link>) and then selecting “Describe table schema” (see also <xref ref-type="fig" rid="pcbi-0030001-g001">Figure 1</xref>). In contrast, documentation for the source code tends to be embedded in the code itself. The relevant documentation can usually be found by applying the Unix “grep” command or some similar text-finding utility to the library subdirectories of the kent source code tree.</p>
			<p>The requirement for access to a database copy exists because the genome browsers themselves do not have the capacity to handle programmatic querying. There are three ways to create such database access: using a public mirror database, downloading individual database tables and/or files, and creating one's own private mirror. For occasional programmatic database-querying, probably the easiest approach is to use direct SQL-querying of the public mySQL mirrors set up for this purpose, using host = genome-mysql.cse.ucsc.edu with username = genome for UCSC, or host = ensembldb.ensembl.org with username = anonymous for Ensembl. Since genome-mysql.cse.ucsc.edu is an (almost) exact mirror of the UCSC browser database, data extraction and manipulation code taken from the kent source tree will typically run without any modification (one important exception is code that accesses actual sequence or alignment data; however, it is not difficult to work around this limitation by locally installing just the sequence and alignment data).</p>
			<p>An alternative to using a public mirror, when data from only a small number of database tables is required, is to simply download the needed tables, using either the Table Browser, the UCSC http download site (e.g., <ext-link ext-link-type="uri" xlink:href="http://hgdownload.cse.ucsc.edu/goldenPath/hg18/database" xlink:type="simple">http://hgdownload.cse.ucsc.edu/goldenPath/hg18/database</ext-link>), or the UCSC DAS [<xref ref-type="bibr" rid="pcbi-0030001-b014">14</xref>] interface. Once the data have been downloaded, they can be loaded into and accessed from a local relational database using programs provided in the kent source tree or the generic genomic browser utility, GBrowse [<xref ref-type="bibr" rid="pcbi-0030001-b019">19</xref>]. Alternatively, the data can be read directly into the analysis program, again using code from the kent source tree.</p>
			<p>Finally, the third option is to install one's own local mirror of all (or, more likely, part) of the genome database. Although performing such an installation requires a substantial amount of local disk space, is not trivial, and, at first, may even appear daunting, the steps involved are generally well-documented (<ext-link ext-link-type="uri" xlink:href="http://genome.ucsc.edu/admin/mirror.html" xlink:type="simple">http://genome.ucsc.edu/admin/mirror.html</ext-link>), and installation should be reasonably straightforward for someone with Unix experience. Installation requirements for building an Ensembl mirror are comparable with those for the UCSC system and are documented at <ext-link ext-link-type="uri" xlink:href="http://www.ensembl.org/info/software/website/index.html" xlink:type="simple">http://www.ensembl.org/info/software/website/index.html</ext-link>. Setting up a private mirror does entail considerable initial effort. Moreover, if one's applications need genome annotations incorporating the most recent database updates, using a public mirror database may be advantageous. On the other hand, maintaining one's own private mirror database does provide several significant advantages. In particular, concern about the restrictions and limitations of using a shared resource are no longer relevant, and, once created, one has a permanent, customizable resource that can be used repeatedly for multiple investigations.</p>
		</sec>
		<sec id="s4">
			<title>An Example</title>
			<p>To illustrate the power of automated genome-database–querying using the UCSC API, let us consider another simple example that is illustrative and is not unlike more complex and realistic ones (see, for example, the analysis of snoRNA introns in reference [<xref ref-type="bibr" rid="pcbi-0030001-b020">20</xref>]). Specifically, let us assume that we have a list of coordinates of some genomic feature (e.g., snoRNAs) located within introns (as noted earlier, if necessary, these coordinates can easily be obtained from the sequences of the features by using BLAT). We further assume that we want to know the median length of these embedding introns and how this length compares with the lengths of other introns of the same genes, in order to test the hypothesis that such intronic features occur in introns with lengths that are longer (or shorter) than the median intron length.</p>
			<p><xref ref-type="supplementary-material" rid="pcbi-0030001-sd001">Datasets S1</xref>, <xref ref-type="supplementary-material" rid="pcbi-0030001-sd002">S2</xref>, and S3 contain, respectively, the install and usage instructions, Unix tar file, and source code for a simple, short (less than 250-line) C program solution to this example using the UCSC database and the kent source code. The program is actually significantly longer than necessary since it illustrates all three of the database access methods described above. The program works by first reading in a list of genomic regions stored in a “bed” file and then either reading in a list of gene records from a local file, or else setting up an SQL connection to obtain gene table data from a local or public mirror of the UCSC database. The program then reads one genomic location at a time, obtains the gene exon–intron annotation data for each gene that overlaps the location, and selects the longest overlapping gene. Next, for each of the selected gene's introns, the intron's length is computed and stored in one of two lists, depending on whether the current intron overlaps the region in the bed file or not. Finally, the program computes the median length of the introns that overlapped regions in the input list (i.e., that overlap the feature) and the median length of the introns that did not.</p>
			<p>We now look at the code for the principal subroutine of the program (shown in <xref ref-type="fig" rid="pcbi-0030001-g002">Figure 2</xref>) in a bit more detail. The routine uses several standard kent C code structures. These include structures for an SQL connection (conn), for a singly linked list of “bed” locations (bed), for a list of gene structures (gp), for a hash (gpHash), and, implicitly as global variables, for lists of floating point numbers (overlapList and otherList). Definitions of these structures can be found in the kent source code “include” files jksql.h, bed.h, genePred.h, hash.h, and common.h, respectively.</p>
			<fig id="pcbi-0030001-g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.0030001.g002</object-id>
				<label>Figure 2</label>
				<caption>
					<title>Subroutine Calculating Intronic Lengths, Illustrating C Structures, and Library Routines from the Kent Source Code Tree</title>
					<p>Subroutine is part of the sample program in <xref ref-type="supplementary-material" rid="pcbi-0030001-sd003">Dataset S3</xref>.</p>
				</caption>
				<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030001.g002" xlink:type="simple"/>
			</fig>
			<p>With these definitions, the subroutine first creates a list of all gene structures for all genes that overlap the input bed region. If the gene-data access method is via a mirror database (indicated by gpHash being null), obtaining this list of gene structures requires only a call to the library routine genePredReaderLoadRangeQuery (defined in genePredReader.h). If, instead, gene-table access is via a local file, one needs to write a short additional access routine bkToGenePreds (shown in <xref ref-type="supplementary-material" rid="pcbi-0030001-sd003">Dataset S3</xref>), which is based on a “binKeeper-hash” data structure. This data structure has two levels. The higher level is a simple hash in which the keys are chromosome names and the values are pointers to binKeeper structures (defined in binKeeper.h). The binKeeper structures are used to store chromosome feature data (in this case gene structures) in “bins,” such that a feature spanning a coordinate range is stored in the smallest bin that completely contains the specified region. This type of implementation enables very fast data retrieval.</p>
			<p>Once the list of overlapping genes is retrieved, the longest one is found by simply calling the linked-list sort function, slSort. (One does need to write a short comparison function, here called genePredLongestCmp, specifying that the gene sorting is based on transcript length.) Next, the program is ready to cycle through all of the exons of the longest overlapping gene and to compute intron lengths by simple subtraction. Then the code determines whether the intron overlaps the input bed using the function positiveRangeIntersection, and, depending on the result of the intersection test, appends the length to either of the linked lists, overlapList or otherList, using the library routine slSafeAddHead. Finally, the memory allocated for the gene structures is freed.</p>
			<p>By examining this code, it should be apparent that, once the initial learning curve has been overcome, using the UCSC database and the kent source code can turn what would otherwise be a rather large programming project into a relatively straightforward exercise.</p>
		</sec>
		<sec id="s5">
			<title>Summary</title>
			<p>Web-based, interactive querying of the genome databases has enabled the analysis of genomes in an integrated and visual manner that previously was difficult or impossible. However, many important biological questions cannot practically be answered using simple interactive methods that query only a single genomic location at a time. Addressing these questions requires batch- and programmatic database-querying. Although these approaches involve an initial, one-time cost of learning how to use the associated API and establishing an access method for programmed querying, the important capabilities they provide for addressing significant and otherwise relatively complex genomic questions often makes this effort well worthwhile. Moreover, as Web-based interfaces like Galaxy—which provide batch data acquisition and post-processing, but do not require programming—evolve, the powerful tools of genome-wide data analysis should become accessible to an ever wider range of biologists.</p>
		</sec>
		<sec id="s6">
			<title>Supporting Information</title>
			<supplementary-material id="pcbi-0030001-sd001" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030001.sd001" xlink:type="simple">
				<label>Dataset S1</label>
				<caption>
					<title>Software README File</title>
					<p>Installation and usage instructions for the included sample software.</p>
					<p>(5 KB TXT)</p>
				</caption>
			</supplementary-material>
			<supplementary-material id="pcbi-0030001-sd002" mimetype="application/x-tar" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030001.sd002" xlink:type="simple">
				<label>Dataset S2</label>
				<caption>
					<title>gbdExample-0.1.tar.gz—Software Source Code Tar File</title>
					<p>Code for the example described in the article text.</p>
					<p>(445 KB TAR)</p>
				</caption>
			</supplementary-material>
			<supplementary-material id="pcbi-0030001-sd003" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030001.sd003" xlink:type="simple">
				<label>Dataset S3</label>
				<caption>
					<title>gbdExample.c—Source Code of the Example Software Described in the Text</title>
					<p>(7 KB TXT)</p>
				</caption>
			</supplementary-material>
		</sec>
	</body>
	<back>
		<ack>
			<p>I am indebted to Mark Diekhans for numerous instructive discussions on the design and implementation of the UCSC Genome Browser Database. I thank Ewan Birney, Deanna Church, Hiram Clawson, Xose Fernandez, Fan Hsu, Jim Kent, Bob Kuhn, Daryl Thomas, and David Wheeler for helpful discussions, and Mathieu Blanchette, Mark Diekhans, Heikki Lehvaslaiho, Lincoln Stein, and two anonymous referees for constructive comments on the manuscript.</p>
		</ack>
		
		<glossary>
			<title>Abbreviations:</title>
			<def-list>
				<def-item>
					<term>ADAR</term>
					<def>
						<p>adenosine deaminase enzymes that convert specific adenosines in RNA to inosine</p>
					</def>
				</def-item>
				<def-item>
					<term>API</term>
					<def>
						<p>application programmer interface</p>
					</def>
				</def-item>
				<def-item>
					<term>dbSNP</term>
					<def>
						<p>Single Nucleotide Polymorphism Database</p>
					</def>
				</def-item>
				<def-item>
					<term>EST</term>
					<def>
						<p>expressed sequence tag</p>
					</def>
				</def-item>
				<def-item>
					<term>MGD</term>
					<def>
						<p>Mouse Genome Database</p>
					</def>
				</def-item>
				<def-item>
					<term>NCBI</term>
					<def>
						<p>National Center for Biotechnology Information</p>
					</def>
				</def-item>
				<def-item>
					<term>SGD</term>
					<def>
						<p>Saccharomyces Genome Database</p>
					</def>
				</def-item>
				<def-item>
					<term>SQL</term>
					<def>
						<p>Structured Query Language</p>
					</def>
				</def-item>
				<def-item>
					<term>UCSC</term>
					<def>
						<p>University of California Santa Cruz</p>
					</def>
				</def-item>
			</def-list>
		</glossary>
		<ref-list>
			<title>References</title>
			<ref id="pcbi-0030001-b001">
<label>1</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Hinrichs</surname>
							<given-names>AS</given-names>
						</name>
						<name name-style="western">
							<surname>Karolchik</surname>
							<given-names>D</given-names>
						</name>
						<name name-style="western">
							<surname>Baertsch</surname>
							<given-names>R</given-names>
						</name>
						<name name-style="western">
							<surname>Barber</surname>
							<given-names>GP</given-names>
						</name>
						<name name-style="western">
							<surname>Bejerano</surname>
							<given-names>G</given-names>
						</name><etal/>
					</person-group>
					<year>2006</year>
					<article-title>The UCSC Genome Browser Database: Update 2006.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>34</volume>
					<fpage>D590</fpage>
					<lpage>D598</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b002">
<label>2</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Birney</surname>
							<given-names>E</given-names>
						</name>
						<name name-style="western">
							<surname>Andrews</surname>
							<given-names>D</given-names>
						</name>
						<name name-style="western">
							<surname>Caccamo</surname>
							<given-names>M</given-names>
						</name>
						<name name-style="western">
							<surname>Chen</surname>
							<given-names>Y</given-names>
						</name>
						<name name-style="western">
							<surname>Clarke</surname>
							<given-names>L</given-names>
						</name><etal/>
					</person-group>
					<year>2006</year>
					<article-title>Ensembl 2006.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>34</volume>
					<fpage>D556</fpage>
					<lpage>D561</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b003">
<label>3</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Wheeler</surname>
							<given-names>DL</given-names>
						</name>
						<name name-style="western">
							<surname>Barrett</surname>
							<given-names>T</given-names>
						</name>
						<name name-style="western">
							<surname>Benson</surname>
							<given-names>DA</given-names>
						</name>
						<name name-style="western">
							<surname>Bryant</surname>
							<given-names>SH</given-names>
						</name>
						<name name-style="western">
							<surname>Canese</surname>
							<given-names>K</given-names>
						</name><etal/>
					</person-group>
					<year>2006</year>
					<article-title>Database resources of the National Center for Biotechnology Information.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>34</volume>
					<fpage>D173</fpage>
					<lpage>D180</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b004">
<label>4</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Chen</surname>
							<given-names>N</given-names>
						</name>
						<name name-style="western">
							<surname>Harris</surname>
							<given-names>TW</given-names>
						</name>
						<name name-style="western">
							<surname>Antoshechkin</surname>
							<given-names>I</given-names>
						</name>
						<name name-style="western">
							<surname>Bastiani</surname>
							<given-names>C</given-names>
						</name>
						<name name-style="western">
							<surname>Bieri</surname>
							<given-names>T</given-names>
						</name><etal/>
					</person-group>
					<year>2005</year>
					<article-title>WormBase: A comprehensive data resource for <italic>Caenorhabditis</italic> biology and genomics.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>33</volume>
					<fpage>D383</fpage>
					<lpage>D389</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b005">
<label>5</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Gelbart</surname>
							<given-names>WM</given-names>
						</name>
						<name name-style="western">
							<surname>Crosby</surname>
							<given-names>M</given-names>
						</name>
						<name name-style="western">
							<surname>Matthews</surname>
							<given-names>B</given-names>
						</name>
						<name name-style="western">
							<surname>Rindone</surname>
							<given-names>WP</given-names>
						</name>
						<name name-style="western">
							<surname>Chillemi</surname>
							<given-names>J</given-names>
						</name><etal/>
					</person-group>
					<year>1997</year>
					<article-title>FlyBase: A <italic>Drosophila</italic> database. The FlyBase consortium.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>25</volume>
					<fpage>63</fpage>
					<lpage>66</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b006">
<label>6</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Christie</surname>
							<given-names>KR</given-names>
						</name>
						<name name-style="western">
							<surname>Weng</surname>
							<given-names>S</given-names>
						</name>
						<name name-style="western">
							<surname>Balakrishnan</surname>
							<given-names>R</given-names>
						</name>
						<name name-style="western">
							<surname>Costanzo</surname>
							<given-names>MC</given-names>
						</name>
						<name name-style="western">
							<surname>Dolinski</surname>
							<given-names>K</given-names>
						</name><etal/>
					</person-group>
					<year>2004</year>
					<article-title>Saccharomyces Genome Database (SGD) provides tools to identify and analyze sequences from <named-content content-type="genus-species" xlink:type="simple">Saccharomyces cerevisiae</named-content> and related sequences from other organisms.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>32</volume>
					<fpage>D311</fpage>
					<lpage>D314</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b007">
<label>7</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Blake</surname>
							<given-names>JA</given-names>
						</name>
						<name name-style="western">
							<surname>Richardson</surname>
							<given-names>JE</given-names>
						</name>
						<name name-style="western">
							<surname>Bult</surname>
							<given-names>CJ</given-names>
						</name>
						<name name-style="western">
							<surname>Kadin</surname>
							<given-names>JA</given-names>
						</name>
						<name name-style="western">
							<surname>Eppig</surname>
							<given-names>JT</given-names>
						</name>
					</person-group>
					<year>2003</year>
					<article-title>MGD: The Mouse Genome Database.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>31</volume>
					<fpage>193</fpage>
					<lpage>195</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b008">
<label>8</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Lev-Maor</surname>
							<given-names>G</given-names>
						</name>
						<name name-style="western">
							<surname>Sorek</surname>
							<given-names>R</given-names>
						</name>
						<name name-style="western">
							<surname>Shomron</surname>
							<given-names>N</given-names>
						</name>
						<name name-style="western">
							<surname>Ast</surname>
							<given-names>G</given-names>
						</name>
					</person-group>
					<year>2003</year>
					<article-title>The birth of an alternatively spliced exon: 3′ splice-site selection in Alu exons.</article-title>
					<source>Science</source>
					<volume>300</volume>
					<fpage>1288</fpage>
					<lpage>1291</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b009">
<label>9</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Levanon</surname>
							<given-names>EY</given-names>
						</name>
						<name name-style="western">
							<surname>Eisenberg</surname>
							<given-names>E</given-names>
						</name>
						<name name-style="western">
							<surname>Yelin</surname>
							<given-names>R</given-names>
						</name>
						<name name-style="western">
							<surname>Nemzer</surname>
							<given-names>S</given-names>
						</name>
						<name name-style="western">
							<surname>Hallegger</surname>
							<given-names>M</given-names>
						</name><etal/>
					</person-group>
					<year>2004</year>
					<article-title>Systematic identification of abundant A-to-I editing sites in the human transcriptome.</article-title>
					<source>Nat Biotechnol</source>
					<volume>22</volume>
					<fpage>1001</fpage>
					<lpage>1005</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b010">
<label>10</label>
				<element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>DuBois</surname>
							<given-names>P</given-names>
						</name>
					</person-group>
					<year>2005</year>
					<source>MySQL</source>
					<publisher-loc>Indianapolis</publisher-loc>
					<publisher-name>Sams Developer's Library</publisher-name>
					<!--===== Restructure page-count as size[@units="page"] =====--><size units="page">1320</size>
					
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b011">
<label>11</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Karolchik</surname>
							<given-names>D</given-names>
						</name>
						<name name-style="western">
							<surname>Hinrichs</surname>
							<given-names>AS</given-names>
						</name>
						<name name-style="western">
							<surname>Furey</surname>
							<given-names>TS</given-names>
						</name>
						<name name-style="western">
							<surname>Roskin</surname>
							<given-names>KM</given-names>
						</name>
						<name name-style="western">
							<surname>Sugnet</surname>
							<given-names>CW</given-names>
						</name><etal/>
					</person-group>
					<year>2004</year>
					<article-title>The UCSC Table Browser data retrieval tool.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>32</volume>
					<fpage>D493</fpage>
					<lpage>D496</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b012">
<label>12</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Kasprzyk</surname>
							<given-names>A</given-names>
						</name>
						<name name-style="western">
							<surname>Keefe</surname>
							<given-names>D</given-names>
						</name>
						<name name-style="western">
							<surname>Smedley</surname>
							<given-names>D</given-names>
						</name>
						<name name-style="western">
							<surname>London</surname>
							<given-names>D</given-names>
						</name>
						<name name-style="western">
							<surname>Spooner</surname>
							<given-names>W</given-names>
						</name><etal/>
					</person-group>
					<year>2004</year>
					<article-title>EnsMart: A generic system for fast and flexible access to biological data.</article-title>
					<source>Genome Res</source>
					<volume>14</volume>
					<fpage>160</fpage>
					<lpage>169</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b013">
<label>13</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Kent</surname>
							<given-names>WJ</given-names>
						</name>
					</person-group>
					<year>2002</year>
					<article-title>BLAT—The BLAST-like alignment tool.</article-title>
					<source>Genome Res</source>
					<volume>12</volume>
					<fpage>656</fpage>
					<lpage>664</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b014">
<label>14</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Giardine</surname>
							<given-names>B</given-names>
						</name>
						<name name-style="western">
							<surname>Riemer</surname>
							<given-names>C</given-names>
						</name>
						<name name-style="western">
							<surname>Hardison</surname>
							<given-names>RC</given-names>
						</name>
						<name name-style="western">
							<surname>Burhans</surname>
							<given-names>R</given-names>
						</name>
						<name name-style="western">
							<surname>Elnitski</surname>
							<given-names>L</given-names>
						</name><etal/>
					</person-group>
					<year>2005</year>
					<article-title>Galaxy: A platform for interactive large-scale genome analysis.</article-title>
					<source>Genome Res</source>
					<volume>15</volume>
					<fpage>1451</fpage>
					<lpage>1455</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b015">
<label>15</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Rice</surname>
							<given-names>P</given-names>
						</name>
						<name name-style="western">
							<surname>Longden</surname>
							<given-names>I</given-names>
						</name>
						<name name-style="western">
							<surname>Bleasby</surname>
							<given-names>A</given-names>
						</name>
					</person-group>
					<year>2000</year>
					<article-title>EMBOSS: The European Molecular Biology Open Software Suite.</article-title>
					<source>Trends Genet</source>
					<volume>16</volume>
					<fpage>276</fpage>
					<lpage>277</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b016">
<label>16</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Felsenstein</surname>
							<given-names>J</given-names>
						</name>
					</person-group>
					<year>1985</year>
					<article-title>Confidence limits on phylogenies: An approach using the bootstrap.</article-title>
					<source>Evolution</source>
					<volume>39</volume>
					<fpage>783</fpage>
					<lpage>791</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b017">
<label>17</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Yang</surname>
							<given-names>Z</given-names>
						</name>
					</person-group>
					<year>1997</year>
					<article-title>PAML: A program package for phylogenetic analysis by maximum likelihood.</article-title>
					<source>Comput Appl Biosci</source>
					<volume>13</volume>
					<fpage>555</fpage>
					<lpage>556</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b018">
<label>18</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Ihaka</surname>
							<given-names>R</given-names>
						</name>
						<name name-style="western">
							<surname>Gentleman</surname>
							<given-names>R</given-names>
						</name>
					</person-group>
					<year>1996</year>
					<article-title>R: A language for data analysis and graphics.</article-title>
					<source>J Graph Comput Stat</source>
					<volume>5</volume>
					<fpage>299</fpage>
					<lpage>314</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b019">
<label>19</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Stein</surname>
							<given-names>LD</given-names>
						</name>
						<name name-style="western">
							<surname>Mungall</surname>
							<given-names>C</given-names>
						</name>
						<name name-style="western">
							<surname>Shu</surname>
							<given-names>S</given-names>
						</name>
						<name name-style="western">
							<surname>Caudy</surname>
							<given-names>M</given-names>
						</name>
						<name name-style="western">
							<surname>Mangone</surname>
							<given-names>M</given-names>
						</name><etal/>
					</person-group>
					<year>2002</year>
					<article-title>The generic genome browser: A building block for a model organism system database.</article-title>
					<source>Genome Res</source>
					<volume>12</volume>
					<fpage>1599</fpage>
					<lpage>1610</lpage>
				</element-citation>
			</ref>
			<ref id="pcbi-0030001-b020">
<label>20</label>
				<element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author">
						<name name-style="western">
							<surname>Schattner</surname>
							<given-names>P</given-names>
						</name>
						<name name-style="western">
							<surname>Barberan-Soler</surname>
							<given-names>S</given-names>
						</name>
						<name name-style="western">
							<surname>Lowe</surname>
							<given-names>TM</given-names>
						</name>
					</person-group>
					<year>2006</year>
					<article-title>A computational screen for mammalian pseudouridylation guide H/ACA RNAs.</article-title>
					<source>RNA</source>
					<volume>12</volume>
					<fpage>15</fpage>
					<lpage>25</lpage>
				</element-citation>
			</ref>
		</ref-list>
	</back>
</article>