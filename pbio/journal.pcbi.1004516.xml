<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research-article">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-15-00438</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1004516</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Multi-scale Visualization of Molecular Architecture Using Real-Time Ambient Occlusion in Sculptor</article-title>
<alt-title alt-title-type="running-head">Multi-scale Visualization Using Real-Time Ambient Occlusion</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Wahle</surname> <given-names>Manuel</given-names></name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="fn" rid="currentaff001"><sup>¤</sup></xref>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<name name-style="western">
<surname>Wriggers</surname> <given-names>Willy</given-names></name>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
</contrib-group>
<aff id="aff001">
<label>1</label>
<addr-line>School of Biomedical Informatics, University of Texas Health Science Center at Houston, Houston, Texas, United States of America</addr-line>
</aff>
<aff id="aff002">
<label>2</label>
<addr-line>Department of Mechanical and Aerospace Engineering, Old Dominion University, Norfolk, Virginia, United States of America</addr-line>
</aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Olson</surname> <given-names>Arthur</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1">
<addr-line>The Scripps Research Institute, UNITED STATES</addr-line>
</aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<fn fn-type="con" id="contrib001">
<p>Conceived and designed the experiments: WW MW. Performed the experiments: MW. Analyzed the data: MW WW. Contributed reagents/materials/analysis tools: MW WW. Wrote the paper: MW WW. Designed software: MW WW.</p>
</fn>
<fn fn-type="current-aff" id="currentaff001">
<label>¤</label>
<p>Current Address: Block Institute for Clinical and Translational Research at Einstein and Montefiore, Bronx, New York, United States of America</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">wriggers@biomachina.org</email></corresp>
</author-notes>
<pub-date pub-type="collection">
<month>10</month>
<year>2015</year>
</pub-date>
<pub-date pub-type="epub">
<day>27</day>
<month>10</month>
<year>2015</year>
</pub-date>
<volume>11</volume>
<issue>10</issue>
<elocation-id>e1004516</elocation-id>
<history>
<date date-type="received">
<day>17</day>
<month>3</month>
<year>2015</year>
</date>
<date date-type="accepted">
<day>21</day>
<month>8</month>
<year>2015</year>
</date>
</history>
<permissions>
<copyright-year>2015</copyright-year>
<copyright-holder>Wahle, Wriggers</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1004516" xlink:type="simple"/>
<abstract>
<p>The modeling of large biomolecular assemblies relies on an efficient rendering of their hierarchical architecture across a wide range of spatial level of detail. We describe a paradigm shift currently under way in computer graphics towards the use of more realistic global illumination models, and we apply the so-called ambient occlusion approach to our open-source multi-scale modeling program, Sculptor. While there are many other higher quality global illumination approaches going all the way up to full GPU-accelerated ray tracing, they do not provide size-specificity of the features they shade. Ambient occlusion is an aspect of global lighting that offers great visual benefits and powerful user customization. By estimating how other molecular shape features affect the reception of light at some surface point, it effectively simulates indirect shadowing. This effect occurs between molecular surfaces that are close to each other, or in pockets such as protein or ligand binding sites. By adding ambient occlusion, large macromolecular systems look much more natural, and the perception of characteristic surface features is strongly enhanced. In this work, we present a real-time implementation of screen space ambient occlusion that delivers realistic cues about tunable spatial scale characteristics of macromolecular architecture. Heretofore, the visualization of large biomolecular systems, comprising e.g. hundreds of thousands of atoms or Mega-Dalton size electron microscopy maps, did not take into account the length scales of interest or the spatial resolution of the data. Our approach has been uniquely customized with shading that is tuned for pockets and cavities of a user-defined size, making it useful for visualizing molecular features at multiple scales of interest. This is a feature that none of the conventional ambient occlusion approaches provide. Actual Sculptor screen shots illustrate how our implementation supports the size-dependent rendering of molecular surface features.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author Summary</title>
<p>In this work, we present an implementation of screen space ambient occlusion (SSAO), which supports the visualization and modeling of multi-scale biophysical data, such as atomic structures and 3D density maps, at multiple scales of interest. The ever-growing size of macromolecular assemblies presents a formidable challenge to molecular modeling programs. Ambient occlusion (AO) has recently received a lot of attention in high-quality rendering engines as well as in video games. The technique provides an acceptable real-time approximation of global illumination, by adding realistic cues about the indirect shading of the surface topology. SSAO leverages the computational power and flexibility of graphical processors, which are present on almost all modern video cards. By using SSAO, we put an emphasis on compatibility and speed, while delivering the visual benefits of AO at a user-selected level of detail. Our work is particularly timely because many molecular graphics packages are currently adopting global illumination schemes, but our work is unique in providing size-specificity of the shaded features.</p>
</abstract>
<funding-group>
<funding-statement>This work was supported by National Institute of General Medical Sciences (US), URL <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://www.nigms.nih.gov">http://www.nigms.nih.gov</ext-link>, grant number R01GM62968 (to WW). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="7"/>
<table-count count="0"/>
<page-count count="14"/>
</counts>
<custom-meta-group>
<custom-meta id="data-availability" xlink:type="simple">
<meta-name>Data Availability</meta-name>
<meta-value>The open source program Sculptor is freely available under the LGPL license and it can be downloaded at <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://sculptor.biomachina.org">http://sculptor.biomachina.org</ext-link>. Data used for Figs <xref ref-type="fig" rid="pcbi.1004516.g001">1</xref>, <xref ref-type="fig" rid="pcbi.1004516.g003">3</xref>, <xref ref-type="fig" rid="pcbi.1004516.g004">4</xref>, <xref ref-type="fig" rid="pcbi.1004516.g006">6</xref> &amp; <xref ref-type="fig" rid="pcbi.1004516.g007">7</xref> can be found at <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://www.rcsb.org/pdb/explore.do?structureId=1af6">http://www.rcsb.org/pdb/explore.do?structureId=1af6</ext-link> (<xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1</xref>), <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://pdbj.org/emnavi/emnavi_detail.php?id=2984">http://pdbj.org/emnavi/emnavi_detail.php?id=2984</ext-link> (<xref ref-type="fig" rid="pcbi.1004516.g003">Fig 3</xref>), <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://biomachina.org/disseminate/DARS02/">http://biomachina.org/disseminate/DARS02/</ext-link> (Figs <xref ref-type="fig" rid="pcbi.1004516.g004">4</xref> &amp; <xref ref-type="fig" rid="pcbi.1004516.g006">6</xref>) and <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://www.rcsb.org/pdb/explore.do?structureId=1cwp">http://www.rcsb.org/pdb/explore.do?structureId=1cwp</ext-link> (<xref ref-type="fig" rid="pcbi.1004516.g007">Fig 7</xref>).</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<disp-quote>
<p>This is a <italic>PLOS Computational Biology</italic> Software paper</p>
</disp-quote>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>Multi-scale molecular modeling is concerned with the computational integration and interpretation of spatio-temporal biophysical data from various experimental origins [<xref ref-type="bibr" rid="pcbi.1004516.ref001">1</xref>–<xref ref-type="bibr" rid="pcbi.1004516.ref003">3</xref>]. During the last decade, we have developed computational techniques for interpreting small-angle X-ray scattering (SAXS) and electron microscopy (EM) data [<xref ref-type="bibr" rid="pcbi.1004516.ref004">4</xref>], the modeling of structural flexibility [<xref ref-type="bibr" rid="pcbi.1004516.ref005">5</xref>], and visualization of functional “machine parts” using computer graphics [<xref ref-type="bibr" rid="pcbi.1004516.ref006">6</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref007">7</xref>]. The unifying goal of these efforts was to observe and to account for functional architecture and dynamics in native environments (solution or vitreous ice) or <italic>in silico</italic> and then to reconstruct and interpret the 3D shapes of large biomolecular assemblies across multiple spatial or time scales. Ideally, such large structures are visualized at the atomic level; however, volumetric 3D maps have become increasingly common [<xref ref-type="bibr" rid="pcbi.1004516.ref008">8</xref>].</p>
<p>Early multi-resolution modeling was carried out manually [<xref ref-type="bibr" rid="pcbi.1004516.ref009">9</xref>], based on the visual representations displayed on a computer screen, although algorithmic approaches soon emerged [<xref ref-type="bibr" rid="pcbi.1004516.ref010">10</xref>]. Despite the algorithmic advancements, it is essential that the graphical depictions are of high visual quality to validate the precision or accuracy of models, to help the user perceive the spatial architecture, and to facilitate scientific communication. Computer graphics have been used for the visualization of molecules since the rise of graphics workstations [<xref ref-type="bibr" rid="pcbi.1004516.ref011">11</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref012">12</xref>]. Availability and quality of rendering were mainly driven by the development of more advanced hardware. Although special purpose graphics hardware was available since the early 1980s, it was not until the early 1990s that 3D graphics rendering, actively performed by a processor on a graphics card, became increasingly prevalent in mass-market personal computers. When OpenGL emerged as a common interface for 3D graphics programming, it eventually resulted in a widespread support of hardware acceleration available in commodity computers.</p>
<p>Mostly driven by the gaming industry, mass market GPUs steadily improved in terms of processing power and flexibility. During the early 2000s, programmable shading capabilities were added to these dedicated rendering processors [<xref ref-type="bibr" rid="pcbi.1004516.ref013">13</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref014">14</xref>]. Up to then, geometry was projected onto the screen through a fixed functionality pipeline. A certain set of parameters like color and light positions could be adjusted, but no further customizations were possible without considerate efforts or workarounds. Although still being mainly targeted towards graphics processing, GPUs nowadays are even used routinely for general purpose scientific computing.</p>
<p>At the time of the founding of PLoS Computational Biology, in the mid 2000s, interactive graphics software relied on strongly simplified approximations of real-world lighting such as Phong or Gouraud shading (<xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1a</xref>) and depth cueing (<xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1b</xref>), which do not deliver convincing cues about the spatial characteristics of represented structures [<xref ref-type="bibr" rid="pcbi.1004516.ref015">15</xref>]. This was due to the limitation that lighting could be computed only locally at each point in real time. In depth cueing, the color of objects was blended with that of the background to create a distance-dependent “fog.” This approach was unrelated to lighting and did not look convincing for large structures because the “fog bank” changed direction with the viewpoint (<xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1b</xref>) and the effect was uniform at a given pixel depth. A more realistic rendering of shadows and ambient light in real time seemed out of reach: Such <italic>global</italic> lighting effects, where objects in the scene affect the lighting of other objects (<xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1c and 1d</xref>), used to require an expensive ray tracing that had to be computed off-line in batch mode [<xref ref-type="bibr" rid="pcbi.1004516.ref015">15</xref>].</p>
<fig id="pcbi.1004516.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004516.g001</object-id>
<label>Fig 1</label>
<caption>
<title>Local and SSAO rendering of an atomic structure of a maltoporin protein (PDB ID 1AF6).</title>
<p>(a) Standard local lighting, which provides only a locally acceptable approximation of real world lighting. (b) Depth cueing, which unevenly shades the three (slightly tilted) channels and looks unrealistic at the bottom. (c-d) SSAO, at two different sampling sizes that emphasize spatial features according to user preference. The protein is shown in van der Waals mode in an orientation corresponding to Fig 2 in [<xref ref-type="bibr" rid="pcbi.1004516.ref016">16</xref>]. All molecular graphics figures in this paper were created with Sculptor version 2.1 [<xref ref-type="bibr" rid="pcbi.1004516.ref017">17</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref018">18</xref>].</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.g001"/>
</fig>
<p>In 2007, however, Vladimir Kajalin invented screen space ambient occlusion (SSAO) while working at the German video game company Crytek on the PC game Crysis [<xref ref-type="bibr" rid="pcbi.1004516.ref019">19</xref>]. It was already known that computer renderings looked more realistic when an ambient background illumination was considered [<xref ref-type="bibr" rid="pcbi.1004516.ref020">20</xref>]. Ambient occlusion (AO) describes how much of the ambient light (emanating from a uniform lighted sky) is blocked by the scene geometry from reaching a surface point (<xref ref-type="fig" rid="pcbi.1004516.g002">Fig 2</xref>). The occlusion can be computed by integrating the visibility (blockage) function over the hemisphere with respect to the projected solid angle [<xref ref-type="bibr" rid="pcbi.1004516.ref021">21</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref022">22</xref>]. Typically the calculation requires an expensive pre-processing step, but SSAO uses pixel depth to form an AO map (see <xref ref-type="sec" rid="sec002">Design and Implementation</xref>), which opened the door to inexpensive post-processing [<xref ref-type="bibr" rid="pcbi.1004516.ref023">23</xref>]. SSAO thus enabled AO for real-time applications such as computer games and molecular graphics.</p>
<fig id="pcbi.1004516.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004516.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Global illumination by ambient light rays (red) emanating from a hemisphere Ω.</title>
<p>The illumination is governed by a weighted sum of unblocked light rays (red) that reach the surface point <italic>p</italic>, where the weights are given by the cosine of the incident angle relative to the surface normal <italic>n</italic><sub><italic>p</italic></sub>. [<xref ref-type="bibr" rid="pcbi.1004516.ref016">16</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref021">21</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref022">22</xref>].</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.g002"/>
</fig>
<p>AO is observed when two surfaces are close. As long as the effect is not surpassed by strong shadows or direct lighting, a highly diffuse darkening can be observed between the surfaces. Good examples are creases or pockets, or any kind of deeper concavity in objects. Applying this effect to space-filling representations of biomolecules, or to isosurfaces of volumetric maps, greatly enhances the perception of their spatio-structural characteristics. <xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1</xref> shows the effect applied to the atomic structure of a protein structure; in <xref ref-type="fig" rid="pcbi.1004516.g003">Fig 3</xref> it is applied to a volumetric map. Both figures show how AO contributes to the perception of spatial structure at a user-defined level of detail.</p>
<fig id="pcbi.1004516.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004516.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Volumetric representation of a 2.2 Å resolution cryo electron microscopy density map of beta-galactosidase in complex with a cell-permeant inhibitor (EMDB ID 2984).</title>
<p>(a) Standard local lighting. (b-d) SSAO, at three different sampling sizes that emphasize tertiary (b), secondary (c), and primary (d) spatial features according to user preference.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.g003"/>
</fig>
<p>This paper presents an adaptation of SSAO to real-time modeling and visualization of multi-resolution biomolecular structures. To handle the additional computational load, our implementation takes advantage of modern graphics processing units (GPUs). The method is implemented in our open source modeling software, Sculptor [<xref ref-type="bibr" rid="pcbi.1004516.ref006">6</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref017">17</xref>], which is freely available at <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://sculptor.biomachina.org">http://sculptor.biomachina.org</ext-link>. In Results, we will describe how SSAO is particularly beneficial for multi-scale docking and registration studies that require highlighting of specific size cavities and pockets through improved lighting, for which Sculptor was designed. In Availability and Future Directions we will also compare our implementation to ongoing developments in conventional molecular graphics programs.</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Design and Implementation</title>
<sec id="sec003">
<title>Related Work</title>
<p>Among the many techniques for computing global lighting aspects, AO is one of the most popular. The main idea of AO is to calculate an occlusion factor <italic>A</italic><sub><italic>p</italic></sub> for ambient light at each point <italic>p</italic> in the scene, which approximates the light distribution (<xref ref-type="fig" rid="pcbi.1004516.g002">Fig 2</xref>). <italic>A</italic><sub><italic>p</italic></sub> results from the integral over the visible hemisphere Ω over the blocked incoming light energy <italic>ρ</italic>(<italic>L</italic>) based on the distance to the nearest obstacle <italic>L</italic>(<italic>p</italic>, <italic>u</italic>) in direction <italic>u</italic> [<xref ref-type="bibr" rid="pcbi.1004516.ref016">16</xref>]: <italic>A</italic><sub><italic>p</italic></sub> = ∫<sub>Ω</sub> <italic>ρ</italic>(<italic>L</italic>(<italic>p</italic>, <italic>u</italic>)) <italic>n</italic><sub><italic>p</italic></sub> ⋅ <italic>u</italic> <italic>du</italic>. <italic>A</italic><sub><italic>p</italic></sub> thus accounts for the loss of ambient light by blocking of incident rays by nearby scene geometry. A variety of techniques are used to approximate AO in practice. One approach is to cast multiple rays from the surface point and testing for intersection of the rays with surrounding surfaces [<xref ref-type="bibr" rid="pcbi.1004516.ref024">24</xref>]. In [<xref ref-type="bibr" rid="pcbi.1004516.ref025">25</xref>] the AO is computed by approximating geometry with disks to compute a per vertex value. In [<xref ref-type="bibr" rid="pcbi.1004516.ref026">26</xref>] precomputed radiance transfer terms are used to efficiently shade a scene, incorporating an AO effect. In [<xref ref-type="bibr" rid="pcbi.1004516.ref027">27</xref>] a method for computing AO for molecular visualization is designed. It is, however, restricted to representations that use spheres or cylinders.</p>
<p>All of the above methods aimed to achieve high visual quality at interactive frame rates, but they required either a pre-processing step, or they altered the rendering pipeline, which limited their adoption. When SSAO was introduced in [<xref ref-type="bibr" rid="pcbi.1004516.ref019">19</xref>], the main innovation was that AO was added to the scene <italic>after</italic> all geometry rendering completed. Due to the post-processing, no additional information or adaption of the rendering pipeline are necessary. This makes SSAO very fast, and it is completely independent from the scene complexity. In [<xref ref-type="bibr" rid="pcbi.1004516.ref028">28</xref>] an early overview of different SSAO techniques is given. More recently, [<xref ref-type="bibr" rid="pcbi.1004516.ref029">29</xref>] introduced an AO volumes scheme that is comparable to ray tracing in some scenes, [<xref ref-type="bibr" rid="pcbi.1004516.ref030">30</xref>] introduced a voxel-cone AO that was adopted by NVIDIA (Section 1 in <xref ref-type="supplementary-material" rid="pcbi.1004516.s001">S1 Text</xref>), and [<xref ref-type="bibr" rid="pcbi.1004516.ref016">16</xref>] introduced a fast object-based AO for molecular dynamics rendering.</p>
</sec>
<sec id="sec004">
<title>Rendering Pipeline</title>
<p>The rendering graphics pipeline is traditionally implemented as follows. The geometry in the scene consists of vertices connected by edges, and every vertex is assigned certain lighting parameters. Vertex positions and those of light sources are used to compute color information. From a given viewpoint (the camera position), the scene is projected onto an image plane, which corresponds to the screen surface. In a process called rasterization, the center of each pixel is associated with information from the projected geometry. Color is the result of interpolating this information from the corresponding original vertices, and depth depends on the distance between camera and original geometry. These per pixel data are stored in so-called fragments.</p>
<p>Two different buffers exist: one holding color (displayed on the screen) and the other minimum depth information (<xref ref-type="fig" rid="pcbi.1004516.g004">Fig 4</xref>). Both have the same dimensions as the screen and store data from the fragments. For each newly generated fragment, it must be determined if it will overwrite the previous values in the buffers. In traditional depth cueing (<xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1b</xref>), the pixel color is blended with the background based on the pixel depth, which is unrelated to lighting. In SSAO, the geometry corresponding to every pixel is analyzed to estimate the amount of AO in the original scene. <xref ref-type="fig" rid="pcbi.1004516.g005">Fig 5</xref> illustrates that at the bottom of a concavity (<xref ref-type="fig" rid="pcbi.1004516.g005">Fig 5a</xref>), AO is high, and so the darkening should be strong. In contrast, at the top of a convexity (<xref ref-type="fig" rid="pcbi.1004516.g005">Fig 5b</xref>), the geometry does not attenuate the ambient lighting. Finally, each pixel’s color is modulated with the AO coefficient.</p>
<fig id="pcbi.1004516.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004516.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Illustration of buffer contents.</title>
<p>(a) Color buffer. (b) Corresponding depth buffer contents in grayscale (black is near and white is far).</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.g004"/>
</fig>
<fig id="pcbi.1004516.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004516.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Illustration of SSAO approaches.</title>
<p>(a-b) Point-based SSAO for (a) concavity and (b) convexity. Red marks show sample points behind the surface, green ones in front of it. In (a), most points are behind the surface, resulting in high AO. In (b), most points are in front of the surface, resulting in low AO. (c) Line-based SSAO. The green parts of the lines are in front of the surface; the red parts are hidden. Computing the ratio of visible vs. hidden parts yields an AO factor of higher granularity than what can be achieved by the point-based method.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.g005"/>
</fig>
</sec>
<sec id="sec005">
<title>Point Sampling</title>
<p>In point sampling [<xref ref-type="bibr" rid="pcbi.1004516.ref023">23</xref>], sampling is conducted at multiple positions inside a sphere around the current point of interest. From the pixel coordinates and the corresponding depth value, it is possible to compute the 3D position in the scene. This position becomes the center of the sampling sphere (<xref ref-type="fig" rid="pcbi.1004516.g005">Fig 5a and 5b</xref>). Each sampling point is projected onto the image plane, and the sample depth is compared to the depth buffer, yielding the number of visible and hidden sample points. The AO coefficient is then given by the ratio of hidden to visible sample points.</p>
<p>The naïve method described up to here produces a strong banding artifact (<xref ref-type="fig" rid="pcbi.1004516.g006">Fig 6a</xref>). To eliminate this artifact, one can rotate the sampling sphere randomly for every pixel (<xref ref-type="fig" rid="pcbi.1004516.g006">Fig 6b</xref>). The random orientation of the sampling points inside the sphere eliminates the banding artifacts, but it introduces noise, so an additional smoothing step is required. The best trade-off between quality and speed for our purpose proved to be a 7 × 7 averaging kernel. This kernel can be decomposed into its two linear components along the x- and the y-axis, improving efficiency. <xref ref-type="fig" rid="pcbi.1004516.g006">Fig 6c</xref> shows the final result of the filtered point sampling.</p>
<fig id="pcbi.1004516.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004516.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Point Sampling in SSAO.</title>
<p>(a) AO with strong banding artifacts. (b) Randomized sampling. (c) Smoothing applied after the randomization.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.g006"/>
</fig>
</sec>
<sec id="sec006">
<title>Line Sampling</title>
<p>The number of sampling points in the point-based method (<xref ref-type="fig" rid="pcbi.1004516.g005">Fig 5a and 5b</xref>) determines the quantization level of the AO coefficients. If the number is low, there will be noticeable granularity. To produce smooth variations between adjacent pixels one could simply increase the number of sample points. However, the quantization effects can be reduced more efficiently by using sampling lines orthogonal to the image plane inside the sampling sphere [<xref ref-type="bibr" rid="pcbi.1004516.ref023">23</xref>]. The intersection of each line with the surface is used to determine the fraction of the line that is hidden (<xref ref-type="fig" rid="pcbi.1004516.g005">Fig 5c</xref>). Adding up each line’s contribution to the sphere multiplied by its hidden fraction yields the final AO coefficient. Line sampling suppresses banding and granularity effects such that no randomization step is necessary. The hidden fraction of the line can be computed with a simple max-min calculation [<xref ref-type="bibr" rid="pcbi.1004516.ref023">23</xref>]. The simplicity of these calculations makes it even possible, at comparable cost, to consider a higher density of sampling lines compared to the above point sample density.</p>
</sec>
<sec id="sec007">
<title>Framebuffer Implementation</title>
<p>When AO is applied, the color and depth output are redirected into an offline framebuffer. (A framebuffer is a data structure that holds color and depth values of pixels.) For our purpose, we use a framebuffer with three attached color textures and one depth texture. The color image is stored in the first attached color texture, and depth is stored in the depth texture. For each pixel, a shader is invoked. (This is done by drawing two triangles that span the entire screen area; the rasterizer on the GPU will invoke a so-called fragment shader for each pixel covered.) This first shader takes the color and depth texture as input. The pixel is back-projected into 3D space, and the sampling points or lines are computed. The shader computes the ratio of hidden to visible samples and writes the output to the first color component of the second color texture. Additionally, two parameters are passed to this shader: the diameter of the sampling sphere and an intensity coefficient. The diameter is by default linked to the size of the displayed molecule, and thus needs to be user adjustable. A second shader then takes the second color texture as input. It blurs the coefficient in the x-direction by averaging. The result is stored in the first color component of the third color texture. The third and final shader takes the first and third color textures as input. It blurs the coefficient from the third color texture in the y-direction. Finally, it modulates the original colors with the blurred AO coefficients and writes the result into the screen framebuffer (a special framebuffer used for displaying contents on the screen).</p>
<p>These three steps are done for each single frame. The procedure is termed post-processing because it is conducted after the geometry of the scene has been rendered. Interactive frame rates can be maintained because all computations are done on the GPU. The CPU is required only for passing the name of the used shader to the GPU, for passing the name of the texture parameters, and for calling the functions that draw a rectangle that covers the screen.</p>
</sec>
</sec>
<sec id="sec008" sec-type="results">
<title>Results</title>
<p>Sculptor and its underlying libraries are implemented in C++. OpenGL is used for graphics rendering, and shader programs are written using Cg. The Cg run-time environment is linked to Sculptor and compiles all shader programs on program start. Compilation at run time has the advantage that it is guaranteed that the shader programs are compiled for the individual graphics card in the current computer. This means that whatever hardware is present, the Cg compiler will compile specifically for the latest feature set of the current machine, maximizing performance and compatibility. The software has been ported to current Windows, Macintosh, and Linux operating systems.</p>
<p>Taking AO into account when shading objects greatly enhances the appearance of 3D molecular structures (Figs <xref ref-type="fig" rid="pcbi.1004516.g001">1</xref> and <xref ref-type="fig" rid="pcbi.1004516.g003">3</xref>). The figures also illustrate the adjustment of the important sampling diameter, which determines the scale of AO effect when working with biomolecules. In <xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1c</xref> the diameter is relatively large, highlighting the molecular cavities. In <xref ref-type="fig" rid="pcbi.1004516.g001">Fig 1d</xref>, the diameter is decreased, providing a flatter appearance, but emphasizing molecular surface details on a finer level. Both depictions have their own individual advantages for the specific task at hand.</p>
<p>This multi-scale shading is particularly important high-resolution volumetric maps or for large atomic structures. In recent years, single-particle cryo-electron microscopy (cryo-EM) has advanced towards atomic resolution densities, and it is difficult to visualize features at multiple scales when rendering a 2.2 Å map at full detail (<xref ref-type="fig" rid="pcbi.1004516.g003">Fig 3</xref>). A larger sphere diameter is able to highlight tertiary structure features and the global molecular shape (<xref ref-type="fig" rid="pcbi.1004516.g003">Fig 3b</xref>), whereas a smaller sphere size can highlight secondary structure features (<xref ref-type="fig" rid="pcbi.1004516.g003">Fig 3c</xref>) or the fold of the polypeptide chain (<xref ref-type="fig" rid="pcbi.1004516.g003">Fig 3d</xref>). In a large atomic structure such as cowpea chlorotic mottle virus (CCMV) in <xref ref-type="fig" rid="pcbi.1004516.g007">Fig 7</xref>, the shading can be adjusted to provide different resolution depictions of the virus capsid surface. Adjusting the AO intensity level in conjunction with such sampling size variations can be useful for selecting the relative contrast of features. Both diameter and intensity levels can be updated interactively with sliders for this purpose.</p>
<fig id="pcbi.1004516.g007" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004516.g007</object-id>
<label>Fig 7</label>
<caption>
<title>Three-way comparison of sampling size effect.</title>
<p>Shown is a composite of CCMV images (PDB ID 1CWP) with three different heuristic sampling diameter settings. Adaption of the diameter highlights structural arrangements on different scales.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.g007"/>
</fig>
<p>To assess the impact of SSAO on graphics rendering speed, we conducted measurements on various hardware platforms (Section 2 in <xref ref-type="supplementary-material" rid="pcbi.1004516.s001">S1 Text</xref>). The performance penalty was negligible in all but the oldest systems we tested. We expect our SSAO implementation to impose no significant overhead on any current or future graphics systems. In terms of rendering quality, the line-based sampling is superior to the point-based one. Not only does it execute twice as fast at the same number of samples, it also delivers better looking results. Introducing noise to cope with banding artifacts is not necessary for line-based sampling, and thus results in a much smoother appearance of the SSAO effect. It also distributes contrasts better, with cavities receiving more and convexities less occlusion.</p>
</sec>
<sec id="sec009">
<title>Availability and Future Directions</title>
<p>In summary, we have presented an adaptation of SSAO to real-time molecular visualization that is uniquely useful for visualizing molecular features at multiple scales of interest. SSAO significantly enhances the perception of spatial features in large biomolecular structures. It works well in conjunction with biophysical data from various origins, resolutions, and with different rendering modes. Our performance tests showed that the computational cost of SSAO is negligible on modern platforms. Our Sculptor 2.1 builds are compatible with Linux, Macintosh, and Windows hardware from 2006 onward, making it a very resource-friendly graphics program. Sculptor is freely available under the LGPL license and it can be downloaded at <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://sculptor.biomachina.org">http://sculptor.biomachina.org</ext-link>.</p>
<p>Several well-known molecular graphics packages are currently adopting global illumination schemes, although different approaches are taken by other groups:</p>
<p>The Python-based molecular viewer PMV [<xref ref-type="bibr" rid="pcbi.1004516.ref031">31</xref>] has supported conventional SSAO since 2011 for application in augmented reality and docking (Section 1 in <xref ref-type="supplementary-material" rid="pcbi.1004516.s001">S1 Text</xref>).</p>
<p>UCSF Chimera [<xref ref-type="bibr" rid="pcbi.1004516.ref032">32</xref>] will adopt AO lighting as part of its next-generation Chimera 2 program, which has not yet been released. The developers implemented “a direct shadowing approach that casts shadows from 100 to 200 directions. It packs the depth maps in a large 2D texture and a single shader pass computes all the shadows. On mid-range graphics it can display large atomic structures such as a ribosome at interactive frame rate” (Tom Goddard, pers. comm.). Direct shadows require re-computation of shadow maps whenever the model changes, while SSAO doesn’t have that overhead. The Chimera developers believe that in their applications most molecular scenes are rather static and so the direct shadow approach is viable. SSAO is more attractive when the scene is very dynamic, such as in rendering of molecular dynamics trajectories within Sculptor.</p>
<p>VMD [<xref ref-type="bibr" rid="pcbi.1004516.ref033">33</xref>, <xref ref-type="bibr" rid="pcbi.1004516.ref034">34</xref>] recently adopted a “fully interactive GPU-accelerated ray tracing, which allows traditional shadows, AO lighting, reflections, depth-of-field focal blur, at frame rates ranging from 10 frames per second on older GPUs, up to 30 frames per second or more on the latest NVIDIA gaming GPUs” (John Stone, pers. comm.). The VMD GPU ray tracer started out as a way of getting high-quality movie renderings done more quickly on large supercomputers [<xref ref-type="bibr" rid="pcbi.1004516.ref034">34</xref>]. The ray tracing feature has recently been released in VMD 1.9.2 for the 64-bit Linux build.</p>
<p>Despite the sophistication of direct shading and ray tracing, working in screen space has some inherent advantages. First, it is completely independent of the complexity of the geometry of the scene. AO is computed on a per pixel, not a per vertex basis. This makes SSAO extremely efficient (Section 2 in <xref ref-type="supplementary-material" rid="pcbi.1004516.s001">S1 Text</xref>). Although our applications are mostly performed on workstations, we note that SSAO is applicable for interactive rendering on low-power platforms such as mobile phones, tablets, and web browsers.</p>
<p>The most important practical advantage of our SSAO implementation (besides speed) is the user-adjustable sphere size parameter. This feature is particularly beneficial for multi-scale docking studies, because it selectively highlights specific size cavities and binding pockets through improved lighting. The user selection of sampling size could become a potential issue if one wanted to make movies that zoom in/out over a wide spatial scale while retaining a fixed sampling sphere diameter. In such simulations the zooming might lead to visible granularity artifacts when the depth-buffer resolution becomes very low relative to the projected sample spheres. One could compensate for such limitations by additional oversampling in the line-based approach, by adapting the sample sphere diameter automatically, or by disabling the SSAO effect as needed.</p>
<p>Another minor limitation of SSAO is that it does not capture the shadowing contributions from objects that are off-screen. When displaying “whole structure” views of molecular assemblies such as the ones selected in this paper, the lack of influence from off-screen geometry is not a problem, but it can become an issue when zooming in on an area of structure, where some of the structure is clipped by the view frustum, and it can be distracting when making movies. This limitation could be addressed in future work by the multi-layer depth peeling SSAO [<xref ref-type="bibr" rid="pcbi.1004516.ref028">28</xref>], but at additional cost in rendering performance.</p>
<p>Sculptor offers many different modes of structural representation of biomolecules and 3D density maps, such as van der Waals, stick, ribbon, isosurface, and volume rendering. Some Sculptor techniques are designed to speed up the rendering process for dynamic scenes using customized vertex shaders. Others conduct high-quality per pixel lighting, or non-lighting effects such as depth cueing. Our SSAO implementation is fully integrated with these rendering techniques due to the post-processing design. It would be possible in future work to make slight modifications to the rendering pipeline, which would allow more data to be available in the post-processing. This is exploited in [<xref ref-type="bibr" rid="pcbi.1004516.ref035">35</xref>], where directional information is used to improve occlusion and to add simple reflections.</p>
<p>Another promising opportunity would be to combine the approach used by [<xref ref-type="bibr" rid="pcbi.1004516.ref016">16</xref>] (GLSL splatting or synthetic density map schemes) for object-space AO, with the selective probe radius scheme used in this paper. The use of an object-space sampling sphere would enable a more precise rendering of constant scale spatial features in molecular systems. In screen space we provide a qualitative, user-adjustable parameter, but it would be desirable to map that diameter to object space and to investigate quantitatively what “default” sphere size is useful in a wide range of biomolecular applications. For example, in cryo-EM density maps, beta sheets are optimally visible at about 5 Å resolution and alpha helices at 8 Å resolution. This might produce a new molecular graphics approach that combines the benefits of both methods, and the multi-scale rendering is somewhat orthogonal to the direction taken by other global illumination schemes such as ray tracing.</p>
</sec>
<sec id="sec010">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1004516.s001" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004516.s001" mimetype="application/pdf" xlink:type="simple">
<label>S1 Text</label>
<caption>
<title>A review of online technical literature and SSAO performance tests.</title>
<p>(PDF)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ack>
<p>We thank Tom Goddard (UCSF) and John Stone (UIUC) for discussions and Dr. Stefan Birmanns (UTH) for his initial help in this project.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1004516.ref001">
<label>1</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Lučić</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Leis</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Baumeister</surname> <given-names>W</given-names></name>. <article-title>Cryo-electron tomography of cells: connecting structure and function</article-title>. <source>Histochem and Cell Bio</source>. <year>2008</year>;<volume>130</volume>:<fpage>185</fpage>–<lpage>196</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/s00418-008-0459-y" xlink:type="simple">10.1007/s00418-008-0459-y</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref002">
<label>2</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Glatter</surname> <given-names>O</given-names></name>, <name name-style="western"><surname>Kratky</surname> <given-names>O</given-names></name>. <source>Small angle X-ray scattering</source>. <publisher-loc>London</publisher-loc>: <publisher-name>Academic Press</publisher-name>; <year>1982</year>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref003">
<label>3</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Phillips</surname> <given-names>JC</given-names></name>, <name name-style="western"><surname>Braun</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Wang</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Gumbart</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Tajkhorshid</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Villa</surname> <given-names>E</given-names></name>, <etal>et al</etal>. <article-title>Scalable molecular dynamics with NAMD</article-title>. <source>J Comp Chem</source>. <year>2005</year>;<volume>26</volume>(<issue>16</issue>):<fpage>1781</fpage>–<lpage>1802</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1002/jcc.20289" xlink:type="simple">10.1002/jcc.20289</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref004">
<label>4</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Wriggers</surname> <given-names>W</given-names></name>. <article-title>Using Situs for the Integration of Multi-Resolution Structures</article-title>. <source>Biophysical Reviews</source>. <year>2010</year>;<volume>2</volume>:<fpage>21</fpage>–<lpage>27</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/s12551-009-0026-3" xlink:type="simple">10.1007/s12551-009-0026-3</ext-link></comment> <object-id pub-id-type="pmid">20174447</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref005">
<label>5</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Rusu</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Birmanns</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Wriggers</surname> <given-names>W</given-names></name>. <article-title>Biomolecular Pleiomorphism Probed by Spatial Interpolation of Coarse Models</article-title>. <source>Bioinformatics</source>. <year>2008</year>;<volume>24</volume>:<fpage>2460</fpage>–<lpage>2466</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btn461" xlink:type="simple">10.1093/bioinformatics/btn461</ext-link></comment> <object-id pub-id-type="pmid">18757874</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref006">
<label>6</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Birmanns</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Wriggers</surname> <given-names>W</given-names></name>. <article-title>Interactive Fitting Augmented by Force-Feedback and Virtual Reality</article-title>. <source>J Struct Biol</source>. <year>2003</year>;<volume>144</volume>:<fpage>123</fpage>–<lpage>131</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.jsb.2003.09.018" xlink:type="simple">10.1016/j.jsb.2003.09.018</ext-link></comment> <object-id pub-id-type="pmid">14643215</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref007">
<label>7</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Birmanns</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Wriggers</surname> <given-names>W</given-names></name>. <article-title>Multi-resolution anchor-point registration of biomolecular assemblies and their components</article-title>. <source>J Struct Biol</source>. <year>2007</year>;<volume>157</volume>:<fpage>271</fpage>–<lpage>280</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.jsb.2006.08.008" xlink:type="simple">10.1016/j.jsb.2006.08.008</ext-link></comment> <object-id pub-id-type="pmid">17029847</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref008">
<label>8</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Baumeister</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Steven</surname> <given-names>AC</given-names></name>. <article-title>Macromolecular electron microscopy in the era of structural genomics</article-title>. <source>Trends Biochem Sci</source>. <year>2000</year>;<volume>25</volume>:<fpage>624</fpage>–<lpage>631</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/S0968-0004(00)01720-5" xlink:type="simple">10.1016/S0968-0004(00)01720-5</ext-link></comment> <object-id pub-id-type="pmid">11116190</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref009">
<label>9</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Baker</surname> <given-names>TS</given-names></name>, <name name-style="western"><surname>Johnson</surname> <given-names>JE</given-names></name>. <article-title>Low resolution meets high: towards a resolution continuum from cells to atoms</article-title>. <source>Curr Opinion Struct Biol</source>. <year>1996</year>;<volume>6</volume>(<issue>5</issue>):<fpage>585</fpage>–<lpage>594</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/S0959-440X(96)80023-6" xlink:type="simple">10.1016/S0959-440X(96)80023-6</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref010">
<label>10</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Wriggers</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Chacón</surname> <given-names>P</given-names></name>. <article-title>Using <italic>Situs</italic> for the registration of protein structures with low-resolution bead models from X-ray solution scattering</article-title>. <source>J Appl Cryst</source>. <year>2001</year>;<volume>34</volume>:<fpage>773</fpage>–<lpage>776</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1107/S0021889801012869" xlink:type="simple">10.1107/S0021889801012869</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref011">
<label>11</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Jones</surname> <given-names>T</given-names></name>. <article-title>A graphics model building and refinement system for macromolecules</article-title>. <source>J Appl Cryst</source>. <year>1978</year>;<volume>11</volume>(<issue>4</issue>):<fpage>268</fpage>–<lpage>272</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1107/S0021889878013308" xlink:type="simple">10.1107/S0021889878013308</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref012">
<label>12</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Lesk</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Hardman</surname> <given-names>K</given-names></name>. <article-title>Computer-generated schematic diagrams of protein structures</article-title>. <source>Science</source>. <year>1982</year> <month>April</month>;<volume>216</volume>(<issue>4545</issue>):<fpage>539</fpage>–<lpage>540</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1126/science.7071602" xlink:type="simple">10.1126/science.7071602</ext-link></comment> <object-id pub-id-type="pmid">7071602</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref013">
<label>13</label>
<mixed-citation xlink:type="simple" publication-type="other">Olano M, Lastra A. A shading language on graphics hardware: the pixelflow shading system. In: SIGGRAPH’98: Proceedings of the 25th annual conference on Computer graphics and interactive techniques. New York, NY, USA: ACM; 1998. p. 159–168.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref014">
<label>14</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Fernando</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Kilgard</surname> <given-names>MJ</given-names></name>. <source>The Cg Tutorial: The definitive guide to programmable real-time graphics</source>. <publisher-name>Addison-Wesley Longman Publishing Co., Inc</publisher-name>. <publisher-loc>Boston</publisher-loc>; <year>2003</year>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref015">
<label>15</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Foley</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>van Dam</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Feiner</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Hughes</surname> <given-names>J</given-names></name>. <source>Computer Graphics, Principles and Practices</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>Addison-Wesley</publisher-name>; <year>1990</year>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref016">
<label>16</label>
<mixed-citation xlink:type="simple" publication-type="other">Grottel S, Krone M, Scharnowski K, Ertl T. Object-space ambient occlusion for molecular dynamics. In: Pacific Visualization Symposium (PacificVis). Songdo, Korea: IEEE; 2012. p. 209–216.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref017">
<label>17</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Birmanns</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Rusu</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Wriggers</surname> <given-names>W</given-names></name>. <article-title>Using Sculptor and Situs for simultaneous assembly of atomic components into low-resolution shapes</article-title>. <source>J Struct Biol</source>. <year>2011</year>;<volume>173</volume>:<fpage>428</fpage>–<lpage>435</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.jsb.2010.11.002" xlink:type="simple">10.1016/j.jsb.2010.11.002</ext-link></comment> <object-id pub-id-type="pmid">21078392</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref018">
<label>18</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Rusu</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Starosolski</surname> <given-names>Z</given-names></name>, <name name-style="western"><surname>Wahle</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Rigort</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Wriggers</surname> <given-names>W</given-names></name>. <article-title>Automated tracing of filaments in 3D electron tomography reconstructions using <italic>Sculptor</italic> and <italic>Situs</italic></article-title>. <source>J Struct Biol</source>. <year>2012</year>;<volume>178</volume>:<fpage>121</fpage>–<lpage>128</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.jsb.2012.03.001" xlink:type="simple">10.1016/j.jsb.2012.03.001</ext-link></comment> <object-id pub-id-type="pmid">22433493</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref019">
<label>19</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Mittring</surname> <given-names>M</given-names></name>. <chapter-title>Finding next gen: CryEngine 2</chapter-title>. In: <source>SIGGRAPH’07: ACM SIGGRAPH 2007 courses</source>. <publisher-loc>New York, NY, USA</publisher-loc>: <publisher-name>ACM</publisher-name>; <year>2007</year>. p. <fpage>97</fpage>–<lpage>121</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref020">
<label>20</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Cook</surname> <given-names>RL</given-names></name>, <name name-style="western"><surname>Torrance</surname> <given-names>KE</given-names></name>. <article-title>A Reflectance Model for Computer Graphics</article-title>. <source>ACM Trans Graph</source>. <year>1982</year>;<volume>1</volume>(<issue>1</issue>):<fpage>7</fpage>–<lpage>24</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1145/357290.357293" xlink:type="simple">10.1145/357290.357293</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref021">
<label>21</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Langer</surname> <given-names>MS</given-names></name>, <name name-style="western"><surname>Bülthoff</surname> <given-names>HH</given-names></name>. <article-title>Perception of Shape From Shading on a Cloudy Day</article-title>. <source>Max Planck Institute for Biological Cybernetics Tech Report</source>. <year>1999</year>;<volume>73</volume>:<fpage>1</fpage>–<lpage>12</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref022">
<label>22</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Langer</surname> <given-names>MS</given-names></name>, <name name-style="western"><surname>Bülthoff</surname> <given-names>HH</given-names></name>. <article-title>Depth discrimination from shading under diffuse lighting</article-title>. <source>Perception</source>. <year>2000</year>;<volume>29</volume>:<fpage>649</fpage>–<lpage>660</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1068/p3060" xlink:type="simple">10.1068/p3060</ext-link></comment> <object-id pub-id-type="pmid">11040949</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref023">
<label>23</label>
<mixed-citation xlink:type="simple" publication-type="other">Loos BJ, Sloan PP. Volumetric obscurance. In: Proceedings of the ACM SIGGRAPH Symposium on Interactive 3D Graphics and Games. ACM; 2010. p. 151–156.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref024">
<label>24</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Hayden</surname> <given-names>L</given-names></name>. <chapter-title>Production-Ready Global Illumination</chapter-title>. In: <source>ACM SIGGRAPH Course Notes 16: RenderMan in Production</source>; <year>2002</year>. p. <fpage>87</fpage>–<lpage>102</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref025">
<label>25</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Bunnell</surname> <given-names>M</given-names></name>. 14. In: <article-title>Dynamic Ambient Occlusion and Indirect Lighting</article-title>. <source>GPU Gems</source>. <publisher-name>Addison-Wesley</publisher-name>; <year>2005</year>. p. <fpage>223</fpage>–<lpage>233</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref026">
<label>26</label>
<mixed-citation xlink:type="simple" publication-type="other">Sloan PP, Kautz J, Snyder J. Precomputed radiance transfer for real-time rendering in dynamic, low-frequency lighting environments. In: SIGGRAPH’02: Proceedings of the 29th annual conference on Computer graphics and interactive techniques. New York, NY, USA: ACM; 2002. p. 527–536.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref027">
<label>27</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Tarini</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Cignoni</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Montani</surname> <given-names>C</given-names></name>. <article-title>Ambient occlusion and edge cueing for enhancing real time molecular visualization</article-title>. <source>IEEE Trans Vis Comput Graph</source>. <year>2006</year>;<volume>12</volume>(<issue>5</issue>):<fpage>1237</fpage>–<lpage>1244</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1109/TVCG.2006.115" xlink:type="simple">10.1109/TVCG.2006.115</ext-link></comment> <object-id pub-id-type="pmid">17080857</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref028">
<label>28</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Bavoil</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Sainz</surname> <given-names>M</given-names></name>. <chapter-title>Multi-layer dual-resolution screen-space ambient occlusion</chapter-title>. In: <source>SIGGRAPH 2009: Talks</source>. <publisher-loc>New York NY, USA</publisher-loc>: <publisher-name>ACM</publisher-name>; <year>2009</year>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref029">
<label>29</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>McGuire</surname> <given-names>M</given-names></name>. <chapter-title>Ambient Occlusion Volumes</chapter-title>. In: <source>Proceedings of High Performance Graphics 2010</source>; <year>2010</year>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref030">
<label>30</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Crassin</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Neyret</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Sainz</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Green</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Eisemann</surname> <given-names>E</given-names></name>. <article-title>Interactive Indirect Illumination Using Voxel Cone Tracing</article-title>. <source>Computer Graphics Forum</source>. <year>2011</year>;<volume>30</volume>:<fpage>1921</fpage>–<lpage>1930</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1111/j.1467-8659.2011.02063.x" xlink:type="simple">10.1111/j.1467-8659.2011.02063.x</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref031">
<label>31</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Sanner</surname> <given-names>MF</given-names></name>. <article-title>Python: A Programming Language for Software Integration and Development</article-title>. <source>J Mol Graphics Mod</source>. <year>1999</year>;<volume>17</volume>:<fpage>57</fpage>–<lpage>61</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref032">
<label>32</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Pettersen</surname> <given-names>EF</given-names></name>, <name name-style="western"><surname>Goddard</surname> <given-names>TD</given-names></name>, <name name-style="western"><surname>Huang</surname> <given-names>CC</given-names></name>, <name name-style="western"><surname>Couch</surname> <given-names>GS</given-names></name>, <name name-style="western"><surname>Greenblatt</surname> <given-names>DM</given-names></name>, <name name-style="western"><surname>Meng</surname> <given-names>EC</given-names></name>, <etal>et al</etal>. <article-title>UCSF Chimera—A Visualization System for Exploratory Research and Analysis</article-title>. <source>J Comp Chem</source>. <year>2004</year>;<volume>25</volume>(<issue>13</issue>):<fpage>1605</fpage>–<lpage>1612</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1002/jcc.20084" xlink:type="simple">10.1002/jcc.20084</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref033">
<label>33</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Humphrey</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Dalke</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Schulten</surname> <given-names>K</given-names></name>. <article-title>VMD: Visual molecular dynamics</article-title>. <source>J Mol Graphics</source>. <year>1996</year>;<volume>14</volume>:<fpage>33</fpage>–<lpage>38</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/0263-7855(96)00018-5" xlink:type="simple">10.1016/0263-7855(96)00018-5</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004516.ref034">
<label>34</label>
<mixed-citation xlink:type="simple" publication-type="other">Stone JE, Vandivort KL, Schulten K. GPU-accelerated molecular visualization on petascale supercomputing platforms. In: UltraVis’13: Proceedings of the 8th International Workshop on Ultrascale Visualization. New York, NY, USA: ACM; 2013.</mixed-citation>
</ref>
<ref id="pcbi.1004516.ref035">
<label>35</label>
<mixed-citation xlink:type="simple" publication-type="other">Ritschel T, Grosch T, Seidel HP. Approximating dynamic global illumination in image space. In: Proceedings of the 2009 symposium on Interactive 3D graphics and games. ACM; 2009. p. 75–82.</mixed-citation>
</ref>
</ref-list>
</back>
</article>