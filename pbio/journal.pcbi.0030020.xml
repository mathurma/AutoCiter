<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN"><front><journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="allenpress-id">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0030020</article-id><article-id pub-id-type="publisher-id">06-PLCB-RA-0040R2</article-id><article-id pub-id-type="sici">plcb-03-02-15</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology</subject><subject>Computational Biology</subject><subject>Computational Biology</subject><subject>Genetics and Genomics</subject><subject>Genetics and Genomics</subject><subject>Mathematics</subject></subj-group><subj-group subj-group-type="System Taxonomy"><subject>Nematodes</subject></subj-group></article-categories><title-group><article-title>Improving the <italic>Caenorhabditis elegans</italic> Genome Annotation Using Machine Learning</article-title><alt-title alt-title-type="running-head">Improving the<italic>C. elegans</italic> Genome Annotation</alt-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Rätsch</surname><given-names>Gunnar</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Sonnenburg</surname><given-names>Sören</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Srinivasan</surname><given-names>Jagan</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Witte</surname><given-names>Hanh</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Müller</surname><given-names>Klaus-R</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff5"><sup>5</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Sommer</surname><given-names>Ralf-J</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Schölkopf</surname><given-names>Bernhard</given-names></name><xref ref-type="aff" rid="aff6"><sup>6</sup></xref></contrib></contrib-group><aff id="aff1">
				<label>1</label><addr-line> Friedrich Miescher Laboratory, Max Planck Society, Tübingen, Germany
			</addr-line></aff><aff id="aff2">
				<label>2</label><addr-line> Fraunhofer FIRST, Berlin, Germany
			</addr-line></aff><aff id="aff3">
				<label>3</label><addr-line> Division of Biology, California Institute of Technology, Pasadena, California, United States of America
			</addr-line></aff><aff id="aff4">
				<label>4</label><addr-line> Max Planck Institute for Developmental Biology, Tübingen, Germany
			</addr-line></aff><aff id="aff5">
				<label>5</label><addr-line> Computer Science Department, Technical University of Berlin, Berlin, Germany
			</addr-line></aff><aff id="aff6">
				<label>6</label><addr-line> Max Planck Institute for Biological Cybernetics, Tübingen, Germany
			</addr-line></aff><contrib-group><contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Ohler</surname><given-names>Uwe</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">Duke University, United States of America</aff><author-notes><fn fn-type="con" id="ack1"><p>GR, SS, JS, KRM, RJS, and BS conceived and designed the experiments. GR, JS, and HW performed the experiments. GR and SS analyzed the data. SS, RJS, and BS contributed reagents/materials/analysis tools. GR, JS, KRM, RJS, and BS wrote the paper. SS and JS contributed equally to the paper.</p></fn><corresp id="cor1">* To whom correspondence should be addressed. E-mail: <email xlink:type="simple">Gunnar.Raetsch@tuebingen.mpg.de</email></corresp><fn fn-type="conflict" id="ack3"><p> GR, SS, KRM, and BS are authors of a patent application (PCT WO05116246) related to the technical innovations of the proposed method.</p></fn></author-notes><pub-date pub-type="ppub"><month>2</month><year>2007</year></pub-date><pub-date pub-type="epub"><day>23</day><month>2</month><year>2007</year></pub-date><pub-date pub-type="epreprint"><day>21</day><month>12</month><year>2006</year></pub-date><volume>3</volume><issue>2</issue><elocation-id>e20</elocation-id><history><date date-type="received"><day>2</day><month>2</month><year>2006</year></date><date date-type="accepted"><day>20</day><month>12</month><year>2006</year></date></history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2007</copyright-year><copyright-holder>Rätsch et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><p>For modern biology, precise genome annotations are of prime importance, as they allow the accurate definition of genic regions. We employ state-of-the-art machine learning methods to assay and improve the accuracy of the genome annotation of the nematode <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis elegans</named-content>. The proposed machine learning system is trained to recognize exons and introns on the unspliced mRNA, utilizing recent advances in support vector machines and label sequence learning. In 87% (coding and untranslated regions) and 95% (coding regions only) of all genes tested in several out-of-sample evaluations, our method correctly identified all exons and introns. Notably, only 37% and 50%, respectively, of the presently unconfirmed genes in the <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> genome annotation agree with our predictions, thus we hypothesize that a sizable fraction of those genes are not correctly annotated. A retrospective evaluation of the Wormbase WS120 annotation [<xref ref-type="bibr" rid="pcbi-0030020-b001">1</xref>] of <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> reveals that splice form predictions on unconfirmed genes in WS120 are inaccurate in about 18% of the considered cases, while our predictions deviate from the truth only in 10%–13%. We experimentally analyzed 20 controversial genes on which our system and the annotation disagree, confirming the superiority of our predictions. While our method correctly predicted 75% of those cases, the standard annotation was never completely correct. The accuracy of our system is further corroborated by a comparison with two other recently proposed systems that can be used for splice form prediction: SNAP and ExonHunter. We conclude that the genome annotation of <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> and other organisms can be greatly enhanced using modern machine learning technology.</p></abstract><abstract abstract-type="summary"><title>Author Summary</title><sec id="st1"><title/><p>Eukaryotic genes contain introns, which are intervening sequences that are excised from a gene transcript with the concomitant ligation of flanking segments called exons. The process of removing introns is called <italic>splicing</italic>. It involves biochemical mechanisms that to date are too complex to be modeled comprehensively and accurately. However, abundant sequencing results can serve as a blueprint database exemplifying what this process accomplishes. Using this database, we employ discriminative machine learning techniques to predict the mature mRNA given the unspliced pre-mRNA. Our method utilizes support vector machines and recent advances in label sequence learning, originally developed for natural language processing. The system, called <italic>mSplicer,</italic> was trained and evaluated on the genome of the nematode <italic>C. elegans,</italic> a well-studied model organism. We were able to show that <italic>mSplicer</italic> correctly predicts the splice form in most cases. Surprisingly, our predictions on currently unconfirmed genes deviate considerably from the public genome annotation. It is hypothesized that a sizable fraction of those genes are not correctly annotated. A retrospective evaluation and additional sequencing results show the superiority of <italic>mSplicer'</italic>s predictions. It is concluded that the annotation of nematode and other genomes can be greatly enhanced using modern machine learning.</p></sec></abstract><funding-group><funding-statement>This work was supported in part by the IST Programme of the European Community, under the PASCAL Network of Excellence, IST-2002–506778. Partial funding from the German Research Foundation (MU 987/2–1) is appreciated.</funding-statement></funding-group><counts><page-count count="10"/></counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group><custom-meta><meta-name>citation</meta-name><meta-value>Rätsch G, Sonnenburg S, Srinivasan J, Witte H, Müller KR, et al. (2007) Improving the <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis elegans</named-content> genome annotation using machine learning. PLoS Comput Biol 3(2): e20. doi:<ext-link ext-link-type="doi" xlink:href="http://dx.doi.org/10.1371/journal.pcbi.0030020" xlink:type="simple">10.1371/journal.pcbi.0030020</ext-link></meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1"><title>Introduction</title><p><named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> is a free-living soil nematode with a cosmopolitan distribution. Its short life cycle, self-fertilizing propagation, simple anatomy, and the ease of genetic and experimental manipulations made <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> an important model system in biology. Today, <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> is one of the best-studied organisms in experimental biology. Its genome is about 100 million base pairs in size, organized in five autosomes and one sex chromosome and was the first metazoan genome to be sequenced from end to end [<xref ref-type="bibr" rid="pcbi-0030020-b002">2</xref>]. A recent release of the <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> genome (WS150, [<xref ref-type="bibr" rid="pcbi-0030020-b003">3</xref>]) has an estimated 22,858 genes when including the alternatively spliced forms. Only 6,513 (28.5%) genes have been fully confirmed by cDNA and EST sequences, i.e., by sequenced parts of mRNA. Of the remaining 16,345 gene models, primarily based on computational predictions, 11,417 (49.9%) have been partially confirmed and 4,928 (21.6%) lack transcriptional evidence.</p><p>Eukaryotic genes contain introns, which are intervening sequences that are excised from a gene transcript with the concomitant ligation of flanking segments called exons. The process of removing introns is called <italic>splicing,</italic> which involves biochemical mechanisms that to date are too complex to be modeled comprehensively and accurately. However, abundant sequencing results can serve as a blueprint database exemplifying what this process accomplishes.</p><p>In the present work, we employ machine learning techniques to model and predict how the splicing process acts. (We only consider splice forms that are nonalternative and canonical or standard noncanonical, i.e., exhibit the GT or GC at the donor site and AG consensus at the acceptor site.) Our goal is to learn to simulate the biological process generating mature mRNA from unspliced pre-mRNA, given a sufficient number of examples for “training.” For detecting the donor and acceptor splice sites, as well as for recognizing the exon and intron content, we employ support vector machine (SVM) classifiers [<xref ref-type="bibr" rid="pcbi-0030020-b004">4</xref>–<xref ref-type="bibr" rid="pcbi-0030020-b006">6</xref>], which have been used with considerable success in a variety of fields including computational biology [<xref ref-type="bibr" rid="pcbi-0030020-b007">7</xref>–<xref ref-type="bibr" rid="pcbi-0030020-b010">10</xref>].</p><p>SVMs have their mathematical foundations in a statistical theory of learning and attempt to <italic>discriminate</italic> two classes by separating them with a large margin (“margin maximization”). SVMs are trained by solving an optimization problem (<xref ref-type="fig" rid="pcbi-0030020-g001">Figure 1</xref>) involving labeled training examples—true splice sites (positive) and decoys (negative). They employ similarity measures referred to as <italic>kernels</italic> that are designed for the classification task at hand. In our case, the kernels compare pairs of sequences in terms of their matching substring motifs [<xref ref-type="bibr" rid="pcbi-0030020-b009">9</xref>,<xref ref-type="bibr" rid="pcbi-0030020-b011">11</xref>,<xref ref-type="bibr" rid="pcbi-0030020-b012">12</xref>] as illustrated in <xref ref-type="fig" rid="pcbi-0030020-g002">Figure 2</xref> (cf. <xref ref-type="sec" rid="s4">Material and Methods</xref> for more details). The idea of our algorithm is to first scan the unspliced mRNA using the SVM-based splice site detectors. In a second step, their predictions are combined to form the overall splicing prediction (cf. <xref ref-type="fig" rid="pcbi-0030020-g003">Figure 3</xref> as well as <xref ref-type="sec" rid="s4">Materials and Methods</xref> for details). This is implemented using a state-based system similar to standard hidden Markov model (HMM)–based gene-finding approaches [<xref ref-type="bibr" rid="pcbi-0030020-b013">13</xref>–<xref ref-type="bibr" rid="pcbi-0030020-b018">18</xref>]. We consider two different models: the simpler model implements the general rule that the start of the sequence is followed by a number (≥0) of donor and acceptor splice site pairs (5′ and 3′ ends of the intron) before the sequence ends (cf. <xref ref-type="fig" rid="pcbi-0030020-g004">Figure 4</xref>). If, moreover, one assumes the start and end of the <italic>coding region</italic> to be given, one can exploit that the spliced sequence consists of a string of non-stop <italic>codons</italic> terminated by a stop <italic>codon</italic> (TAA, TAG, TGA). In this case, the sum of the lengths of the coding parts of exons is divisible by three and the sequence does not contain in-frame stop codons. This can be translated into an alternative, more sophisticated model (cf. <xref ref-type="fig" rid="pcbi-0030020-g005">Figure 5</xref>) that is expected to perform better on coding regions, and may provide false predictions otherwise. The simpler model, on the other hand, is also applicable to untranslated regions (UTR); if in doubt, one should thus resort to this model.</p><fig id="pcbi-0030020-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.g001</object-id><label>Figure 1</label><caption><title>Simplified Support Vector Machine</title><p>Learn a function <italic>f</italic> such that the difference of predictions (the <italic>margin</italic>) of positively and negatively labeled examples is maximal. Previously unseen examples will often be close to the training examples. The large margin then ensures that these examples are correctly classified as well, i.e., the decision rule <italic>generalizes</italic>.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.g001" xlink:type="simple"/></fig><fig id="pcbi-0030020-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.g002</object-id><label>Figure 2</label><caption><title>Given Two Sequences, <italic>s</italic><sub>1</sub> and <italic>s</italic><sub>2</sub> of Equal Length, Our Kernel Consists of a Weighted Sum to Which Each Match in the Sequences Makes a Contribution <italic>w</italic><sub>l</sub> Depending on Its Length <italic>l,</italic> Where Longer Matches Contribute More Significantly</title><p>For predictions, we use a window of 140 nt around the potential splice site (cf. <xref ref-type="sec" rid="s4">Materials and Methods</xref> for details, including the procedure of how the length of the window is determined).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.g002" xlink:type="simple"/></fig><fig id="pcbi-0030020-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.g003</object-id><label>Figure 3</label><caption><title>Given the Start of the First and the End of the Last Exon, Our System (<italic>mSplicer</italic>) First Scans the Sequence Using SVM Detectors Trained To Recognize Donor (SVM<italic><sub>GY</sub></italic>) and Acceptor (SVM<italic><sub>AG</sub></italic>) Splice Sites</title><p>The detectors assign a score to each candidate site, shown below the sequence. In combination with additional information including outputs of SVMs recognizing exon/intron content, and scores for exon/intron lengths (unpublished data), these splice site scores contribute to the cumulative score for a putative splicing isoform. The bottom graph (step 2) illustrates the computation of the cumulative scores for two splicing isoforms, where the score at end of the sequence is the final score of the isoform. The contributions of the individual detector outputs, lengths of segments, as well as properties of the segments to the score are adjusted during training. They are optimized such that the <italic>margin</italic> between the true splicing isoform (shown in blue) and all other (wrong) isoforms (one of them is shown in red) is maximized. Prediction of new sequences works by selecting the splicing isoform with the maximum cumulative score. This can be implemented using dynamic programming related to decoding generalized HMMs 12, which also allows one to enforce certain constraints on the isoform (e.g., an open reading frame).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.g003" xlink:type="simple"/></fig><fig id="pcbi-0030020-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.g004</object-id><label>Figure 4</label><caption><title>An Elementary State Model for Unspliced mRNA</title><p>The 5′ end of the transcript is either directly followed by the 3′ end (single exon gene) or by an arbitrary number of donor–acceptor splice site pairs exhibiting the GT/GC and AG dimmer. A transition in this state model corresponds to <italic>accepting</italic> a whole segment (as in generalized HMMs 12), i.e., an exon or intron, with the corresponding dimer at the 3′ boundary of the segment (except in state 4).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.g004" xlink:type="simple"/></fig><fig id="pcbi-0030020-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.g005</object-id><label>Figure 5</label><caption><title>The State Model That Uses Open Reading Frame Information</title><p>The sequences next to the state indicate which consensus has to appear at the transitions between intron (capital) and exon (bold). Here, we use the IUPAC code for ambiguous nucleotides (e.g., B = C/G/T, R = A/G, Y = C/T). The digit on the transition arrows is related to the reading frame and indicates the required frame shift to follow the transition (e.g., between state 1 and 2, one can only accept exons leading to a frame shift of 0). Also, it defines in which frame stop codons are allowed to occur—no stop codon should appear in-frame. Finally, the model is constructed such that in-frame stop codons cannot be assembled on the exon boundaries (this required the three additional state pairs 6/7, 10/11, and 12/13).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.g005" xlink:type="simple"/></fig><p>The main difference of our approach from HMM-based gene-finding approaches (e.g., [<xref ref-type="bibr" rid="pcbi-0030020-b014">14</xref>]) is that the parameters are obtained by using a <italic>discriminative</italic> machine learning method originally developed in the fields of natural language processing and information retrieval [<xref ref-type="bibr" rid="pcbi-0030020-b019">19</xref>]. Instead of estimating probabilities with HMMs, we estimate a function that ranks splice forms such that the true splice form is ranked highest—with a large margin to all other splice forms. As all steps in our system are heavily based on the above-mentioned concept of margin maximization, we refer to it as <italic>margin splicer</italic> (<italic>mSplicer</italic>).</p></sec><sec id="s2"><title>Results</title><sec id="s2a"><title>Prediction Accuracy on Unseen Sequences</title><p>For our evaluation, we distinguish two cases: (a) the most general and difficult case <italic>“UCI”</italic> where the pre-mRNA sequence may include UTRs, coding regions, as well as introns; and (b) the case where we assume the start and stop codons are given and the sequence only consists of coding regions and introns <italic>(“CI”)</italic>. In the <italic>UCI</italic> setting, we used the EST-extended WS120 cDNA sequences (see above) for testing (1,177 sequences, including 27 with GC donor splice sites). Only the subsequences between the annotated start and end of coding regions (if known and valid) were included in the <italic>CI</italic> set (1,138 sequences, including 27 with GC donor splice sites). In both sets we excluded loci showing evidence for alternative splicing and unusual noncanonical splice sites.</p><p>On the <italic>UCI</italic> set, we used our method based on the simple model outlined as in <xref ref-type="fig" rid="pcbi-0030020-g004">Figure 4</xref>, referred to as SM. It predicted all splice sites correctly in 1,023 out of 1,177 cases (13.1% error rate). For the <italic>CI</italic> set, we used the more sophisticated model taking advantage of ORF information outlined in <xref ref-type="fig" rid="pcbi-0030020-g005">Figure 5</xref>, referred to as OM. Here, 1,083 out of 1,138 cases were predicted correctly (4.8% error rate). A summary of these results are given in <xref ref-type="table" rid="pcbi-0030020-t001">Table 1</xref>.</p><table-wrap content-type="1col" id="pcbi-0030020-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.t001</object-id><label>Table 1</label><caption><p>Splice Form Error Rates (1-Accuracy), Exon Sensitivities, Exon Specificities, Exon Nucleotide Sensitivities, Exon Nucleotide Specificities of <italic>mSplicer</italic>—with (OM) and without (SM)—Using ORF Information as well as <italic>ExonHunter</italic> and <italic>SNAP</italic> on Two Different Problems: mRNA Including (UCI) and Excluding (CI) UTR</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.t001" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb1col1" align="left" charoff="0" char=""/><col id="tb1col2" align="left" charoff="0" char=""/><col id="tb1col3" align="char" charoff="0" char="."/><col id="tb1col4" align="left" charoff="0" char=""/><col id="tb1col5" align="left" charoff="0" char=""/><col id="tb1col6" align="left" charoff="0" char=""/><col id="tb1col7" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left"><hr/>Set</td><td><hr/>Method</td><td><hr/>Error Rate Percent</td><td><hr/>Exon SN Percent</td><td><hr/>Exon SP Percent</td><td><hr/>Exon nt SN Percent</td><td><hr/>Exon nt SP Percent</td></tr></thead><tbody><tr><td><bold>CI set</bold></td><td><italic>mSplicer</italic> OM WS120</td><td>4.8</td><td>98.9</td><td>99.2</td><td>99.2</td><td>99.9</td></tr><tr><td></td><td><italic>ExonHunter</italic></td><td>9.8</td><td>97.9</td><td>96.6</td><td>99.4</td><td>98.1</td></tr><tr><td></td><td><italic>SNAP</italic></td><td>17.4</td><td>95.0</td><td>93.3</td><td>99.0</td><td>98.9</td></tr><tr><td><bold>UCI set</bold></td><td><italic>mSplicer</italic> SM WS120</td><td>13.1</td><td>96.7</td><td>96.8</td><td>98.9</td><td>97.2</td></tr><tr><td></td><td><italic>ExonHunter</italic></td><td>36.8</td><td>89.1</td><td>88.4</td><td>98.2</td><td>97.4</td></tr></tbody></table> --><!-- --></table-wrap><p>For comparison, we tested two recently proposed state-of-the-art gene-finding systems, <italic>SNAP</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b020">20</xref>] and <italic>ExonHunter</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b021">21</xref>], adapted to the problem of splice form prediction. (<italic>SNAP</italic> was trained by its author on a set that was overlapping with our test sets; hence, the estimated error rates are expected to be lower than they would be when trained on our training set. <italic>ExonHunter</italic> is a comprehensive gene finder that can use many experimental sources of information. Here we only tested its HMM-based <italic>ab initio</italic> core trained by its authors on the same training set as <italic>mSplicer</italic>.) For evaluation we excluded cases with noncanonical splice sites since <italic>SNAP</italic> and <italic>ExonHunter</italic> cannot predict them. They achieve error rates of 17.4% and 9.8% on the <italic>CI</italic> set using ORF information. For <italic>ExonHunter,</italic> we were able to obtain predictions of a modified version (by the authors of <italic>ExonHunter</italic>) that does not take ORF information into account. (The system used was trained, however, on coding regions and using it on UTRs may significantly affect its performance.) In that case, the error rate on the <italic>UCI</italic> set is considerably higher: 36.8%. These results show that <italic>mSplicer</italic> greatly outperforms both methods, which is even more remarkable as <italic>mSplicer</italic> solves the more difficult task of including GC introns in the predictions: 23 <italic>(UCI)</italic> or 25 <italic>(CI)</italic> out of 27 cases with a GC splice site were predicted correctly, respectively. For simplicity of the following presentation, we exclude cases with GC splice sites in all of the subsequent analyses. For completeness, in <xref ref-type="table" rid="pcbi-0030020-t002">Table 2</xref> we also provide an evaluation of <italic>mSplicer</italic> trained and evaluated on sequences derived from WS150.</p><table-wrap content-type="1col" id="pcbi-0030020-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.t002</object-id><label>Table 2</label><caption><p>Splice Form Error Rates, Sensitivities, and Specificities of <italic>mSplicer</italic> Trained on WS150 (Including Signal and Content Sensors)</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.t002" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb2col1" align="left" charoff="0" char=""/><col id="tb2col2" align="left" charoff="0" char=""/><col id="tb2col3" align="char" charoff="0" char="."/><col id="tb2col4" align="left" charoff="0" char=""/><col id="tb2col5" align="left" charoff="0" char=""/><col id="tb2col6" align="left" charoff="0" char=""/><col id="tb2col7" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left"><hr/>Method</td><td><hr/>Set</td><td><hr/>Error Rate Percent</td><td><hr/>Exon SN Percent</td><td><hr/>Exon SP Percent</td><td><hr/>Exon nt SN Percent</td><td><hr/>Exon nt SP Percent</td></tr></thead><tbody><tr><td>mSplicer WS150</td><td>CI set</td><td>4.1</td><td>99.2</td><td>99.3</td><td>99.6</td><td>99.9</td></tr><tr><td>mSplicer WS150</td><td>UCI set</td><td>12.2</td><td>96.8</td><td>97.1</td><td>98.8</td><td>97.5</td></tr></tbody></table> --><!-- --></table-wrap></sec><sec id="s2b"><title>Retrospective Evaluation of the Wormbase Annotation</title><p>Comparing the splice form predictions of our methods with the WS120 annotation on completely unconfirmed genes, we find disagreements in 62.5% (SM) or 50.0% (OM) of such genes, respectively. The results are summarized in <xref ref-type="table" rid="pcbi-0030020-t003">Table 3</xref>. (As before, we excluded alternatively spliced genes and those that have noncanonical splice sites. Moreover, we used the annotated start and end of the coding region.) Based on these numbers and assuming that on this set our methods perform as well as reported above, one could conclude that the WS120 annotation is rather inaccurate on yet <italic>unconfirmed genes</italic>. (Note that if <italic>mSplicer</italic> with ORF information got 5% of the cases wrong, while disagreeing in 50% of the cases with the annotation, then the annotation would be wrong or at least incomplete in at least 45% of the cases.) Such a conclusion would be well in line with an independent whole genome analysis that showed that at least 50% of the predicted unconfirmed genes needed correction in their intron/exon structure [<xref ref-type="bibr" rid="pcbi-0030020-b022">22</xref>]. However, the frequent disagreement can also be partially explained by inclusion of alternatively spliced genes. In the latter case, it is conceivable that both systems predict a valid splice form yet still disagree.</p><table-wrap content-type="1col" id="pcbi-0030020-t003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.t003</object-id><label>Table 3</label><caption><p>Measure of the Agreement of the WS120 Annotation on 5,166 Completely Unconfirmed Genes with <italic>mSplicer'</italic>s Predictions (SM and OM) (Reusing WS120′s Gene Starts and Ends)</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.t003" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb3col1" align="left" charoff="0" char=""/><col id="tb3col2" align="left" charoff="0" char=""/><col id="tb3col3" align="left" charoff="0" char=""/><col id="tb3col4" align="left" charoff="0" char=""/><col id="tb3col5" align="left" charoff="0" char=""/><col id="tb3col6" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left">Method</td><td colspan="5"><hr/>WS120 Unconfirmed Genes</td></tr><tr><td><hr/></td><td><hr/>Error Rate Percent</td><td><hr/>Exon SN Percent</td><td><hr/>Exon SP Percent</td><td><hr/>Exon nt SN Percent</td><td><hr/>Exon nt SP Percent</td></tr></thead><tbody><tr><td><italic>mSplicer</italic> WS120 (SM)</td><td>62.5</td><td>70.3</td><td>74.0</td><td>94.0</td><td>83.1</td></tr><tr><td><italic>mSplicer</italic> WS120 (OM)</td><td>50.0</td><td>78.4</td><td>80.9</td><td>87.7</td><td>97.4</td></tr></tbody></table> --><!-- --></table-wrap><p>One way of using our algorithm is to let it predict the splice form using the annotated 5′ and 3′ ends. Given our results, we expect that the resulting new annotation is considerably more accurate. To objectively evaluate this approach, we compare the accuracy of the WS120 annotation and our predictions based on WS120. For the evaluation, we use new cDNA and EST sequences that have been published in the databases between the publication dates of WS120 and WS150 as an independent test set: after aligning them to the genomic sequence [<xref ref-type="bibr" rid="pcbi-0030020-b023">23</xref>] and identifying novel confirmed exons and introns, we determine overlapping segments between previously unconfirmed genes and the newly EST confirmed exons and introns. (Note that these segments are on average much shorter than complete genes and may include alternatively spliced exons and introns.) The new splicing information agrees with the WS120 annotation only in 259 out of 428 of these segments (error rate 39.5%). Often the WS120 annotation was wrong at the 5′ or 3′ end of the gene (merged or split genes). We therefore consider shortened segments such that there is an agreement at the terminal ends between the annotation, our predictions, and the new EST information. We find that the WS120 annotation agrees on 348 of the 424 segments (error rate 17.9%), while <italic>mSplicer</italic> agrees in 370 (SM) and 380 (OM) cases (error rates 12.7% and 10.4%, respectively). The results are summarized in <xref ref-type="table" rid="pcbi-0030020-t004">Table 4</xref>. When interpreting these results, it should be borne in mind that the annotation is usually improved manually, which is known to improve the quality of genome annotations, whereas our result is obtained fully automatically.</p><table-wrap content-type="1col" id="pcbi-0030020-t004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.t004</object-id><label>Table 4</label><caption><p>On Newly Confirmed Segments, Measure of the Accuracy of the WS120 Annotation and <italic>mSplicer</italic> Based on WS120 (OM and SM)</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.t004" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb4col1" align="left" charoff="0" char=""/><col id="tb4col2" align="left" charoff="0" char=""/><col id="tb4col3" align="left" charoff="0" char=""/><col id="tb4col4" align="left" charoff="0" char=""/><col id="tb4col5" align="left" charoff="0" char=""/><col id="tb4col6" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left">Method</td><td colspan="5"><hr/>Newly Confirmed Genes (WS120 Unconfirmed)</td></tr><tr><td><hr/></td><td><hr/>Error Rate Percent</td><td><hr/>Exon SN Percent</td><td><hr/>Exon SP Percent</td><td><hr/>Exon nt SN Percent</td><td><hr/>Exon nt SP Percent</td></tr></thead><tbody><tr><td><italic>mSplicer</italic> WS120 (OM)</td><td>10.4</td><td>96.1</td><td>94.6</td><td>98.5</td><td>99.5</td></tr><tr><td><italic>mSplicer</italic> WS120 (SM)</td><td>12.7</td><td>94.9</td><td>95.4</td><td>98.5</td><td>97.5</td></tr><tr><td>Annotation WS120</td><td>17.9</td><td>92.2</td><td>92.7</td><td>98.5</td><td>98.2</td></tr></tbody></table> --><!-- --></table-wrap></sec><sec id="s2c"><title>Application to the <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> Genome Annotation</title><p>We can now use <italic>mSplicer</italic> to improve the current annotation of <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content>. We generated predictions based on Wormbase annotation WS160, where we let <italic>mSplicer</italic> predict within the boundaries of annotated transcripts. As before, we separately analyzed the mixed regions (from annotated transcription start to end using model SM) and the coding regions (from annotated translation start to end using model OM). The new annotation is available for download in GFF format at <ext-link ext-link-type="uri" xlink:href="http://www.fml.mpg.de/raetsch/projects/msplicer" xlink:type="simple">http://www.fml.mpg.de/raetsch/projects/msplicer</ext-link>. Additionally, it is available on the Wormbase development website <ext-link ext-link-type="uri" xlink:href="http://www.wormbase.org" xlink:type="simple">http://www.wormbase.org</ext-link> (tracks mSplicer and mSplicer-ORF).</p><p>We have compared <italic>mSplicer</italic>'s predictions with the WS160 annotation on genes that have not been used for training of our method. Depending on the confirmation status of a gene, we get varying levels of agreement with the WS160 annotation, which are reported in <xref ref-type="table" rid="pcbi-0030020-t005">Table 5</xref>. The large agreement on confirmed genes corroborates the high performance of our method (this includes genes with alternative transcription starts and ends). The strong disagreement for alternatively spliced genes stems from the fact that mSplicer cannot predict alternative isoforms. However, the significant disagreement between the WS160 annotation and our predictions on partially confirmed as well as unconfirmed genes is likely to be due to inaccuracies in the current annotation.</p><table-wrap content-type="1col" id="pcbi-0030020-t005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.t005</object-id><label>Table 5</label><caption><p>Comparison between Wormbase Annotation WS160 and the One Generated by <italic>mSplicer</italic> Applied to Annotated Transcripts</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.t005" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb5col1" align="left" charoff="0" char=""/><col id="tb5col2" align="left" charoff="0" char=""/><col id="tb5col3" align="left" charoff="0" char=""/><col id="tb5col4" align="left" charoff="0" char=""/><col id="tb5col5" align="left" charoff="0" char=""/><col id="tb5col6" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left"><hr/>mRNA</td><td><hr/>Confirmed/Unconfirmed/ Alternately Spliced</td><td><hr/>Gene Percent</td><td><hr/>Transcript Percent</td><td><hr/>Exon SN Percent</td><td><hr/>Exon SP Percent</td></tr></thead><tbody><tr><td><bold>Mixed mRNA (UCI)</bold></td><td>Confirmed</td><td>85.7</td><td>87.3</td><td>97.1</td><td>97.4</td></tr><tr><td></td><td>Partially confirmed</td><td>79.0</td><td>82.4</td><td>92.4</td><td>93.6</td></tr><tr><td></td><td>Unconfirmed</td><td>41.3</td><td>41.4</td><td>71.4</td><td>77.2</td></tr><tr><td></td><td>Alternatively spliced</td><td>22.7</td><td>43.0</td><td>89.0</td><td>87.1</td></tr><tr><td><bold>Coding mRNA (CI)</bold></td><td>Confirmed</td><td>96.3</td><td>96.7</td><td>99.3</td><td>99.2</td></tr><tr><td></td><td>Partially confirmed</td><td>71.2</td><td>83.3</td><td>91.4</td><td>93.0</td></tr><tr><td></td><td>Unconfirmed</td><td>58.0</td><td>58.8</td><td>82.0</td><td>84.2</td></tr><tr><td></td><td>Alternatively spliced</td><td>55.8</td><td>68.9</td><td>94.0</td><td>93.0</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt501"><p>Given are the levels of agreement on the gene level (all transcripts correct), transcript level (all exons correct), and exon level (SN denotes sensitivity and SP specificity relative to the WS160 annotation).</p></fn></table-wrap-foot> --></table-wrap></sec><sec id="s2d"><title>Verification of Unconfirmed Genes by RT–PCR</title><p>We performed biological experiments on 20 unconfirmed genes randomly chosen from those where the <italic>mSplicer</italic> predictions differed significantly from the WS120 annotation. Primers were designed to amplify and sequence the parts of mRNAs of interest (cf. <xref ref-type="sec" rid="s4">Materials and Methods</xref> as well as <xref ref-type="supplementary-material" rid="pcbi-0030020-sd001">Protocol S1</xref> for details). By aligning the sequenced cDNA to genome [<xref ref-type="bibr" rid="pcbi-0030020-b023">23</xref>], we identified the true splice sites. The predictions of <italic>mSplicer</italic> without ORF information were completely correct in 15 out of the 20 cases (error rate 25%), while the WS120 annotation never exactly matched all new splice sites. Note that this figure (25%) is higher than our system's estimated error rate (13.1%), which we largely attribute to the fact that a biased (“hard”) set of particularly difficult genes has been chosen (the ones on which our system significantly disagrees with the annotation).</p><p><xref ref-type="supplementary-material" rid="pcbi-0030020-sd001">Protocol S1</xref> contains illustrations comparing the sequencing results with the annotation and our predictions. We observed that if our predictions deviated from the sequencing results, then it was a complete exon or intron that was missing or superfluous. This indicates that the splice form predictors work very well, but there might be additional and undetected regulatory effects leading to the inclusion or exclusion of the exons or introns. For the WS120 annotation, we found many additional ways of how it deviated from the sequencing results, including mistakes at only one of the two splice sites.</p></sec><sec id="s2e"><title>Analysis of the Splice Site Recognizers</title><p>One important difference of our method compared with previous approaches is the use of a similarity measure between sequences that takes the co-occurrence of long substrings into account. For the splice site, signal detectors strings up to length 22 and for the content sensors strings of up to length six, were considered. Techniques such as <italic>SNAP</italic> or <italic>Genscan</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b013">13</xref>] typically rely on much shorter substrings while using position-specific scoring matrices (PSSMs) for splice sites and second-order Markov models for exon/intron content. We found that for splice site detection in <italic>C. elegans,</italic> position-specific scoring matrices are not sufficient. If we allow long substrings to contribute, we can significantly improve the recognition performance. To illustrate this, we measured the area under the precision recall curve (auPRC, cf. [<xref ref-type="bibr" rid="pcbi-0030020-b024">24</xref>]) for the SVM splice site classifiers while restricting the maximal length <italic>d</italic> of considered substrings. We found that the auPRC for classifying acceptor (donor) site with <italic>d</italic> = 1 is only 79.9% (62.2%). The performance increases when increasing <italic>d</italic>—for instance for <italic>d</italic> = 2 to 93.0% (89.7%)—and reaches a plateau for <italic>d</italic> = 8 at 95.9% (93.9%). To gain insights into what the SVM uses for discrimination, we study so-called <italic>positional oligomer importance matrices</italic> (POIMs) [<xref ref-type="bibr" rid="pcbi-0030020-b025">25</xref>,<xref ref-type="bibr" rid="pcbi-0030020-b026">26</xref>] that illustrate which length of substrings is important at which position (cf. <xref ref-type="sec" rid="s4">Materials and Methods</xref> for details). <xref ref-type="fig" rid="pcbi-0030020-g006">Figure 6</xref> shows the POIMs for donor (left) and acceptor (right) splice sites. We can observe that there are two regions per site that are of importance: near the splice site and around 50 nucleotides (nt) downstream or upstream. It turns out that introns are often rather short (only 50nt) and the weaker site relates to sequence signals of the other splice site. We find that the intronic regions near the splice sites are of particular importance, which is in line with the current understanding of how splicing works. Finally, we find that near the end (10–20 nt upstream of donor site) and at the start (2–6 nt downstream of acceptor site) of the exon very long substrings are important for discrimination, which are likely to correspond to exonic splicing enhancer or inhibitor binding sites (see [<xref ref-type="bibr" rid="pcbi-0030020-b027">27</xref>] and references therein). A list of the most important substrings is listed in <xref ref-type="supplementary-material" rid="pcbi-0030020-sd001">Protocol S1</xref>.</p><fig id="pcbi-0030020-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.g006</object-id><label>Figure 6</label><caption><title>POIMs for Donor (Left) and Acceptor (Right) SVM Classifiers</title><p>Shown are the color-coded importance scores of substring lengths for positions around the splice sites. Near the splice site, many important oligomers are identified. Particularly long substrings are important upstream of the donor and downstream of the acceptor site. See the main text for discussion.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.g006" xlink:type="simple"/></fig></sec><sec id="s2f"><title>Predictions on Other Nematode Genomes</title><p>We studied how well <italic>mSplicer</italic> trained on <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> generalizes to other nematode genomes. We collected all available EST sequences for <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis briggsae</named-content> [<xref ref-type="bibr" rid="pcbi-0030020-b028">28</xref>], <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis remanei</named-content> [<xref ref-type="bibr" rid="pcbi-0030020-b029">29</xref>], and <named-content content-type="genus-species" xlink:type="simple">Pristionchus pacificus</named-content> [<xref ref-type="bibr" rid="pcbi-0030020-b030">30</xref>], and used them as before for an out-of-sample evaluation (see <xref ref-type="supplementary-material" rid="pcbi-0030020-sd001">Protocol S1</xref> for details of the data preparation; for <named-content content-type="genus-species" xlink:type="simple">P. pacificus</named-content> we only used 750 of the 2,952 splice forms for evaluation). The results of the evaluation are summarized in <xref ref-type="table" rid="pcbi-0030020-t006">Table 6</xref>. We observe that the exon sensitivity and specificity for <named-content content-type="genus-species" xlink:type="simple">C. briggsae</named-content> and <named-content content-type="genus-species" xlink:type="simple">C. remanei</named-content> (95.1% to 96.3%) is only slightly lower than for <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> (96.7% and 96.8%). The performance of <italic>mSplicer</italic> is drastically lower for <named-content content-type="genus-species" xlink:type="simple">P. pacificus</named-content>. One reason is the significantly different intron and exon length distribution that we observe in <named-content content-type="genus-species" xlink:type="simple">P. pacificus</named-content>. We therefore trained two additional versions: (a) we use level 1 as trained on <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> and only retrain level 2 using 500 EST-confirmed splice forms (“<italic>mSplicer</italic> WS120/P. pac.”) and (b) fully retrain both levels using 1,702 and 500 EST-confirmed splice forms (“<italic>mSplicer</italic> P. pac.”), respectively. We find that retraining level 2 alone almost reaches the exon prediction accuracy of <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content>. Additionally retraining level 1 does not lead to much further improvement. For <named-content content-type="genus-species" xlink:type="simple">C. briggsae</named-content> and <italic>C. remanei,</italic> retraining did not lead to significant improvements (unpublished data).</p><table-wrap content-type="1col" id="pcbi-0030020-t006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.t006</object-id><label>Table 6</label><caption><p>Error Rates, Sensitivities, and Specificities of <italic>mSplicer</italic> (SM) for Three Other Nematodes Trained on <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> Sequences (“<italic>mSplicer</italic> WS120”)</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.t006" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb6col1" align="left" charoff="0" char=""/><col id="tb6col2" align="left" charoff="0" char=""/><col id="tb6col3" align="char" charoff="0" char="."/><col id="tb6col4" align="left" charoff="0" char=""/><col id="tb6col5" align="left" charoff="0" char=""/><col id="tb6col6" align="left" charoff="0" char=""/><col id="tb6col7" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left"><hr/>Method</td><td><hr/>Organism</td><td><hr/>Error Rate Percent</td><td><hr/>Exon SN Percent</td><td><hr/>Exon SP Percent</td><td><hr/>Exon nt SN Percent</td><td><hr/>Exon nt SP Percent</td></tr></thead><tbody><tr><td>mSplicer WS120</td><td><named-content content-type="genus-species">C. briggsae</named-content></td><td>7.8</td><td>95.8</td><td>96.3</td><td>99.8</td><td>97.1</td></tr><tr><td>mSplicer WS120</td><td><named-content content-type="genus-species">C. remanei</named-content></td><td>13.7</td><td>95.5</td><td>95.1</td><td>99.4</td><td>95.2</td></tr><tr><td>mSplicer WS120</td><td><named-content content-type="genus-species">P. pacificus</named-content></td><td>51.8</td><td>73.0</td><td>84.9</td><td>96.5</td><td>87.5</td></tr><tr><td>mSplicer WS120/P. pac.</td><td><named-content content-type="genus-species">P. pacificus</named-content></td><td>22.0</td><td>94.2</td><td>95.1</td><td>97.8</td><td>95.9</td></tr><tr><td>mSplicer P. pac.</td><td><named-content content-type="genus-species">P. pacificus</named-content></td><td>16.4</td><td>95.6</td><td>96.2</td><td>98.8</td><td>94.7</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt601"><p>For <italic>P. pacificus,</italic> we additionally retrained the second layer using 500 EST-confirmed splice forms from <named-content content-type="genus-species">P. pacificus</named-content> (&ldquo;<italic>mSplicer</italic> WS120/P. pac.&rdquo;). Furthermore, we retrained the full model (&ldquo;<italic>mSplicer</italic> P. pac.&rdquo;) on <named-content content-type="genus-species">P. pacificus</named-content> ESTs only (1,702 splice forms for training splice site signal sensors and intron/exon content sensors and 500 EST for the integrative layer).</p></fn></table-wrap-foot> --></table-wrap><p>Finally, we repeated the retrospective analysis for the <named-content content-type="genus-species" xlink:type="simple">C. briggsae</named-content> genome annotation. We identified 489 newly EST-confirmed segments that matched the <italic>cb25</italic> annotation. We evaluated how well the annotation and both versions of <italic>mSplicer</italic> performed on these segments. The results are summarized in <xref ref-type="table" rid="pcbi-0030020-t007">Table 7</xref>. It should be noted that the gene error rates are smaller than before, since the segments are much shorter than whole genes.</p><table-wrap content-type="1col" id="pcbi-0030020-t007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030020.t007</object-id><label>Table 7</label><caption><p>Error Rate, Sensitivities, and Specificities of the <italic>cb25</italic> Genome Annotation of the <named-content content-type="genus-species" xlink:type="simple">C. briggsae</named-content> Genome and <italic>mSplicer</italic> Trained on WS120</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.t007" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb7col1" align="left" charoff="0" char=""/><col id="tb7col2" align="left" charoff="0" char=""/><col id="tb7col3" align="left" charoff="0" char=""/><col id="tb7col4" align="left" charoff="0" char=""/><col id="tb7col5" align="left" charoff="0" char=""/><col id="tb7col6" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left">Method</td><td colspan="5"><hr/>Newly Confirmed <named-content content-type="genus-species">C. briggsae</named-content></td></tr><tr><td><hr/></td><td><hr/>Error Rate Percent</td><td><hr/>Exon SN Percent</td><td><hr/>Exon SP Percent</td><td><hr/>Exon nt SN Percent</td><td><hr/>Exon nt SP Percent</td></tr></thead><tbody><tr><td>Annotation <italic>cb25</italic></td><td>4.6</td><td>97.9</td><td>97.7</td><td>99.7</td><td>99.7</td></tr><tr><td><italic>mSplicer</italic> (SM) WS120</td><td>5.6</td><td>97.7</td><td>95.5</td><td>99.5</td><td>98.3</td></tr><tr><td><italic>mSplicer</italic> (OM) WS120</td><td>3.2</td><td>98.8</td><td>98.5</td><td>99.7</td><td>99.7</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt701"><p>We evaluated on newly EST-confirmed segments overlapping with the genome annotation.</p></fn></table-wrap-foot> --></table-wrap></sec><sec id="s2g"><title>Summary of Results</title><p>Concluding from the presented three comparisons for <italic>C. elegans,</italic> we note that <italic>mSplicer</italic> significantly improves both over the existing annotation and over state-of-the art splice form predictors such as <italic>SNAP</italic> or <italic>ExonHunter</italic>. Each of the comparisons contribute a different piece of information to this conclusion: (a) 5%–13% error rates achieved on a very clean set of cDNA confirmed genes, (b) 10%–13% error rates in the retrospective analysis, and finally (c) a 25% error rate in the reverse transcription polymerase chain reaction (RT–PCR) validation experiments on a biased hard set of genes. In all cases, <italic>mSplicer'</italic>s error rates were at least 40% smaller than those of the other methods we compared with.</p></sec></sec><sec id="s3"><title>Discussion</title><p>Our results show that on unconfirmed genes, our method can significantly improve the annotation. This is all the more remarkable since we only use information which in principle is also available to the cellular splicing machinery, such as sequence-based splice site identification (e.g., available via the splicing factors U1–U6), lengths of exons and introns (via physical properties of mRNA), and intron as well as exon content (for instance, via splice enhancers). We do not use exon counts, repeat masking, similarity to known genes and proteins, or any other evolutionary information. This distinguishes our method from alignment-based systems which do not put an emphasis on statistical structure and learning, but typically rely entirely on homology and evolutionary information [<xref ref-type="bibr" rid="pcbi-0030020-b031">31</xref>–<xref ref-type="bibr" rid="pcbi-0030020-b036">36</xref>]. The fact that <italic>mSplicer</italic> mainly relies on very accurate splice site predictions explains why <italic>mSplicer</italic>'s prediction accuracy is very high and also why it does not decay drastically in UTRs (unpublished data). It is to be noted that additional information, however, could complement our predictions. Closer in spirit to our machine learning approach are systems such as <italic>Genscan</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b014">14</xref>], <italic>SNAP</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b020">20</xref>], or <italic>ExonHunter</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b021">21</xref>] that are used in many genome annotations. However, these systems are typically based on generative models, trying to estimate probability densities. It has been argued that approaches of this type are not necessarily tuned to produce the best <italic>discrimination,</italic> as high-dimensional density estimation is known to be a task harder than discrimination, thus density estimation can be seen as a detour forcing generative approaches to solve a problem harder than necessary [<xref ref-type="bibr" rid="pcbi-0030020-b004">4</xref>]. We conjecture that the key to success of our method lies in the fact that all parts of the <italic>mSplicer</italic> system were trained using discriminative learning techniques.</p><p>While interpreting our results, it should be noted that since <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> is one of the best-studied model systems, its annotation is expected to be more accurate than those of less well-studied or more complex organisms. Systems such as ours thus also offer hope towards a better annotation for these genomes [<xref ref-type="bibr" rid="pcbi-0030020-b022">22</xref>]. In addition, our approach can be applied to genomes where only a small fraction of sequenced mRNA is available. For instance, for <named-content content-type="genus-species" xlink:type="simple">P. pacificus</named-content> there are only relatively few EST sequences available. Statistical properties of the <named-content content-type="genus-species" xlink:type="simple">P. pacificus</named-content> genome deviated considerably from those of <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> genome (e.g., exons and introns are on average only half as long). Hence, it is not surprising that the error rates of <italic>mSplicer</italic> are considerably higher than for <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content>. However, after partly retraining our <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> system, <italic>mSplicer</italic> (SM) achieved an error rate of only 22%. For the much closer relatives <named-content content-type="genus-species" xlink:type="simple">C. briggsae</named-content> and <named-content content-type="genus-species" xlink:type="simple">C. remanei</named-content>, <italic>mSplicer</italic> based on WS120 already turned out to be very accurate in predicting splice forms. These observations illustrate both the universality of the splicing mechanism in nematodes and the strengths of our approach.</p></sec><sec id="s4"><title>Materials and Methods</title><sec id="s4a"><title>Preparation of sequence data and evaluation.</title><p>Following a statistical setup common in machine learning, we trained our system on 60% of the available cDNA sequences currently known for <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> (based on Wormbase 3, version WS120). The remaining 40% of the cDNA sequences were used to generate an independent set for out-of-sample testing. Additionally, we used available EST sequences (dbEST [<xref ref-type="bibr" rid="pcbi-0030020-b037">37</xref>], as of 19 February 2004) to maximally extend the cDNA sequences at the 5′ and 3′ ends. For training and validation we did not use any EST sequences overlapping with the 40% of the cDNA sequences for out-of-sample prediction.</p><p>The methodology of learning a model on a training set, tuning the model parameters on a validation set, and finally using this fixed model on the test set for an out-of-sample prediction, is common in statistics and machine learning. The out-of-sample prediction yields an unbiased estimate for the overall prediction quality of the system, provided that the underlying statistical distribution of the test set is representative for the data-generating process.</p></sec><sec id="s4b"><title>Identification of splice sites.</title><p>From the set of EST sequences not overlapping the validation and test set, we extracted sequences of confirmed donor (intron start) and acceptor (intron end) splice sites. For acceptor splice sites, we used a window of 80 nt upstream to 60 nt downstream of the site. For donor sites, we used 60 nt upstream and 80 nt downstream. Also from these training sequences we extracted non-splice sites, which are within an exon or intron of the sequence and have AG (acceptor) or GT/GC (donor) consensus. We train a SVM [<xref ref-type="bibr" rid="pcbi-0030020-b004">4</xref>] with soft-margin using the so-called “weighted degree” kernel [<xref ref-type="bibr" rid="pcbi-0030020-b010">10</xref>, <xref ref-type="bibr" rid="pcbi-0030020-b024">24</xref>]. The kernel mainly takes into account positional information (relative to the splice site) about the appearance of certain motifs (distinguishing it from the spectrum kernel used for the content sensors). It computes the scalar product between two sequences s and s′:
					<disp-formula id="pcbi-0030020-e001"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030020.e001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>&prime;</mml:mo><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>d</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>&minus;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>I</mml:mi></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:msub><mml:mo>&equals;</mml:mo><mml:msub><mml:msup><mml:mi>x</mml:mi><mml:mo>&prime;</mml:mo></mml:msup><mml:mrow><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>where <italic>N</italic> = 140 is the length of the sequence and <italic>x</italic><sub>[<italic>a</italic>,<italic>b</italic>]</sub> denotes the substring of <italic>x</italic> from position <italic>a</italic> to (excluding) <italic>b</italic>. Moreover, <bold>I</bold>(<italic>true</italic>) = 1, <bold>I</bold>(<italic>false</italic>) = 0, and <italic>v<sub>j</sub></italic>: = <italic>d</italic> − <italic>j</italic> + 1. We used a normalization of the kernel <inline-formula id="pcbi-0030020-ex001"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex001" xlink:type="simple"/></inline-formula>
					 and <italic>d</italic> = 22 for the recognition of splice sites. Additionally, the regularization parameter of the SVM was set to be <italic>C</italic> = 2 and <italic>C</italic> = 3 for acceptor and donor sites, respectively. All parameters (including the window size) have been tuned on the validation set. For SVM training, we used the freely available software package <italic>SHOGUN</italic> developed by some of the authors [<xref ref-type="bibr" rid="pcbi-0030020-b025">25</xref>,<xref ref-type="bibr" rid="pcbi-0030020-b038">38</xref>] (available for download from <ext-link ext-link-type="uri" xlink:href="http://www.shogun-toolbox.org" xlink:type="simple">http://www.shogun-toolbox.org</ext-link>). SVM training resulted in 61,233 and 79,000 support vectors for detecting acceptor and donor sites, respectively. The ROC scores (area under the receiver operator curve) for the resulting classifiers on the test set are 99.62% (acceptor) and 99.74% (donor). The auPRC are 96.29% (acceptor) and 94.38% (donor).
				</p><p>To generate the POIMs, we compute the contributions of <italic>k</italic>-mers with 1 ≤ <italic>k</italic> ≤ <italic>d</italic> to all 
					<italic>d~</italic>-mers starting at position <italic>p</italic> = 1,...,<italic>N,</italic> where we used <italic>d</italic> = 22 and 
					<italic>d~</italic> =1,...,11. The idea is to identify all <italic>k</italic>-mers with 1 ≤ <italic>k</italic> ≤ <italic>d</italic> overlapping with the 
					<italic>d~</italic>-mers of the trained SVM classifier. The weights of the overlapping <italic>k</italic>-mers are then marginalized, summed up, and assigned to the identified 
					<italic>d~</italic>-mers. This leads to a weighting for 
					<italic>d~</italic>-mers <bold>u</bold> for each position in the sequence: W<bold><sub>u</sub></bold><sub>,p</sub>, which may be summarized by <italic>S<sub>
					<italic>d~</italic>,p</sub></italic> = max<bold><sub>u</sub></bold>(<italic>W</italic><bold><sub>u</sub></bold><sub>,<italic>p</italic></sub>). We compute this quantity for 
					<italic>d~</italic> = 1,…,11 leading to the two 11 × 141 matrices displayed in <xref ref-type="fig" rid="pcbi-0030020-g006">Figure 6</xref>. Note that the above computation can be done efficiently using index data structures implemented in <italic>SHOGUN</italic> and described in detail in [<xref ref-type="bibr" rid="pcbi-0030020-b026">26</xref>].
				</p></sec><sec id="s4c"><title>Identification of exon and intron content.</title><p>To obtain the exon content sensor, we derived a set of exons from the ESTs not overlapping the validation or test set. As negative examples, we used subsequences of intronic sequences sampled so that both sets of strings have roughly the same length distribution. We trained an SVM using the <named-content content-type="genus-species" xlink:type="simple">Spectrum kernel</named-content> [<xref ref-type="bibr" rid="pcbi-0030020-b012">12</xref>] of degree <italic>d</italic> = 3 to <italic>d</italic> = 6, where we count occurring <italic>d</italic>-mers only once and used <italic>C</italic> = 1 as regularization parameter. The model parameters have been obtained by tuning them on the validation set. We used a normalization of the kernel <inline-formula id="pcbi-0030020-ex002"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex002" xlink:type="simple"/></inline-formula>
					, where |<italic>s</italic>| is the length of the sequence. We proceeded analogously for the intron content sensor.
				</p></sec><sec id="s4d"><title>Integration.</title><p>The idea is to learn a function that assigns a score to a splice form such that the true splice form is ranked highest while all other splice forms have a significantly lower score. The function depends on parameters that are determined during training of the algorithm. In our case it is defined in terms of several functions determining the contributions of the content sensors (<italic>f<sub>E</sub></italic><sub>,<italic>d</italic></sub> and <italic>f<sub>I</sub></italic><sub>,<italic>d</italic></sub>), the splice site predictors (<italic>S<sub>AG</sub></italic> and <italic>S<sub>GY</sub></italic>), and the lengths of introns and exons (<italic>S<sub>L<sub>I</sub></sub> , S<sub>L<sub>E</sub></sub> ,  S<sub>L<sub>E,s</sub></sub> ,  S<sub>L<sub>E, f</sub></sub></italic> , and <italic>S<sub>L<sub>E,l</sub></sub></italic>).</p><p>We assume that the start of the first exon <italic>p<sub>s</sub></italic> and the end of last exon <italic>p<sub>e</sub></italic> are given. Then a splice form for a sequence <italic>s</italic> is given by a sequence of donor–acceptor pairs <inline-formula id="pcbi-0030020-ex003"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex003" xlink:type="simple"/></inline-formula>
					. The <italic>cumulative splice score</italic> <inline-formula id="pcbi-0030020-ex004"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex004" xlink:type="simple"/></inline-formula>
					 for a sequence <italic>s</italic> was computed as follows:
				</p><p>— If there is only a single exon, i.e., <italic>n</italic> = 0, then
					<disp-formula id="pcbi-0030020-e002"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030020.e002" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>&lcub;</mml:mo><mml:mo>&rcub;</mml:mo><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo stretchy='true'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:msub><mml:mo stretchy='true'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>where <italic>s</italic><sub>[a,b]</sub> is the subsequence of <italic>s</italic> between positions <italic>a</italic> and <italic>b,</italic> <inline-formula id="pcbi-0030020-ex005"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex005" xlink:type="simple"/></inline-formula>
					 is the score for the exon content, and <italic>S<sub>L<sub>E</sub>,s</sub></italic>(<italic>l</italic>) is the score for the length <italic>l</italic> of a single exon, whereby <italic>SVM<sub>E</sub></italic><sub>,<italic>d</italic></sub>(<italic>s</italic>) is the output of the exon content sensor using a kernel of degree <italic>d</italic> as described above.
				</p><p>— Otherwise, we used the following function:
					<disp-formula id="pcbi-0030020-e003"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030020.e003" xlink:type="simple"/><!-- <mml:math display='block'><mml:mtable><mml:mtr><mml:mtd><mml:malignmark/><mml:malignmark/><mml:mi>S</mml:mi><mml:mo stretchy="true">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo stretchy="true">&lcub;</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mo stretchy="true">&rcub;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mo stretchy="true">)</mml:mo><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy='true'>(</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msubsup><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy='true'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo stretchy='true'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:msub><mml:mo stretchy='true'>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:malignmark/><mml:malignmark/><mml:mtext>&emsp;</mml:mtext><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&minus;</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo stretchy='true'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:msub><mml:mo stretchy='true'>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:malignmark/><mml:malignmark/><mml:mtext>&emsp;</mml:mtext><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mrow><mml:mo stretchy="true">&lsqb;</mml:mo><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>I</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy='true'>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>i</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:mo>&minus;</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='true'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>I</mml:mi></mml:msub><mml:mo stretchy='true'>(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:msub><mml:mo stretchy='true'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mo stretchy="true">&rsqb;</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:malignmark/><mml:malignmark/><mml:mtext>&emsp;</mml:mtext><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mrow><mml:mo stretchy="true">&lsqb;</mml:mo><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo stretchy="true">(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="true">)</mml:mo><mml:mo>&plus;</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>E</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy='true'>(</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msubsup><mml:mo>&minus;</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy='true'>)</mml:mo></mml:mrow><mml:mo stretchy="true">&rsqb;</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math> --></disp-formula>where <inline-formula id="pcbi-0030020-ex006"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex006" xlink:type="simple"/></inline-formula>
					 is the intron content score using the SVM intron content output <italic>SVM<sub>I</sub></italic><sub>,<italic>d</italic></sub>(<italic>s</italic>) using a kernel of degree <italic>d, S<sub>AG</sub></italic>(<italic>p</italic>): = <italic>f<sub>AG</sub></italic>(<italic>SVM<sub>AG</sub></italic>(<italic>p</italic>)) and <italic>S<sub>GY</sub></italic>(<italic>p</italic>): = <italic>f<sub>GY</sub></italic>(<italic>SVM<sub>GY</sub></italic>(<italic>p</italic>)) are the scores for acceptor and donor splice sites, respectively, using the <italic>SVM<sub>AG</sub></italic> and <italic>SVM<sub>GY</sub></italic> output for the putative splice sites at position <italic>p</italic>. Moreover, <inline-formula id="pcbi-0030020-ex007"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex007" xlink:type="simple"/></inline-formula>
					 are the length scores for first exons, last exons, internal exons, and introns, respectively, of length <italic>l</italic>.
				</p><p>The above model has 15 functions as parameters. We model them as piecewise-linear functions with <italic>P</italic> = 30 support points at <inline-formula id="pcbi-0030020-ex008"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex008" xlink:type="simple"/></inline-formula>
					 quantiles as observed in the training set. For <italic>S<sub>AG</sub>, S<sub>GY</sub>, S<sub>E</sub></italic><sub>,<italic>d</italic></sub><italic>,</italic> and <italic>S<sub>I</sub></italic><sub>,<italic>d</italic></sub> (<italic>d</italic> = 3,...,6), we require that they are monotonically increasing, since a larger SVM output should lead to a larger score.
				</p><p>To determine the parameters of the model, we propose to solve the following optimization problem that uses a set of <italic>N</italic> training sequences <italic>s</italic><sub>1</sub>,…<italic>s<sub>N</sub></italic> with start points <italic>p<sub>S</sub></italic><sub>,1</sub>,…<italic>P<sub>S</sub></italic><sub>,<italic>N</italic></sub>, end points <italic>p<sub>e</sub></italic><sub>,1</sub>,…<italic>p<sub>e</sub></italic><sub>,<italic>N</italic></sub>, and true splicing isoforms <italic>σ</italic><sub>1</sub>,…, <italic>σ<sub>N</sub></italic>:
					<disp-formula id="pcbi-0030020-e004"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030020.e004" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>minimize</mml:mtext><mml:mtext>&emsp;</mml:mtext></mml:mrow><mml:mrow><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:msub><mml:mi>&xi;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&plus;</mml:mo><mml:mi>C</mml:mi><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>P</mml:mi></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:math> --></disp-formula>for all <italic>I</italic> = 1, … , <italic>N</italic> and all possible splicing isoforms 
					<italic>s~</italic><italic><sub>i</sub></italic> for sequence <italic>s<sub>i</sub>,</italic> where
					<disp-formula id="pcbi-0030020-e006"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030020.e006" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&theta;</mml:mi><mml:mo>&equals;</mml:mo><mml:mo stretchy='false'>&lsqb;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&hellip;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&hellip;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>E</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>I</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy='false'>&rsqb;</mml:mo></mml:mrow></mml:math> --></disp-formula>is the parameter vector parameterizing all 15 functions (the 30 function values at the support points) and <bold>P</bold> is a regularizer. The parameter <italic>C</italic> is the regularization parameter. The regularizer is defined as follows:
					<disp-formula id="pcbi-0030020-e007"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030020.e007" xlink:type="simple"/><!-- <mml:math display='block'><mml:mtable><mml:mtr columnalign="left"><mml:mtd><mml:malignmark/><mml:malignmark/><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>P</mml:mi></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mi>&theta;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mo>|</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mo>|</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mo>|</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mo>|</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>E</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mo>|</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>I</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>I</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>&plus;</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>G</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>&plus;</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mi>Y</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>3</mml:mn></mml:mrow><mml:mn>6</mml:mn></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>3</mml:mn></mml:mrow><mml:mn>6</mml:mn></mml:munderover></mml:mstyle><mml:mtext>&thinsp;</mml:mtext><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&theta;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math> --></disp-formula>with the intuition that the piecewise linear functions should have small absolute differences (reducing to the difference from start to end for monotonic functions).
				</p><p>Based on the ideas presented in [<xref ref-type="bibr" rid="pcbi-0030020-b019">19</xref>], we solve the optimization problem (2) using the cDNA sequences in the training set (these sequences were not used for training the signal and content sensors). For the model selection for parameters <italic>C</italic> and <italic>P,</italic> we use an independent validation set of cDNA sequences. The solution is found by a technique called column generation: one uses the dynamic programming based decoding algorithm (see below) to iteratively find wrong splicing isoforms with large scores. They are then added to the problem, which is then resolved. In our case, training of step 2 takes about two hours on a standard PC employing ILOG CPLEX [<xref ref-type="bibr" rid="pcbi-0030020-b039">39</xref>] for solving the resulting linear programs.</p></sec><sec id="s4e"><title>Decoding of splice forms.</title><p>To produce a splice form prediction <inline-formula id="pcbi-0030020-ex009"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030020.ex009" xlink:type="simple"/></inline-formula> based on the splice form scoring function <italic>S</italic>(<italic>s</italic>,<italic>p<sub>s</sub></italic>,<italic>p<sub>e</sub></italic>,<italic>σ</italic>), one has to maximize <italic>S</italic> with respect to the splice form <italic>σ,</italic> i.e.,
					<disp-formula id="pcbi-0030020-e008"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030020.e008" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mover accent='true'><mml:mi>&sigma;</mml:mi><mml:mo>&circ;</mml:mo></mml:mover><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:munder><mml:mrow><mml:mtext>argmax</mml:mtext></mml:mrow><mml:mrow><mml:mi>&sigma;</mml:mi><mml:mo>&isin;</mml:mo><mml:mi>&Sigma;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:munder><mml:mtext>&thinsp;</mml:mtext><mml:mi>S</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>&sigma;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>We assume that the sequence <italic>s,</italic> the starting position <italic>p<sub>s</sub>,</italic> and end positions <italic>p<sub>e</sub></italic> are given. The prediction 
					σ̂ has to satisfy certain rules, in particular that introns are terminated with the GT/GC and AG splice sites dimers and that they are not overlapping. Additionally, we require that introns are at least 30 nt and exons at least 2 nt long as well as restricting the maximal intron and exon length to 22,000 (the longest known intron in <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content>). If one uses open reading frame information, one additionally has to make sure that the spliced sequence does not contain stop codons.
				</p><p>The described conditions lead to a set of valid splice forms denoted by Σ(<italic>s</italic>,<italic>p<sub>s</sub></italic>,<italic>p<sub>e</sub></italic>). Since this set grows exponentially with the length of the sequence, one cannot simply enumerate and test all possibilities. Hence, we use <italic>dynamic programming</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b040">40</xref>], where one defines a state model, defining valid transitions between signals that are found in the sequence. This allows us to compute the <italic>n</italic>-best splice forms very efficiently. (For the integration algorithm we have to generate wrong splice forms. Hence, we need to generate at least the best and <italic>second best</italic> scoring splice form to make sure that at least one is wrong.) In the case of the SM, the state model contains only four states: 5′ end, donor, acceptor, and 3′ end (cf. <xref ref-type="fig" rid="pcbi-0030020-g004">Figure 4</xref>). Every transition accepts a part of the sequence <italic>s,</italic> starting at position <italic>p<sub>s</sub></italic> in state 5′ end and terminating in state 3′ end at position <italic>p<sub>e</sub></italic>. The state's donor and acceptor require the splice site dimers at the corresponding positions. The model that takes open reading frame information into account requires 14 states to ensure that (a) no exon contains a stop codon in-frame (needs three separate intron transitions) and (b) that no concatenation of two introns can lead to a stop codon. (If the minimal exon length would be 1 nt, then a stop codon can be generated by splicing; for instance, NNT, A, and A together. It would require a more complicated model to exclude this splice form.) See <xref ref-type="fig" rid="pcbi-0030020-g005">Figure 5</xref> for details.</p><p>For predicting splice forms on new sequences, one needs to compute the level 1 splice site scores and to run a decoding algorithm. Both steps together require about 40 s per 100 knt sequence on standard PC hardware (about 11 s for level 1 and about 29 s for level 2 on a 2.2-Ghz Opteron CPU). A tool for predicting the splice form for <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> sequences implemented in <italic>Python</italic> and <italic>C++</italic> can be downloaded at <ext-link ext-link-type="uri" xlink:href="http://www.msplicer.org" xlink:type="simple">http://www.msplicer.org</ext-link>, licensed under GPL (General Public License, <ext-link ext-link-type="uri" xlink:href="http://en.wikipedia.org/wiki/Gpl" xlink:type="simple">http://en.wikipedia.org/wiki/Gpl</ext-link>).</p></sec><sec id="s4f"><title>Sequencing reactions.</title><p>We designed primers to amplify approximately 1,000 base pair amplicons using the program Primer 3.0 [<xref ref-type="bibr" rid="pcbi-0030020-b041">41</xref>]. A summary of the used primers is given in the table in section 3 of <xref ref-type="supplementary-material" rid="pcbi-0030020-sd001">Protocol S1</xref>. A typical PCR mixture consisted of 10 mM Tris-HCl, 50 mM KCl, 1.5 mM MgCl2, 200 μM dNTP, 1 unit Taq polymerase, and 1μM of each primer. Thermocycling was done in a Perkin Elmer Gene Amp 9,700 PCR machine under standard conditions consisting of an initial denaturation at 94 °C for 3 min, followed by 30 cycles of 94 °C for 1 min, 55 °C for 1 min, and 72 °C for 1 min, and a final incubation at 72 °C for 7 min. The PCR products were first confirmed on a 1% agarose gel for their expected sizes. Once the length of the products was confirmed, the products were extracted from the gel using a Qiagen Gel Extraction Kit. Sequencing reactions were set up according to manufacturers' instructions for the Big Dye Terminator chemistry (Applied Biosystems, <ext-link ext-link-type="uri" xlink:href="http://www.appliedbiosystems.com" xlink:type="simple">http://www.appliedbiosystems.com</ext-link>). Samples were analyzed using capillary electrophoresis (Applied Biosystems, ABI Prism 3700). The software PHRED performed base calling, and vector sequences were masked with CrossMatch. Sequences containing at least 100 nonvector bases with Phred values &gt;20 were used for further analysis. The sequences obtained were then validated by aligning them against the <named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> genome using <italic>blat</italic> [<xref ref-type="bibr" rid="pcbi-0030020-b022">22</xref>]. Once the gene identity was confirmed, we compared the gene structure of the obtained EST with our prediction and the annotation. We obtained 25 spliced mRNAs, five of which showed evidence for alternative splicing and were excluded subsequently (as in the simulation experiments).</p></sec></sec><sec id="s5"><title>Supporting Information</title><supplementary-material id="pcbi-0030020-sd001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030020.sd001" xlink:type="simple"><label>Protocol S1</label><caption><title>Data Preparation Protocols, Additional Results, and Primer Lists</title><p>(161 KB PDF)</p></caption></supplementary-material></sec></body><back><ack><p>We gratefully acknowledge inspiring discussions with Anja Neuber, Alexander Zien, Andrei Lupas, Detlef Weigel, Alan Zahler, Koji Tsuda, Christina Leslie, Eleazar Eskin, and Ivo Grosse. Alexander Zien additionally helped with the implementation of the POIMs. We thank Christoph Dieterich for providing access to a draft assembly of the <named-content content-type="genus-species" xlink:type="simple">P. pacificus</named-content> genome. Additionally, we thank Broňa Brejová, Tomáš Vinař, and Ian Korf for their collaboration to conduct the comparisons with <italic>ExonHunter</italic> and <italic>SNAP</italic>. Furthermore, we would like to thank Anthony Rogers and Todd Harris for their help to get the new annotation onto the Wormbase Web site.</p></ack><glossary><title>Abbreviations</title><def-list><def-item><term>auPRC</term><def><p>area under the precision recall curve</p></def></def-item><def-item><term>HMM</term><def><p>hidden Markov model</p></def></def-item><def-item><term><italic>mSplicer</italic></term><def><p>margin splicer</p></def></def-item><def-item><term>nt</term><def><p>nucleotide</p></def></def-item><def-item><term>OM</term><def><p>sophisticated model using ORF information</p></def></def-item><def-item><term>POIM</term><def><p>positional oligomer importance matrices</p></def></def-item><def-item><term>RT-PCR</term><def><p>reverse transcription polymerase chain reaction</p></def></def-item><def-item><term>SM</term><def><p>simple model</p></def></def-item><def-item><term>SVM</term><def><p>support vector machine</p></def></def-item><def-item><term>UTR</term><def><p>untranslated region</p></def></def-item></def-list></glossary><ref-list><title>References</title><ref id="pcbi-0030020-b001"><label>1</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Harris</surname><given-names>T</given-names></name><name name-style="western"><surname>Chen</surname><given-names>N</given-names></name><name name-style="western"><surname>Cunningham</surname><given-names>F</given-names></name><etal/></person-group>
					<year>2004</year>
					<article-title>Wormbase: A multi-species resource for nematode biology and genomics.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>32</volume>
					<fpage>D411</fpage>
					<lpage>D417</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b002"><label>2</label><element-citation publication-type="journal" xlink:type="simple">
					<collab xlink:type="simple">The Caenorhabditis elegans sequencing consortium</collab>
					<year>1998</year>
					<article-title>Genome sequence of the Nematode <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis elegans</named-content>. A platform for investigating biology.</article-title>
					<source>Science</source>
					<volume>282</volume>
					<fpage>2012</fpage>
					<lpage>2018</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b003"><label>3</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Schwarz</surname><given-names>E</given-names></name><name name-style="western"><surname>Antoshechkin</surname><given-names>I</given-names></name><name name-style="western"><surname>Bastiani</surname><given-names>C</given-names></name><etal/></person-group>
					<year>2006</year>
					<article-title>Wormbase: Better software, richer content.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>34</volume>
					<fpage>D475</fpage>
					<lpage>D478</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b004"><label>4</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Vapnik</surname><given-names>V</given-names></name></person-group>
					<year>1995</year>
					<source>The nature of statistical learning theory</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>Springer Verlag</publisher-name>
				</element-citation></ref><ref id="pcbi-0030020-b005"><label>5</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Schölkopf</surname><given-names>B</given-names></name><name name-style="western"><surname>Smola</surname><given-names>AJ</given-names></name></person-group>
					<year>2002</year>
					<source>Learning with kernels</source>
					<publisher-loc>Cambridge (Massachusetts)</publisher-loc>
					<publisher-name>MIT Press</publisher-name>
				</element-citation></ref><ref id="pcbi-0030020-b006"><label>6</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Müller</surname><given-names>KR</given-names></name><name name-style="western"><surname>Mika</surname><given-names>S</given-names></name><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name><name name-style="western"><surname>Tsuda</surname><given-names>K</given-names></name><name name-style="western"><surname>Schölkopf</surname><given-names>B</given-names></name></person-group>
					<year>2001</year>
					<article-title>An introduction to kernel-based learning algorithms.</article-title>
					<source>IEEE Trans Neural Networks</source>
					<volume>12</volume>
					<fpage>181</fpage>
					<lpage>201</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b007"><label>7</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Jaakkola</surname><given-names>T</given-names></name><name name-style="western"><surname>Diekhans</surname><given-names>M</given-names></name><name name-style="western"><surname>Haussler</surname><given-names>D</given-names></name></person-group>
					<year>2000</year>
					<article-title>A discriminative framework for detecting remote protein homologies.</article-title>
					<source>J Comput Biol</source>
					<volume>7</volume>
					<fpage>95</fpage>
					<lpage>114</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b008"><label>8</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Brown</surname><given-names>M</given-names></name><name name-style="western"><surname>Grundy</surname><given-names>W</given-names></name><name name-style="western"><surname>Lin</surname><given-names>D</given-names></name><name name-style="western"><surname>Cristianini</surname><given-names>N</given-names></name><name name-style="western"><surname>Sugnet</surname><given-names>C</given-names></name><etal/></person-group>
					<year>2000</year>
					<article-title>Knowledge-based analysis of microarray gene expression data by using support vector machines.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>97</volume>
					<fpage>262</fpage>
					<lpage>267</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b009"><label>9</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Zien</surname><given-names>A</given-names></name><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name><name name-style="western"><surname>Mika</surname><given-names>S</given-names></name><name name-style="western"><surname>Schölkopf</surname><given-names>B</given-names></name><name name-style="western"><surname>Lengauer</surname><given-names>T</given-names></name><etal/></person-group>
					<year>2000</year>
					<article-title>Engineering support vector machine kernels that recognize translation initiation sites.</article-title>
					<source>Bioinformatics</source>
					<volume>16</volume>
					<fpage>799</fpage>
					<lpage>807</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b010"><label>10</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Mjolsness</surname><given-names>E</given-names></name><name name-style="western"><surname>DeCoste</surname><given-names>D</given-names></name></person-group>
					<year>2001</year>
					<article-title>Machine learning for science: State of the art and future prospects.</article-title>
					<source>Science</source>
					<volume>293</volume>
					<fpage>2051</fpage>
					<lpage>2055</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b011"><label>11</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sonnenburg</surname><given-names>S</given-names></name><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name><name name-style="western"><surname>Jagota</surname><given-names>A</given-names></name><name name-style="western"><surname>Müller</surname><given-names>KR</given-names></name></person-group>
					<year>2002</year>
					<article-title>New methods for splice-site recognition.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Dorronsoro</surname><given-names>J</given-names></name></person-group>
					<publisher-name>Artificial neural networks</publisher-name>
					<source>Proceedings of the International Conference on Artificial Neural Networks. Lect Notes Comp Sci</source>
					<volume>2415</volume>
					<fpage>329</fpage>
					<lpage>336</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b012"><label>12</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>X</given-names></name><name name-style="western"><surname>Heller</surname><given-names>K</given-names></name><name name-style="western"><surname>Hefter</surname><given-names>I</given-names></name><name name-style="western"><surname>Leslie</surname><given-names>C</given-names></name><name name-style="western"><surname>Chasin</surname><given-names>L</given-names></name></person-group>
					<year>2003</year>
					<article-title>Sequence information for the splicing of human pre-mRNA identified by support vector machine classification.</article-title>
					<source>Genome Res</source>
					<volume>13</volume>
					<fpage>2637</fpage>
					<lpage>2650</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b013"><label>13</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Kulp</surname><given-names>D</given-names></name><name name-style="western"><surname>Haussler</surname><given-names>D</given-names></name><name name-style="western"><surname>Reese</surname><given-names>M</given-names></name><name name-style="western"><surname>Eeckman</surname><given-names>F</given-names></name></person-group>
					<year>1996</year>
					<article-title>A generalized hidden Markov model for the recognition of human genes in DNA.</article-title>
					<source>ISMB</source>
					<volume>1996</volume>
					<fpage>134</fpage>
					<lpage>141</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b014"><label>14</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Burge</surname><given-names>C</given-names></name><name name-style="western"><surname>Karlin</surname><given-names>S</given-names></name></person-group>
					<year>1997</year>
					<article-title>Prediction of complete gene structures in human genomic DNA.</article-title>
					<source>J Mol Biol</source>
					<volume>268</volume>
					<fpage>78</fpage>
					<lpage>94</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b015"><label>15</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name></person-group>
					<year>1997</year>
					<article-title>Two methods for improving performance of a HMM and their application for gene finding.</article-title>
					<source>Proceedings of the Fifth International Conference on Intelligent Systems for Molecular Biology</source>
					<conf-date>21–26 June, 1997;</conf-date>
					<conf-loc>Halkidiki, Greece.</conf-loc>
					<publisher-name>AAAI Press</publisher-name>
					<fpage>179</fpage>
					<lpage>186</lpage>
					<comment>Available: <ext-link ext-link-type="uri" xlink:href="http://www.aaai.org/Library/ISMB/ismb97contents.php" xlink:type="simple">http://www.aaai.org/Library/ISMB/ismb97contents.php</ext-link>. Accessed 24 January 2007.</comment>
				</element-citation></ref><ref id="pcbi-0030020-b016"><label>16</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Lukashin</surname><given-names>A</given-names></name><name name-style="western"><surname>Borodovsky</surname><given-names>M</given-names></name></person-group>
					<year>1998</year>
					<article-title>Genemark.hmm: New solutions for gene finding.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>25</volume>
					<fpage>1107</fpage>
					<lpage>1115</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b017"><label>17</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Walsh</surname><given-names>S</given-names></name><name name-style="western"><surname>Anderson</surname><given-names>M</given-names></name><name name-style="western"><surname>Cartinhour</surname><given-names>S</given-names></name></person-group>
					<year>1998</year>
					<article-title>AceDB: A database for genome information.</article-title>
					<source>Methods Biochem Anal</source>
					<volume>39</volume>
					<fpage>299</fpage>
					<lpage>318</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b018"><label>18</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Reese</surname><given-names>M</given-names></name><name name-style="western"><surname>Kulp</surname><given-names>D</given-names></name><name name-style="western"><surname>Tammana</surname><given-names>H</given-names></name><name name-style="western"><surname>Haussler</surname><given-names>D</given-names></name></person-group>
					<year>2000</year>
					<article-title>Genie–Gene finding in <named-content content-type="genus-species" xlink:type="simple">Drosophila melanogaster</named-content>.</article-title>
					<source>Genome Res</source>
					<volume>10</volume>
					<fpage>529</fpage>
					<lpage>538</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b019"><label>19</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Altun</surname><given-names>Y</given-names></name><name name-style="western"><surname>Tsochantaridis</surname><given-names>I</given-names></name><name name-style="western"><surname>Hofmann</surname><given-names>T</given-names></name></person-group>
					<year>2003</year>
					<article-title>Hidden Markov support vector machines.</article-title>
					<source>Proceedings of the 20th International Conference on Machine Learning</source>
					<conf-date>21–24 August 2003,</conf-date>
					<conf-loc>Washington, D. C.</conf-loc>
					<fpage>3</fpage>
					<lpage>10</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b020"><label>20</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Korf</surname><given-names>I</given-names></name></person-group>
					<year>2004</year>
					<article-title>Gene finding in novel genomes.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>5</volume>
					<fpage>59</fpage>
				</element-citation></ref><ref id="pcbi-0030020-b021"><label>21</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Brejova</surname><given-names>B</given-names></name><name name-style="western"><surname>Brown</surname><given-names>D</given-names></name><name name-style="western"><surname>Li</surname><given-names>M</given-names></name><name name-style="western"><surname>Vinar</surname><given-names>T</given-names></name></person-group>
					<year>2005</year>
					<article-title>ExonHunter: A comprehensive approach to gene finding.</article-title>
					<source>Bioinformatics</source>
					<volume>21</volume>
					<fpage>i57</fpage>
					<lpage>65</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b022"><label>22</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Reboul</surname><given-names>J</given-names></name><name name-style="western"><surname>Vaglio</surname><given-names>P</given-names></name><etal/></person-group>
					<year>2003</year>
					<article-title><named-content content-type="genus-species" xlink:type="simple">C. elegans</named-content> ORFeome version 1.1: Experimental verification of the genome annotation and resource for proteome-scale protein expression.</article-title>
					<source>Nat Genet</source>
					<volume>34</volume>
					<fpage>35</fpage>
					<lpage>41</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b023"><label>23</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Kent</surname><given-names>W</given-names></name></person-group>
					<year>2002</year>
					<article-title>Blat—The blast-like alignment tool.</article-title>
					<source>Genome Res</source>
					<volume>12</volume>
					<fpage>656</fpage>
					<lpage>664</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b024"><label>24</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Davis</surname><given-names>J</given-names></name><name name-style="western"><surname>Goadrich</surname><given-names>M</given-names></name></person-group>
					<year>2006</year>
					<source>The relationship between precision-recall and roc curves. Technical report #1551</source>
					<publisher-loc>Madison (Wisconsin)</publisher-loc>
					<publisher-name>University of Wisconsin Madison</publisher-name>
				</element-citation></ref><ref id="pcbi-0030020-b025"><label>25</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name><name name-style="western"><surname>Sonnenburg</surname><given-names>S</given-names></name><name name-style="western"><surname>Schäfer</surname><given-names>C</given-names></name></person-group>
					<year>2006</year>
					<article-title>Learning interpretable SVMs for biological sequence classification.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>7</volume>
					<fpage>S9</fpage>
				</element-citation></ref><ref id="pcbi-0030020-b026"><label>26</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sonnenburg</surname><given-names>S</given-names></name><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name><name name-style="western"><surname>Rieck</surname><given-names>K</given-names></name></person-group>
					<year>2007</year>
					<article-title>Large-scale learning with string kernels.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Bottou</surname><given-names>L</given-names></name><name name-style="western"><surname>Chapelle</surname><given-names>O</given-names></name><name name-style="western"><surname>DeCoste</surname><given-names>D</given-names></name><name name-style="western"><surname>Weston</surname><given-names>J</given-names></name></person-group>
					<source>Large-scale kernel machines</source>
					<publisher-loc>Cambridge (Massachusetts)</publisher-loc>
					<publisher-name>MIT Press</publisher-name>
					<fpage>73</fpage>
					<lpage>104</lpage>
					<comment>In press.</comment>
				</element-citation></ref><ref id="pcbi-0030020-b027"><label>27</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Goren</surname><given-names>A</given-names></name><name name-style="western"><surname>Ram</surname><given-names>O</given-names></name><name name-style="western"><surname>Amit</surname><given-names>M</given-names></name><name name-style="western"><surname>Keren</surname><given-names>H</given-names></name><name name-style="western"><surname>Lev-Maor</surname><given-names>G</given-names></name><etal/></person-group>
					<year>2006</year>
					<article-title>Comparative analysis identifies exonic splicing regulatory sequences—The complex definition of enhancers and silencers.</article-title>
					<source>Mol Cell</source>
					<volume>22</volume>
					<fpage>769</fpage>
					<lpage>781</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b028"><label>28</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Stein</surname><given-names>L</given-names></name><name name-style="western"><surname>Bao</surname><given-names>Z</given-names></name><name name-style="western"><surname>Blasiar</surname><given-names>D</given-names></name><name name-style="western"><surname>Blumenthal</surname><given-names>T</given-names></name><etal/></person-group>
					<year>2003</year>
					<article-title>The genome sequence of <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis briggsae</named-content>: A platform for comparative genomics.</article-title>
					<source>PLoS Biol</source>
					<volume>1</volume>
					<fpage>2</fpage>
				</element-citation></ref><ref id="pcbi-0030020-b029"><label>29</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bieri</surname><given-names>T</given-names></name><name name-style="western"><surname>Blasiar</surname><given-names>D</given-names></name><name name-style="western"><surname>Ozersky</surname><given-names>P</given-names></name><name name-style="western"><surname>Antoshechkin</surname><given-names>I</given-names></name><name name-style="western"><surname>Bastiani</surname><given-names>C</given-names></name><etal/></person-group>
					<year>2006</year>
					<article-title>Wormbase: New content and better access.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>35</volume>
					<issue>Database issue</issue>
					<fpage>D506</fpage>
					<lpage>D510</lpage>
					<comment>doi <ext-link ext-link-type="doi" xlink:href="http://dx.doi.org/10.1093/nar/gk1818" xlink:type="simple">10.1093/nar/gk1818</ext-link></comment>
				</element-citation></ref><ref id="pcbi-0030020-b030"><label>30</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>KZ</given-names></name><name name-style="western"><surname>Eizinger</surname><given-names>A</given-names></name><name name-style="western"><surname>Nandakumar</surname><given-names>R</given-names></name><name name-style="western"><surname>Schuster</surname><given-names>S</given-names></name><name name-style="western"><surname>Sommer</surname><given-names>R</given-names></name></person-group>
					<year>2003</year>
					<article-title>Limited microsynteny between the genomes of <named-content content-type="genus-species" xlink:type="simple">Pristionchus pacificus</named-content> and <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis elegans</named-content>.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>31</volume>
					<fpage>2553</fpage>
					<lpage>2560</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b031"><label>31</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Emmons</surname><given-names>S</given-names></name><name name-style="western"><surname>Klass</surname><given-names>M</given-names></name><name name-style="western"><surname>Hirsh</surname><given-names>D</given-names></name></person-group>
					<year>1979</year>
					<article-title>Analysis of the constancy of DNA sequences during development and evolution of the nematode <named-content content-type="genus-species" xlink:type="simple">Caenorhabditis elegans</named-content>.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>76</volume>
					<fpage>1333</fpage>
					<lpage>1337</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b032"><label>32</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Snyder</surname><given-names>E</given-names></name><name name-style="western"><surname>Stormo</surname><given-names>G</given-names></name></person-group>
					<year>1995</year>
					<article-title>Identification of protein coding regions in genomic DNA.</article-title>
					<source>J Mol Biol</source>
					<volume>248</volume>
					<fpage>1</fpage>
					<lpage>18</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b033"><label>33</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Guigo</surname><given-names>R</given-names></name><name name-style="western"><surname>Knudsen</surname><given-names>S</given-names></name><name name-style="western"><surname>Drake</surname><given-names>N</given-names></name><name name-style="western"><surname>Smith</surname><given-names>T</given-names></name></person-group>
					<year>1992</year>
					<article-title>Prediction of gene structure.</article-title>
					<source>J Mol Biol</source>
					<volume>226</volume>
					<fpage>141</fpage>
					<lpage>157</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b034"><label>34</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Gelfand</surname><given-names>M</given-names></name><name name-style="western"><surname>Mironov</surname><given-names>A</given-names></name><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name></person-group>
					<year>1996</year>
					<article-title>Gene recognition via spliced sequence alignment.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>93</volume>
					<fpage>9061</fpage>
					<lpage>9066</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b035"><label>35</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Morgenstern</surname><given-names>B</given-names></name><name name-style="western"><surname>Rinner</surname><given-names>O</given-names></name><name name-style="western"><surname>Abdeddaim</surname><given-names>S</given-names></name><name name-style="western"><surname>Mayer</surname><given-names>DHK</given-names></name><name name-style="western"><surname>Dress</surname><given-names>A</given-names></name><etal/></person-group>
					<year>2002</year>
					<article-title>Exon discovery by genomic sequence alignment.</article-title>
					<source>Bioinformatics</source>
					<volume>18</volume>
					<fpage>777</fpage>
					<lpage>787</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b036"><label>36</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hong</surname><given-names>J</given-names></name><name name-style="western"><surname>Ivanov</surname><given-names>N</given-names></name><name name-style="western"><surname>Hodor</surname><given-names>P</given-names></name><name name-style="western"><surname>Xia</surname><given-names>M</given-names></name><name name-style="western"><surname>Wei</surname><given-names>N</given-names></name><etal/></person-group>
					<year>2004</year>
					<article-title>Identification of new human cadherin genes using a combination of protein motif search and gene finding methods.</article-title>
					<source>J Mol Biol</source>
					<volume>337</volume>
					<fpage>307</fpage>
					<lpage>317</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b037"><label>37</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Boguski</surname><given-names>M</given-names></name><name name-style="western"><surname>Tolstoshev</surname><given-names>TLC</given-names></name></person-group>
					<year>1993</year>
					<article-title>dbEST—Database for “expressed sequence tags.”.</article-title>
					<source>Nat Genet</source>
					<volume>4</volume>
					<fpage>332</fpage>
					<lpage>333</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b038"><label>38</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sonnenburg</surname><given-names>S</given-names></name><name name-style="western"><surname>Rätsch</surname><given-names>G</given-names></name><name name-style="western"><surname>Schäfer</surname><given-names>C</given-names></name><name name-style="western"><surname>Schölkopf</surname><given-names>B</given-names></name></person-group>
					<year>2006</year>
					<article-title>Large scale multiple kernel learning.</article-title>
					<source>J Mach Learn Res</source>
					<volume>7</volume>
					<fpage>1531</fpage>
					<lpage>1565</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b039"><label>39</label><element-citation publication-type="other" xlink:type="simple">
					<collab xlink:type="simple">CPLEX Optimization</collab>
					<year>1994</year>
					<source>Using the CPLEX Callable Library</source>
					<publisher-loc>Incline Village (Nevada)</publisher-loc>
					<publisher-name>CPLEX Optimization</publisher-name>
				</element-citation></ref><ref id="pcbi-0030020-b040"><label>40</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Giegerich</surname><given-names>R</given-names></name><name name-style="western"><surname>Meyer</surname><given-names>C</given-names></name><name name-style="western"><surname>Steffen</surname><given-names>P</given-names></name></person-group>
					<year>2004</year>
					<article-title>A discipline of dynamic programming over sequence data.</article-title>
					<source>Sci Comput Program</source>
					<volume>51</volume>
					<fpage>215</fpage>
					<lpage>263</lpage>
				</element-citation></ref><ref id="pcbi-0030020-b041"><label>41</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rozen</surname><given-names>S</given-names></name><name name-style="western"><surname>Skaletsky</surname><given-names>H</given-names></name></person-group>
					<year>2000</year>
					<article-title>Primer3 on the WWW for general users and for biologist programmers.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Misener</surname><given-names>S</given-names></name><name name-style="western"><surname>Krawetz</surname><given-names>S</given-names></name></person-group>
					<source>Bioinformatics methods and protocols: Methods in molecular biology</source>
					<publisher-loc>Totowa (New Jersey)</publisher-loc>
					<publisher-name>Humana Press</publisher-name>
					<fpage>365</fpage>
					<lpage>386</lpage>
				</element-citation></ref></ref-list></back></article>