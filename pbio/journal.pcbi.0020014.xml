<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN"><front><journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="flc">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="epub">1553-7358</issn><issn pub-type="ppub">1553-734X</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0020014</article-id><article-id pub-id-type="publisher-id">05-PLCB-RA-0154R3</article-id><article-id pub-id-type="sici">plcb-02-02-07</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology</subject><subject>Evolutionary Biology</subject><subject>Mathematics/Statistics</subject></subj-group><subj-group subj-group-type="System Taxonomy"><subject>Homo (human)</subject><subject>Mus (mouse)</subject></subj-group></article-categories><title-group><article-title>The Fragile Breakage versus Random Breakage Models of Chromosome Evolution</article-title><alt-title alt-title-type="running-head">Models of Chromosome Evolution</alt-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Peng</surname><given-names>Qian</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Pevzner</surname><given-names>Pavel A</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Tesler</surname><given-names>Glenn</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1">
				<label>1</label><addr-line> Department of Computer Science and Engineering, University of California San Diego, La Jolla, California, United States of America
			</addr-line></aff><aff id="aff2">
				<label>2</label><addr-line> Department of Mathematics, University of California San Diego, La Jolla, California, United States of America
			</addr-line></aff><contrib-group><contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Bourne</surname><given-names>Phillip</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">University of California San Diego, United States of America</aff><author-notes><fn fn-type="con" id="ack1"><p>PAP and GT conceived and designed the experiments. QP performed the experiments. QP, PAP, and GT analyzed the data. QP and GT contributed reagents/materials/analysis tools. QP, PAP, and GT wrote the paper.</p></fn><fn fn-type="financial-disclosure" id="ack2"><p>GT was partially supported by a Hellman Fellowship at University of California San Diego.</p></fn><corresp id="cor1">* To whom correspondence should be addressed. E-mail: <email xlink:type="simple">gptesler@ucsd.edu</email></corresp><fn fn-type="conflict" id="ack3"><p> The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="ppub"><month>2</month><year>2006</year></pub-date><pub-date pub-type="epub"><day>24</day><month>2</month><year>2006</year></pub-date><volume>2</volume><issue>2</issue><elocation-id>e14</elocation-id><history><date date-type="received"><day>7</day><month>7</month><year>2005</year></date><date date-type="accepted"><day>17</day><month>1</month><year>2006</year></date></history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2006</copyright-year><copyright-holder>Peng et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><p>For many years, studies of chromosome evolution were dominated by the random breakage theory, which implies that there are no rearrangement hot spots in the human genome. In 2003, Pevzner and Tesler argued against the random breakage model and proposed an alternative “fragile breakage” model of chromosome evolution. In 2004, Sankoff and Trinh argued against the fragile breakage model and raised doubts that Pevzner and Tesler provided any evidence of rearrangement hot spots. We investigate whether Sankoff and Trinh indeed revealed a flaw in the arguments of Pevzner and Tesler. We show that Sankoff and Trinh's synteny block identification algorithm makes erroneous identifications even in small toy examples and that their parameters do not reflect the realities of the comparative genomic architecture of human and mouse. We further argue that if Sankoff and Trinh had fixed these problems, their arguments in support of the random breakage model would disappear. Finally, we study the link between rearrangements and regulatory regions and argue that long regulatory regions and inhomogeneity of gene distribution in mammalian genomes may be responsible for the breakpoint reuse phenomenon.</p></abstract><abstract abstract-type="synopsis"><title>Synopsis</title><p>Genomes are constantly changing. If a genome is compared to a continental landform, then one type of change—point mutations—is analogous to gradual changes in the landscape due to erosion by wind and water. A second type of change—genome rearrangements—comprises evolutionary “earthquakes” that dramatically change the landscape. A fundamental question in studies of chromosome evolution is whether these earthquakes are happening along evolutionary “faults” (hot spots of rearrangements) or at “random” genomic positions. For many years, studies of chromosome evolution were dominated by the random breakage theory, which implies that there are no rearrangement hot spots in the human genome. In 2003, Pevzner and Tesler argued against the random breakage model and proposed an alternative “fragile breakage” model of chromosome evolution. In 2004, Sankoff and Trinh performed a series of computational simulations that argued against the fragile breakage model and raised doubts that Pevzner and Tesler provided any evidence of rearrangement hot spots. The authors show that Sankoff and Trinh's simulation misidentifies synteny blocks, that it does not accurately simulate what Pevzner and Tesler (2003) did, and that the parameters of Sankoff and Trinh do not reflect the realities of the comparative genomic architecture of human and mouse.</p></abstract><counts><page-count count="12"/></counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group><custom-meta><meta-name>Citation:</meta-name><meta-value>Peng Q, Pevzner PA, Tesler G (2006) The fragile breakage versus random breakage models of chromosome evolution. PLoS Comput Biol 2(2): e14.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1"><title>Introduction</title><p>Genomes are constantly changing. If a genome is compared to a continental landform, then one type of change—point mutations—is analogous to gradual changes in the landscape due to erosion by wind and water. A second type of change—genome rearrangements—comprises evolutionary “earthquakes” that dramatically change the landscape. A fundamental question in studies of chromosome evolution is whether these earthquakes are happening along evolutionary “faults” (hot spots of rearrangements) or at “random” genomic positions.</p><p>In a landmark paper in 1984, Nadeau and Taylor [<xref ref-type="bibr" rid="pcbi-0020014-b001">1</xref>] estimated that there are approximately 200 conserved segments (synteny blocks) between human and mouse and provided convincing arguments in favor of the random breakage model of genomic evolution postulated by Ohno in 1973 [<xref ref-type="bibr" rid="pcbi-0020014-b002">2</xref>]. Further studies of significantly larger datasets (Copeland et al. in 1993 [<xref ref-type="bibr" rid="pcbi-0020014-b003">3</xref>], DeBry and Seldin in 1996 [<xref ref-type="bibr" rid="pcbi-0020014-b004">4</xref>], Burt et al. in 1999 [<xref ref-type="bibr" rid="pcbi-0020014-b005">5</xref>], Lander et al. in 2001 [<xref ref-type="bibr" rid="pcbi-0020014-b006">6</xref>], Mural et al. in 2002 [<xref ref-type="bibr" rid="pcbi-0020014-b007">7</xref>]) with progressively increasing levels of resolution made the random breakage model the de facto theory of chromosome evolution and the Nadeau-Taylor predictions are viewed as among the most significant results in “the history and development of the mouse as a research tool” (Pennisi [<xref ref-type="bibr" rid="pcbi-0020014-b008">8</xref>]).</p><p>The random breakage model implies that there are no evolutionary “faults” in mammalian genomes and rules out the systematic reuse of breakpoints from the same genomic regions. In 2003, Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] argued against the random breakage model by showing that any transformation of mouse gene order into human gene order would require a large number of breakpoint reuses. This conclusion immediately implies that the rearrangement breakpoints form clusters, a contradiction to the random breakage model. The Pevzner and Tesler arguments do not reveal the specific locations of the breakpoint regions where reuse occurred but instead give a nonconstructive combinatorial proof that these regions exist somewhere (at unknown locations) in the genome. Based on this result, Pevzner and Tesler rejected the random breakage model and proposed an alternative “fragile breakage” model of chromosome evolution. This model assumes the existence of fragile regions in genomes and postulates that the breakpoints occur mainly within these relatively short fragile regions (hot spots of rearrangements).</p><p>In 2004, Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] argued against the fragile breakage theory and raised doubts that Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] provided any proof of the breakpoint reuse phenomenon. They described an elegant computational experiment in which a series of random rearrangements creates the appearance of the breakpoint reuse phenomenon and argued that Pevzner and Tesler's arguments represent an artifact caused by microrearrangements and synteny block identification algorithms. Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>,<xref ref-type="bibr" rid="pcbi-0020014-b011">11</xref>] made an important contribution by raising awareness that synteny block determination is an important and nontrivial aspect of rearrangement analysis.</p><p>As a result, there is a controversy regarding the fragile breakage model. For example, Bailey et al. wrote in 2004 [<xref ref-type="bibr" rid="pcbi-0020014-b012">12</xref>] that “our analysis supports a nonrandom model of chromosomal evolution that implicates a predominance of recurrent small-scale duplication and large-scale evolutionary rearrangements within specific fragile regions.” Similarly, Zhao et al. [<xref ref-type="bibr" rid="pcbi-0020014-b013">13</xref>] wrote that “independent mathematical modeling of the syntenic block length distribution by us and others supports the fragile breakage model, but not the random breakage model for mammalian genome evolution.” On the other hand, Trinh et al. [<xref ref-type="bibr" rid="pcbi-0020014-b014">14</xref>] wrote, “Indeed, there is no direct evidence for the fragile regions hypothesis, aside from the well-documented tendencies for rearrangements in pericentromeric and subtelomeric regions.”</p><p>The question then arises as to whether the Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] arguments were the first proof of breakpoint reuse or arguments without any merit. This question is ultimately connected to the question of whether Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] revealed errors in the Pevzner and Tesler arguments or whether the work by Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] represented an artifact. In this paper, we demonstrate that (1) the synteny block identification algorithm in [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] is flawed and (2) the parameters in [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] do not reflect the realities of the comparative genomic architecture of human and mouse. We show that if Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] fixed problems (1) and (2), their arguments against [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] would disappear.</p><p>In Section 1, we formally define the breakpoint reuse rate (BRR). In Section 2, we describe Sankoff and Trinh's synteny block identification algorithm, which we call ST-Synteny. In Section 3, we illustrate several shortcomings of this algorithm. In Section 4, we reproduce Sankoff and Trinh's simulations in which they applied ST-Synteny to synthetic genomes, and we perform the corresponding simulations using GRIMM-Synteny, obtaining different results for the effect of parameters on the breakpoint reuse rate. In Section 5, we show illustrations of the different blocks identified by ST-Synteny versus GRIMM-Synteny, using both synthetic data and using real human/mouse X chromosome anchors.</p><p>The simulation in Section 4 does not take into account issues from real-world data such as anchor lengths in nucleotides and variable length microrearrangements. In Section 6, we make an improved simulation that accounts for these issues and seed it with simulated genomes based on anchor lengths in the human/mouse X chromosomes and human/rat X chromosomes.</p><p>In Section 7, we give the results for whole genome comparisons of human and mouse, first based on alignments and then based on genes.</p><p>In Section 8, we analyze an intergenic breakage model, in which selection pressures prevent breaks occurring within genes and within regulatory regions upstream from genes.</p></sec><sec id="s2"><title>Results</title><sec id="s2a"><title>Section 1. Measuring the Breakpoint Reuse Rate</title><p>We study synteny blocks instead of conserved segments. Synteny blocks do not necessarily represent areas of continuous similarity between two genomes; instead, they may consist of many short regions of similarity interrupted by nonsimilar regions and gaps. Regions of similarity may be identified via homologous genes, anchors (alignments present in a single copy in both genomes), or other corresponding markers; we will call these <italic>elements</italic>.</p><p>When comparing genomes, rearrangements of the elements within a synteny block are called <italic>microrearrangements,</italic> or <italic>microinversions</italic> when we work in an inversions-only model. Rearrangements of the order of whole synteny blocks are called <italic>macrorearrangements</italic>.</p><p><named-content content-type="genus-species" xlink:type="simple">Rearrangement distance</named-content> is the minimum number of rearrangement operations required to transform one genome into the other; in the unichromosomal case, the operations are inversions, and in the multichromosomal case, the operations are inversions, translocations, fissions, and fusions.</p><p>Pevzner and Tesler's arguments [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] are based on computing the breakpoint reuse rate for the human and mouse genomes. The breakpoint reuse rate is computed as twice the rearrangement distance divided by the number of breakpoints, where these are computed as described in [<xref ref-type="bibr" rid="pcbi-0020014-b015">15</xref>]. (We shall use the total number of breakpoints; a variant, using only internal breakpoints and excluding those at chromosome ends, was also used in [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] and [<xref ref-type="bibr" rid="pcbi-0020014-b016">16</xref>] but will not be further considered here.)</p><p>The random breakage model implies a low breakpoint reuse rate (close to one, the minimum possible value for the breakpoint reuse rate), while the human/mouse rearrangement analysis revealed a very high breakpoint reuse rate (close to two, the maximum possible value for the breakpoint reuse rate). Based on this observation, Pevzner and Tesler rejected the random breakage model and proposed the fragile breakage model (which is consistent with a high breakpoint reuse rate) as a possible alternative.</p></sec><sec id="s2b"><title>Section 2. ST-Synteny: Sankoff and Trinh's Synteny Block Identification Algorithm</title><p>Sankoff and Trinh's [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] simulations used a synteny block identification algorithm that we refer to as ST-Synteny. We emphasize that [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] used ST-Synteny to form synteny blocks, while [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] used a different algorithm, GRIMM-Synteny. While ST-Synteny appears to be a reasonable approach to synteny block identification, it was never applied to real data, only synthetic data. We compare ST-Synteny with GRIMM-Synteny on synthetic and real data.</p><p>GRIMM-Synteny is a parameter-dependent procedure that was designed to somewhat artificially separate microrearrangements and macrorearrangements found in real data. It was used for synteny block identification in the mouse [<xref ref-type="bibr" rid="pcbi-0020014-b017">17</xref>], rat [<xref ref-type="bibr" rid="pcbi-0020014-b016">16</xref>,<xref ref-type="bibr" rid="pcbi-0020014-b018">18</xref>], and chicken [<xref ref-type="bibr" rid="pcbi-0020014-b019">19</xref>,<xref ref-type="bibr" rid="pcbi-0020014-b020">20</xref>] genomic projects. Since GRIMM-Synteny was first proposed in 2002, a number of other synteny block identification approaches were published and a recent study revealed that they largely agree [<xref ref-type="bibr" rid="pcbi-0020014-b018">18</xref>]. Since GRIMM-Synteny was tested on many datasets and agreed with other approaches, we argue that it currently represents a consensus view on the synteny block identification approaches.</p><p>Below we show that ST-Synteny produces rather different results than GRIMM-Synteny. Since ST-Synteny produces results that are not consistent with the existing consensus views of comparative genomic architectures, we argue that their paper [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] revealed shortcomings of their own ST-Synteny algorithm rather than a flaw in [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>].</p><p>Sankoff and Trinh's [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] arguments included a simulation of random rearrangements combined with their algorithm for synteny block identification (which we refer to as ST-Synteny). This process follows the random breakage model but somewhat surprisingly results in a high breakpoint reuse rate. They thus argued that the Pevzner-Tesler result has nothing to do with breakpoint reuse but is merely an artifact of the synteny block identification.</p><p>To compare ST-Synteny with GRIMM-Synteny, we first reproduced the procedure described in [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>]. Although Sankoff and Trinh presented it as a single procedure, we break it into two phases: (1) a simulation to create synthetic rearranged genomes, which we give in Section 4, and (2) an algorithm to identify synteny blocks, which we present here.</p><p>Let π be a signed permutation on <italic>n</italic> elements (representing genes, anchors, or markers). This represents a genome that is rearranged as compared to a reference genome 1, … , <italic>n</italic>. Let <italic>w,</italic> Δ be positive integers; <italic>w</italic> represents the maximum microrearrangement span and Δ denotes the minimum number of elements in a synteny block.</p><sec id="s2b1"><title>ST-Synteny(π, w, Δ)</title><p>Step 1: Define each element of π as a block and iteratively amalgamate the resulting blocks as follows: two adjacent blocks in π are amalgamated if they contain elements <italic>i</italic> and <italic>j,</italic> where <italic>i</italic> or −<italic>i</italic> is in one block and <italic>j</italic> or −<italic>j</italic> is in another block and |<italic>i</italic> − <italic>j</italic>| ≤ <italic>w</italic>. Signs of the elements and blocks are recorded but ignored during amalgamation.</p><p>Step 2: Delete any “short” block containing less than Δ elements (Δ = 3 in [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>]).</p><p>Step 3: Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] did not specify how signs of blocks were determined from their constituent elements. The block signs are necessary and important for calculating rearrangement distance. For example, reassignment of “random” signs (or assignment of all positive signs) to a permutation with low breakpoint reuse rate will lead (with high probability) to a permutation with high breakpoint reuse rate, thus emulating a breakpoint reuse artifact.</p><p>This implementation assigned signs to synteny blocks according to two different rules: the majority sign rule, where a block is assigned to the majority sign of all its elements; and the separable permutation rule described in [<xref ref-type="bibr" rid="pcbi-0020014-b015">15</xref>]. The majority sign rule appears to be what [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] used (confirmed in private communication from Sankoff).</p></sec></sec><sec id="s2c"><title>Section 3. Shortcomings of ST-Synteny</title><p>We will show that ST-Synteny gives counterintuitive results even on small toy examples and then analyze the problems that occur as we scale up to larger synthetic or real-world datasets.</p><p>The example in <xref ref-type="fig" rid="pcbi-0020014-g001">Figure 1</xref> represents a genomic dot-plot for two fictitious genomes and illustrates one of the shortcomings of ST-Synteny. Finding synteny blocks for this permutation is a trivial problem and all other synteny block identification algorithms will output five synteny blocks, but ST-Synteny will form a single synteny block <italic>for any setting of parameters</italic>. Moreover, at the minimum setting of <italic>w</italic> = 1 (see below), ST-Synteny outputs a single block for 75% of all signed permutations of order 5! For other settings of the parameter <italic>w,</italic> the percentage of cases where ST-Synteny fails to reveal the correct synteny blocks increases even further.</p><fig id="pcbi-0020014-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.g001</object-id><label>Figure 1</label><caption><title>Nested Inversions Are Always Amalgamated by ST-Synteny</title><p>The dot-plot of a signed permutation of anchors (green) between two genomes is shown. Since the anchors are signed, they are represented as ±45-degree segments. Blocks were constructed by ST-Synteny (red) and GRIMM-Synteny (blue). ST-Synteny amalgamates everything into one block. GRIMM-Synteny produces the correct blocks. If the genome on the horizontal axis is taken to be the identity permutation 1 2 3 4 5, then the genome on the vertical axis is the signed permutation −3 2 −1 −5 4.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.g001" xlink:type="simple"/></fig><p>We will describe in detail issues concerning of the granularity of blocks ST-Synteny forms. Given one inversion
					<disp-formula id="pcbi-0020014-ex001"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.ex001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>(1</mml:mtext><mml:mn>...</mml:mn><mml:mtext>100) (&minus;200</mml:mtext><mml:mn>...</mml:mn><mml:mtext>-101) (201</mml:mtext><mml:mn>...</mml:mn><mml:mtext>300)</mml:mtext></mml:mrow></mml:math> --></disp-formula>
				</p><p>there should be three blocks and two breakpoints. However, there is no setting of the parameters of ST-Synteny that would do this. If <italic>w</italic> = 0, it is left as 300 separate elements (which are then deleted for being too small if Δ &gt; 1). If <italic>w</italic> ≥ 1, ST-Synteny forms one large block, as follows. First, it performs a number of amalgamation steps resulting in the expected 3 blocks:
					<disp-formula id="pcbi-0020014-e001"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>(1</mml:mtext><mml:mn>...</mml:mn><mml:mtext>100) (&minus;200</mml:mtext><mml:mn>...</mml:mn><mml:mtext>-101) (201</mml:mtext><mml:mn>...</mml:mn><mml:mtext>300)</mml:mtext></mml:mrow></mml:math> --></disp-formula>But the iterative amalgamation does not stop there. Since 100 and −101 are now in adjacent blocks and |101 − 100| = 1 ≤ <italic>w,</italic> it merges the first and middle blocks. Since −200 and 201 are in adjacent blocks, they are also merged. The result is a single block
					<disp-formula id="pcbi-0020014-e002"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e002" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>(1</mml:mtext><mml:mn>...</mml:mn><mml:mtext>100 &minus;200</mml:mtext><mml:mn>...</mml:mn><mml:mtext>-101 201</mml:mtext><mml:mn>...</mml:mn><mml:mtext>300)</mml:mtext></mml:mrow></mml:math> --></disp-formula>In fact, a signed permutation produced by applying any series of nested inversions to the identity will be reamalgamated into a single block by ST-Synteny whenever <italic>w</italic> ≥ 1. (For nonnested inversions, reamalgamations may also occur, resulting in fewer blocks than appropriate. For <italic>w</italic> = 1 and large <italic>n,</italic> this happens in ST-Synteny for over 77% of the signed permutations of length <italic>n</italic> that would not have any reamalgamation if the signs were properly considered. A paper is in preparation.) Inversions are <italic>nested</italic> when the two breakpoints of each inversion both lie within any single existing strip (as defined by the previous inversions) <italic>i, i</italic> + 1, <italic>i</italic> + 2, … , <italic>j</italic> or −<italic>j,</italic>−(<italic>j</italic> − 1), … , −<italic>i</italic>; “lie within” includes reuse of either or both endpoints of the strip. For example, consider this series of inversions:
					<disp-formula id="pcbi-0020014-ex002"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.ex002" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>(1</mml:mtext><mml:mn>...</mml:mn><mml:mtext>100) (&minus;200</mml:mtext><mml:mn>...</mml:mn><mml:mtext>-101) (201</mml:mtext><mml:mn>...</mml:mn><mml:mtext>300)</mml:mtext></mml:mrow></mml:math> --></disp-formula>
				</p><p>When given the last line as input, ST-Synteny first combines −5 and 6 into a block (−5 6). That block is amalgamated with the −4 into (−5 6 −4). Then 3, −2, 1 are successively amalgamated into that, resulting in a single block (1 3 −5 6 −4 −2).</p><p>In addition to the above-mentioned problems, if microrearrangements have occurred or if there is noise in the form of spurious elements, ST-Synteny tends to compute several smaller blocks rather than a larger block with microrearrangements. ST-Synteny assumes that all markers (orthologous genes or sequence anchors) are direct descendants of the most recent common ancestor of the two organisms being compared. This may be a reasonable assumption in comparing mitochondrial, chloroplast, or viral genomes, but between free-living organisms, false orthologs are inevitable, no matter how carefully the annotations are curated. Since the computed blocks are smaller, it increases the chance of them being deleted for being too short. It nonetheless increases the number of reported blocks, decreases their size, and increases the length of the breakpoint regions as compared to GRIMM-Synteny, thus tending to increase the number of breakpoint reuses even for “random” rearrangements. One may argue that this excessive granularity can be fixed by simply changing the parameters of ST-Synteny, but as we showed above there is often no choice of parameters that resolves the problem.</p><p>The reason is spurious elements (which are shown as black dots in the X chromosome illustration later in this paper in Section 5). If ST-Synteny is given a permutation with stray points 200 and 300
					<disp-formula id="pcbi-0020014-e003"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e003" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mn>...</mml:mn><mml:mtext>100 101 200 102 103 104 300 105 106 107</mml:mtext><mml:mn>...</mml:mn></mml:mrow></mml:math> --></disp-formula>then (at small <italic>w</italic> and Δ = 3) it first forms blocks
				</p><disp-formula id="pcbi-0020014-e004"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e004" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mn>...</mml:mn><mml:mtext>(100 101), (200), (102 103 104), (300), (105 106 107)</mml:mtext><mml:mn>...</mml:mn></mml:mrow></mml:math> --></disp-formula><p>Then it deletes small blocks (100 101), (200), (300), leaving two blocks: (102 103 104) and (105 106 107). (There is no rearrangement breakpoint between these two blocks, however.)</p><p>By contrast, GRIMM-Synteny does not require the elements in a block to be contiguous in all species in the input data. It first forms blocks
					<disp-formula id="pcbi-0020014-e005"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e005" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>(100 101 102 103 104 105 106 107), (200), (300) </mml:mtext></mml:mrow></mml:math> --></disp-formula>and then it deletes the small blocks (200) and (300), leaving one large block.
				</p><p>Another problem is that a synteny block identification algorithm should produce the same blocks when the two genomes are swapped. ST-Synteny, however, is not always symmetric in the two genomes when <italic>w</italic> ≥ 2. For example, consider the following permutation and its inverse permutation:
					<disp-formula id="pcbi-0020014-e006"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e006" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&pi;</mml:mi><mml:mo>&equals;</mml:mo><mml:mtext>1 3 6 9 2 4 7 10 5 8</mml:mtext></mml:mrow></mml:math> --></disp-formula>
					<disp-formula id="pcbi-0020014-e007"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e007" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msup><mml:mi>&pi;</mml:mi><mml:mrow><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo> &equals;</mml:mo><mml:mtext>1 5 2 6 9 3 7 10 4 8</mml:mtext></mml:mrow></mml:math> --></disp-formula>At <italic>w</italic> = 2, the blocks output by ST-Synteny for π are
					<disp-formula id="pcbi-0020014-e008"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e008" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>(1 3), (6), (9), (2 4), (7), (10), (5), (8)</mml:mtext></mml:mrow></mml:math> --></disp-formula>while the blocks output for π<sup>−1</sup> are
					<disp-formula id="pcbi-0020014-e009"><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.e009" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>(1), (5), (2), (6), (9), (3), (7), (10), (4), (8)</mml:mtext></mml:mrow></mml:math> --></disp-formula>This is illustrated in <xref ref-type="fig" rid="pcbi-0020014-g002">Figure 2</xref>.
				</p><fig id="pcbi-0020014-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.g002</object-id><label>Figure 2</label><caption><title>Asymmetric Treatment of Genomes by ST-Synteny</title><p>In comparing two genomes, ST-Synteny may produce different synteny blocks depending on which one is chosen as the reference genome. The synteny blocks produced by ST-Synteny are shown as red boxes around the anchors.</p><p>(A) The genome shown on the <italic>y</italic>-axis is the reference genome 1, …, 10, and the genome shown on the <italic>x</italic>-axis is represented as a permutation π of this.</p><p>(B) The exact same anchor arrangement is shown, but the <italic>x</italic>-axis is taken as the reference genome 1, …, 10 and the <italic>y</italic>-axis is the permutation π<sup>−1</sup>. Although the anchor arrangements are identical, ST-Synteny with parameters <italic>w</italic> = 2, Δ = 1 produces different blocks depending on which genome is the reference genome.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.g002" xlink:type="simple"/></fig></sec><sec id="s2d"><title>Section 4. GRIMM-Synteny versus ST-Synteny</title><p>In the previous sections, we described ST-Synteny, the synteny block identification algorithm within Sankoff and Trinh's simulations. They generated synthetic genomes to input to it as follows:</p><sec id="s2d1"><title>Simulation <italic>(n, m, k, w)</italic></title><p>Step 1: Generate m = 150 random inversions of a reference genome 1, 2, … , <italic>n</italic> with <italic>n</italic> = 5,000 “genes” (elements).</p><p>Step 2: Generate <italic>k</italic> microinversions of exactly <italic>w</italic> elements, each randomly placed throughout the genome.</p><p>Step 3: Output the resulting signed permutation π of <italic>n</italic> elements.</p><p>Then they apply ST-Synteny(π, w, Δ) to identify synteny blocks. Finally, they apply the GRIMM algorithm [<xref ref-type="bibr" rid="pcbi-0020014-b021">21</xref>,<xref ref-type="bibr" rid="pcbi-0020014-b022">22</xref>] to the resulting synteny blocks to calculate the rearrangement distance and the breakpoint reuse rate.</p><p>We reproduced the Sankoff-Trinh random simulations with GRIMM-Synteny in place of ST-Synteny to verify whether the appearance of the breakpoint reuses persists under the random breakage model. To compare ST-Synteny with GRIMM-Synteny on the same simulated permutations, we had to determine the parameters that best match the parameters used in Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>]. This is a nontrivial task since ST-Synteny is quite different from all other synteny block identification algorithms. We also remark that the description of ST-Synteny lacks some important details. For example, while Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b015">15</xref>] emphasized the importance of signs in the synteny block analysis, Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] do not even address this important issue.</p><p>GRIMM-Synteny(π, <italic>G, C</italic>) has maximum gap size parameter <italic>G</italic> (which is similar in spirit to <italic>w</italic> in ST-Synteny) and minimum cluster span parameter <italic>C</italic> (which is similar in spirit to Δ in ST-Synteny). For comparison, ST-Synteny(π, w, Δ) was replaced by GRIMM-Synteny(π, G, C) with “similar parameters,” to identify synteny blocks and compute reversal distance and breakpoint reuse rates. While we tried our best to match ST-Synteny and GRIMM-Synteny parameters, we emphasize the following concerns.</p><p>Our first concern is that Sankoff and Trinh regard elements (genes or anchors) as individual points with length 1, and while the element orientations are recorded, they do not make use of the orientations. Under these circumstances, a gap threshold <italic>G</italic> = <italic>w</italic> + 3 and minimum block size <italic>C</italic> = Δ is the best match.</p><p>In our simulations in <xref ref-type="fig" rid="pcbi-0020014-g003">Figures 3</xref>, <xref ref-type="supplementary-material" rid="pcbi-0020014-sg001">S1</xref>, and <xref ref-type="supplementary-material" rid="pcbi-0020014-sg002">S2</xref>, we used a minimum of Δ = 3 anchors per block in both programs, instead of GRIMM-Synteny's original definition of <italic>C</italic> as the minimum size in terms of the “span” of a block; the plots (not shown) on using the original definition of <italic>C</italic> = 3 in GRIMM-Synteny are similar to those shown using Δ = 3 instead. This isolates the differences in performance of the algorithms to the methods used to join elements into blocks.</p><fig id="pcbi-0020014-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.g003</object-id><label>Figure 3</label><caption><title>Breakpoint Reuse Rates in Simulations</title><p>The simulated number of microrearrangements is <italic>k,</italic> and the microrearrangement size is <italic>w.</italic> The same simulated rearrangements were analyzed three ways.</p><p>(A) ST-Synteny simulation, with signs of blocks determined using their majority sign rule.</p><p>(B) ST-Synteny simulation, with signs of blocks determined using GRIMM-Synteny's separable permutation rule.</p><p>(C) GRIMM-Synteny simulation. Anchors have length 1 for comparison with ST-Synteny.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.g003" xlink:type="simple"/></fig><p>Our second concern is that ST-Synteny does not make use of element signs or lengths, or gaps between elements; GRIMM-Synteny does take them into account, and it does affect whether the elements should be amalgamated into one block. Normally, when dealing with gene orders with unknown gene lengths and unknown intergenic gap lengths, GRIMM-Synteny would assign a length of 2 to each gene (element) so as to make the two ends distinguishable. However, the simulations in <xref ref-type="fig" rid="pcbi-0020014-g003">Figures 3</xref>, <xref ref-type="supplementary-material" rid="pcbi-0020014-sg001">S1</xref>, and <xref ref-type="supplementary-material" rid="pcbi-0020014-sg002">S2</xref> are done with length 1 anchors in both programs for a more direct comparison.</p><p>Breakpoint reuse rate as a function of the number of microinversions is shown in <xref ref-type="fig" rid="pcbi-0020014-g003">Figure 3</xref>A (ST-Synteny, majority sign rule), 3B (ST-Synteny, separable permutation sign rule), and 3C (GRIMM-Synteny). Note that at <italic>k</italic> = 0, there is no microinversion. Although a microinversion of span <italic>w</italic> = 1 changes the sign of an element, it is ignored by ST-Synteny, so that <italic>w</italic> = 1 serves only as the threshold for block amalgamation.</p><p>Notice that as the number of microinversion increases and the span of inversion increases, the breakpoint reuse rate of simulation with ST-Synteny increases much faster than that of GRIMM-Synteny. Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] simulated microinversion spans of up to ten or 15 elements, which correspond to approximately 6 and 9 Mb of the human genome, respectively; this is much larger than the average inversion span of microrearrangements between human and mouse computed by GRIMM-Synteny. These unrealistically large spans are therefore excluded from our simulations. To put things in perspective, the average size of microrearrangements in the human/mouse comparison is 196 kb, corresponding to “<italic>w</italic> = 0.33” (although <italic>w</italic> can only be an integer), and the median microrearrangement size is approximately 7 kb. It implies that the most realistic simulations in Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] correspond to very small <italic>w</italic> (although even <italic>w</italic> = 1, 2 correspond to rearrangements with longer average span than in the case of human/mouse comparison). For these parameters and with a correct synteny block identification algorithm, the breakpoint reuse rate is low for the random breakage model, negating the Sankoff-Trinh arguments against the fragile breakage model.</p><p>To further contrast the two models, the percentages of the breakpoint regions of the whole simulated genome, denoted as <italic>bk,</italic> were computed and are shown in <xref ref-type="supplementary-material" rid="pcbi-0020014-sg001">Figure S1</xref> for ST-Synteny and GRIMM-Synteny. The breakpoint regions from ST-Synteny are much larger as compared to GRIMM-Synteny, thus refuting another Sankoff-Trinh argument against the random breakage reuse phenomenon (the larger the breakpoint regions, the better are the chances to observe breakpoint reuse, even in the random breakage model).</p><p>The number of elements kept by each model is shown in <xref ref-type="supplementary-material" rid="pcbi-0020014-sg002">Figure S2</xref>. As the number of microrearrangement grows, ST-Synteny deletes elements at a faster rate than GRIMM-Synteny, as a result of deleting small blocks. That ST-Synteny outputs fewer blocks than GRIMM-Synteny for relatively small (although still unrealistically large from the perspective of real human/mouse genomic architectures) <italic>w</italic> and large <italic>k</italic> (unpublished data) can be explained by the combination of deleting small blocks and mistakenly amalgamating large ones.</p></sec></sec><sec id="s2e"><title>Section 5. GRIMM-Synteny versus ST-Synteny: Dot-Plots</title><p>We illustrate some of the differences between ST-Synteny and GRIMM-Synteny with a synthetic dataset (<xref ref-type="fig" rid="pcbi-0020014-g004">Figure 4</xref>) and real human/mouse data (<xref ref-type="fig" rid="pcbi-0020014-g005">Figure 5</xref>).</p><fig id="pcbi-0020014-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.g004</object-id><label>Figure 4</label><caption><title>GRIMM-Synteny and ST-Synteny on the Same Simulated Data</title><p>The genomic dot-plot is shown in thick green. The synteny blocks identified by GRIMM-Synteny are shown as blue rectangles, and the ones from ST-Synteny are dashed red rectangles. When block coordinates coincide, this appears as dashed blue/red. Signs of the blocks are shown as diagonals. Tiny blocks have been artificially enlarged for visibility and do not actually protrude into other blocks. The simulated human genome has anchors 1 through 5,000. The simulated mouse genome was generated as π = Simulation(5000, 15, 500, 5). Blocks were identified via GRIMM-Synteny(π, 8, 3) and ST-Synteny(π, 5, 3).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.g004" xlink:type="simple"/></fig><fig id="pcbi-0020014-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.g005</object-id><label>Figure 5</label><caption><title>Synteny Blocks between Human and Mouse X Chromosomes</title><p>Blocks for the X chromosomes were constructed by GRIMM-Synteny (blue) based on anchor coordinates and ST-Synteny (red) based only on anchor permutations. Anchors are shown in green. Small blocks deleted by ST-Synteny are shown in black.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.g005" xlink:type="simple"/></fig><p>We constructed a synthetic genome π = Simulation(5000, 15, 500, 5). The genomic dot-plot and synteny blocks output by ST-Synteny and GRIMM-Synteny for this genome with one setting of detection parameters are shown in <xref ref-type="fig" rid="pcbi-0020014-g004">Figure 4</xref>. The breakpoint reuse rate is 1.31 and 1.09 from blocks output by ST-Synteny and GRIMM-Synteny, respectively. Notice that ST-Synteny amalgamated blocks that should be separate. For each <italic>w</italic> from 1 to 5, we made ten simulated genomes π = Simulation(5000, 15, 500, <italic>w</italic>). The average breakpoint reuse rate from ST-Synteny(π, <italic>w,</italic> 3) rises from 1.07 to 1.30, while in GRIMM-Synteny(π, <italic>w</italic> + 3, 3), the breakpoint reuse rate increases only from 1.03 to 1.09.</p><p>To further illustrate the difference between ST-Synteny and GRIMM-Synteny in identifying synteny blocks, both methods were applied to human/mouse anchors on the X chromosome (National Center for Biotechnology Information [NCBI] Human version 34, Mouse version 30). There are 58,930 anchors, and the human X chromosome has a length of 153,692,391 base pairs (bp). The full version of GRIMM-Synteny, which accounts for anchor coordinates, lengths, and signs, was used with minimum block size threshold of 1 Mb and maximum gap threshold of 1 Mb. ST-Synteny was run with <italic>w</italic> = 378 and Δ = 379. Since ST-Synteny uses only the permutation of the anchors, we plot the resulting blocks from both programs together superimposed with anchor permutations. Results are shown in <xref ref-type="fig" rid="pcbi-0020014-g005">Figure 5</xref> and <xref ref-type="table" rid="pcbi-0020014-t001">Table 1</xref>. GRIMM-Synteny identified ten blocks with microinversion distance of 825. ST-Synteny identified many more synteny blocks than did GRIMM-Synteny. The number of blocks in ST-Synteny did not reduce dramatically when the threshold <italic>w</italic> was increased (data not shown).</p><table-wrap content-type="1col" id="pcbi-0020014-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.t001</object-id><label>Table 1</label><caption><p>GRIMM-Synteny versus ST-Synteny Applied to Human and Mouse X Chromosomes</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.t001" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb1col1" align="left" charoff="0" char=""/><col id="tb1col2" align="left" charoff="0" char=""/><col id="tb1col3" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left"><hr/>Characteristic</td><td><hr/>GRIMM-Synteny</td><td><hr/>ST-Synteny</td></tr></thead><tbody><tr><td>Number of blocks</td><td>10</td><td>44</td></tr><tr><td>Total block length (bp)</td><td>139,781,782</td><td>95,317,543</td></tr><tr><td>Breakpoint region (&percnt; of chromosome length)</td><td>9.05&percnt;</td><td>37.98&percnt;</td></tr></tbody></table> --><!-- --></table-wrap><p>If one compares <xref ref-type="fig" rid="pcbi-0020014-g004">Figures 4</xref> and <xref ref-type="fig" rid="pcbi-0020014-g005">5</xref>, one will notice that ST-Synteny outputs more blocks than GRIMM-Synteny in <xref ref-type="fig" rid="pcbi-0020014-g005">Figure 5</xref> but fewer in <xref ref-type="fig" rid="pcbi-0020014-g004">Figure 4</xref>. Neither the order of magnitude difference in the number of markers (5,000 genes versus 59,000 anchors) nor the random versus fragile breakage model is responsible for this “role reversal.” As noted in Section 3, one of the tendencies of ST-Synteny is to amalgamate blocks that should be separate, and another is its inability to merge synteny blocks in the presence of short “out-of-place” inversions or false orthologs. In <xref ref-type="fig" rid="pcbi-0020014-g004">Figure 4</xref>, the numbers of macrorearrangements and microrearrangements were chosen to be much smaller than the previous simulations in order for the synteny blocks to be legible; in this case, the first deficiency of ST-Synteny dominates, resulting in fewer blocks than that from GRIMM-Synteny. When the number of rearrangements becomes large or when data become noisy (as in the case of real genomic data [<xref ref-type="fig" rid="pcbi-0020014-g005">Figure 5</xref>]), the second deficiency of ST-Synteny dominates. By contrast, GRIMM-Synteny was designed to filter out noise, thereby identifying more realistic synteny blocks.</p></sec><sec id="s2f"><title>Section 6. Improved Simulation including Varying Length Anchors and Microrearrangements</title><p>In the previous simulations, the length and coordinate distributions of anchors were ignored, and permutations were performed on unit-length anchors (elements). To better simulate randomized rearrangements, GRIMM-Synteny was applied to simulated unichromosomal and multichromosomal genomes with anchors of varying lengths. In the simulated genome, randomized scenarios of rearrangements were generated at the level of nucleotides. The details of the simulation are as follows.</p><p>Step 1: Take the human coordinates of human/mouse alignment anchors derived from NCBI Human version 34 and Mouse version 30. In the unichromosomal genome simulation, anchors from the X chromosome were used. In the multichromosomal genome simulation, all anchors were used.</p><p>Step 2: For the unichromosomal simulation, generate six inversions at random locations. Inversions in this genome represent true inversions since “What breaks in the X chromosome, stays in the X chromosome.” For the multichromosomal simulation, generate 150 pairs of breakpoints at random locations in the genome. When a pair of breakpoints lie on the same chromosome, perform an inversion, and when they lie on different chromosomes, perform a translocation. If a breakpoint resides within an anchor, the breakpoint is moved at random to the immediate left or right of the anchor; anchors are not split.</p><p>Step 3: Generate <italic>k</italic> microinversions randomly located in the genome. The spans of inversions are randomly distributed between 1 and <italic>W</italic> nucleotides. Since the distribution of the spans of inversions is unknown, the uniform distribution used in the simulation is chosen somewhat arbitrarily.</p><p>Step 4: Add noise to the simulated genomes as follows. Randomly choose 0.2% of the anchors to be noisy anchors. Move each noisy anchor to a random location in the genome and chose its sign at random.</p><p>Step 5: Apply the GRIMM-Synteny algorithm to identify synteny blocks and compute the inversion or multichromosomal distance and breakpoint reuse rate between the human and the simulated genomes. Both block size and gap thresholds were set to 1 Mb.</p><p>The results of the unichromosomal simulation are listed in <xref ref-type="table" rid="pcbi-0020014-t002">Table 2</xref>, and the results of the multichromosomal simulation are listed in <xref ref-type="table" rid="pcbi-0020014-t003">Table 3</xref>. As in the previous section, <italic>bk</italic> is the percentage of the genome in breakpoint regions. <italic>r<sub>e</sub></italic> is the percentage of blocks that have at least one of the two ending anchors of the simulated genome out of order as compared to those of the original human anchors of the block.</p><table-wrap content-type="2col" id="pcbi-0020014-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.t002</object-id><label>Table 2</label><caption><p>Randomized Unichromosomal Rearrangement Simulation with Human X Chromosome Anchors</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.t002" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb2col1" align="char" charoff="0" char="."/><col id="tb2col2" align="char" charoff="0" char="."/><col id="tb2col3" align="char" charoff="0" char="."/><col id="tb2col4" align="char" charoff="0" char="."/><col id="tb2col5" align="char" charoff="0" char="."/><col id="tb2col6" align="char" charoff="0" char="."/><col id="tb2col7" align="char" charoff="0" char="."/><col id="tb2col8" align="char" charoff="0" char="."/><col id="tb2col9" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>k</td><td colspan="4"><hr/> W &equals; 0.5 Mb</td><td colspan="4"><hr/> W &equals; 1 Mb</td></tr><tr><td><hr/>Number of Blocks</td><td><hr/>bk (&percnt;)</td><td><hr/>r<sub>e</sub> (&percnt;)</td><td><hr/>Reuse Rate</td><td><hr/>Number of Blocks</td><td><hr/>bk (&percnt;)</td><td><hr/>r<sub>e</sub> (&percnt;)</td><td><hr/>Reuse Rate</td></tr></thead><tbody><tr><td valign="bottom">0</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">0.0</td><td valign="bottom">1.25</td><td valign="bottom">12</td><td valign="bottom">2.9</td><td valign="bottom">0.0</td><td valign="bottom">1.09</td></tr><tr><td valign="bottom">100</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">55.6</td><td valign="bottom">1.25</td><td valign="bottom">12</td><td valign="bottom">3.5</td><td valign="bottom">33.3</td><td valign="bottom">1.09</td></tr><tr><td valign="bottom">200</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">55.6</td><td valign="bottom">1.25</td><td valign="bottom">12</td><td valign="bottom">3.6</td><td valign="bottom">83.3</td><td valign="bottom">1.09</td></tr><tr><td valign="bottom">300</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">66.7</td><td valign="bottom">1.25</td><td valign="bottom">12</td><td valign="bottom">3.5</td><td valign="bottom">100.0</td><td valign="bottom">1.09</td></tr><tr><td valign="bottom">400</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">88.9</td><td valign="bottom">1.25</td><td valign="bottom">12</td><td valign="bottom">3.3</td><td valign="bottom">91.7</td><td valign="bottom">1.09</td></tr><tr><td valign="bottom">500</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">88.9</td><td valign="bottom">1.25</td><td valign="bottom">16</td><td valign="bottom">4.3</td><td valign="bottom">100.0</td><td valign="bottom">1.20</td></tr><tr><td valign="bottom">600</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">100.0</td><td valign="bottom">1.25</td><td valign="bottom">13</td><td valign="bottom">4.1</td><td valign="bottom">100.0</td><td valign="bottom">1.17</td></tr><tr><td valign="bottom">700</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">100.0</td><td valign="bottom">1.25</td><td valign="bottom">13</td><td valign="bottom">3.6</td><td valign="bottom">100.0</td><td valign="bottom">1.17</td></tr><tr><td valign="bottom">800</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">100.0</td><td valign="bottom">1.25</td><td valign="bottom">13</td><td valign="bottom">3.3</td><td valign="bottom">92.3</td><td valign="bottom">1.17</td></tr><tr><td valign="bottom">900</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">100.0</td><td valign="bottom">1.25</td><td valign="bottom">13</td><td valign="bottom">3.8</td><td valign="bottom">92.3</td><td valign="bottom">1.17</td></tr><tr><td valign="bottom">1,000</td><td valign="bottom">9</td><td valign="bottom">3.5</td><td valign="bottom">100.0</td><td valign="bottom">1.25</td><td valign="bottom">13</td><td valign="bottom">4.1</td><td valign="bottom">92.3</td><td valign="bottom">1.17</td></tr></tbody></table> --><!-- --></table-wrap><table-wrap content-type="2col" id="pcbi-0020014-t003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.t003</object-id><label>Table 3</label><caption><p>Randomized Multichromosomal Rearrangement Simulation with Human Anchors</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.t003" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb3col1" align="char" charoff="0" char="."/><col id="tb3col2" align="char" charoff="0" char="."/><col id="tb3col3" align="char" charoff="0" char="."/><col id="tb3col4" align="char" charoff="0" char="."/><col id="tb3col5" align="char" charoff="0" char="."/><col id="tb3col6" align="char" charoff="0" char="."/><col id="tb3col7" align="char" charoff="0" char="."/><col id="tb3col8" align="char" charoff="0" char="."/><col id="tb3col9" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>k</td><td colspan="4"><hr/> W &equals; 0.5 Mb</td><td colspan="4"><hr/> W &equals; 1 Mb</td></tr><tr><td><hr/>Number of Blocks</td><td><hr/>bk (&percnt;)</td><td><hr/>r<sub>e</sub> (&percnt;)</td><td><hr/>Reuse Rate</td><td><hr/>Number of Blocks</td><td><hr/>bk (&percnt;)</td><td><hr/>r<sub>e</sub> (&percnt;)</td><td><hr/>Reuse Rate</td></tr></thead><tbody><tr><td valign="bottom">0</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">0.0</td><td valign="bottom">1.12</td><td valign="bottom">286</td><td valign="bottom">6.9</td><td valign="bottom">0.0</td><td valign="bottom">1.12</td></tr><tr><td valign="bottom">1,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">18.1</td><td valign="bottom">1.12</td><td valign="bottom">286</td><td valign="bottom">7.0</td><td valign="bottom">28.0</td><td valign="bottom">1.12</td></tr><tr><td valign="bottom">2,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">30.1</td><td valign="bottom">1.12</td><td valign="bottom">284</td><td valign="bottom">7.1</td><td valign="bottom">44.4</td><td valign="bottom">1.12</td></tr><tr><td valign="bottom">3,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">37.2</td><td valign="bottom">1.12</td><td valign="bottom">283</td><td valign="bottom">7.4</td><td valign="bottom">60.8</td><td valign="bottom">1.12</td></tr><tr><td valign="bottom">4,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">44.7</td><td valign="bottom">1.12</td><td valign="bottom">284</td><td valign="bottom">7.6</td><td valign="bottom">70.1</td><td valign="bottom">1.13</td></tr><tr><td valign="bottom">5,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">52.8</td><td valign="bottom">1.12</td><td valign="bottom">285</td><td valign="bottom">7.7</td><td valign="bottom">75.8</td><td valign="bottom">1.13</td></tr><tr><td valign="bottom">6,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">58.9</td><td valign="bottom">1.12</td><td valign="bottom">283</td><td valign="bottom">7.9</td><td valign="bottom">78.8</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">7,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">66.0</td><td valign="bottom">1.12</td><td valign="bottom">283</td><td valign="bottom">7.6</td><td valign="bottom">82.0</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">8,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">72.7</td><td valign="bottom">1.12</td><td valign="bottom">284</td><td valign="bottom">7.7</td><td valign="bottom">88.7</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">9,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">75.2</td><td valign="bottom">1.12</td><td valign="bottom">290</td><td valign="bottom">7.6</td><td valign="bottom">91.4</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">10,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">76.6</td><td valign="bottom">1.12</td><td valign="bottom">293</td><td valign="bottom">7.6</td><td valign="bottom">93.2</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">11,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">79.8</td><td valign="bottom">1.12</td><td valign="bottom">292</td><td valign="bottom">7.6</td><td valign="bottom">93.2</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">12,000</td><td valign="bottom">282</td><td valign="bottom">6.7</td><td valign="bottom">81.2</td><td valign="bottom">1.12</td><td valign="bottom">293</td><td valign="bottom">7.5</td><td valign="bottom">95.2</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">13,000</td><td valign="bottom">282</td><td valign="bottom">6.8</td><td valign="bottom">80.9</td><td valign="bottom">1.12</td><td valign="bottom">297</td><td valign="bottom">7.5</td><td valign="bottom">95.6</td><td valign="bottom">1.14</td></tr><tr><td valign="bottom">14,000</td><td valign="bottom">282</td><td valign="bottom">6.8</td><td valign="bottom">83.3</td><td valign="bottom">1.12</td><td valign="bottom">297</td><td valign="bottom">7.5</td><td valign="bottom">95.6</td><td valign="bottom">1.16</td></tr><tr><td valign="bottom">15,000</td><td valign="bottom">282</td><td valign="bottom">6.8</td><td valign="bottom">85.8</td><td valign="bottom">1.12</td><td valign="bottom">298</td><td valign="bottom">7.4</td><td valign="bottom">96.6</td><td valign="bottom">1.17</td></tr></tbody></table> --><!-- --></table-wrap><p>A similar simulation was also performed on mouse/rat X chromosome alignment anchors, which presumably have more signal and less noise than human/mouse alignment anchors. The anchors were derived from mouse NCBIM33 and rat RGSC3.4 using BLASTZ [<xref ref-type="bibr" rid="pcbi-0020014-b023">23</xref>]. GRIMM-Synteny identified 18 synteny blocks, with microinversion distance of 4,287. The breakpoint reuse rate is 1.58. Using these parameters as a reference, the simulated genomes started with the mouse coordinates of the mouse/rat X chromosome anchors, followed by nine macroinversions and up to 5,000 microinversions based on the random breakage model. GRIMM-Synteny was applied to the resulting genomes. The results are listed in <xref ref-type="table" rid="pcbi-0020014-t004">Table 4</xref>. Notice that when the maximum inversion span is <italic>W</italic> = 1 Mb, the breakpoint reuse rate is mostly 1.00, the theoretical value under the random breakage model.</p><table-wrap content-type="2col" id="pcbi-0020014-t004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.t004</object-id><label>Table 4</label><caption><p>Randomized Unichromosomal Rearrangement Simulation with Mouse X Chromosome Anchors from Mouse/Rat Alignment</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.t004" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb4col1" align="char" charoff="0" char="."/><col id="tb4col2" align="char" charoff="0" char="."/><col id="tb4col3" align="char" charoff="0" char="."/><col id="tb4col4" align="char" charoff="0" char="."/><col id="tb4col5" align="char" charoff="0" char="."/><col id="tb4col6" align="char" charoff="0" char="."/><col id="tb4col7" align="char" charoff="0" char="."/><col id="tb4col8" align="char" charoff="0" char="."/><col id="tb4col9" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>k</td><td colspan="4"><hr/>W &equals; 0.5 Mb</td><td colspan="4"><hr/> W &equals; 1 Mb</td></tr><tr><td><hr/>Number of Blocks</td><td><hr/>bk (&percnt;)</td><td><hr/>r<sub>e</sub> (&percnt;)</td><td><hr/>Reuse Rate</td><td><hr/>Number of Blocks</td><td><hr/>bk (&percnt;)</td><td><hr/>r<sub>e</sub> (&percnt;)</td><td><hr/>Reuse Rate</td></tr></thead><tbody><tr><td valign="bottom">0</td><td valign="bottom">15</td><td valign="bottom">3.9</td><td valign="bottom">0.0</td><td valign="bottom">1.29</td><td valign="bottom">18</td><td valign="bottom">2.2</td><td valign="bottom">0.0</td><td valign="bottom">1.00</td></tr><tr><td valign="bottom">1,000</td><td valign="bottom">15</td><td valign="bottom">3.9</td><td valign="bottom">100.0</td><td valign="bottom">1.29</td><td valign="bottom">18</td><td valign="bottom">3.6</td><td valign="bottom">94.4</td><td valign="bottom">1.00</td></tr><tr><td valign="bottom">2,000</td><td valign="bottom">15</td><td valign="bottom">3.9</td><td valign="bottom">100.0</td><td valign="bottom">1.29</td><td valign="bottom">18</td><td valign="bottom">2.5</td><td valign="bottom">100.0</td><td valign="bottom">1.00</td></tr><tr><td valign="bottom">3,000</td><td valign="bottom">15</td><td valign="bottom">3.9</td><td valign="bottom">93.3</td><td valign="bottom">1.29</td><td valign="bottom">16</td><td valign="bottom">3.6</td><td valign="bottom">100.0</td><td valign="bottom">1.00</td></tr><tr><td valign="bottom">4,000</td><td valign="bottom">15</td><td valign="bottom">3.9</td><td valign="bottom">100.0</td><td valign="bottom">1.29</td><td valign="bottom">17</td><td valign="bottom">3.4</td><td valign="bottom">100.0</td><td valign="bottom">1.06</td></tr><tr><td valign="bottom">5,000</td><td valign="bottom">15</td><td valign="bottom">3.9</td><td valign="bottom">100.0</td><td valign="bottom">1.29</td><td valign="bottom">16</td><td valign="bottom">3.6</td><td valign="bottom">100.0</td><td valign="bottom">1.00</td></tr></tbody></table> --><!-- --></table-wrap><p>One may notice that in <xref ref-type="table" rid="pcbi-0020014-t003">Table 3</xref>, the reuse rate is at least 1.12 under random breakage model while theoretically it should be 1.00. The difference is explained by the block size and gap thresholds used in GRIMM-Synteny. To show the effect of thresholds on the breakpoint reuse rate, GRIMM-Synteny was performed on the simulated dataset with 150 macroinversions and without microinversion. The block size and gap threshold were decreased from 1 Mb to 10 kb. The resulting breakpoint reuse rates are shown in <xref ref-type="table" rid="pcbi-0020014-t005">Table 5</xref>. As the threshold decreases from 1 Mb to 10 kb, the breakpoint reuse rate decreases from 1.12 to 1.02. The side effect of the thresholds is small, however, and does not itself explain the high breakpoint reuse rate found in real human/mouse genome data if the random breakage model is to be assumed.</p><table-wrap content-type="1col" id="pcbi-0020014-t005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.t005</object-id><label>Table 5</label><caption><p>Breakpoint Reuse Rate versus Block Size and Gap Threshold Used in GRIMM-Synteny on Simulated Genome-Based Random Breakage Model</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.t005" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb5col1" align="char" charoff="0" char="."/><col id="tb5col2" align="char" charoff="0" char="."/><col id="tb5col3" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" valign="bottom"><hr/>Threshold (kb)</td><td valign="bottom"><hr/><italic>W</italic> &equals; 0.5 Mb</td><td valign="bottom"><hr/><italic>W</italic> &equals; 1 Mb</td></tr></thead><tbody><tr><td valign="bottom">10</td><td valign="bottom">1.02</td><td valign="bottom">1.02</td></tr><tr><td valign="bottom">50</td><td valign="bottom">1.02</td><td valign="bottom">1.02</td></tr><tr><td valign="bottom">100</td><td valign="bottom">1.03</td><td valign="bottom">1.04</td></tr><tr><td valign="bottom">300</td><td valign="bottom">1.04</td><td valign="bottom">1.05</td></tr><tr><td valign="bottom">500</td><td valign="bottom">1.06</td><td valign="bottom">1.06</td></tr><tr><td valign="bottom">1,000</td><td valign="bottom">1.12</td><td valign="bottom">1.12</td></tr></tbody></table> --><!-- --></table-wrap></sec><sec id="s2g"><title>Section 7. Analyzing Whole-Genome Rearrangements in Human and Mouse</title><p>All of the simulations, whether permutation or sequence based, were based on randomized rearrangements. How do they compare to human/mouse rearrangements? Applying the GRIMM-Synteny algorithm to the real human/mouse alignment data with block size and gap threshold of 1 Mb yielded 294 synteny blocks and genome distance of 262. The breakpoint reuse rate was 1.67.</p><p>We further studied the starting and ending anchors within each synteny block to arrive at realistic parameters for microrearrangements. In the absence of microrearrangements, the ending anchors of every synteny block are conserved between two genomes. Microrearrangements acting on ends of synteny blocks destroy this conservation; e.g., an ending anchor in a human synteny block may not be an ending anchor in a mouse synteny block. The percentages of blocks that have at least one of the two ending anchors out of order is denoted as <italic>r<sub>e</sub></italic>. Of 294 human/mouse synteny blocks, 115 had anchors at one or both ends out of order; together these give an <italic>r<sub>e</sub></italic> of 39.1%.</p><p>The 294 human/mouse synteny blocks contained 10,900 microrearrangements. Of these microrearrangements, the average span of inversion was 196 kb, the median was 7 kb, and the maximum was 13.9 Mb. In terms of the number of anchors, the average span of inversion was 78, the median was four, and the maximum was 7,632. The breakpoint regions comprised 9.06% of the human genome. For a comparable breakpoint reuse rate, the span of microrearrangements would have to be unrealistically large. The values of <italic>k</italic> and <italic>r<sub>e</sub></italic> in the human/mouse data are much higher and the value of <italic>bk</italic> is much lower than those from the simulated genomes generated with the random breakage model. This may suggest that rearrangements, or breakpoints, are not randomly distributed across the whole genome.</p><p>As shown in the randomized rearrangement simulations, breakpoint reuse increased with the number of microrearrangements and the length of microinversions. In sequence-based human/mouse rearrangement analysis, approximately 10,000 microrearrangements were found inside 294 synteny blocks. When the human/mouse comparison was performed based on gene order, only 98 microrearrangements were found inside 373 synteny blocks. The breakpoint reuse rate of microrearrangements was only 1.02. Data from sequence- and gene order–based comparison are listed in <xref ref-type="table" rid="pcbi-0020014-t006">Table 6</xref>.</p><table-wrap content-type="1col" id="pcbi-0020014-t006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.t006</object-id><label>Table 6</label><caption><p>Sequence-Based versus Gene-Based Rearrangements</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.t006" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb6col1" align="left" charoff="0" char=""/><col id="tb6col2" align="left" charoff="0" char=""/><col id="tb6col3" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left" valign="bottom"><hr/> Characteristic</td><td valign="bottom" align="left"><hr/>Sequence- Based</td><td valign="bottom" align="left"><hr/>Gene- Based</td></tr></thead><tbody><tr><td valign="bottom" align="left">Number of elements</td><td valign="bottom" align="left">1,433,472 anchors</td><td valign="bottom" align="left">19,598 genes</td></tr><tr><td valign="bottom" align="left">Block size threshold</td><td valign="bottom" align="left">1 Mb</td><td valign="bottom" align="left">3 genes</td></tr><tr><td valign="bottom" align="left">Gap threshold (sum)</td><td valign="bottom" align="left">1 Mb</td><td valign="bottom" align="left">4 genes</td></tr><tr><td valign="bottom" align="left">Number of blocks</td><td valign="bottom" align="left">294</td><td valign="bottom" align="left">373</td></tr><tr><td valign="bottom" align="left">Breakpoint reuse rate</td><td valign="bottom" align="left">1.67</td><td valign="bottom" align="left">1.61</td></tr><tr><td valign="bottom" align="left">Total human block length (bp)</td><td valign="bottom" align="left">2.746 &times; 10<sup>9</sup></td><td valign="bottom" align="left">2.509 &times; 10<sup>9</sup></td></tr><tr><td valign="bottom" align="left">Human breakpoint region</td><td valign="bottom" align="left">9.43&percnt;</td><td valign="bottom" align="left">16.48&percnt;</td></tr><tr><td valign="bottom" align="left">Human breakpoint region (except telomeres)</td><td valign="bottom" align="left">5.71&percnt;</td><td valign="bottom" align="left">12.34&percnt;</td></tr><tr><td valign="bottom" align="left">Microrearrangements</td><td valign="bottom" align="left">10,900</td><td valign="bottom" align="left">98</td></tr><tr><td valign="bottom" align="left">Microrearrangement breakpoints</td><td valign="bottom" align="left">15,842</td><td valign="bottom" align="left">192</td></tr><tr><td valign="bottom" align="left">Microrearrangement reused breakpoints</td><td valign="bottom" align="left">5,958</td><td valign="bottom" align="left">4</td></tr><tr><td valign="bottom" align="left">Microrearrangement breakpoint reuse rate</td><td valign="bottom" align="left">1.38</td><td valign="bottom" align="left">1.02</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt601"><p>Data derived from NCBI Human version 34 and Mouse version 30.</p></fn></table-wrap-foot> --></table-wrap></sec><sec id="s2h"><title>Section 8. Intergenic Breakage Model</title><p>What makes certain regions break and others not? Is it a biophysical constraint or a selection constraint? One observation we can make is that breaks are less likely to occur within genes (and within regulatory regions) since selection usually works against such breaks. The average length of intergenic regions of the human genome (NCBI version 34) is approximately 80 kb, much smaller than the average length of breakpoint regions. There are a total of 21,911 intergenic regions within synteny blocks, with an average length of 77 kb, while the average length of the 2,116 intergenic regions within breakpoint regions is a much higher 100 kb. The distributions of length of human intergenic regions are shown in <xref ref-type="fig" rid="pcbi-0020014-g006">Figure 6</xref>. While the majority of the intergenic regions are short and reside within synteny blocks (<xref ref-type="fig" rid="pcbi-0020014-g006">Figure 6</xref>A), notice in <xref ref-type="fig" rid="pcbi-0020014-g006">Figure 6</xref>B that of 241 long intergenic regions with length greater than 1 Mb, 32 reside within breakpoint regions or across breakpoint regions and synteny blocks. If we assume that breakpoints occur randomly within intergenic regions (and are nearly forbidden inside the genes), then the gene-dense regions with small overall lengths of intergenic regions will rarely break simply by chance, thus mimicking what was referred to as “solid regions” in [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>].</p><fig id="pcbi-0020014-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.g006</object-id><label>Figure 6</label><caption><title>Distribution of Human Intergenic Regions within Synteny Blocks or within Breakpoint Regions</title><p>(A) Regions of length ≤1 Mb and (B) length &gt;1 Mb that are within synteny blocks (blue) and within breakpoint regions or across breakpoint regions and synteny blocks (red). Data derived from NCBI Human version 34 and Mouse version 30.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.g006" xlink:type="simple"/></fig><p>To investigate the hypothesis that long intergenic regions may be potential hot spots of rearrangements, we performed the following simulation. Assume that the genome consists of <italic>G</italic> + <italic>I</italic> nucleotides, where <italic>G</italic> is the total size of genes extended by upstream regulatory regions and <italic>I</italic> is the total size of remaining intergenic regions. To account for upstream regulatory regions (which are also unlikely to be broken), we artificially extended every gene by a region of length <italic>R</italic> upstream, thus reducing the sizes of corresponding intergenic regions by <italic>R</italic> nucleotides. Although regulatory regions in mammalian genomes are often located far from the gene starts, the average size of such regulatory regions remains unknown. We remark that genome rearrangement studies may shed light on the size of regulatory regions. For example, if there was a rearrangement (or even a microrearrangement) between human and chimpanzee <italic>R</italic> nucleotides from a gene start, it is likely that the regulatory region for this gene is shorter than <italic>R</italic> (otherwise, the rearrangement would disrupt the regulatory region). Although such conclusions should be taken with caution (e.g., they do not apply if the human and chimpanzee genes exhibit very different regulatory patterns), they are useful as the first approximation for the otherwise difficult problem of delineating regulatory regions. Below we address an even more difficult problem of estimating the average size of regulatory regions <italic>R</italic> based on rearrangement analysis.</p><p>We remark that if the length of regulatory regions is set to be <italic>R,</italic> the intergenic regions shorter than <italic>R</italic> may disappear (depending on the orientation of the genes), thus leading to “merging” genes separated by short intergenic regions and promoting breakpoint reuse elsewhere. As a first approximation, we assume that the probability of breakage at each nucleotide within genes and regulatory regions is 0 and the probability of breakage at each nucleotide in intergenic regions is 1/<italic>I</italic> (note that <italic>I</italic> decreases as <italic>R</italic> increases). We performed 240 random macrorearrangements with breakpoints chosen by this distribution and applied GRIMM-Synteny (using minimum block size threshold of 1 Mb and maximum gap threshold of 1 Mb) to compute blocks and then the breakpoint reuse rate. We contrasted this <italic>intergenic breakage model</italic> against the standard random breakage model (same simulation except the probability of breakage is uniform at all nucleotides in the genome). <xref ref-type="fig" rid="pcbi-0020014-g007">Figure 7</xref> shows how the breakpoint reuse rate changes as the size, <italic>R,</italic> of regulatory regions is increased. One can observe that breakpoint reuse rate is already significant (approximately 1.5) even for relatively modest sizes of regulatory regions. Moreover, for <italic>R</italic> ≈ 90 to 140 kb, the breakpoint reuse rate is similar to the human/mouse breakpoint reuse rate of 1.65 we reported in [<xref ref-type="bibr" rid="pcbi-0020014-b016">16</xref>]. We therefore argue that long regulatory regions and inhomogeneity of gene distribution in mammalian genomes may provide at least a partial explanation for the fragile breakage model. A more realistic explanation, however (in view of the fact that the estimate <italic>R</italic> ≈ 90 to 140 kb seems to be rather high), is that a combination of long regulatory regions, uneven distribution of sizes of intergenic regions, and other (still unknown) factors triggers high breakpoint reuse.</p><fig id="pcbi-0020014-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0020014.g007</object-id><label>Figure 7</label><caption><title>Breakpoint Reuse Rates as a Function of Upstream Regulatory Region Size in Intergenic Breakage Model Simulations</title><p>Genes from NCBI Human version 34 were each extended by length 0 to 210 kb upstream, thus shortening or eliminating the intergenic regions. In the intergenic breakage model, simulated reversals were performed with breakpoints chosen uniformly among the nucleotides remaining in the shortened intergenic regions, while in the random breakage model, breakpoints were chosen uniformly among all nucleotides in the genome. Then blocks were derived, and the breakpoint reuse rate was computed.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.g007" xlink:type="simple"/></fig></sec></sec><sec id="s3"><title>Discussion</title><p>The GRIMM-Synteny algorithm in Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] is a parameter-dependent procedure that was designed to somewhat artificially separate microrearrangements and macrorearrangements. An important contribution of Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] is to draw attention to the fact that these parameters may affect the robustness of the rearrangement analysis. There is no doubt that discarding small blocks affects the rearrangement inference and offsets the breakpoint reuse calculations. This paper studies the question of whether this offset is large enough to create an appearance of a large breakpoint reuse even in the random breakage model. We demonstrate that this offset is relatively small as compared to the Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] computational experiment and explain why our simulation and the Sankoff and Trinh [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] simulation disagree.</p><p>The Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] work is based on the reversals/translocations/fusions/fissions model of genome rearrangements and ignores other types of rearrangements, e.g., large-scale transpositions, which are believed to be rare. They do not attribute the breakpoint reuse phenomenon to a particular type of rearrangement and do not rule out the possibility that a significant portion of breakpoint reuse is caused by yet another rearrangement operation. For example, if one assumes that transpositions are frequent, then they may account for a significant portion of breakpoint reuse since every transposition creates three (rather than two) breakpoints, immediately increasing breakpoint reuse rate as we defined it. In this case, an analysis of giant cycles in the breakpoint graph may be necessary to evaluate the breakpoint reuse rate parameter (a series of transpositions in a random model would not lead to the giant cycles that we observed in the human/mouse breakpoint graph).</p><p>Evolutionary breakpoints are often confused with cancer breakpoints. We emphasize that the well-established recurrent breakpoints in cancer and infertility have nothing to do with evolutionary breakpoints and do not provide corroborative evidence for fragility in an evolutionary context. Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] did not answer the question, “Where are the recurrent breakpoints in mammalian genomes?” and studies are under way to determine comparative genomics and phylogenetic evidence for breakpoint reuses. For example, Murphy et al. [<xref ref-type="bibr" rid="pcbi-0020014-b024">24</xref>] recently analyzed genomic architectures for eight mammalian genomes derived from either sequence or large-scale radiation hybrid mapping experiments and observed breakpoint reuse in independent lineages.</p><p>Another open question is how many fragile sites are in the human genome. Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] did not rule out the possibility that most breakpoint reuses are caused by very few fragile sites. For example, one can envision a model with just one or two fragile sites with all rearrangements having one end in the fragile region and another end chosen randomly. Such a fragile hubs model is not inconsistent with the Pevzner and Tesler [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] analysis. Studies of giant cycles in the breakpoint graph may again shed light on whether the fragile hubs model is correct.</p><p>Sankoff and Trinh's work is an insightful contribution to studies of chromosome evolution that raised awareness about the importance of synteny block identification and microrearrangement analysis. Unfortunately, their rebuttal of the breakpoint reuse phenomenon was plagued by shortcomings of their own synteny block identification algorithm and unrealistic choices of parameters in their simulation procedure. We therefore argue that the breakpoint reuse phenomenon is real until the next critical argument against it emerges.</p></sec><sec id="s4"><title>Materials and Methods</title><p>We repeated Sankoff and Trinh's simulation [<xref ref-type="bibr" rid="pcbi-0020014-b010">10</xref>] by breaking it into two parts, Simulation and ST-Synteny, as described in Section 2 of this paper.</p><p>We compared the synteny block identification algorithms of Pevzner and Tesler's with those of Sankoff and Trinh on simulated data from Simulation (Section 4) using GRIMM-Synteny [<xref ref-type="bibr" rid="pcbi-0020014-b009">9</xref>] and ST-Synteny (Section 2). Breakpoint reuse rates were computed with GRIMM [<xref ref-type="bibr" rid="pcbi-0020014-b021">21</xref>,<xref ref-type="bibr" rid="pcbi-0020014-b022">22</xref>].</p><p>In the analysis and simulations based on real genome data (Section 7), we used human/mouse anchors derived from NCBI Human version 34 and NCBI Mouse version 30. Mouse/rat X chromosome anchors were derived from NCBI Mouse version 33 and the Rat Genome Sequencing Consortium assembly RGSC version 3.4. NCBI Human version 34 was also used in the intergenic breakage model simulation (Section 8).</p></sec><sec id="s5"><title>Supporting Information</title><supplementary-material id="pcbi-0020014-sg001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.sg001" xlink:type="simple"><label>Figure S1</label><caption><title>Breakpoint Region Size in Simulations</title><p>Ratio of length of breakpoint region to length of genome in simulations as a function of number of microrearrangements <italic>k</italic> and microrearrangement size <italic>w</italic> for (A) ST-Synteny and (B) GRIMM-Synteny.</p><p>(11 KB PDF)</p></caption></supplementary-material><supplementary-material id="pcbi-0020014-sg002" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0020014.sg002" xlink:type="simple"><label>Figure S2</label><caption><title>Number of Elements Retained in Simulations after Deletion of Small Blocks</title><p>Number of elements retained by (A) ST-Synteny and (B) GRIMM-Synteny, as a function of the number of microrearrangements <italic>k</italic> and microrearrangement size <italic>w</italic> in the simulated data.</p><p>(12 KB PDF)</p></caption></supplementary-material></sec></body><back><ack><p>We thank the anonymous referees for their many helpful suggestions. We thank David Sankoff for discussions on this matter.</p></ack><glossary><title>Abbreviations</title><def-list><def-item><term>bp</term><def><p>base pair</p></def></def-item><def-item><term>NCBI</term><def><p>National Center for Biotechnology Information</p></def></def-item></def-list></glossary><ref-list><title>References</title><ref id="pcbi-0020014-b001"><label>1</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Nadeau</surname><given-names>J</given-names></name><name name-style="western"><surname>Taylor</surname><given-names>B</given-names></name></person-group>
					<year>1984</year>
					<article-title>Lengths of chromosomal segments conserved since divergence of man and mouse.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>81</volume>
					<fpage>814</fpage>
					<lpage>818</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b002"><label>2</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Ohno</surname><given-names>S</given-names></name></person-group>
					<year>1973</year>
					<article-title>Ancient linkage groups and frozen accidents.</article-title>
					<source>Nature</source>
					<volume>244</volume>
					<fpage>259</fpage>
					<lpage>262</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b003"><label>3</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Copeland</surname><given-names>N</given-names></name><name name-style="western"><surname>Jenkins</surname><given-names>NA</given-names></name><name name-style="western"><surname>Gilber</surname><given-names>DJ</given-names></name><name name-style="western"><surname>Eppig</surname><given-names>JT</given-names></name><name name-style="western"><surname>Maltasi</surname><given-names>LJ</given-names></name><etal/></person-group>
					<year>1993</year>
					<article-title>A genetic linkage map of the mouse: Current applications and future prospects.</article-title>
					<source>Science</source>
					<volume>262</volume>
					<fpage>57</fpage>
					<lpage>66</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b004"><label>4</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>DeBry</surname><given-names>R</given-names></name><name name-style="western"><surname>Seldin</surname><given-names>M</given-names></name></person-group>
					<year>1996</year>
					<article-title>Human/mouse homology relationships.</article-title>
					<source>Genomics</source>
					<volume>33</volume>
					<fpage>337</fpage>
					<lpage>351</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b005"><label>5</label><element-citation publication-type="journal" xlink:type="simple">
					<collab xlink:type="simple">Burt D, Bruley C, Dunn I, Jones C, Ramage A, et al.</collab>
					<year>1999</year>
					<article-title>The dynamics of chromosome evolution in birds and mammals.</article-title>
					<source>Nature</source>
					<volume>402</volume>
					<fpage>411</fpage>
					<lpage>413</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b006"><label>6</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Lander</surname><given-names>ES</given-names></name><name name-style="western"><surname>Linton</surname><given-names>LM</given-names></name><name name-style="western"><surname>Birren</surname><given-names>B</given-names></name><name name-style="western"><surname>Nusbaum</surname><given-names>C</given-names></name><name name-style="western"><surname>Zody</surname><given-names>MC</given-names></name><etal/></person-group>
					<year>2001</year>
					<article-title>Initial sequencing and analysis of the human genome.</article-title>
					<source>Nature</source>
					<volume>409</volume>
					<fpage>860</fpage>
					<lpage>921</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b007"><label>7</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Mural</surname><given-names>RJ</given-names></name><name name-style="western"><surname>Adams</surname><given-names>MD</given-names></name><name name-style="western"><surname>Myers</surname><given-names>EW</given-names></name><name name-style="western"><surname>Smith</surname><given-names>HO</given-names></name><name name-style="western"><surname>Mikos</surname><given-names>GL</given-names></name><etal/></person-group>
					<year>2002</year>
					<article-title>A comparison of whole-genome shotgun-derived mouse chromosome 16 and the human genome.</article-title>
					<source>Science</source>
					<volume>296</volume>
					<fpage>1661</fpage>
					<lpage>1671</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b008"><label>8</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Pennisi</surname><given-names>E</given-names></name></person-group>
					<year>2000</year>
					<article-title>A mouse chronology.</article-title>
					<source>Science</source>
					<volume>288</volume>
					<fpage>248</fpage>
					<lpage>257</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b009"><label>9</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name><name name-style="western"><surname>Tesler</surname><given-names>G</given-names></name></person-group>
					<year>2003</year>
					<article-title>Human and mouse genomic sequences reveal extensive breakpoint reuse in mammalian evolution.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>100</volume>
					<fpage>7672</fpage>
					<lpage>7677</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b010"><label>10</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sankoff</surname><given-names>D</given-names></name><name name-style="western"><surname>Trinh</surname><given-names>P</given-names></name></person-group>
					<year>2004</year>
					<article-title>Chromosomal breakpoint re-use in the inference of genome sequence rearrangement.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Gusfield</surname><given-names>D</given-names></name><name name-style="western"><surname>Bourne</surname><given-names>P</given-names></name><name name-style="western"><surname>Istrail</surname><given-names>S</given-names></name><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name><name name-style="western"><surname>Waterman</surname><given-names>M</given-names></name></person-group>
					<source>Proceedings of the Eighth Annual International Conference on Research in Computational Molecular Biology, March 27–31, 2004, San Diego, California</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>ACM Press</publisher-name>
					<comment>pp</comment>
					<fpage>30</fpage>
					<lpage>35</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b011"><label>11</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sankoff</surname><given-names>D</given-names></name><name name-style="western"><surname>Trinh</surname><given-names>P</given-names></name></person-group>
					<year>2005</year>
					<article-title>Chromosomal breakpoint re-use in genome sequence rearrangement.</article-title>
					<source>J Comput Biol</source>
					<volume>12</volume>
					<fpage>812</fpage>
					<lpage>821</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b012"><label>12</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bailey</surname><given-names>JA</given-names></name><name name-style="western"><surname>Baertsch</surname><given-names>R</given-names></name><name name-style="western"><surname>Kent</surname><given-names>WJ</given-names></name><name name-style="western"><surname>Haussler</surname><given-names>D</given-names></name><name name-style="western"><surname>Eichler</surname><given-names>EE</given-names></name></person-group>
					<year>2004</year>
					<article-title>Hotspots of mammalian chromosomal evolution.</article-title>
					<source>Genome Biol</source>
					<volume>5</volume>
					<fpage>R23</fpage>
				</element-citation></ref><ref id="pcbi-0020014-b013"><label>13</label><element-citation publication-type="journal" xlink:type="simple">
					<collab xlink:type="simple">Zhao S, Shetty J, Hou L, Delcher A, Zhu B, et al.</collab>
					<year>2004</year>
					<article-title>Human, mouse, and rat genome large-scale rearrangements: Stability versus speciation.</article-title>
					<source>Genome Res</source>
					<volume>14</volume>
					<fpage>1851</fpage>
					<lpage>1860</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b014"><label>14</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Trinh</surname><given-names>P</given-names></name><name name-style="western"><surname>McLysaght</surname><given-names>A</given-names></name><name name-style="western"><surname>Sankoff</surname><given-names>D</given-names></name></person-group>
					<year>2004</year>
					<article-title>Genomic features in the breakpoint regions between syntenic blocks.</article-title>
					<source>Bioinformatics</source>
					<volume>20</volume>
					<fpage>i318</fpage>
					<lpage>i325</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b015"><label>15</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name><name name-style="western"><surname>Tesler</surname><given-names>G</given-names></name></person-group>
					<year>2003</year>
					<article-title>Transforming men into mice: The Nadeau-Taylor chromosomal breakage model revisited.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Miller</surname><given-names>W</given-names></name><name name-style="western"><surname>Vingron</surname><given-names>M</given-names></name><name name-style="western"><surname>Istrail</surname><given-names>S</given-names></name><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name><name name-style="western"><surname>Waterman</surname><given-names>M</given-names></name></person-group>
					<source>Proceedings of the Seventh Annual International Conference on Research in Computational Molecular Biology, April 10–14, 2003, Berlin, Germany</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>ACM Press</publisher-name>
					<comment>pp.</comment>
					<fpage>247</fpage>
					<lpage>256</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b016"><label>16</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bourque</surname><given-names>G</given-names></name><name name-style="western"><surname>Pevzner</surname><given-names>PA</given-names></name><name name-style="western"><surname>Tesler</surname><given-names>G</given-names></name></person-group>
					<year>2004</year>
					<article-title>Reconstructing the genomic architecture of ancestral mammals: Lessons from human, mouse, and rat genomes.</article-title>
					<source>Genome Res</source>
					<volume>14</volume>
					<fpage>507</fpage>
					<lpage>516</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b017"><label>17</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name><name name-style="western"><surname>Tesler</surname><given-names>G</given-names></name></person-group>
					<year>2003</year>
					<article-title>Genome rearrangements in mammalian evolution: Lessons from human and mouse genomes.</article-title>
					<source>Genome Res</source>
					<volume>13</volume>
					<fpage>37</fpage>
					<lpage>45</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b018"><label>18</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Gibbs</surname><given-names>RA</given-names></name><name name-style="western"><surname>Weinstock</surname><given-names>GM</given-names></name><name name-style="western"><surname>Metzker</surname><given-names>ML</given-names></name><name name-style="western"><surname>Muzny</surname><given-names>DM</given-names></name><name name-style="western"><surname>Sodergren</surname><given-names>EJ</given-names></name><etal/></person-group>
					<year>2004</year>
					<article-title>Genome sequence of the Brown Norway rat yields insights into mammalian evolution.</article-title>
					<source>Nature</source>
					<volume>428</volume>
					<fpage>493</fpage>
					<lpage>521</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b019"><label>19</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hillier</surname><given-names>LW</given-names></name><name name-style="western"><surname>Miller</surname><given-names>W</given-names></name><name name-style="western"><surname>Birney</surname><given-names>E</given-names></name><name name-style="western"><surname>Warren</surname><given-names>W</given-names></name><name name-style="western"><surname>Hardison</surname><given-names>RC</given-names></name><etal/></person-group>
					<year>2004</year>
					<article-title>Sequencing and comparative analysis of the chicken genome provide unique perspectives on vertebrate evolution.</article-title>
					<source>Nature</source>
					<volume>432</volume>
					<fpage>695</fpage>
					<lpage>716</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b020"><label>20</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bourque</surname><given-names>G</given-names></name><name name-style="western"><surname>Zdobnov</surname><given-names>E</given-names></name><name name-style="western"><surname>Bork</surname><given-names>P</given-names></name><name name-style="western"><surname>Pevzner</surname><given-names>P</given-names></name><name name-style="western"><surname>Tesler</surname><given-names>G</given-names></name></person-group>
					<year>2005</year>
					<article-title>Comparative architectures of mammalian and chicken genomes reveal highly variable rates of genomic rearrangements across different lineages.</article-title>
					<source>Genome Res</source>
					<volume>15</volume>
					<fpage>98</fpage>
					<lpage>110</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b021"><label>21</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Tesler</surname><given-names>G</given-names></name></person-group>
					<year>2002</year>
					<article-title>GRIMM: Genome rearrangements web server.</article-title>
					<source>Bioinformatics</source>
					<volume>18</volume>
					<fpage>492</fpage>
					<lpage>493</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b022"><label>22</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Tesler</surname><given-names>G</given-names></name></person-group>
					<year>2002</year>
					<article-title>Efficient algorithms for multichromosomal genome rearrangements.</article-title>
					<source>J Comp Sys Sci</source>
					<volume>65</volume>
					<fpage>587</fpage>
					<lpage>609</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b023"><label>23</label><element-citation publication-type="journal" xlink:type="simple">
					<collab xlink:type="simple">Schwartz S, Kent WJ, Smit A, Zheng Zhang RB, Hardison RC, et al.</collab>
					<year>2003</year>
					<article-title>Human-mouse alignments with BLASTZ.</article-title>
					<source>Genome Res</source>
					<volume>13</volume>
					<fpage>103</fpage>
					<lpage>107</lpage>
				</element-citation></ref><ref id="pcbi-0020014-b024"><label>24</label><element-citation publication-type="journal" xlink:type="simple">
					<collab xlink:type="simple">Murphy WJ, Larkin DM, van der Wind AE, Bourque G, Tesler G, et al.</collab>
					<year>2005</year>
					<article-title>Dynamics of mammalian chromosome evolution inferred from multispecies comparative maps.</article-title>
					<source>Science</source>
					<volume>309</volume>
					<fpage>613</fpage>
					<lpage>617</lpage>
				</element-citation></ref></ref-list></back></article>