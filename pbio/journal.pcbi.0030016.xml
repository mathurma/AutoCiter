<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN"><front><journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="flc">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0030016</article-id><article-id pub-id-type="publisher-id">06-PLCB-RA-0175R3</article-id><article-id pub-id-type="sici">plcb-03-02-02</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology</subject></subj-group><subj-group subj-group-type="System Taxonomy"><subject>None</subject></subj-group></article-categories><title-group><article-title>Automatic Extraction of Protein Point Mutations Using a Graph Bigram Association</article-title><alt-title alt-title-type="running-head">Text-Mining Mutations Using Graph Association</alt-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Lee</surname><given-names>Lawrence C</given-names></name><xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref><xref ref-type="aff" rid="aff2">
            <sup>2</sup>
          </xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Horn</surname><given-names>Florence</given-names></name><xref ref-type="aff" rid="aff3">
            <sup>3</sup>
          </xref><xref ref-type="fn" rid="n101">
            <sup>‡</sup>
          </xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Cohen</surname><given-names>Fred E</given-names></name><xref ref-type="aff" rid="aff1">
            <sup>1</sup>
          </xref><xref ref-type="aff" rid="aff4">
            <sup>4</sup>
          </xref><xref ref-type="corresp" rid="cor1">
            <sup>*</sup>
          </xref></contrib></contrib-group><aff id="aff1">
				<label>1</label><addr-line> Department of Cellular and Molecular Pharmacology, University of California San Francisco, San Francisco, California, United States of America
			</addr-line></aff><aff id="aff2">
				<label>2</label><addr-line> Biomedical Informatics, University of California San Francisco, San Francisco, California, United States of America
			</addr-line></aff><aff id="aff3">
				<label> 3</label><addr-line> Laboratoire de Biologie, Informatique et Mathématiques, Commissariat à l'Energie Atomique, Grenoble, France
			</addr-line></aff><aff id="aff4">
				<label> 4</label><addr-line> Department of Biochemistry and Biophysics, University of California San Francisco, San Francisco, California, United States of America
			</addr-line></aff><contrib-group><contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Bourne</surname><given-names>Philip E</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">University of California San Diego, United States of America</aff><author-notes><fn fn-type="con" id="ack1"><p>LCL wrote Mutation GraB, designed the experiments, carried out the analysis, read and manually annotated the literature sets, and drafted the manuscript. FH conceived of the study and contributed to the methods. FEC helped conceive the study and helped draft the manuscript.</p></fn><corresp id="cor1">* To whom correspondence should be addressed. E-mail: <email xlink:type="simple">cohen@cmpharm.ucsf.edu</email></corresp><fn fn-type="deceased" id="n101"><p>
            <label>‡ </label>
            <p>Florence Horn passed away suddenly on July 13, 2006. She was a wonderful colleague and committed to the efforts that are partially captured in this work.</p>
          </p></fn><fn fn-type="conflict" id="ack3"><p> The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="ppub"><month>2</month><year>2007</year></pub-date><pub-date pub-type="epub"><day>2</day><month>2</month><year>2007</year></pub-date><volume>3</volume><issue>2</issue><elocation-id>e16</elocation-id><history><date date-type="received"><day>5</day><month>5</month><year>2006</year></date><date date-type="accepted"><day>19</day><month>12</month><year>2006</year></date></history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2007</copyright-year><copyright-holder>Lee et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><p>Protein point mutations are an essential component of the evolutionary and experimental analysis of protein structure and function. While many manually curated databases attempt to index point mutations, most experimentally generated point mutations and the biological impacts of the changes are described in the peer-reviewed published literature. We describe an application, Mutation GraB (Graph Bigram), that identifies, extracts, and verifies point mutations from biomedical literature. The principal problem of point mutation extraction is to link the point mutation with its associated protein and organism of origin. Our algorithm uses a graph-based bigram traversal to identify these relevant associations and exploits the Swiss-Prot protein database to verify this information. The graph bigram method is different from other models for point mutation extraction in that it incorporates frequency and positional data of all terms in an article to drive the point mutation–protein association. Our method was tested on 589 articles describing point mutations from the G protein–coupled receptor (GPCR), tyrosine kinase, and ion channel protein families. We evaluated our graph bigram metric against a word-proximity metric for term association on datasets of full-text literature in these three different protein families. Our testing shows that the graph bigram metric achieves a higher F-measure for the GPCRs (0.79 versus 0.76), protein tyrosine kinases (0.72 versus 0.69), and ion channel transporters (0.76 versus 0.74). Importantly, in situations where more than one protein can be assigned to a point mutation and disambiguation is required, the graph bigram metric achieves a precision of 0.84 compared with the word distance metric precision of 0.73. We believe the graph bigram search metric to be a significant improvement over previous search metrics for point mutation extraction and to be applicable to text-mining application requiring the association of words.</p></abstract><abstract abstract-type="synopsis"><title>Author Summary</title><p>In biological research, new information is often presented in the form of peer-reviewed published journal articles. Despite the best efforts of electronic database curators, a majority of this information is still found only in textual form, and thus excluded from direct computational analysis. One such type of information that is abundant in scientific literature is protein point mutations. We seek to extract protein point mutation examples from the literature and to associate them with a unique protein name and species of origin in a standardized protein database. To do this, we have created an application that searches for and retrieves full-text articles from publishers, identifies point mutation terms, protein name terms, and organism name terms within the articles. We describe Mutation GraB, an application that utilizes a graph shortest-distance search in concert with word bigram analysis that is used to find significant associations between these terms in the text. This graph bigram search metric was found to be reasonably effective at identifying correct protein point mutation pairs and represents a good compromise between accuracy and broad applicability. The application can be applied to a large set of journal literature from a protein family to generate a database of point mutations.</p></abstract><funding-group><funding-statement>This work was funded by the US National Institutes of Health (NIH) and National Institute of General Medical Sciences Project, grant GM039900-15, and the NIH and National Library of Medicine Individual Biomedical Informatics Fellowship LM008883-01.</funding-statement></funding-group><counts><page-count count="15"/></counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group><custom-meta><meta-name>citation</meta-name><meta-value>Lee LC, Horn F, Cohen FE (2007) Automatic extraction of protein point mutations using a graph bigram association. PLoS Comput Biol 3(2): e16. doi:<ext-link ext-link-type="doi" xlink:href="http://dx.doi.org/10.1371/journal.pcbi.0030016" xlink:type="simple">10.1371/journal.pcbi.0030016</ext-link></meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1"><title>Introduction</title><p>With the advent of ultra high–throughput screening and high-density array technology, the biological community has come to appreciate the value of unbiased surveys of complex biological systems. Bioinformatics tools have become an integral part of the analysis of these extensive datasets. When complex data is collected centrally, the analysis can be straightforward. When data is collected in a distributed fashion, investigators must agree on a centralized data-deposition strategy or we must develop tools to interrogate the published literature and extract relevant information. Manually curated online databases have developed to meet this need, but they are difficult to maintain and scale. Accordingly, the biological text-mining field has evolved to identify and extract information from the literature for database storage and access. Two types of tasks predominate in biological text mining: the extraction of gene and protein names [<xref ref-type="bibr" rid="pcbi-0030016-b001">1</xref>–<xref ref-type="bibr" rid="pcbi-0030016-b004">4</xref>] and the extraction of interactions between proteins [<xref ref-type="bibr" rid="pcbi-0030016-b005">5</xref>–<xref ref-type="bibr" rid="pcbi-0030016-b007">7</xref>]. The BioCreAtIvE challenge was [<xref ref-type="bibr" rid="pcbi-0030016-b008">8</xref>] focused on name extraction [<xref ref-type="bibr" rid="pcbi-0030016-b009">9</xref>] with the additional task of functional annotation [<xref ref-type="bibr" rid="pcbi-0030016-b010">10</xref>]. Other text-mining applications focus on hypothesis generation [<xref ref-type="bibr" rid="pcbi-0030016-b011">11</xref>], probing protein subcellular localization [<xref ref-type="bibr" rid="pcbi-0030016-b012">12</xref>], and pathway discovery [<xref ref-type="bibr" rid="pcbi-0030016-b013">13</xref>].</p><p>Recent work has also focused on the extraction of protein point mutations from biomedical literature [<xref ref-type="bibr" rid="pcbi-0030016-b014">14</xref>–<xref ref-type="bibr" rid="pcbi-0030016-b018">18</xref>]. Protein point mutations, the substitution of a wild-type amino acid with an alternate one, can be important to our understanding of protein function, evolutionary relationships, and genetic disorders. From a functional perspective, researchers introduce point mutations into proteins to assay the importance of a particular residue to protein function. Evolution relies upon mutations or polymorphisms in DNA, a mechanism for creating diversity in protein sequences. While the term “mutation” is used to imply deleterious changes, and “polymorphism” means a difference within species, for text-mining purposes we refer to a “point mutation” as a substitution of a different amino acid for the reference amino acid. dbSNP [<xref ref-type="bibr" rid="pcbi-0030016-b019">19</xref>] and the Human Gene Mutation Database [<xref ref-type="bibr" rid="pcbi-0030016-b020">20</xref>] are two of many databases that catalog point mutations and their downstream effects. These databases are manually curated, which limits the speed of input into the database and the breadth of information represented, but does aid in the incorporation of complex information that is difficult for text-mining tools to parse.</p><p>The task of point mutation extraction can be decomposed into two subtasks. First, it is necessary to identify the protein and mutation terms discussed within an article. After these entities are identified, an association must be made between the point mutation and its correct protein of origin. This problem is trivial when a paper discusses a single protein but increasingly complex when multiple proteins are present. In our evaluation of Mutation Graph Bigram (Mutation GraB), we downloaded 589 full-text PDF articles related to the GPCR, tyrosine kinase, and ion channel protein families from PubMed-provided links. Using our dictionary-based protein term identification method, we counted 350 articles out of the total 589 that contained a point mutation that could have belonged to multiple proteins. A few methods for point mutation extraction have been developed. Rebholz-Schuhmann et al. [<xref ref-type="bibr" rid="pcbi-0030016-b014">14</xref>] describe a method called MEMA that scans Medline abstracts for mutations. Baker and Witte [<xref ref-type="bibr" rid="pcbi-0030016-b016">16</xref>–<xref ref-type="bibr" rid="pcbi-0030016-b018">18</xref>] describe a method called Mutation Miner that integrates point mutation extraction into a protein structure visualization application. Our own group has presented MuteXt [<xref ref-type="bibr" rid="pcbi-0030016-b015">15</xref>], a point mutation extraction method applied to G protein–coupled receptor (GPCR) and nuclear hormone receptor literature. MEMA and MuteXt use a straightforward dictionary search to identify protein/gene names and a word proximity distance measurement to disambiguate between multiple protein terms. Both methods, while providing a simple and successful method for point mutation extraction, were limited in two areas. First, the word distance measurement is not always correct in disambiguating between protein terms. Second, MEMA was evaluated on a set of abstracts, which are intrinsically more limited than the full-text article. In our literature set, the abstracts contained only 15% of the point mutations found in the full text. The point mutations were also validated against OMIM [<xref ref-type="bibr" rid="pcbi-0030016-b021">21</xref>], which only contains disease-related point mutations. MuteXt was trained and evaluated on GPCR and intranuclear hormone receptor literature and contained customizations in the algorithm for dealing with problematic protein naming and amino acid numbering cases.</p><p>Mutation Miner approaches the problem differently. This method identifies and relates proteins, organisms, and point mutations using NLP analysis at a sentence level. An entity pair is assigned if both entities match noun phrase patterns. This method would work well if all point mutations were described in conjunction with associated proteins and organisms at the sentence level, which we have observed is not always the case. Mutation Miner also incorporates protein sequence information, but for use in annotating protein 3-D structures with mutation information instead of point mutation validation. Our method improves on MEMA, MuteXt, and Mutation Miner by using a novel graph bigram metric that incorporates frequency and location of terms to disambiguate between proteins and searches full-text information. Like MuteXt, Mutation GraB utilizes the Swiss-Prot protein database [<xref ref-type="bibr" rid="pcbi-0030016-b022">22</xref>] for sequence validation, which intrinsically contains more sequence variation than OMIM. We addressed the utility of our application by standardizing the algorithm for all protein families and by evaluating our method on three different protein family literature sets covering 589 articles. More detailed comparisons with MEMA and Mutation Miner are described in the Discussion section.</p><sec id="s1a"><title>Protein Term Identification</title><p>For our task of associating point mutations to protein terms, it is not sufficient to minimally tag a protein name in the literature; we must also find its correct gene identifier in a corresponding database. The BioCreAtIvE challenge addressed this problem with the 1B subtask of identifying a protein/gene mentioned in the text and annotating it with its correct gene identifier. Solutions for this challenge ranged from rule-based methods [<xref ref-type="bibr" rid="pcbi-0030016-b023">23</xref>] to machine-learning approaches [<xref ref-type="bibr" rid="pcbi-0030016-b024">24</xref>] to a combination of both. Unfortunately, some of these methods may not be applicable to our point mutation extraction task. The participants in the BioCreAtIve challenge were provided a large set of annotated sentences categorized under three different organisms; human, yeast, and fly. Some solutions for the subtask 1B consisted of learning the training data for each organism, then applying the learned functions to a test set also divided by organism. This approach is suboptimal for our task for two reasons. First, because point mutations are frequently analyzed at a protein family and superfamily level, methods trained on protein names from organism-specific lexicons would not be well-suited for analysis across many species. Second, our goal is to create a broadly applicable methodology for point mutation extraction that can be utilized on any categorization of proteins (i.e., family, class, fold, etc.). Machine-learning approaches benefit from large detailed annotated training sets. In our experience, the manual labor involved in annotating the amount of text necessary to learn protein family–specific nomenclature on the scale presented by BioCreAtIve is likely to undermine the benefits of automated point mutation extraction.</p><p>Methods relying solely on rule-based features for protein-name identification generally perform at a lower precision and recall than methods incorporating machine learning. However, since rule-based methods do not necessarily require annotated training data, they are advantageous when such data is unavailable or difficult to acquire. Our approach to protein term identification is similar to other rule-based approaches [<xref ref-type="bibr" rid="pcbi-0030016-b002">2</xref>,<xref ref-type="bibr" rid="pcbi-0030016-b023">23</xref>,<xref ref-type="bibr" rid="pcbi-0030016-b025">25</xref>]. We first create a dictionary using the names and synonyms of proteins in a protein family; the protein names are retrieved from their respective Swiss-Prot and Entrezgene entries. The terms in the dictionary are then searched for in the journal literature. Depending on the character length and composition of these terms, we search by different regular expressions with varying levels of specificity. A further description of this is detailed in the Methods section.</p></sec><sec id="s1b"><title>Point Mutation Identification</title><p>Point mutations are represented in a variety of ways in the literature, but all consist of three distinct parts: a wild-type amino acid, a sequence position, and a mutant amino acid. A typical representation of a point mutation is A123T, denoting a change from alanine to threonine at position 123 of a protein using the single letter abbreviation for the amino acids. Variations on this shorthand form include A123 → T, A(123)T, and A-123-T, and the three-letter amino acid abbreviations Ala123Thr, Ala123 → Thr, Ala(123)Thr, and Ala-123-Thr. Aside from those frequent representations, point mutations are also represented grammatically such as “position 123 was mutated from an alanine to a threonine” or “positions 100–110 were mutated to proline.” In our literature sets, however, &lt;1% of all true positive point mutations were grammatical, so we chose to focus on the single-letter and three-letter abbreviation variants of point mutations instead.</p></sec><sec id="s1c"><title>Point Mutation–Protein Association</title><p>The task of associating point mutations to proteins is unique and has no true corollaries from other text-mining applications. Protein–protein interactions are explicit binary relationships that usually occur locally within a sentence or two. A point mutation usually has a one-to-one relationship with a protein; however, this relationship is often implicit over the length of the whole text. For example, a journal article may present a protein term in the abstract and the introduction sections while describing point mutations to that protein in the methods and discussion sections. It is implied that the point mutations discussed in the latter sections refer to the protein term in the former sections. When more than one protein is discussed in the text, a method is required to choose the correct protein or species.</p><p>Previous methods have used a simple and effective word distance metric for protein term disambiguation; a point mutation is assigned to its nearest occurring protein term. Our graph bigram method improves on this approach by accounting for all occurrences of the point mutation and protein terms throughout the length of the text instead of measuring one local relationship. This method uses the <italic>t</italic> test to measure the significance of bigrams in the text, then employs a graph shortest-distance search to traverse significant bigrams to associate a point mutation with its correct protein term. An example of a graph generated from an ion channel transporter article (PMID 11553787) is shown in <xref ref-type="fig" rid="pcbi-0030016-g001">Figure 1</xref>. While this graph is too complex to provide any algorithmic examples, we can see that nodes found closer to the center grouping in the graph are involved in more bigrams than the peripheral nodes. In general, paths that traverse the central grouping of nodes will be shorter and more significant than paths taken around peripheral nodes.</p><fig id="pcbi-0030016-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.g001</object-id><label>Figure 1</label><caption><title>An Energy-Minimized Graph Generated from the Full-Text Article PMID 11553787</title><p>The blue ellipses represent protein term nodes, green ellipses represent point mutation nodes, and orange ellipses represent organism nodes. The gray triangles represent regular words. The connecting edges show terms or words represented by the nodes that are present as a bigram in the text. For this article, a total of 1,052 terms are contained in 2,287 bigrams.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.g001" xlink:type="simple"/></fig></sec><sec id="s1d"><title>Mutation GraB Approach</title><p>Our approach to point mutation extraction consists of the following steps. 1) Target a protein family of interest and retrieve full-text articles discussing point mutations within the protein family. 2) Identify protein and organism terms within the articles using a dictionary generated from protein databases (creating an implicit link between the protein term and database identifier). 3) Identify point mutation terms using a set of regular expressions. 4) For each point mutation, generate a set of possible associated proteins by comparing the wild-type amino acid with that contained in the protein sequence. If this set contains several possible proteins, use the graph bigram method to disambiguate and to find the correct association.</p><p>The process flow of Mutation GraB is shown in <xref ref-type="fig" rid="pcbi-0030016-g002">Figure 2</xref>. In our execution and evaluation of Mutation GraB, we wanted to focus on three different aspects of point mutation extraction. First, we wanted to gauge the feasibility of systematically extracting point mutations from the literature in a fully automated fashion. Our initial testing and previous methods showed that automated point mutation extraction is a wholly viable endeavor, with the main challenges of identifying protein terms and associating them to the proper point mutation. Second, and most important, we wanted to assess different search methodologies available to extract point mutations and to devise a superior search metric for extraction. We hypothesize that a search metric that integrates the relative position of the words and frequency data into its heuristic will outperform a metric that solely relies on positional information. Last, we wanted to create an application that could be used extensively on all protein family literature to create a database of point mutations. Therein, Mutation GraB is a self-contained application where most, if not all, the information used is gathered from database sources and not expert-user opinion.</p><fig id="pcbi-0030016-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.g002</object-id><label>Figure 2</label><caption><title>A General Overview of the Process Flow of Mutation GraB</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.g002" xlink:type="simple"/></fig></sec></sec><sec id="s2"><title>Results</title><p>We evaluated the effectiveness of Mutation GraB by using it to extract point mutations from literature describing three different protein families: tyrosine protein kinases, GPCRs, and transmembrane ion channels. Since most studies of protein structure and function focus at the protein family level, and different protein families have specific and differentiating nomenclatures, this approach is representative of real-life usage and tests the flexibility of Mutation GraB for distinct protein families. Each of the protein family literature sets were split into two groups, a “development” set and a “validation” set of articles. We selected the articles for each set randomly from the all the articles downloaded for each protein family. The development set was used to optimize Mutation GraB performance, while the validation set was used to confirm the performance on the development set. The number of articles in each protein family literature set and the number of true positive mutations manually identified is listed in <xref ref-type="table" rid="pcbi-0030016-t001">Table 1</xref>, and the Swiss-Prot entry, protein name dictionary, and organism dictionary sizes are listed in <xref ref-type="table" rid="pcbi-0030016-t002">Table 2</xref>. Throughout our efforts, these datasets were kept entirely distinct so that the validation set represents a true measure of the generality of the algorithm optimized on the development set. Within each protein family literature set, we ran Mutation GraB twice, once using the graph bigram association metric and the second time using the word distance metric. Performance for each search metric can be compared within each protein family literature set.</p><table-wrap content-type="1col" id="pcbi-0030016-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t001</object-id><label>Table 1</label><caption><p>Protein Family Literature Sets</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t001" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb1col1" align="left" charoff="0" char=""/><col id="tb1col2" align="char" charoff="0" char="."/><col id="tb1col3" align="left" charoff="0" char=""/><col id="tb1col4" align="left" charoff="0" char=""/><col id="tb1col5" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left">Protein Family</td><td colspan="2"><hr/>Total Articles</td><td colspan="2"><hr/>True Positive Mutations</td></tr><tr><td><hr/></td><td><hr/>Development</td><td><hr/>Validation</td><td><hr/>Development</td><td><hr/>Validation</td></tr></thead><tbody><tr><td>GPCR</td><td>95</td><td>99</td><td>962</td><td>902</td></tr><tr><td>Protein tyrosine kinase</td><td>100</td><td>98</td><td>334</td><td>153</td></tr><tr><td>Ion channel transporter</td><td>99</td><td>98</td><td>446</td><td>514</td></tr></tbody></table> --><!-- --></table-wrap><table-wrap content-type="1col" id="pcbi-0030016-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t002</object-id><label>Table 2</label><caption><p>Protein Family and Dictionary Information</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t002" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb2col1" align="left" charoff="0" char=""/><col id="tb2col2" align="char" charoff="0" char="."/><col id="tb2col3" align="char" charoff="0" char="."/><col id="tb2col4" align="char" charoff="0" char="."/><col id="tb2col5" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left"><hr/>Protein Family</td><td><hr/>Swiss-Prot Entries</td><td><hr/>Protein Name Dictionary Terms</td><td><hr/>Organism Name Dictionary Terms</td><td><hr/>Permutation Dictionary Size</td></tr></thead><tbody><tr><td>GPCR</td><td>2,249</td><td>4,910</td><td>560</td><td>25,329</td></tr><tr><td>Protein tyrosine kinase</td><td>430</td><td>1,577</td><td>108</td><td>N/A</td></tr><tr><td>Ion channel transporter</td><td>1,095</td><td>108</td><td>143</td><td>N/A</td></tr></tbody></table> --><!-- --></table-wrap><sec id="s2a"><title>Evaluation Methods</title><p>Mutation GraB was scored against manually annotated “gold standard” sets for each protein family (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd001">Datasets S1</xref>–<xref ref-type="supplementary-material" rid="pcbi-0030016-sd006">S6</xref>). Point mutations that Mutation GraB and manual curation assigned to the same protein are considered true positive (TP) classifications. Point mutations that Mutation GraB assigned to a protein but were manually classified discordantly are counted as false positive (FP) mutations. In addition, point mutations that were manually classified as TP, but assigned to the wrong protein by Mutation GraB are also ruled as FP mutations. Point mutations that Mutation GraB missed but manual curation assigned are labeled false negative (FN) mutations.</p><p>We chose to evaluate Mutation GraB in two different ways. First, we compared the traditional text-mining measurements of precision, recall, and balanced F-measure between the graph bigram and word distance metrics within the development, validation, and complete protein literature sets. Precision is calculated as P = TP / (TP + FP), recall is calculated as R = TP / (TP + FN), and the balanced F-measure is computed as 2*P*R / (P + R). Second, and more significantly, we examined the precision of each search metric on point mutations versus the number of possible protein associations (PPA) for each point mutation. Since the main purpose of the search metric is to disambiguate multiple proteins for each point mutation, the more robust metric will have a higher precision at higher PPA.</p></sec><sec id="s2b"><title>G Protein–Coupled Receptors</title><p>For GPCRs, we took advantage of the manually curated tGRAP database [<xref ref-type="bibr" rid="pcbi-0030016-b026">26</xref>] to identify journal literature that describes GPCR point mutations. The tGRAP database subset contains a total of 5,451 point mutations, 1,495 GPCRs, and 914 article citations. We retrieved 386 of these citations as PDF documents and annotated 95 articles as a development set and 100 articles as the validation set. The Swiss-Prot database [<xref ref-type="bibr" rid="pcbi-0030016-b022">22</xref>] contained 2,249 entries that correspond to GPCR proteins. From these Swiss-Prot entries and their existing corresponding Entrezgene [<xref ref-type="bibr" rid="pcbi-0030016-b027">27</xref>] entries, a standard protein name dictionary of 4,910 terms, an organism dictionary of 560 terms, and a protein name permutation dictionary of 25,329 terms were generated. A permutation dictionary is generated by taking protein name terms of three words or greater and changing the order of the words. We observed that the use of both standard and permutation dictionaries was helpful in identifying a greater number of protein names than the use of the standard dictionary alone. We describe the generation of the permutation dictionary in detail within the Methods section.</p><p>The performance of the word distance and graph bigram metrics for the development and validation sets are shown in <xref ref-type="table" rid="pcbi-0030016-t003">Table 3</xref>. In the development set (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd001">Dataset S1</xref>), the graph bigram metric achieved an F-measure of 0.76, while the word distance metric achieved an F-measure of 0.70. Examining the point mutation counts between the two metrics, we saw that the graph bigram metric was able to identify 636 true positive mutations versus 565 for the word distance metric. In the validation set (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd002">Dataset S2</xref>), the graph bigram metric and word distance metric achieved F-measures of 0.83 and 0.81 with true positive mutation counts of 684 and 652, respectively. Combining the two sets, the graph bigram metric outperformed the word distance metric with an F-measure of 0.79 to 0.76.</p><table-wrap content-type="1col" id="pcbi-0030016-t003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t003</object-id><label>Table 3</label><caption><p>Mutation GraB Performance on the GPCR Literature Sets</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t003" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb3col1" align="left" charoff="0" char=""/><col id="tb3col2" align="char" charoff="0" char="."/><col id="tb3col3" align="char" charoff="0" char="."/><col id="tb3col4" align="char" charoff="0" char="."/><col id="tb3col5" align="char" charoff="0" char="."/><col id="tb3col6" align="char" charoff="0" char="."/><col id="tb3col7" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>Evaluation Metric</td><td colspan="2"><hr/>Development Set</td><td colspan="2"><hr/>Validation Set</td><td colspan="2"><hr/>All Articles</td></tr><tr><td><hr/>Word</td><td><hr/>Graph</td><td><hr/>Word</td><td><hr/>Graph</td><td><hr/>Word</td><td><hr/>Graph</td></tr></thead><tbody><tr><td>TP mutations</td><td>565</td><td>636</td><td>652</td><td>684</td><td>1,217</td><td>1,320</td></tr><tr><td>Precision</td><td>0.77</td><td>0.86</td><td>0.82</td><td>0.86</td><td>0.80</td><td>0.86</td></tr><tr><td>Recall</td><td>0.65</td><td>0.68</td><td>0.80</td><td>0.80</td><td>0.72</td><td>0.74</td></tr><tr><td>F-measure</td><td>0.70</td><td>0.76</td><td>0.81</td><td>0.83</td><td>0.76</td><td>0.79</td></tr></tbody></table> --><!-- --></table-wrap><p><xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>A–<xref ref-type="fig" rid="pcbi-0030016-g003">3</xref>C graphs the precision of both search metrics measured at different PPA levels for all three protein family literature sets. The precision is measured for the development and validation sets together. We cannot calculate the recall for this analysis because false negative point mutations belong to a protein not represented in the possible associations. The yellow bars represent the number of point mutations counted at each level of PPA. For the GPCR literature set shown in <xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>A, there was a large spread of PPA for point mutations. While 651 point mutations only had one PPA, 844 point mutations had multiple possibilities, and the average number of associations per point mutation was 2.19. <xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>A shows that the graph bigram metric achieved a higher precision at all levels of PPA greater than one for the GPCR literature sets.</p><fig id="pcbi-0030016-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.g003</object-id><label>Figure 3</label><caption><title>Examining the Precision of the Graph Bigram and Word Distance Metrics across Different Levels of Possible Protein Associations for the GPCR (A), Protein Tyrosine Kinase (B), and Ion Channel Transporter (C) Literature Sets</title><p>This data is for the cumulative development and validation sets combined. The yellow bars show the number of point mutations counted at each PPA. The solid blue line represents the precision measured for these point mutations using the graph bigram metric, and the dotted red line is measured using the word distance metric.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.g003" xlink:type="simple"/></fig></sec><sec id="s2c"><title>Protein Tyrosine Kinases</title><p>We were able to retrieve 554 PDF articles from the PubMed protein tyrosine kinase query “tyrosine kinase[mh] AND point mutation[mh] AND full text[sb]”. We annotated 99 of these articles for use as our development set and 98 articles as our validation set. Searching the Swiss-Prot database for protein tyrosine kinases yielded 430 different entries. The protein tyrosine kinase standard dictionary contained 1,577 terms, and the organism dictionary contained 108 terms. Our initial tests indicated that the use of a permutation dictionary would hurt performance for this protein family as many protein names have several elements in common with other family members.</p><p><xref ref-type="table" rid="pcbi-0030016-t004">Table 4</xref> summarizes our results for the protein tyrosine kinase literature sets. The articles as a whole contained fewer TP and more TN point mutations than the GPCR literature sets, affecting performance by decreasing precision for both graph bigram and word distance metrics. Performance on the development set (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd003">Dataset S3</xref>) for the graph bigram and word distance metric were closer together, with F-measures of 0.74 and 0.70, respectively. The validation set (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd004">Dataset S4</xref>) yielded even closer results with F-measures of 0.68 for the graph bigram metric and 0.67 for the word distance metric. This small difference is largely due to the few number of true positive mutations in the validation set, with the graph bigram metric identifying 133 to the 130 identified by the word distance metric. Overall, the graph bigram metric outperformed the word distance metric (F-measure 0.72 versus 0.69).</p><table-wrap content-type="1col" id="pcbi-0030016-t004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t004</object-id><label>Table 4</label><caption><p>Mutation GraB Performance on the Protein Tyrosine Kinase Literature Sets</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t004" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb4col1" align="left" charoff="0" char=""/><col id="tb4col2" align="char" charoff="0" char="."/><col id="tb4col3" align="char" charoff="0" char="."/><col id="tb4col4" align="char" charoff="0" char="."/><col id="tb4col5" align="char" charoff="0" char="."/><col id="tb4col6" align="char" charoff="0" char="."/><col id="tb4col7" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>Evaluation Metric</td><td colspan="2"><hr/>Development Set</td><td colspan="2"><hr/>Validation Set</td><td colspan="2"><hr/>All Articles</td></tr><tr><td><hr/>Word</td><td><hr/>Graph</td><td><hr/>Word</td><td><hr/>Graph</td><td><hr/>Word</td><td><hr/>Graph</td></tr></thead><tbody><tr><td>TP mutations</td><td>254</td><td>279</td><td>130</td><td>133</td><td>384</td><td>412</td></tr><tr><td>Precision</td><td>0.58</td><td>0.64</td><td>0.54</td><td>0.55</td><td>0.57</td><td>0.61</td></tr><tr><td>Recall</td><td>0.87</td><td>0.88</td><td>0.88</td><td>0.88</td><td>0.87</td><td>0.88</td></tr><tr><td>F-measure</td><td>0.70</td><td>0.74</td><td>0.67</td><td>0.68</td><td>0.69</td><td>0.72</td></tr></tbody></table> --><!-- --></table-wrap><p>The protein tyrosine kinase analysis in <xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>B shows a smaller distribution of PPA than the GPCR literature set with 266 single PPA, 266 multiple PPA, and a 1.85 PPA average. However, as with the GPCR literature set, the graph bigram metric achieved a higher precision at all PPA greater than one. The greatest difference in precision was for point mutations with four or more PPA where the graph bigram metric had more than a 0.21 increase than the word distance metric.</p></sec><sec id="s2d"><title>Ion Channel Transporters</title><p>The ion channel articles were identified with the PubMed query “ion channel[mh] AND point mutation[mh] AND full text[sb]”, and 311 PDF articles were downloaded and converted to text. We used 100 of these articles as the development set and 98 articles as the validation set. A total of 1,095 ion channel proteins were identified using the Swiss-Prot “Ion Channel” and “Transporter” keyword identifiers, and 3,089 protein names were extracted from the associated Swiss-Prot and Entrezgene entries. As with the protein tyrosine kinase literature set, the use of the permutation dictionary did not identify a greater number of protein names, so only the standard protein name dictionary was used. The organism dictionary contained 143 organism names.</p><p><xref ref-type="table" rid="pcbi-0030016-t005">Table 5</xref> shows the results of the graph bigram and word distance metrics on the development (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd005">Dataset S5</xref>) and validation (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd006">Dataset S6</xref>) sets. Consistent with the GPCR and tyrosine kinase literature sets, the graph bigram metric had a greater performance gain in the development set (F-measure of 0.70 to 0.68) than in the validation set (F-measure of 0.80 versus 0.79). The graph bigram metric outperformed the word distance metric for both datasets, and overall the graph bigram metric achieved a higher F-measure of 0.76 to 0.74, extracting 624 TP mutations to 604 TP mutations for the word distance metric. The ion channel literature sets yielded the smallest performance difference between the two different search metrics.</p><table-wrap content-type="1col" id="pcbi-0030016-t005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t005</object-id><label>Table 5</label><caption><p>Mutation GraB Performance on the Ion Channel Transporter Literature Sets</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t005" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb5col1" align="left" charoff="0" char=""/><col id="tb5col2" align="char" charoff="0" char="."/><col id="tb5col3" align="char" charoff="0" char="."/><col id="tb5col4" align="char" charoff="0" char="."/><col id="tb5col5" align="char" charoff="0" char="."/><col id="tb5col6" align="char" charoff="0" char="."/><col id="tb5col7" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>Evaluation Metric</td><td colspan="2"><hr/>Development Set</td><td colspan="2"><hr/>Validation Set</td><td colspan="2"><hr/>All Articles</td></tr><tr><td><hr/>Word</td><td><hr/>Graph</td><td><hr/>Word</td><td><hr/>Graph</td><td><hr/>Word</td><td><hr/>Graph</td></tr></thead><tbody><tr><td>TP Mutations</td><td>239</td><td>253</td><td>360</td><td>365</td><td>596</td><td>616</td></tr><tr><td>Precision</td><td>0.75</td><td>0.80</td><td>0.81</td><td>0.82</td><td>0.78</td><td>0.81</td></tr><tr><td>Recall</td><td>0.62</td><td>0.63</td><td>0.75</td><td>0.75</td><td>0.69</td><td>0.70</td></tr><tr><td>F-measure</td><td>0.68</td><td>0.70</td><td>0.78</td><td>0.79</td><td>0.73</td><td>0.75</td></tr></tbody></table> --><!-- --></table-wrap><p><xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>C shows that the ion channel literature set has the fewest PPA per point mutation out of the three protein families. We counted 487 point mutations with only one PPA, while only 224 point mutations had multiple PPA. The average PPA per point mutation is also the smallest at 1.53. The precision difference measured across different PPA levels is less pronounced in the ion channel transporter literature set, with the word distance metric outperforming the graph bigram metric with a precision of 0.71 to 0.69 on point mutations with three PPA. At two PPA and four or more PPA, the graph bigram metric still achieves a higher precision than the word distance metric.</p></sec></sec><sec id="s3"><title>Discussion</title><p>We have introduced Mutation GraB, an application for identifying and extracting point mutations from biomedical literature. Our goal with Mutation GraB was to create a general-purpose application that could have consistent performance without relying on protein family customization. Across these representative protein families, customization was not required to achieve consistently accurate performance in both development and validation sets. This suggests that Mutation GraB should be useful for identifying point mutations in most if not all protein families. Mutation GraB performance is contingent on a number of factors, including the identification of protein names, organism names, and point mutation terms in the text, and the disambiguation of multiple proteins when present. We chose a rule-based approach for protein name identification that has been shown to be successful in other tests, and the search for organism names is accomplished with straightforward pattern matching. Our main performance goal, however, was to devise a disambiguation metric that outperforms current methods at choosing the correct protein from a selection of several possible choices.</p><sec id="s3a"><title>Comparison with MEMA</title><p>MEMA and Mutation GraB were created and tested in a different fashion that makes a direct comparison troublesome. MEMA was tested on 16,728 abstracts across many protein families with the precision and recall estimated from a random set of 100, while we have chosen to use full-text articles from selected families and provide the precision and recall for all 589 articles. The point mutations extracted by MEMA were associated with proteins contained in HUGO and validated with mutations in OMIM, while Mutation GraB utilizes the Swiss-Prot and Entrezgene databases for protein identification and sequence validation. MEMA also extracted DNA mutations from their set of abstracts, and while the current version Mutation GraB can identify both DNA and protein point mutations, we only validate protein point mutations. Additionally, MEMA identifies a wider set of mutation types, including some that are described grammatically. <xref ref-type="table" rid="pcbi-0030016-t006">Table 6</xref> shows the performance of Mutation GraB against that of MEMA on the set of 100 abstracts with these caveats.</p><table-wrap content-type="1col" id="pcbi-0030016-t006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t006</object-id><label>Table 6</label><caption><p>Mutation GraB versus MEMA Performance</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t006" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb6col1" align="left" charoff="0" char=""/><col id="tb6col2" align="char" charoff="0" char="."/><col id="tb6col3" align="char" charoff="0" char="."/><col id="tb6col4" align="char" charoff="0" char="."/><col id="tb6col5" align="char" charoff="0" char="."/><col id="tb6col6" align="char" charoff="0" char="."/><col id="tb6col7" align="char" charoff="0" char="."/><col id="tb6col8" align="left" charoff="0" char=""/><col id="tb6col9" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left" rowspan="3"><hr/>Mutation Extraction Types</td><td colspan="4"><hr/>MEMA</td><td colspan="4"><hr/>Mutation GraB</td></tr><tr><td colspan="2"><hr/>Recall</td><td colspan="2"><hr/>Precision</td><td colspan="2"><hr/>Recall</td><td colspan="2"><hr/>Precision</td></tr><tr><td><hr/>Percent</td><td><hr/>Total</td><td><hr/>Percent</td><td><hr/>Total</td><td><hr/>Percent</td><td><hr/>Total</td><td><hr/>Percent</td><td><hr/>Total</td></tr></thead><tbody><tr><td>Cited mutation</td><td>74.7</td><td>204/273</td><td>98.6</td><td>204/207</td><td>77.3</td><td>130/168</td><td>97.7</td><td>130/133</td></tr><tr><td>Contained mutation&ndash;gene pairs</td><td>35.2</td><td>57/162</td><td>93.4</td><td>57/61</td><td>69.3</td><td>52/75</td><td>85.2</td><td>52/61</td></tr></tbody></table> --><!-- --></table-wrap><p>The row “Cited mutation” refers to the identification of the point mutation terms in the text, while the row “Contained mutation–gene pairs” refers to the identification and association of the mutation to its protein of origin. The different counts are because of the absence of DNA mutations in the Mutation GraB analysis. Also, our manual analysis of the abstracts found a few mentions of mutated amino acid positions without specifying a mutant amino acid. These mentions were not included in our counts. The precision and recall for identifying “cited mutation” are essentially the same for both MEMA and Mutation GraB. Considering that Mutation GraB does not identify any grammar mutations while MEMA does, this is somewhat surprising. In comparing the identification of “contained mutation–gene pairs,” however, Mutation GraB achieves a much higher recall (77.3% versus 35.2%) but a lower precision (85.2% versus 93.4%) than published results for MEMA. As Mutation GraB validates the mutation–protein pairs by comparing with Swiss-Prot sequences, these associations are more significant and may contribute to a lower number of total mutation–gene pairs found in the text. Mutation GraB's disambiguation metric and sequence validation steps help decrease the number of incorrect associations, thereby increasing the recall significantly.</p><p>In addition to the increase in recall, we believe Mutation GraB to be an improvement over MEMA for other reasons. One, while abstracts are more readily available than full-text articles, full-text articles are far more informative with regard to point mutations. MEMA extracted 24,351 point mutations mentions from 16,728 abstracts for an average of 1.45 point mutations per abstract. The 589 articles that Mutation GraB was evaluated against contained 3,216 unique point mutations, resulting in an average of 5.45 point mutations per article. Because Mutation GraB only counts unique point mutations per article, the total number of point mutation terms identified is actually significantly higher. We found that a full-text article contains approximately seven times more point mutation mentions than the abstract alone. With this in mind, our processing of 589 full-text articles would be equivalent to a larger quantity of abstracts.</p><p>Second, validation against OMIM will only compare point mutations that are disease-related, while sequence validation against Swiss-Prot compares all point mutations that differ from the wild-type amino acid. Since Swiss-Prot is updated more frequently and contains more genes/proteins than OMIM, Mutation GraB can validate a greater number of point mutations than MEMA. Finally, out of the 100 abstracts MEMA analyzed, only 35 contained multiple gene/protein mentions. From our set of full-text articles, 81 contained point mutations belonging to multiple proteins, and we counted multiple gene/protein mentions in 562 out of 589 articles (95%). As a result, the protein disambiguation capability of Mutation GraB was tested more rigorously than MEMA.</p></sec><sec id="s3b"><title>Comparison with Mutation Miner</title><p>Mutation Miner differs in many respects to Mutation GraB. Foremost, their use of NLP on a sentence level differs from the statistical approach of Mutation GraB. When searching for a protein of origin, Mutation Miner uses the protein and organism terms to query Entrezgene for a unique protein entry to retrieve sequence information. They show this solution to be suboptimal, because multiple proteins may be retrieved from the query and sometimes the target protein is not the first protein returned. Also, Mutation Miner uses the protein sequence information not to validate extracted point mutations, but instead to produce multiple sequence alignments of targeted proteins to provide mutation annotations to 3-D structure displays.</p><p>The authors of Mutation Miner tested their methods on 19 abstract and full-text articles on the xylanase protein family. We sought to run Mutation GraB on the same 19 full-text articles to generate a performance comparison, but ran into some obstacles. Instead of measuring the precision and recall for the correct association of a protein–organism pair with each point mutation, Baker and Witte et al. compute precision and recall for the identification of protein–organism pairs and the identification of point mutations separately. Since Mutation GraB identifies protein–organism pairs based on sequence validation against the point mutation, we cannot produce a comparable evaluation. Additionally, we were only able to retrieve 16 full-text articles from the list. One PDF was copy-protected, while two others did not have the full text available from PubMed. In those instances, the abstract was used. Also, the authors of Mutation Miner have counted a total of 54 point mutations in their 19 articles, while we have manually identified 111 point mutations. This discrepancy may affect the precision and recall of Mutation GraB since we are extracting twice as many point mutations.</p><p><xref ref-type="table" rid="pcbi-0030016-t007">Table 7</xref> shows the PMID of the articles tested, format of the text, proteins described, point mutations identified, and numbers of point mutations counted by us (Number PM) and Baker and Witte et al. (MM Number PM). For a majority of the articles, we manually identified more point mutations in the text. <xref ref-type="table" rid="pcbi-0030016-t008">Table 8</xref> shows the precison, recall, and F-measure achieved by Mutation Miner in extracting protein–organism pairs and identifying point mutations for these articles. It also shows performance for Mutation GraB on the same article set, save for the three abstracts used. We can see that Mutation GraB is better at identifying point mutations than Mutation Miner, with an F-measure of 0.94 versus 0.90, even though we tested on a larger set of point mutations. Mutation GraB also extracted point mutation–protein–organism triplets at a higher accuracy than Mutation Miner extracted protein–organism pairs alone, with an F-measure of 0.87 versus 0.61. Judging by the low recall of Mutation Miner in extracting protein–organism pairs, analysis at the sentence level misses a majority of the protein–organism associations.</p><table-wrap content-type="1col" id="pcbi-0030016-t007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t007</object-id><label>Table 7</label><caption><p>Xylanase Literature Set and Proteins and Point Mutations within</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t007" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb7col1" align="left" charoff="0" char=""/><col id="tb7col2" align="left" charoff="0" char=""/><col id="tb7col3" align="left" charoff="0" char=""/><col id="tb7col4" align="left" charoff="0" char=""/><col id="tb7col5" align="char" charoff="0" char="."/><col id="tb7col6" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left"><hr/>PMID</td><td><hr/>Format</td><td><hr/>Proteins Described</td><td><hr/>Point Mutations</td><td><hr/>Number MG PM</td><td><hr/>Number MM PM</td></tr></thead><tbody><tr><td>885954</td><td>PDF full text</td><td>P18429</td><td>E106D</td><td>5</td><td>3</td></tr><tr><td></td><td></td><td>P07986</td><td>D164A, E168A, E274D, E274A</td></tr><tr><td>1359880</td><td>PDF full text</td><td>P00694</td><td>D48E, D48S, E120S, E120D, E209D, E209S, E209C</td><td>7</td><td>3</td></tr><tr><td>8019418</td><td>PDF full text</td><td>P09850</td><td>D39N, Y97F, E106Q, E106D, Y108F, R140K, R140N, Y194F, E200D, E200Q, E200C</td><td>11</td><td>2</td></tr><tr><td>10220321</td><td>PDF full text</td><td>P09850</td><td>Y97F, R140K, R140N</td><td>3</td><td>1</td></tr><tr><td>10860737</td><td>PDF full text</td><td>P09850</td><td>N63D, E106Q, E200Q</td><td>3</td><td>1</td></tr><tr><td>11601976</td><td>PDF full text</td><td>P10478</td><td>S172A</td><td>1</td><td>1</td></tr><tr><td>10752608</td><td>PDF full text</td><td>P09850</td><td>N176C, S128C</td><td>2</td><td>5</td></tr><tr><td>9930661</td><td>Abstract<sup>a</sup></td><td>P33557</td><td>D64N</td><td>1</td><td>1</td></tr><tr><td>8376336</td><td>PDF full text</td><td>P36917</td><td>D537N, D541Q, H572N, E600Q, D602N, D645N</td><td>6</td><td>3</td></tr><tr><td>11377763</td><td>PDF full text</td><td>P36217</td><td>N42H, N43D, Y59M, N61L, N70E, N76D, S142C, Q157A, I161E, N186C, Q194Y, Q194L, Q194H, Q194K</td><td>14</td><td>3</td></tr><tr><td>11917150</td><td>PDF full text<sup>b</sup></td><td>&mdash;</td><td>&mdash;</td><td>0</td><td>11</td></tr><tr><td>15129722</td><td>Abstract<sup>c</sup></td><td>P36217</td><td>T34C, T60C</td><td>2</td><td>2</td></tr><tr><td>15260499</td><td>PDF full text</td><td>P36217</td><td>T34C, N43D, Y59F, T60C, N70E, K90R, S142C, N186C, Q194H</td><td>9</td><td>3</td></tr><tr><td>15278768</td><td>PDF full text</td><td>P36217</td><td>T33C, T39C, N43D, S47C, Y58F, T59C, N70E, K90R, L105C, V139C, S142C, N186C, A189C, Q194H, Q194C</td><td>15</td><td>3</td></tr><tr><td>7764794</td><td>Abstract<sup>c</sup></td><td>P26514</td><td>F196Y, R197E, R197K, N214D</td><td>4</td><td>3</td></tr><tr><td>9201919</td><td>PDF full text</td><td>P07986</td><td>E274D</td><td>7</td><td>2</td></tr><tr><td></td><td></td><td>P26514</td><td>H122R, H122S, H122Y, H248K, H248E, H248R</td></tr><tr><td>9681873</td><td>PDF full text</td><td>P26514</td><td>H127E, H127Q, H127F, H127A, H127K, H127W</td><td>6</td><td>1</td></tr><tr><td>10235626</td><td>PDF full text</td><td>P26514</td><td>W126F, W126A, W126H, Y213F, Y213A, Y213S, W307H, W307A, W307F, W315F, W315A, W315H</td><td>12</td><td>4</td></tr><tr><td>9731776</td><td>PDF full text</td><td>P07986</td><td>E168A, H246A, H246N</td><td>3</td><td>2</td></tr><tr><td></td><td></td><td></td><td>Total</td><td>111</td><td>54</td></tr></tbody></table> --><!-- <table-wrap-foot><fn id="nt701"><p><sup>a</sup>PDF copy-protected.</p></fn><fn id="nt702"><p><sup>b</sup>No instance of xylanase protein names in the article.</p></fn><fn id="nt703"><p><sup>c</sup>Electronic full text not available.</p></fn><fn id="nt704"><p>Number MG PM represents the number of point mutations identified by us.</p></fn><fn id="nt705"><p>Number MM PM represents point mutations identified by Mutation Miner.</p></fn></table-wrap-foot> --></table-wrap><table-wrap content-type="1col" id="pcbi-0030016-t008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t008</object-id><label>Table 8</label><caption><p>Mutation GraB versus Mutation Miner Performance</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t008" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb8col1" align="left" charoff="0" char=""/><col id="tb8col2" align="left" charoff="0" char=""/><col id="tb8col3" align="left" charoff="0" char=""/><col id="tb8col4" align="left" charoff="0" char=""/><col id="tb8col5" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>Evaluation Metric</td><td colspan="2"><hr/>Mutation Miner</td><td colspan="2"><hr/>Mutation GraB</td></tr><tr><td><hr/>Protein&ndash;Organism</td><td><hr/>Mutations</td><td><hr/>Mutations&ndash;Protein&ndash;Organism</td><td><hr/>Mutations</td></tr></thead><tbody><tr><td>Precision</td><td>0.91</td><td>0.84</td><td>0.84</td><td>0.91</td></tr><tr><td>Recall</td><td>0.46</td><td>0.97</td><td>0.90</td><td>0.97</td></tr><tr><td>F-measure</td><td>0.61</td><td>0.90</td><td>0.87</td><td>0.94</td></tr></tbody></table> --><!-- --></table-wrap></sec><sec id="s3c"><title>Protein Name Identification</title><p>A critical component of point mutation extraction is identifying the protein names for association with the point mutation terms. Since we do not have the luxury of large annotated training sets for our protein families, which are commonly used in more sophisticated methods for protein name recognition and normalization, we relied on a rule-based method. Our rule-based method was patterned after other quantified methods [<xref ref-type="bibr" rid="pcbi-0030016-b023">23</xref>,<xref ref-type="bibr" rid="pcbi-0030016-b025">25</xref>] and should provide similar performance characteristics. In our set of 589 journal articles, true positive point mutations were represented by 519 proteins and we were able to identify 446 of these proteins for a precision of 0.86. Reasons for missing some of the protein names can be broadly grouped into two categories: (1) difference in name representation from Swiss-Prot or Entrezgene and (2) formatting changes as a result of PDF-to-text conversion.</p><p>An example of the first category is the identification of the Scn4a protein (Swiss-Prot AC: P15390), whose synonyms are “Mu-1”, “microI”, “Voltage-gated sodium channel alpha subunit Nav1.4”, “Nav1.4”, “Sodium channel protein type IV alpha subunit”, “NCHVS”, and “Sodium channel protein, skeletal muscle alpha-subunit”, as given by Swiss-Prot and Entrezgene. In the ion channel article PMID 10653790, this same protein is represented by the term “NaCh”, presumably as an abbreviation for “sodium channel”. However, the term “NaCh” is not remotely close to any of the provided synonyms given for the Scn4a protein. Another example is the identification of the protein Q98146 in the GPCR article PMID 10842179. The only synonym given for this protein is “G-protein coupled receptor homolog 74”, and the representation used in the article is ORF74. In both of these instances, our dictionary-based search could not have possibly identified the protein terms in the article with the synonyms at hand.</p><p>The PDF-to-text conversion of journal articles also often generates unintended changes with regard to protein names. One such consequence is the modification of superscript and subscript formatting present in some PDF files.</p><p>Another effect of the PDF-to-text conversion is the mishandling of Greek characters. The pdftotext utility replaces Greek characters with their Unicode representation, and unless the characters are represented in Unicode within the PDF, the conversion removes them. Many protein names, especially in the GPCR family, rely on these designations for differentiation from other similar proteins. While the Unicode representation is found in some PDF files, frequently other font or image representations are used to denote Greek characters. When the non-Unicode Greek characters are removed from these names, they are either skipped or misidentified for other terms. The ion channel article PMID 10097182 describes the α, β, and γ ENaC proteins (Swiss-Prot ACs P37089, P37090, and P3791). During the PDF-to-text conversion, these characters were stripped, making it impossible to identify which ENaC proteins are being discussed.</p><p>A number of overlooked protein names in the GPCR literature set could be recovered using the permutation dictionary, however. For historical reasons, GPCRs were originally named by physiologists studying features, then by pharmacologists focused on tissue specificity, and finally by the genomics community based on sequence homology. Some GPCRs have been renamed on more than one occasion, and the order of naming elements is often permutated. These factors are less relevant to the ion channel and tyrosine kinase literature; thus, the use of a permutation dictionary increased the recall by identifying some full-length protein terms, but this benefit was limited to the GPCR family. One example where the permutation dictionary was useful is the “Parathyroid Cell calcium-sensing receptor” (Swiss-Prot AC P41180). Protein symbols for this term include “CaSR”, “Gprc2a”, “Pcar1”, and “FHH”; a wide variety of legacy naming. Unfortunately, authors frequently use the term “calcium sensing receptor” to describe this protein. While that term is less specific than the original full name, it is specific enough to identify that single Swiss-Prot entry from the set of GPCR entries. A permutation dictionary helped recover this term while other protein entity recognition methods would probably have not. Owing to the proliferation of GPCRs in the olfactory tissues, the permutation dictionary also contained a large number of nonsensical permutation terms such as “receptor 31 17” generated from the “Olfactory receptor 17–31” term (Swiss-Prot P58170). However, these nonsensical terms are unlikely to be found in the text and the additional cost of precomputing the permutation dictionary and additional searching is modest. The protein tyrosine kinase and ion channel transporter literature, in contrast, did not benefit from the use of the permutation dictionary for identifying additional terms. The literature for these protein families contained a more standardized nomenclature, and the use of the permutation dictionary only increased the number of spurious terms identified.</p><p>Since protein term identification is independent from the rest of Mutation GraB, a switch from one method to another is transparent to the other parts. While protein name identification is a necessary component of Mutation GraB, it is not the full focus of our efforts and is more thoughtfully addressed in the recent BioCreative challenge.</p></sec><sec id="s3d"><title>Protein Disambiguation</title><p>The main task of the search metrics was to select the correct protein to associate with a point mutation when several proteins are found in the text. When only one protein is found whose sequence matches the point mutation wild-type amino acid, no disambiguation is necessary; the graph bigram and word distance metrics are not utilized. In instances where more than one protein can be assigned to a point mutation, the search metrics are used to disambiguate. Therefore, the main performance difference between the two search metrics is not the overall F-measure, but the precision measured in instances of multiple protein disambiguation.</p><p><xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>A–<xref ref-type="fig" rid="pcbi-0030016-g003">3</xref>C provides evidence that the graph bigram metric performs better than the word distance metric in these instances. <xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>A–<xref ref-type="fig" rid="pcbi-0030016-g003">3</xref>B shows that the graph bigram metric achieves a higher <italic>P</italic> at all levels of PPA greater than one, while <xref ref-type="fig" rid="pcbi-0030016-g003">Figure 3</xref>C shows the graph bigram metric ahead in all cases except for three PPA. The GPCR point mutations were ideal for this analysis because of the wide range of PPA values; a large number of mutations had two to six PPA. The protein tyrosine kinase and ion channel transporter literature sets contained fewer point mutations in general and a smaller spread of PPA. The ion channel transporter set, especially, contained more than twice as many point mutations with one PPA &gt;1 PPA. This fact can explain why the overall F-measures between the two metrics for the ion channel transporter literature sets are quite similar. For the set of point mutations with PPA ≥ 1, the precision P = 0.84 using the graph bigram metric and P = 0.73 using the word distance metric. This highlights the value of the graph bigram metric over the word distance metric in disambiguation situations.</p><p>The basic assumption in using a word distance metric for point mutation extraction was that the relative positioning between entities in text is the best barometer of associability and significance. We do know, however, that authors describing point mutations often reference nonassociated proteins in close proximity to point mutations, having referenced the associated protein in a different part of the text. This led us to conjecture that frequency as well as positional data, codified in the graph bigram search metric, would be a better method for associating entities for point mutation extraction. Data from <xref ref-type="fig" rid="pcbi-0030016-g002">Figures 2</xref>–<xref ref-type="fig" rid="pcbi-0030016-g004">4</xref> with PPA &gt;1 supports this conjecture.</p><fig id="pcbi-0030016-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.g004</object-id><label>Figure 4</label><caption><title>Example of a Paragraph of Text Evaluated by the Graph Bigram and Word Distance Metrics</title><p>(A)Text is taken from a figure label from the article PMID 10889210.</p><p>(B)Graph generated by bigram traveral using the graph bigram method. The point mutation terms are in green, protein terms in blue, and regular words in gray.</p><p>(C)Table shows the measurements between some selected words in the text using both the word distance and graph bigram metrics. The word–distance measurements are below the diagonal, and the graph bigram measurements are above the diagonal. Two different word pairs are examined, {fig, bars} and {alteration, scatchard}.</p><p>The {fig, bars} words are shown in red in (A), the path is colored in red in (B), and the metric measurements are highlighted in red in (C). The {alteration, scatchard} items are highlighted in blue, correspondingly.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.g004" xlink:type="simple"/></fig></sec><sec id="s3e"><title>Manual Point Mutation Annotation</title><p>To approximate the performance of Mutation GraB on a large scale of articles with the breadth of PubMed, it is important to develop and test it on a smaller set of representative articles. The size of our algorithm development and validation sets reflects a compromise between what is possible and what is practical. The manual processing time for one article ranges from 10–60 min, depending on the number of point mutations in the article and the difficulty in validating them against the Swiss-Prot database. The definition of these “gold standard” annotations may change with each updated release of Swiss-Prot, as some protein accession numbers, protein names, protein keyword classifications, and organism names change with each release. The generation and updating of the gold standard annotations can take as long as 100 h per 100 article set. This, coupled with the current difficulty in retrieving full-text PDF articles from journal sources, makes it prohibitive to work with literature sets larger than 100 articles. Fortunately, the trends in electronic publishing and the more open dissemination of scientific literature favor the availability of an increasingly large set of full-text articles.</p></sec><sec id="s3f"><title>Point Mutations in Images</title><p>When identifying point mutations in an article, we counted mutations that occurred within images as true positive mutations. These point mutations were represented commonly as text that occurs in a graphical diagram or chart. Because the information encapsulated within the image is not accessible to text-mining methods, Mutation GraB cannot extract those mutations if they occur exclusively within images in an article. Since a human reader can still identify those mutations, we felt it necessary to include their presence in our gold standard sets. However, removing them from the gold standard sets can more accurately reflect Mutation GraB's performance on solely textual information. <xref ref-type="table" rid="pcbi-0030016-t009">Table 9</xref> shows the precision, recall, and F-measure of the three protein family literature sets, with and without the image mutations, processed by Mutation GraB using the graph bigram metric. As expected, the presence or absence of image mutations only affects the recall because they are classified as either TP or TN by Mutation GraB. The GPCR literature set contained the most image mutations, and removing those mutations from comparison would increase the F-measure from 0.79 to 0.87. The tyrosine kinase and ion channel literature sets contained fewer image mutations, and, accordingly, have smaller gains in F-measure with their removal.</p><table-wrap content-type="1col" id="pcbi-0030016-t009" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030016.t009</object-id><label>Table 9</label><caption><p>Mutation GraB Performance on All Protein Family Literature Sets with and without Image Mutations Using the Graph Bigram Metric</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.t009" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb9col1" align="left" charoff="0" char=""/><col id="tb9col2" align="char" charoff="0" char="."/><col id="tb9col3" align="left" charoff="0" char=""/><col id="tb9col4" align="char" charoff="0" char="."/><col id="tb9col5" align="left" charoff="0" char=""/><col id="tb9col6" align="char" charoff="0" char="."/><col id="tb9col7" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left" rowspan="2"><hr/>Evaluation Metric</td><td colspan="2"><hr/>GPCR</td><td colspan="2"><hr/>Tyrosine Kinase</td><td colspan="2"><hr/>Ion Channel</td></tr><tr><td><hr/>Image</td><td><hr/>No Image</td><td><hr/>Image</td><td><hr/>No Image</td><td><hr/>Image</td><td><hr/>No Image</td></tr></thead><tbody><tr><td>Image mutations</td><td>295</td><td>&mdash;</td><td>12</td><td>&mdash;</td><td>74</td><td>&mdash;</td></tr><tr><td>Precision</td><td>0.86</td><td>0.86</td><td>0.61</td><td>0.61</td><td>0.82</td><td>0.82</td></tr><tr><td>Recall</td><td>0.74</td><td>0.88</td><td>0.88</td><td>0.90</td><td>0.70</td><td>0.76</td></tr><tr><td>F-measure</td><td>0.79</td><td>0.87</td><td>0.72</td><td>0.73</td><td>0.76</td><td>0.79</td></tr></tbody></table> --><!-- --></table-wrap><p>The GPCR literature set may contain a higher percentage of image mutations because the articles were taken from the tGRAP database and are expected to be more specific on point mutations than its tyrosine kinase and ion channel literature set counterparts. The tyrosine kinase and ion channel literature sets were randomly selected from a resulting PubMed search and have a lower point mutation density due to a lower specificity of subject matter. Nonetheless, when viewing the performance of Mutation GraB on the literature sets, it is important to consider the effect of the image mutations on the recall and overall F-measure.</p></sec><sec id="s3g"><title>Utility</title><p>Mutation GraB, if used on a large set of literature, has many potential downstream applications. The immediate benefit would be to generate a database of point mutations found in the literature that could be linked to both its literature and its protein database sources. The result of this database is the ability to examine the effect of point mutations on the structure and function of proteins within the framework of protein families, subgroups, and superfamilies. It is difficult to judge the amount of time saved by using Mutation GraB versus hand annotation, but we estimate this difference as significant. It took upward of 100 h to manually annotate 100 articles, whereas Mutation GraB processed the same volume of articles in about 3 h. Even taking into account hand correction of precision and recall errors, which took anywhere from 10–15 hours per 100 articles, Mutation GraB should still reduce the time required by 80% when compared with exclusively manual annotation. As with most text-mining applications, errors in precision are more tolerable than recall errors; we believe it is more important to identify and label the point mutation, even though the protein association may be incorrect, than to miss point mutations completely. At a F-measure estimate of 0.7, using Mutation GraB and correcting the precision and recall errors is still far more efficient than manual annotation alone. The utility and efficiency of Mutation GraB also relies upon the specificity of the literature given. As one can imagine, examining a very large set of nonspecific articles for a narrow set of protein point mutations will yield low performance.</p></sec><sec id="s3h"><title>Conclusions</title><p>From our development and validation of Mutation GraB, we can draw a few conclusions regarding the extraction of point mutations from biomedical literature. Foremost, it is entirely possible to utilize text-mining tools to extract point mutations at a level that warrants its usage. We can process 100 articles in anywhere from 1 h to 3 h, depending on the number of point mutations found within the articles. Also, we know that most articles discuss mutations originating from a single protein. In these instances, no further processing is required to correctly associate mutations and the proteins of origin. For articles that discuss more than one protein, however, a metric for choosing the right protein is necessary. One idea for finding the correct association between proteins and point mutations is to use the word distance between two entities as a metric for association significance. We thought that this metric was insufficient in many regards, and sought to improve it by incorporating frequency data with positional data to generate a heuristic for entity association. The result of this was a metric that combines bigram analysis with graph–theoretic searching that outperforms the simple word distance measure. The graph bigram metric for entity association could have many other applications in the biotext-mining field, and could increase the amount of information that can be automatically extracted from the biomedical literature.</p></sec></sec><sec id="s4"><title>Materials and Methods</title><p>The overview of Mutation GraB is shown in <xref ref-type="fig" rid="pcbi-0030016-g002">Figure 2</xref>. The following sections describe how the protein family literature sets were generated, how Swiss-Prot entries were chosen, and how each article was processed to extract the point mutations.</p><sec id="s4a"><title>Article search and retrieval.</title><p>Articles were searched for using PubMed queries containing the protein family name, the MeSH term “point mutation”, and the “full text” filter. The query “&lt;protein family&gt; AND point mutation[mh] AND full text[sb]” was used to retrieve the relevant literature, where &lt;protein family&gt; is substituted by either “protein tyrosine kinase”, or “ion channel transporter”; the GPCR PMID list was retrieved from the tGRAP database. The resulting lists of PMIDs were individually searched using the Entrez E-Utilities, retrieving the LinkOuts—external HTTP links—for the full-text articles. We followed the LinkOuts and parsed the returned HTML pages for links to PDF files, downloading the PDF file when possible. The downloaded PDF files are converted to Unicode text using the Unix “pdftotext” utility.</p></sec><sec id="s4b"><title>Text preprocessing.</title><p>After conversion from PDF, the text was preprocessed to create a more cohesive and manageable document. We removed the “References” and “Acknowledgements” sections from the text, as well as sections beginning with the text “this work was supported by”, “to whom correspondence”, and “the abbreviations used are”. A stop list consisting of the words “the”, “and”, “for”, “with”, “were”, “that”, “was”, “from”, “this”, “are”, “which”, “a”, “an”, “or”, and “of” was used and those words subsequently removed.</p></sec><sec id="s4c"><title>Dictionary creation.</title><p>Two different dictionaries were created for each protein family to be searched, a protein name dictionary and an organism dictionary. The terms for both dictionaries were extracted from the Swiss-Prot and Entrezgene databases. First, Swiss-Prot entries for the protein families of interest were chosen based on the contents of the “keyword” Swiss-Prot field. Protein tyrosine kinase entries contained the words “Protein Tyrosine Kinase” in the keyword field, GPCR entries contained “G Protein-Coupled Receptor”, and ion channel entries contained both “Ionic channel” and “Transmembrane”. To generate the protein name dictionary, the “protein name” and “gene name” fields from a protein family Swiss-Prot entry subset were compiled. If a Swiss-Prot entry had a related Entrezgene database entry, the “gene name”, “official symbol”, “official fullname”, and “aliases” Entrezgene fields were added to the dictionary if they were not duplicates of the SwissProt names. The organism dictionaries were generated by compiling the “organism” field from the respective Swiss-Prot entries. The word “murine” was added to the organism dictionaries as a synonym for “mouse”.</p><p>A second dictionary, which we called a permutation dictionary, was also created from protein full names three words or longer. The entries in this dictionary were permutations of the full names with the permutations also being at least three words long. Since a set of <italic>n</italic> elements will have <italic>n</italic>! permutations, and the number of ways of obtaining an ordered <italic>k</italic> elements from a set of <italic>n</italic> elements is <italic>n</italic>!(<italic>n</italic> − <italic>k</italic>)!, a term that consisted of five words will spawn 5! / (5 − 3)! = 60 permutated terms. For example, permutations of the full name “Parathyroid Cell calcium-sensing receptor” include “calcium sensing receptor”, “cell calcium sensing”, and “cell parathyroid sensing calcium receptor”. Fortunately, nonsensical word permutations are unlikely to appear in actual text. This dictionary is searched in the same manner as the protein full name terms in the standard dictionary.</p></sec><sec id="s4d"><title>Manual annotation of articles.</title><p>For each article processed by Mutation GraB, we manually read and extracted the point mutations from the text. We counted a point mutation as a TP point mutation if the associated protein belonged to the corresponding Swiss-Prot protein family set and if the wild-type amino acids of the mutation and the protein matched. A point mutation is considered a TN if its associated protein is not part of the Swiss-Prot set (i.e., belonging to a different protein family) or if the wild-type amino acids do not match. Point mutations that contain typographical errors are considered TN point mutations as well as are point mutations whose position numbering differs from the provided sequence in its corresponding Swiss-Prot entry. These annotated TP and TN point mutations were used as our “gold standard” sets to evaluate Mutation GraB performance. These gold standard datasets are provided in XML format for the GPCR (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd001">Datasets S1</xref> and <xref ref-type="supplementary-material" rid="pcbi-0030016-sd002">S2</xref>), tyrosine kinase (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd003">Datasets S3</xref> and <xref ref-type="supplementary-material" rid="pcbi-0030016-sd004">S4</xref>), and ion channel transporter (<xref ref-type="supplementary-material" rid="pcbi-0030016-sd005">Datasets S5</xref> and <xref ref-type="supplementary-material" rid="pcbi-0030016-sd006">S6</xref>) literature sets.</p></sec><sec id="s4e"><title>Term identification and extraction.</title><p>Regular expressions were constructed to identify point mutation, protein name, and organism name terms. A point mutation description usually consists of a wild-type amino acid name, followed by the amino acid position number, which is followed by the mutant amino acid name. The amino acids can be represented in the single-letter or three-letter format, and the regular expressions allow for some punctuation between the position and the amino acids. Some common examples of point mutation strings are “R123Y”, “R(123)Y”, “R-123-Y”, “Arg123Tyr”, “Arg(123)Tyr”, and “Arg-123-Tyr”. Point mutations with a different formatting or representation in the grammar of the text were ignored.</p><p>To search for organism names, we created different levels of case-sensitive and insensitive regular expressions. A tiered rule-based approach based on similar methods [<xref ref-type="bibr" rid="pcbi-0030016-b002">2</xref>,<xref ref-type="bibr" rid="pcbi-0030016-b023">23</xref>,<xref ref-type="bibr" rid="pcbi-0030016-b025">25</xref>], however, was used to identify protein name terms. First, the protein name dictionary was split into two groups, symbols (i.e., EPHB1) and full names (i.e., Ephrin type-B receptor 1). Two types of regular expressions were created. One, a strict regular expression, is case-sensitive and does not allow for variation from the protein symbol. A second regular expression, which is more relaxed, is case-insensitive and allows for non-alphanumeric characters to be removed or substituted by spaces. For the protein symbols, both strict and relaxed regular expressions were used with the addition of organism modifier prefixes or suffixes. The prefixes “h”, “m”, and “r” were allowed for human, mouse, and rat modifiers, and the “p” suffix was allowed for <named-content content-type="genus-species" xlink:type="simple">S. cerevisiae</named-content>. For protein full names, both types of regular expressions were used without any additional modifications. We searched with the protein symbols first followed by the protein full names, in each instance using the strict regular expression formation followed by the relaxed. We also allowed for Roman numeral replacement. If a protein name has a single digit as the last character, such as “XYN2”, we also searched for the term “XYNII”.</p></sec><sec id="s4f"><title>Point mutation–protein association.</title><p>After identifying all the point mutation, protein name, and organism name terms present in the text, we looked for Swiss-Prot entries that corresponded to the protein and organism names found. For example, the protein full name “Alpha 1-B Adrenergic Receptor” and the organism name “rat” correspond to the unique Swiss-Prot entry P15823. If an article contains multiple protein and organism names, multiple unique Swiss-Prot entries may be represented. The wild-type amino acid of each point mutation was then compared to the amino acid at the specified position of each Swiss-Prot protein found in the text. We also compared the amino acid sequence of any isoforms of the Swiss-Prot protein as well as removing the signal sequence of the protein if present. If the amino acids from the point mutation and the protein sequence match, that protein was categorized as a possible association for the point mutation. When a single Swiss-Prot protein was possible for a point mutation, that protein was automatically associated with the point mutation. When multiple proteins are possible for a point mutation, the word distance or graph bigram methods were used to select the best match for association.</p><p><bold>Word distance metric.</bold> Let <bold>M</bold> be the set of point mutations with multiple possible Swiss-Prot protein associations in an article. For each <italic>m</italic> ∈ <bold>M</bold>, let <bold>P</bold> be the set of protein names and <bold>O</bold> be the set of organism names represented by the possible proteins for <italic>m</italic>. Thus, for <italic>m</italic> ∈ <bold>M</bold>, <italic>p</italic> ∈ <bold>P</bold>|<italic>m</italic>, and <italic>o</italic> ∈ <bold>O</bold>|<italic>m</italic>, we created a list <bold>T</bold> = {<italic>t</italic><sub>1</sub> = 〈<italic>m</italic>, <italic>p</italic><sub>1</sub>, <italic>o</italic><sub>1</sub>〉, ..., <italic>t</italic><sub>i</sub> = 〈<italic>m</italic>, <italic>p</italic><sub>j</sub>, <italic>o</italic><sub>k</sub>〉} that represents the PPAs for point mutation <italic>m</italic>. The word distance metric between terms <italic>w</italic><sub>i</sub> and <italic>w</italic><sub>j</sub> in the text, <italic>h</italic><sub>word</sub>(<italic>w</italic><sub>i</sub><italic>, w</italic><sub>j</sub>), is the shortest number of words that separate any two instances of <italic>w</italic><sub>i</sub> and <italic>w</italic><sub>j</sub>. Using this measurement, we associated point mutation <italic>m</italic> to the protein whose protein name <italic>p</italic> and organism name <italic>o</italic> resulted in the smallest δ<italic><sub>m</sub></italic><sub>, word</sub> = <italic>h</italic><sub>word</sub>(<italic>m, p</italic>) + <italic>h</italic><sub>word</sub>(<italic>m, o</italic>) + <italic>h</italic><sub>word</sub>(<italic>p, o</italic>). This is essentially the triangulation of distances between the point mutation term, protein name, and organism name, where the smallest sum of distances represents the assumed correct association between point mutation and Swiss-Prot protein.</p><p><bold>Graph bigram metric.</bold> The graph bigram metric works in the same manner as the word distance metric in terms of triangulating the smallest distances between the relevant terms in the text. The difference lies in how the distances are calculated. A graph was constructed by assigning nodes to all of the words and terms in the text. An edge connected two nodes if the represented words and/or terms were adjacent to each other in the text. The reciprocal <italic>t</italic> statistic provided a sensible way of measuring how likely it is that any two words will occur next to each other. The <italic>t</italic> test quantifies the likelihood that the adjacency of two words is significant. The larger the <italic>t</italic> statistic, the greater the significance of the relationship. We set the value of an edge between two nodes containing words <italic>w</italic><sub>i</sub> and <italic>w</italic><sub>j</sub> to be the reciprocal of the <italic>t</italic> statistic:
					<disp-formula id="pcbi-0030016-e001"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030016.e001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>p</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&equals;</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="true">&lsqb;</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mover accent='true'><mml:mi>x</mml:mi><mml:mo>&tilde;</mml:mo></mml:mover><mml:mo>&minus;</mml:mo><mml:mi>&mu;</mml:mi></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mrow><mml:mo stretchy="true">&rsqb;</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&minus;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math> --></disp-formula>where <inline-formula id="pcbi-0030016-ex004"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030016.ex004" xlink:type="simple"/></inline-formula> = sample mean, s<sup>2</sup> = sample variance, N = sample size, and μ = mean of distribution. When the <italic>t</italic> statistic is applied to a text mining application, <inline-formula id="pcbi-0030016-ex001"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030016.ex001" xlink:type="simple"/></inline-formula>
					, where <inline-formula id="pcbi-0030016-ex002"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030016.ex002" xlink:type="simple"/></inline-formula>
					 equals the number of times <italic>w</italic><sub>i</sub> is adjacent to <italic>w</italic><sub>j</sub>, and <italic>N</italic> equals the number of words in the text. The mean of the distribution, or the null hypothesis, is <italic>μ</italic> = <italic>w<sub>i</sub></italic> / <italic>N</italic> × <italic>w<sub>j</sub></italic> / <italic>N,</italic> where w<italic><sub>i</sub></italic> and w<italic><sub>j</sub></italic> are the number of occurrences of word <italic>i</italic> and <italic>j</italic>, respectively. For large samples, the variance <inline-formula id="pcbi-0030016-ex003"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030016.ex003" xlink:type="simple"/></inline-formula>
					 Dijkstra's algorithm is used to calculate the shortest path between any two nodes in a graph, utilizing <italic>h</italic><sub>graph</sub> as the edge weight values. Since Dijkstra's algorithm does not work for negative distances, if any <italic>t</italic> statistic for a bigram is negative, all <italic>t</italic> statistics for bigrams in that article are normalized by the negative value so that the smallest <italic>t</italic> statistic = 0. When calculating the δ value for two terms, if the terms are adjacent, we use the reciprocal <italic>t</italic> statistic value. If the terms are not adjacent to each other in the text, we find the shortest path between the two terms, and δ is equal to the sum of distances <italic>h</italic><sub>graph</sub> between nodes in the graph within the shortest path.
				</p><p>A more detailed example of the differences between the graph bigram and word metrics is shown in <xref ref-type="fig" rid="pcbi-0030016-g004">Figure 4</xref>. <xref ref-type="fig" rid="pcbi-0030016-g004">Figure 4</xref>A shows text from a GPCR article (PMID 10889210) that was used to create the graph shown in <xref ref-type="fig" rid="pcbi-0030016-g004">Figure 4</xref>B. The text is a paragraph from a figure label from the article. <xref ref-type="fig" rid="pcbi-0030016-g004">Figure 4</xref>C shows the distances generated by the two search metrics between some selected words from the text; below the diagonal the numbers are generated by the word distance metric, and above the diagonal by the graph bigram metric. This example is not meant to show an instance of mutation extraction, but is only meant to highlight characteristics of text that are interpreted differently by each metric. Since most full-text articles have point mutations, protein names, and organism names scattered about the entirety of the text, an example detailing a point mutation extraction would be too complicated to illustrate in a figure. The path in <xref ref-type="fig" rid="pcbi-0030016-g004">Figure 4</xref>B highlighted in red shows a bigram traversal between the word “fig” and the word “bars”. In the text in <xref ref-type="fig" rid="pcbi-0030016-g004">Figure 4</xref>A, we can see that the words are each found only once in the text and they are on opposite ends of the paragraph. Using the word distance metric, <italic>h</italic><sub>word</sub>(fig, bars) = 157, which is one of the largest distances measured for that text. The graph bigram metric measures <italic>h</italic><sub>graph</sub>(fig, bars) = 5.26, which, when compared with the other values for <italic>h</italic><sub>graph</sub>, is not the largest measured. This is because the bigram path traverses the word “receptor”, which is found as a bigram with both “basal” and “bars”. This example shows how two words can be far apart in word distance but still be measured more significantly using the graph bigram metric.</p><p>Conversely, we can examine the path in <xref ref-type="fig" rid="pcbi-0030016-g004">Figure 4</xref>B highlighted in blue. The words “alteration” and “scatchard”, when measured by the word distance metric, yield <italic>h</italic><sub>word</sub>(alteration, scatchard) = 41, meaning there are only 40 words that separate the two. This measure is fairly significant when compared with the other <italic>h</italic><sub>word</sub> measurements. However, when using the graph bigram metric, we see that <italic>h</italic><sub>graph</sub>(alteration, scatchard) = 9.80, a larger and far less significant relationship when compared with other <italic>h</italic><sub>graph</sub> measurements. The path generated in the graph for these words is far longer than for “fig” and “bars”, and, accordingly, the graph bigram distance is larger. This highlights a situation where two words close in word distance have a less significant graph bigram measurement.</p></sec></sec><sec id="s5"><title>Supporting Information</title><supplementary-material id="pcbi-0030016-sd001" mimetype="text/xml" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.sd001" xlink:type="simple"><label>Dataset S1</label><caption><title>G Protein–Coupled Receptor Development</title><p>(1.5 MB XML)</p></caption></supplementary-material><supplementary-material id="pcbi-0030016-sd002" mimetype="text/xml" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.sd002" xlink:type="simple"><label>Dataset S2</label><caption><title>G Protein–Coupled Receptor Validation Set</title><p>(1.7 MB XML)</p></caption></supplementary-material><supplementary-material id="pcbi-0030016-sd003" mimetype="text/xml" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.sd003" xlink:type="simple"><label>Dataset S3</label><caption><title>Tyrosine Kinase Development Set</title><p>(894 KB XML)</p></caption></supplementary-material><supplementary-material id="pcbi-0030016-sd004" mimetype="text/xml" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.sd004" xlink:type="simple"><label>Dataset S4</label><caption><title>Tyrosine Kinase Validation Set</title><p>(650 KB XML)</p></caption></supplementary-material><supplementary-material id="pcbi-0030016-sd005" mimetype="text/xml" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.sd005" xlink:type="simple"><label>Dataset S5</label><caption><title>Ion Channel Transporter Development Set</title><p>(1.2 MB XML)</p></caption></supplementary-material><supplementary-material id="pcbi-0030016-sd006" mimetype="text/xml" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030016.sd006" xlink:type="simple"><label>Dataset S6</label><caption><title>Ion Channel Transporter Validation Set</title><p>(1.4 MB XML)</p></caption></supplementary-material></sec></body><back><ack><p>The authors would like to thank Anthony F. Lau and Barbara Rosario for their insight and comments.</p></ack><glossary><title>Abbreviations</title><def-list><def-item><term>GPCR</term><def><p>G protein–coupled receptor</p></def></def-item><def-item><term>Mutation GraB</term><def><p>Mutation Graph Bigram</p></def></def-item><def-item><term>PPA</term><def><p>possible protein associations</p></def></def-item></def-list></glossary><ref-list><title>References</title><ref id="pcbi-0030016-b001"><label>1</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Mitsumori</surname><given-names>T</given-names></name><name name-style="western"><surname>Fation</surname><given-names>S</given-names></name><name name-style="western"><surname>Murata</surname><given-names>M</given-names></name><name name-style="western"><surname>Doi</surname><given-names>K</given-names></name><name name-style="western"><surname>Doi</surname><given-names>H</given-names></name></person-group>
					<year>2005</year>
					<article-title>Gene/protein name recognition based on support vector machine using dictionary as features.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>6</volume>
					<issue>Supplement 1</issue>
					<fpage>S8</fpage>
				</element-citation></ref><ref id="pcbi-0030016-b002"><label>2</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Koike</surname><given-names>A</given-names></name><name name-style="western"><surname>Takagi</surname><given-names>T</given-names></name></person-group>
					<year>2004</year>
					<article-title>Gene/protein/family name recognition in biomedical literature.</article-title>
					<comment>In:</comment>
					<source>Proceedings of BioLink 2004 Workshop in Conjunction with NAACL/HLT</source>
					<conf-name>BioLink 2004: Linking Biological Literature, Ontologies, and Databases: Tools for Users;</conf-name>
					<conf-date>6 May 2004;</conf-date>
					<conf-loc>Boston, Massachusetts, United States.</conf-loc>
					<fpage>9</fpage>
					<lpage>16</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b003"><label>3</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Tanabe</surname><given-names>L</given-names></name><name name-style="western"><surname>Wilbur</surname><given-names>WJ</given-names></name></person-group>
					<year>2002</year>
					<article-title>Tagging gene and protein names in biomedical text.</article-title>
					<source>Bioinformatics</source>
					<volume>18</volume>
					<fpage>1124</fpage>
					<lpage>1132</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b004"><label>4</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Zhou</surname><given-names>G</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>J</given-names></name><name name-style="western"><surname>Su</surname><given-names>J</given-names></name><name name-style="western"><surname>Shen</surname><given-names>D</given-names></name><name name-style="western"><surname>Tan</surname><given-names>C</given-names></name></person-group>
					<year>2004</year>
					<article-title>Recognizing names in biomedical texts: A machine learning approach.</article-title>
					<source>Bioinformatics</source>
					<volume>20</volume>
					<fpage>1178</fpage>
					<lpage>1190</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b005"><label>5</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Marcotte</surname><given-names>EM</given-names></name><name name-style="western"><surname>Xenarios</surname><given-names>I</given-names></name><name name-style="western"><surname>Eisenberg</surname><given-names>D</given-names></name></person-group>
					<year>2001</year>
					<article-title>Mining literature for protein–protein interactions.</article-title>
					<source>Bioinformatics</source>
					<volume>17</volume>
					<fpage>359</fpage>
					<lpage>363</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b006"><label>6</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Blaschke</surname><given-names>C</given-names></name><name name-style="western"><surname>Andrade</surname><given-names>MA</given-names></name><name name-style="western"><surname>Ouzounis</surname><given-names>C</given-names></name><name name-style="western"><surname>Valencia</surname><given-names>A</given-names></name></person-group>
					<year>1999</year>
					<article-title>Automatic extraction of biological information from scientific text: Protein–protein interactions.</article-title>
					<source>Proc Int Conf Intell Syst Mol Biol</source>
					<fpage>60</fpage>
					<lpage>67</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b007"><label>7</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Chang</surname><given-names>JT</given-names></name><name name-style="western"><surname>Schutze</surname><given-names>H</given-names></name><name name-style="western"><surname>Altman</surname><given-names>RB</given-names></name></person-group>
					<year>2004</year>
					<article-title>GAPSCORE: Finding gene and protein names one word at a time.</article-title>
					<source>Bioinformatics</source>
					<volume>20</volume>
					<fpage>216</fpage>
					<lpage>225</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b008"><label>8</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hirschman</surname><given-names>L</given-names></name><name name-style="western"><surname>Yeh</surname><given-names>A</given-names></name><name name-style="western"><surname>Blaschke</surname><given-names>C</given-names></name><name name-style="western"><surname>Valencia</surname><given-names>A</given-names></name></person-group>
					<year>2005</year>
					<article-title>Overview of BioCreAtIvE: Critical assessment of information extraction for biology.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>6</volume>
					<issue>Supplement 1</issue>
					<fpage>S1</fpage>
				</element-citation></ref><ref id="pcbi-0030016-b009"><label>9</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Yeh</surname><given-names>A</given-names></name><name name-style="western"><surname>Morgan</surname><given-names>A</given-names></name><name name-style="western"><surname>Colosimo</surname><given-names>M</given-names></name><name name-style="western"><surname>Hirschman</surname><given-names>L</given-names></name></person-group>
					<year>2005</year>
					<article-title>BioCreAtIvE Task 1A: Gene mention finding evaluation.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>6</volume>
					<issue>Supplement 1</issue>
					<fpage>S2</fpage>
				</element-citation></ref><ref id="pcbi-0030016-b010"><label>10</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hirschman</surname><given-names>L</given-names></name><name name-style="western"><surname>Colosimo</surname><given-names>M</given-names></name><name name-style="western"><surname>Morgan</surname><given-names>A</given-names></name><name name-style="western"><surname>Yeh</surname><given-names>A</given-names></name></person-group>
					<year>2005</year>
					<article-title>Overview of BioCreAtIvE task 1B: Normalized gene lists.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>6</volume>
					<issue>Supplement 1</issue>
					<fpage>S11</fpage>
				</element-citation></ref><ref id="pcbi-0030016-b011"><label>11</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Srinivasan</surname><given-names>P</given-names></name></person-group>
					<year>2004</year>
					<article-title>Text mining: Generating hypotheses from MEDLINE.</article-title>
					<source>J Am Soc Info Sci Tech</source>
					<volume>55</volume>
					<fpage>396</fpage>
					<lpage>413</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b012"><label>12</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Stapley</surname><given-names>BJ</given-names></name><name name-style="western"><surname>Kelley</surname><given-names>LA</given-names></name><name name-style="western"><surname>Sternberg</surname><given-names>MJ</given-names></name></person-group>
					<year>2002</year>
					<article-title>Predicting the sub-cellular location of proteins from text using support vector machines.</article-title>
					<source>Pac Symp Biocomput</source>
					<fpage>374</fpage>
					<lpage>385</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b013"><label>13</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Friedman</surname><given-names>C</given-names></name><name name-style="western"><surname>Kra</surname><given-names>P</given-names></name><name name-style="western"><surname>Yu</surname><given-names>H</given-names></name><name name-style="western"><surname>Krauthammer</surname><given-names>M</given-names></name><name name-style="western"><surname>Rzhetsky</surname><given-names>A</given-names></name></person-group>
					<year>2001</year>
					<article-title>GENIES: A natural-language processing system for the extraction of molecular pathways from journal articles.</article-title>
					<source>Bioinformatics</source>
					<volume>17</volume>
					<issue>Supplement 1</issue>
					<fpage>S74</fpage>
					<lpage>S82</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b014"><label>14</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rebholz-Schuhmann</surname><given-names>D</given-names></name><name name-style="western"><surname>Marcel</surname><given-names>S</given-names></name><name name-style="western"><surname>Albert</surname><given-names>S</given-names></name><name name-style="western"><surname>Tolle</surname><given-names>R</given-names></name><name name-style="western"><surname>Casari</surname><given-names>G</given-names></name><etal/></person-group>
					<year>2004</year>
					<article-title>Automatic extraction of mutations from Medline and cross-validation with OMIM.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>32</volume>
					<fpage>135</fpage>
					<lpage>142</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b015"><label>15</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Horn</surname><given-names>F</given-names></name><name name-style="western"><surname>Lau</surname><given-names>AL</given-names></name><name name-style="western"><surname>Cohen</surname><given-names>FE</given-names></name></person-group>
					<year>2004</year>
					<article-title>Automated extraction of mutation data from the literature: Application of MuteXt to G protein–coupled receptors and nuclear hormone receptors.</article-title>
					<source>Bioinformatics</source>
					<volume>20</volume>
					<fpage>557</fpage>
					<lpage>568</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b016"><label>16</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Baker</surname><given-names>CJO</given-names></name><name name-style="western"><surname>Witte</surname><given-names>R</given-names></name></person-group>
					<year>2004</year>
					<article-title>Enriching protein structure visualizations with mutation annotations by text mining the protein engineering literature.</article-title>
					<comment>In:</comment>
					<source>Proceedings of the Third Canadian Working Conference on Computational Biology</source>
					<conf-date> 4 October 2004;</conf-date>
					<conf-loc> Markham, Ontario, Canada.</conf-loc>
					<publisher-name>IBM Center for Advanced Studies</publisher-name>
					<comment>IBM Technical Report TR-74.203</comment>
					<volume>(1</volume>
					<issue>47)</issue>
				</element-citation></ref><ref id="pcbi-0030016-b017"><label>17</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Baker</surname><given-names>CJO</given-names></name><name name-style="western"><surname>Witte</surname><given-names>R</given-names></name></person-group>
					<year>2006</year>
					<article-title>Mutation mining—A prospector's tale.</article-title>
					<source>Info Syst Frontiers</source>
					<fpage>47</fpage>
					<lpage>57</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b018"><label>18</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Witte</surname><given-names>R</given-names></name><name name-style="western"><surname>Baker</surname><given-names>CJO</given-names></name></person-group>
					<year>2005</year>
					<article-title>Combining biological databases and text mining to support new bioinformatics applications.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Montoya</surname><given-names>A</given-names></name></person-group>
					<source>Proceedings of the 10th Annual Conference on Applications of Natural Language to Information Science</source>
					<conf-date> 15–17 June, 2005;</conf-date>
					<conf-loc> Alicante, Spain.</conf-loc>
					<comment>LNCS 3513.</comment>
					<publisher-loc>Berlin</publisher-loc>
					<publisher-name>Springer-Verlag</publisher-name>
					<fpage>310</fpage>
					<lpage>321</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b019"><label>19</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sherry</surname><given-names>ST</given-names></name><name name-style="western"><surname>Ward</surname><given-names>MH</given-names></name><name name-style="western"><surname>Kholodov</surname><given-names>M</given-names></name><name name-style="western"><surname>Baker</surname><given-names>J</given-names></name><name name-style="western"><surname>Phan</surname><given-names>L</given-names></name><etal/></person-group>
					<year>2001</year>
					<article-title>dbSNP: The NCBI database of genetic variation.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>29</volume>
					<fpage>308</fpage>
					<lpage>311</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b020"><label>20</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Cotton</surname><given-names>RG</given-names></name><name name-style="western"><surname>Horaitis</surname><given-names>O</given-names></name></person-group>
					<year>2002</year>
					<article-title>The HUGO Mutation Database Initiative. Human Genome Organization.</article-title>
					<source>Pharmacogenomics J</source>
					<volume>2</volume>
					<fpage>16</fpage>
					<lpage>19</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b021"><label>21</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hamosh</surname><given-names>A</given-names></name><name name-style="western"><surname>Scott</surname><given-names>AF</given-names></name><name name-style="western"><surname>Amberger</surname><given-names>J</given-names></name><name name-style="western"><surname>Bocchini</surname><given-names>C</given-names></name><name name-style="western"><surname>Valle</surname><given-names>D</given-names></name><etal/></person-group>
					<year>2002</year>
					<article-title>Online Mendelian Inheritance in Man (OMIM), a knowledgebase of human genes and genetic disorders.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>30</volume>
					<fpage>52</fpage>
					<lpage>55</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b022"><label>22</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Boeckmann</surname><given-names>B</given-names></name><name name-style="western"><surname>Bairoch</surname><given-names>A</given-names></name><name name-style="western"><surname>Apweiler</surname><given-names>R</given-names></name><name name-style="western"><surname>Blatter</surname><given-names>MC</given-names></name><name name-style="western"><surname>Estreicher</surname><given-names>A</given-names></name><etal/></person-group>
					<year>2003</year>
					<article-title>The SWISS-PROT protein knowledgebase and its supplement TrEMBL in 2003.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>31</volume>
					<fpage>365</fpage>
					<lpage>370</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b023"><label>23</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hanisch</surname><given-names>D</given-names></name><name name-style="western"><surname>Fundel</surname><given-names>K</given-names></name><name name-style="western"><surname>Mevissen</surname><given-names>HT</given-names></name><name name-style="western"><surname>Zimmer</surname><given-names>R</given-names></name><name name-style="western"><surname>Fluck</surname><given-names>J</given-names></name></person-group>
					<year>2005</year>
					<article-title>ProMiner: Rule-based protein and gene entity recognition.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>6</volume>
					<issue>Supplement 1</issue>
					<fpage>S14</fpage>
				</element-citation></ref><ref id="pcbi-0030016-b024"><label>24</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Crim</surname><given-names>J</given-names></name><name name-style="western"><surname>McDonald</surname><given-names>R</given-names></name><name name-style="western"><surname>Pereira</surname><given-names>F</given-names></name></person-group>
					<year>2005</year>
					<article-title>Automatically annotating documents with normalized gene lists.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>6</volume>
					<issue>Supplement 1</issue>
					<fpage>S13</fpage>
				</element-citation></ref><ref id="pcbi-0030016-b025"><label>25</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Fundel</surname><given-names>K</given-names></name><name name-style="western"><surname>Guttler</surname><given-names>D</given-names></name><name name-style="western"><surname>Zimmer</surname><given-names>R</given-names></name><name name-style="western"><surname>Apostolakis</surname><given-names>J</given-names></name></person-group>
					<year>2005</year>
					<article-title>A simple approach for protein name identification: Prospects and limits.</article-title>
					<source>BMC Bioinformatics</source>
					<volume>6</volume>
					<issue>Supplement 1</issue>
					<fpage>S15</fpage>
				</element-citation></ref><ref id="pcbi-0030016-b026"><label>26</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Edvardsen</surname><given-names>O</given-names></name><name name-style="western"><surname>Reiersen</surname><given-names>AL</given-names></name><name name-style="western"><surname>Beukers</surname><given-names>MW</given-names></name><name name-style="western"><surname>Kristiansen</surname><given-names>K</given-names></name></person-group>
					<year>2002</year>
					<article-title>tGRAP, the G-protein coupled receptors mutant database.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>30</volume>
					<fpage>361</fpage>
					<lpage>363</lpage>
				</element-citation></ref><ref id="pcbi-0030016-b027"><label>27</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Maglott</surname><given-names>D</given-names></name><name name-style="western"><surname>Ostell</surname><given-names>J</given-names></name><name name-style="western"><surname>Pruitt</surname><given-names>KD</given-names></name><name name-style="western"><surname>Tatusova</surname><given-names>T</given-names></name></person-group>
					<year>2005</year>
					<article-title>Entrez Gene: Gene-centered information at NCBI.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>33</volume>
					<fpage>D54</fpage>
					<lpage>D58</lpage>
				</element-citation></ref></ref-list></back></article>