<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN" "http://jats.nlm.nih.gov/publishing/1.1d3/JATS-journalpublishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.1d3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-17-00853</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1005851</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Computational biology</subject><subj-group><subject>Genome complexity</subject><subj-group><subject>Introns</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Genomics</subject><subj-group><subject>Genome complexity</subject><subj-group><subject>Introns</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Bioinformatics</subject><subj-group><subject>Sequence analysis</subject><subj-group><subject>Sequence alignment</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied mathematics</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Optimization</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Experimental organism systems</subject><subj-group><subject>Model organisms</subject><subj-group><subject>Arabidopsis thaliana</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Model organisms</subject><subj-group><subject>Arabidopsis thaliana</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Organisms</subject><subj-group><subject>Eukaryota</subject><subj-group><subject>Plants</subject><subj-group><subject>Brassica</subject><subj-group><subject>Arabidopsis thaliana</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Experimental organism systems</subject><subj-group><subject>Plant and algal models</subject><subj-group><subject>Arabidopsis thaliana</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Gene expression</subject><subj-group><subject>RNA processing</subject><subj-group><subject>Alternative splicing</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Nucleic acids</subject><subj-group><subject>RNA</subject><subj-group><subject>RNA processing</subject><subj-group><subject>Alternative splicing</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Computational biology</subject><subj-group><subject>Genome analysis</subject><subj-group><subject>Sequence assembly tools</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Genomics</subject><subj-group><subject>Genome analysis</subject><subj-group><subject>Sequence assembly tools</subject></subj-group></subj-group></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>Strawberry: Fast and accurate genome-guided transcript reconstruction and quantification from RNA-Seq</article-title>
<alt-title alt-title-type="running-head">RNA-Seq assembly and quantification</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0001-9059-6335</contrib-id>
<name name-style="western">
<surname>Liu</surname> <given-names>Ruolin</given-names></name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Data curation</role>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Investigation</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Resources</role>
<role content-type="http://credit.casrai.org/">Software</role>
<role content-type="http://credit.casrai.org/">Validation</role>
<role content-type="http://credit.casrai.org/">Visualization</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"/>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0003-4973-5641</contrib-id>
<name name-style="western">
<surname>Dickerson</surname> <given-names>Julie</given-names></name>
<role content-type="http://credit.casrai.org/">Funding acquisition</role>
<role content-type="http://credit.casrai.org/">Project administration</role>
<role content-type="http://credit.casrai.org/">Supervision</role>
<role content-type="http://credit.casrai.org/">Validation</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"/>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
</contrib-group>
<aff id="aff001">
<addr-line>Department of Electrical and Computational Engineering, Iowa State University, Ames, Iowa, United States of America</addr-line>
</aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Tan</surname> <given-names>Kai</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1">
<addr-line>University of Pennsylvania, UNITED STATES</addr-line>
</aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">julied@iastate.edu</email></corresp>
</author-notes>
<pub-date pub-type="collection">
<month>11</month>
<year>2017</year>
</pub-date>
<pub-date pub-type="epub">
<day>27</day>
<month>11</month>
<year>2017</year>
</pub-date>
<volume>13</volume>
<issue>11</issue>
<elocation-id>e1005851</elocation-id>
<history>
<date date-type="received">
<day>27</day>
<month>5</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>26</day>
<month>10</month>
<year>2017</year>
</date>
</history>
<permissions>
<copyright-year>2017</copyright-year>
<copyright-holder>Liu, Dickerson</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1005851"/>
<abstract>
<p>We propose a novel method and software tool, Strawberry, for transcript reconstruction and quantification from RNA-Seq data under the guidance of genome alignment and independent of gene annotation. Strawberry consists of two modules: assembly and quantification. The novelty of Strawberry is that the two modules use different optimization frameworks but utilize the same data graph structure, which allows a highly efficient, expandable and accurate algorithm for dealing large data. The assembly module parses aligned reads into splicing graphs, and uses network flow algorithms to select the most likely transcripts. The quantification module uses a latent class model to assign read counts from the nodes of splicing graphs to transcripts. Strawberry simultaneously estimates the transcript abundances and corrects for sequencing bias through an EM algorithm. Based on simulations, Strawberry outperforms Cufflinks and StringTie in terms of both assembly and quantification accuracies. Under the evaluation of a real data set, the estimated transcript expression by Strawberry has the highest correlation with Nanostring probe counts, an independent experiment measure for transcript expression. Availability: Strawberry is written in C++14, and is available as open source software at <ext-link ext-link-type="uri" xlink:href="https://github.com/ruolin/strawberry" xlink:type="simple">https://github.com/ruolin/strawberry</ext-link> under the MIT license.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author summary</title>
<p>Transcript assembly and quantification are important bioinformatics applications of RNA-Seq. The difficulty of solving these problem arises from the ambiguity of reads assignment to isoforms uniquely. This challenge is twofold: statistically, it requires a high-dimensional mixture model, and computationally, it needs to process datasets that commonly consist of tens of millions of reads. Existing algorithms either use very complex models that are too slow or assume no models, rather heuristic, and thus less accurate. Strawberry seeks to achieve a great balance between the model complexity and speed. Strawberry effectively leverages a graph-based algorithm to utilize all possible information from pair-end reads and, to our knowledge, is the first to apply a flow network algorithm on the constrained assembly problem. We are also the first to formulate the quantification problem in a latent class model. All of these features not only lead to a more flexible and complex quantification model but also yield software that is easier to maintain and extend. In this method paper, we have shown that the Strawberry method is novel, accurate, fast and scalable using both simulated data and real data.</p>
</abstract>
<funding-group>
<award-group id="award001">
<funding-source>
<institution>National Science Foundation (US)</institution>
</funding-source>
<award-id>IOS-1062546</award-id>
<principal-award-recipient>
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0003-4973-5641</contrib-id>
<name name-style="western">
<surname>Dickerson</surname> <given-names>Julie</given-names></name>
</principal-award-recipient>
</award-group>
<funding-statement>The material presented here is based upon work supported by the National Science Foundation under Grant IOS-1062546. <ext-link ext-link-type="uri" xlink:href="https://www.nsf.gov/" xlink:type="simple">https://www.nsf.gov/</ext-link> The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="10"/>
<table-count count="2"/>
<page-count count="25"/>
</counts>
<custom-meta-group>
<custom-meta>
<meta-name>PLOS Publication Stage</meta-name>
<meta-value>vor-update-to-uncorrected-proof</meta-value>
</custom-meta>
<custom-meta>
<meta-name>Publication Update</meta-name>
<meta-value>2017-12-07</meta-value>
</custom-meta>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>Availability: Strawberry is written in C++14, and is available as open source software at <ext-link ext-link-type="uri" xlink:href="https://github.com/ruolin/strawberry" xlink:type="simple">https://github.com/ruolin/strawberry</ext-link> under the MIT license. The end-to-end simulation and evaluation pipeline used in this study is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/ruolin/strawberry_comp" xlink:type="simple">https://github.com/ruolin/strawberry_comp</ext-link>.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<disp-quote>
<p>This is a <italic>PLOS Computational Biology</italic> Methods paper.</p>
</disp-quote>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>Transcript-level quantification is a key step for detecting differential alternative splicing and differential gene expression. A number of computational methods have been developed for estimation of transcript abundances [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>–<xref ref-type="bibr" rid="pcbi.1005851.ref009">9</xref>]. However, many of the methods [<xref ref-type="bibr" rid="pcbi.1005851.ref004">4</xref>–<xref ref-type="bibr" rid="pcbi.1005851.ref009">9</xref>] rely on existing gene annotations and limits the use of such methods because even for the model organisms like <italic>Drosophila melanogaster</italic> new isoforms are discovered all the time under different tissues and/or conditions (<italic>Pachter</italic>, <italic>2011</italic>, <italic>Models for transcript quantification from RNA-Seq</italic>). In addition, Liu et al. has shown that incomplete annotation is a major factor that negatively affects quantification accuracy for detecting alternative splicing [<xref ref-type="bibr" rid="pcbi.1005851.ref010">10</xref>]. Thus, transcript-level quantification should be coupled with transcript assembly when dealing with RNA-Seq data. Pure de novo assembly of raw RNA-Seq is very challenging. Genome-guided methods, instead, assemble aligned RNA-Seq reads into transcripts, taking advantage of (if possible) a finished and high quality genome assembly and the-state-of-art spliced alignment algorithms.</p>
<p>Two strategies have evolved for tackling transcript assembly and quantification after RNA-Seq reads have been aligned to reference genome: simultaneous transcript construction and expression quantification vs. sequential transcript construction then expression quantification. Clearly, transcript reconstruction and quantification are closely related and many methods try to solve both simultaneously [<xref ref-type="bibr" rid="pcbi.1005851.ref003">3</xref>, <xref ref-type="bibr" rid="pcbi.1005851.ref011">11</xref>–<xref ref-type="bibr" rid="pcbi.1005851.ref013">13</xref>]. These methods usually exhaustively enumerate all possible transcripts and then use regularization to get rid of unlikely transcripts when calculating their expression. The <italic>L</italic>1 penalty is commonly used to favor sparse transcript solutions [<xref ref-type="bibr" rid="pcbi.1005851.ref013">13</xref>]. Another strategy involves breaking the problem up in a step-by-step manner, like Cufflinks. First, reconstruct a set of transcripts, and then performs quantification on the transcripts. The latter is a more conservative strategy and usually leads to “maximum precision vs. maximum sensitivity” [<xref ref-type="bibr" rid="pcbi.1005851.ref014">14</xref>] compared to the former.</p>
<sec id="sec002">
<title>Method overview</title>
<p>Strawberry consists of two modules: assembly module and quantification module. The two modules work in a sequential manner (<xref ref-type="fig" rid="pcbi.1005851.g001">Fig 1</xref>). Strawberry is a genome-guided transcript-level assembler and quantification tool. It takes aligned RNA-Seq data in BAM format and output a gene annotation file in gff format with estimated transcript abundances. Using alignment format as input allows Strawberry to take advantages of the latest reference genome (if possible, a finished and high-quality one) and stat-of-the-art splice-awareness aligners. Strawberry is designed for Illumina pair-end reads. To be clear in this article, a read-pair refers to aligned paired-end reads with sequences observed at both ends and unknown sequence in between and a read refers to either the upstream or downstream observed sequence of a read-pair. For single-end reads, replace the terminology “read-pair” with “read” and proceed.</p>
<fig id="pcbi.1005851.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g001</object-id>
<label>Fig 1</label>
<caption>
<title>Overview of the algorithm of Strawberry, compared to StringTie and Cufflinks.</title>
<p>All methods begin with a set of RNA-Seq alignments and output transcript structures and abundances in GFF/GTF format. Strawberry uses a min-flow algorithm for solving Constrained Minimum Path Cover(CMPC) problem on splicing graph, followed by assigning subexon paths to compatible assembled transcripts. In quantification step, all of the RNA-Seq read alignments on each subexon path as a whole are the subject of the EM algorithm.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g001" xlink:type="simple"/>
</fig>
<p>The assembly module of Strawberry seeks a parsimonious representation of transcripts which best explains the observed read-pairs with the aid of flow network algorithms. The read-pairs are converted to splicing graphs where the nodes are subexons and edges are splice alignments. FlipFlop [<xref ref-type="bibr" rid="pcbi.1005851.ref003">3</xref>], StringTie [<xref ref-type="bibr" rid="pcbi.1005851.ref002">2</xref>] and Traph [<xref ref-type="bibr" rid="pcbi.1005851.ref011">11</xref>] also use network flow algorithm, but for different purposes. StringTie and Traph renounce the likelihood-based approach and solve transcript assembly and quantification as optimization problems and solve the two problems simultaneously in a flow network framework build upon on splice graph. The difference is that Traph uses a min-flow algorithm to find a set of flows that minimize the difference between the flows and the observed coverages, while StringTie uses an iterative algorithm to harvest the heaviest path and then uses maximum flow to estimate their expression. Here, a flow can be understood as a transcript with uniform coverage along it. Although also using flow network, FlipFlop constructs a penalized likelihood model. The penalized likelihood model is carefully designed to be convex and the estimation problem can be cast into a convex-cost min-flow. Different from all of them, Strawberry uses a min-cost circulation flow to solve a parsimonious assembly problem. If the underlying sequence of a read-pair contains an unsequenced portion, such as the insert, this read-pair might indicate necessary paths that are usually neglected by other methods [<xref ref-type="bibr" rid="pcbi.1005851.ref015">15</xref>], while Strawberry explicitly converts them to graph constraints. In a nutshell, StringTie uses a flow network to calculate transcript expression; Traph and FlipFlop use flow networks to concurrently solve transcript identification and quantification. Strawberry is the only one that applies a flow network to an assembly problem. The assembly problem that Strawberry is solving is also unique. It is a constrained assembly problem that is tailored for paired-end reads by converting them to graph path constraints (see <xref ref-type="sec" rid="sec010">method</xref> section).</p>
<p>The quantification model of Strawberry is based on a latent class model with an effective data collapsing mechanism, which utilizes the same graph topology used in assembly to reduce the individual reads to subexon path counts. A subexon is a maximal portion of covered region (covered by reads) without any splice junctions. And subexon path is regarded a set of ordered subexons. The subexon path representation allows Strawberry to save computational cost and model nonuniform reads distribution along transcripts. To the best of our knowledge, the concept of subexon path was first proposed in [<xref ref-type="bibr" rid="pcbi.1005851.ref006">6</xref>]. However, it can be seen as a modification/extension of the idea of <italic>maximum collapsing</italic> in [<xref ref-type="bibr" rid="pcbi.1005851.ref016">16</xref>]. Although using same data collapsing mechanism, Rossell et al. uses a Bayesian framework and does not have a joint estimation of transcript proportion and coverage bias effect [<xref ref-type="bibr" rid="pcbi.1005851.ref006">6</xref>]. While Strawberry applies a conditional multinomial distribution for the subexon paths and estimates the transcript proportion and coverage effect simultaneously in the mixture model. The change from a non-parametric model in [<xref ref-type="bibr" rid="pcbi.1005851.ref006">6</xref>] to a multinomial model in Strawberry permits better model expandability.</p>
<p>Strawberry is designed to be versatile and modular. It is possible to skip the assembly step and just run quantification module against an external set of transcripts, e.g. those from gene annotations. In this case, Strawberry reduces any overlapping set of isoforms to a splicing graph consisting of subexons and subexon paths. The external set of transcripts can also be used by Strawberry to help with assembly. Finally, Strawberry reports the calculated transcript expression in the units of FPKM (Fragments Per Kilobase of transcript per Million mapped reads) and TPM (Transcripts Per Kilobase Million).</p>
</sec>
</sec>
<sec id="sec003" sec-type="results">
<title>Results</title>
<sec id="sec004">
<title>Ground truth simulated data and programs to compare</title>
<p>We compare Strawberry to two state-of-the-art programs, Cufflinks v2.2.1 [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>] and StringTie v1.3.3 [<xref ref-type="bibr" rid="pcbi.1005851.ref002">2</xref>], on three simulated data sets, <italic>RD25</italic> <italic>RD60</italic> and <italic>RD100</italic>. The only difference among these three data sets is the average sequencing depth. Roughly speaking, RD25 contains ∼2.5 million, RD60 ∼6 million and RD100 ∼10 million reads. These data were generated by the procedure used in [<xref ref-type="bibr" rid="pcbi.1005851.ref010">10</xref>]—100bp paired-end reads generated from 5800 multi-isoform Arabidopsis genes on genome version TAIR10 [<xref ref-type="bibr" rid="pcbi.1005851.ref017">17</xref>] using Flux Simulator [<xref ref-type="bibr" rid="pcbi.1005851.ref018">18</xref>]. This simulation was repeated 10 times so that each data set consists of 10 RNA-Seq libraries. Those simulated reads were then mapped onto the Arabidopsis TAIR10 genome assembly using Tophat2 [<xref ref-type="bibr" rid="pcbi.1005851.ref019">19</xref>] and HISAT2 [<xref ref-type="bibr" rid="pcbi.1005851.ref020">20</xref>]. Since plant genomes have shorter introns than mammals, all the programs ran on the default parameters except for the maximum intron length, which was set to 5000 bp.</p>
<p>To evaluate Strawberry’s performance on higher eukaryotes, we also compare the three programs using simulated human RNA-seq data. To avoid possible simulation bias, we choose a different simulator called Polyester [<xref ref-type="bibr" rid="pcbi.1005851.ref021">21</xref>]. Polyester requires a count matrix, where each row represents a transcript and each column contains the read counts for a sample, as an input. To generate this count matrix, we downloaded 6 samples from the GEUVADIS data base [<xref ref-type="bibr" rid="pcbi.1005851.ref022">22</xref>] and aligned them with HISAT2. Then Cufflinks was used to estimate transcript expression. All transcripts were selected from loci which have at least two isoforms with FPKM &gt;1.0 for all six samples. This human simulation is referred to as <italic>GEU</italic>. Compared to <italic>RD100</italic>, <italic>GEU</italic> has relatively longer read length (150 bp paired-end) and longer fragment length (700 bp in average). This read length and fragment size are intended for the latest illumina sequencer NextSeq.</p>
</sec>
<sec id="sec005">
<title>Comparing assembly accuracy</title>
<p>We use a Cufflinks module called Cuffcompare <ext-link ext-link-type="uri" xlink:href="http://cole-trapnell-lab.github.io/cufflinks/cuffcompare/index.html" xlink:type="simple">http://cole-trapnell-lab.github.io/cufflinks/cuffcompare/index.html</ext-link> to compare the assembled transcripts or transfrags to the reference transcripts since the reads are all simulated based on the reference transcripts. We use Cuffcompare’s evaluation algorithm which implements typical gene finding measures of recall and precision [<xref ref-type="bibr" rid="pcbi.1005851.ref023">23</xref>]. For example, the recall of an exon is the percentage of number of corrected exons divided by the number of actual exons and precision is the number of correct exons divided by the number of predicted exons. Determination of transcription start and end sites is a known weakness of RNA-Seq and impairs its application on identification of transcript boundaries [<xref ref-type="bibr" rid="pcbi.1005851.ref024">24</xref>]. Thus, Cuffcompare defines a correct transcript as the chain of introns that match with the reference, leaving possible variances in the first and last exon.</p>
<p>We first assessed the genome-guided assembly accuracy of the three programs using simulated Arabidopsis data set. The degree to which transcripts reported by each method matched the reference annotation at the nucleotide, exon, intron and transcript level for three different sequencing depths are shown in (<xref ref-type="fig" rid="pcbi.1005851.g002">Fig 2</xref>, <xref ref-type="supplementary-material" rid="pcbi.1005851.s001">S1</xref> and <xref ref-type="supplementary-material" rid="pcbi.1005851.s002">S2</xref> Figs). In all comparisons, Strawberry has higher recall as well as precision. In <italic>RD100</italic> data, for example, Strawberry averages 71.78%, 80.36%, 52.35% on recall at exons, intron, and full transcripts level respectively, followed StringTie, 67.03%, 74.41%, 46.65% and then Cufflinks, 65.51%, 74.09%, 42.76%. For all the methods, the recall decreases as sequencing depth decreases while the precision remains at a high level and doesn’t change much. This indicates that although lower read depths make it harder for these methods to recover the true signal, the results are still very reliable. Correct detection of full transcripts using RNA-Seq data is still a very challenging task for all assemblers. Given sufficient sequencing depth (<italic>RD100</italic>), all methods can correctly retrieve more than 65% exons, and 75% intron but only around 50% of the full transcripts. On the other hand, precision for exons and intron detection are very high for all methods, averaging 98–99%. For transcript detection, Strawberry’s average precision is 81.62%, while StringTie is at 80.46% and Cufflinks at 74.68%. For the methods that parsimoniously assemble reads into transcripts, this may indicate some room for improvement—although the individual exons and introns are correctly recovered, the ways to stitch them together are still not optimal. We further conducted a paired t-test to evaluate the statistical significance of the difference in F1 score (the harmonic mean of recall and precision) between Strawberry and the other tools (p value = 7.02e-12 when compared to StringTie, and p value = 1.947e-14 when compared to Cufflinks).</p>
<fig id="pcbi.1005851.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Recall and precision at the nucleotide, exon, intron and transcript level.</title>
<p>StringTie, Cufflinks and Strawberry were run on data <italic>RD100</italic>, which is a simulated Arabidopsis RNA-Seq data set.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g002" xlink:type="simple"/>
</fig>
<p>Next, we evaluated the methods using <italic>GEU</italic>. Overall, we observe that the F1 values at transcript level are roughly at the same level as in <italic>RD100</italic>, and Strawberry clearly maintains its lead, followed by StringTie (<xref ref-type="fig" rid="pcbi.1005851.g003">Fig 3</xref>). However, the gap between Strawberry and StringTie is smaller compared to <italic>RD100</italic>. Again, a paired t-test of F1 scores is used, yielding p value = 5.614e-03 when compared to StringTie, and p value = 2.965e-09. Strawberry also achieves the best F1 score at gene level (<xref ref-type="fig" rid="pcbi.1005851.g003">Fig 3</xref>), and Cufflinks performs better than StringTie at gene level. When it comes to exon and intron levels comparison, however, StringTie clearly performs better than Strawberry and Cufflinks, see <xref ref-type="supplementary-material" rid="pcbi.1005851.s005">S5 Fig</xref>. This suggests Strawberry still has room to improve the detection on exon and intron level for human, which can lead to higher transcript reconstruction rate.</p>
<fig id="pcbi.1005851.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Box plots of F1 scores at the transcript and loci level.</title>
<p>StringTie, Cufflinks and Strawberry were evaluated on data <italic>GEU</italic>, which is a simulated Human RNA-Seq data set.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g003" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec006">
<title>Comparing quantification accuracy</title>
<p>Let <italic>x</italic><sub><italic>i</italic></sub> be the true value of the FPKM for transcript <italic>i</italic> based on ground truth simulated data and <italic>y</italic><sub><italic>i</italic></sub> be the predicted FPKM. If log transformation is taking, these FPKM values were incremented by 1 before log transformation to avoid infinite numbers. We adopt the metrics defined in <italic>Patro et</italic>.<italic>al 2017</italic> [<xref ref-type="bibr" rid="pcbi.1005851.ref004">4</xref>].</p>
<list list-type="order">
<list-item>
<p>Proportionality correlation
<disp-formula id="pcbi.1005851.e001"><alternatives><graphic id="pcbi.1005851.e001g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e001" xlink:type="simple"/><mml:math display="block" id="M1"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mtext>Cov</mml:mtext><mml:mo>{</mml:mo><mml:mo form="prefix">log</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mo form="prefix">log</mml:mo><mml:mi>y</mml:mi><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mtext>Var</mml:mtext><mml:mo>{</mml:mo><mml:mo form="prefix">log</mml:mo><mml:mi>x</mml:mi><mml:mo>}</mml:mo><mml:mo>+</mml:mo><mml:mtext>Var</mml:mtext><mml:mo>{</mml:mo><mml:mo form="prefix">log</mml:mo><mml:mi>y</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(1)</label></disp-formula></p>
</list-item>
<list-item>
<p>Spearman correlation of between the true FPKM values and predicted FPKM values.</p>
</list-item>
<list-item>
<p>Mean Absolute Relative Difference (MARD), which is computed using the absolute relative difference ARD<sub><italic>i</italic></sub> for each transcript <italic>i</italic>:
<disp-formula id="pcbi.1005851.e002"><alternatives><graphic id="pcbi.1005851.e002g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e002" xlink:type="simple"/><mml:math display="block" id="M2"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mtext>ARD</mml:mtext><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mn>0</mml:mn><mml:mo>.</mml:mo><mml:mn>5</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(2)</label></disp-formula>
MARD is the mean value of the {ARD<sub><italic>i</italic></sub>|<italic>i</italic> ∈ 1, …, <italic>I</italic>}. ARD is bounded above by 2 and below by 0 and smaller value indicates a better prediction. <italic>Patro et al</italic>. [<xref ref-type="bibr" rid="pcbi.1005851.ref004">4</xref>] computes MARD on the number of reads deriving from each transcript which is commensurable to FPKM values.</p>
</list-item>
</list>
<p>Again, we first evaluate the methods using simulated Arabidopsis data. <xref ref-type="fig" rid="pcbi.1005851.g004">Fig 4</xref>, <xref ref-type="supplementary-material" rid="pcbi.1005851.s003">S3</xref> and <xref ref-type="supplementary-material" rid="pcbi.1005851.s004">S4</xref> Figs show the histogram of the three measures over 10 replicates for all three read depth data sets <italic>RD100</italic>, <italic>RD60</italic> and <italic>RD25</italic> respectively. In these simulations, It can be seen that these methods are all well separated in terms of the all evaluation metrics except for only one case in which StringTie and Cufflinks are virtually tied over Spearman correlation in <italic>RD60</italic> data (<xref ref-type="supplementary-material" rid="pcbi.1005851.s003">S3 Fig</xref>). In the case of <italic>RD100</italic> data, Strawberry averaged 0.911, 0.912, and 0.370 on Proportional correlation, Spearman correlation and MARD respectively, followed by StringTie, 0.866, 0.869, 0.385 and then Cufflinks, 0.834, 0.876, 0.450. Cufflinks outperforms StringTie in terms of Spearman correlation but not the other two metrics. Like the assembly results, the sequencing depth seems to have a uniform impact on the quantification accuracy and all methods favor the highest read depth. It is worth mentioning that our enumeration of read depths only focuses on down sampling. Overall, Strawberry outperforms the other methods under all evaluation metrics and sequencing depth and StringTie performs better than Cufflinks. However, the distance between the second and third place is less than the distance between the first and second place. We also observe that Strawberry and StringTie have less variability in results than Cufflinks did, suggesting they are more consistent in terms of their estimates.</p>
<fig id="pcbi.1005851.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Frequency plot of Proportional correlation, Spearman correlation, Mean Absolute Relative Difference (MARD) for the 10 replicates in <italic>RD100</italic>, which is a simulated Arabidopsis data.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g004" xlink:type="simple"/>
</fig>
<p>When evaluated on simulated human RNA-Seq data, all three methods have lower correlations and higher relative differences compared with the true FPKM values. The order of the methods’ performances slightly changes based on different evaluation metrics (<xref ref-type="fig" rid="pcbi.1005851.g005">Fig 5</xref>). Strawberry has the lowest average MARD across the 6 samples compared to StringTie and Cufflinks (<xref ref-type="table" rid="pcbi.1005851.t001">Table 1</xref>). When the methods are compared using Spearman correlation, the differences among the three methods are the smallest. Cufflinks performs poorly under proportionality correlation (averaged at 0.3573). StringTie achieves the highest average proportionality while Strawberry is the second. <xref ref-type="fig" rid="pcbi.1005851.g005">Fig 5</xref> compares the FPKM value of each predicted transcript against its best possible matched known transcript’s true FPKM value. <xref ref-type="supplementary-material" rid="pcbi.1005851.s006">S6 Fig</xref> removes the predicted transcripts that are partially matched and only keeps the transcripts that fully match the known transcripts, i.e., class code equal to “=” in the Cuffcompare result. In this “match only” case, all statistics improved significantly for all the methods, and Strawberry performs the best in every comparisons (<xref ref-type="table" rid="pcbi.1005851.t001">Table 1</xref>).</p>
<fig id="pcbi.1005851.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Frequency plot of Proportional correlation, Spearman correlation, Mean Absolute Relative Difference (MARD) for the 6 samples in <italic>GEU</italic>, which is a simulated Human data.</title>
<p>These statistics are calculated based on the predicted FPKM values of all reconstructed transcripts and the true FPKM values used in the simulation.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g005" xlink:type="simple"/>
</fig>
<table-wrap id="pcbi.1005851.t001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.t001</object-id>
<label>Table 1</label>
<caption>
<title>Averaged Spearman correlation, Proportional correlation, Mean Absolute Relative Difference (MARD) for the 6 samples in <italic>GEU</italic>, which is a simulated Human data.</title>
<p>These statistics are calculated based on the predicted FPKM values of 1) all reconstructed transcripts 2) only transcripts that match the known, and the true FPKM values used in the simulation.</p>
</caption>
<alternatives>
<graphic id="pcbi.1005851.t001g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.t001" xlink:type="simple"/>
<table border="0" frame="box" rules="all">
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="center"/>
<th align="center">Method</th>
<th align="center">Avg. Sp.</th>
<th align="center">Avg. Prop.</th>
<th align="center">Avg. MARD</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center" rowspan="3">All transcripts</td>
<td align="center">Strawberry</td>
<td align="char" char=".">0.7272</td>
<td align="char" char=".">0.7430</td>
<td align="char" char=".">0.4801</td>
</tr>
<tr>
<td align="center">StringTie</td>
<td align="char" char=".">0.7476</td>
<td align="char" char=".">0.7759</td>
<td align="char" char=".">0.5392</td>
</tr>
<tr>
<td align="center">Cufflinks</td>
<td align="char" char=".">0.7631</td>
<td align="char" char=".">0.3573</td>
<td align="char" char=".">0.5287</td>
</tr>
<tr>
<td align="center" rowspan="3">Match only</td>
<td align="center">Strawberry</td>
<td align="char" char=".">0.8706</td>
<td align="char" char=".">0.8706</td>
<td align="char" char=".">0.3144</td>
</tr>
<tr>
<td align="center">StringTie</td>
<td align="char" char=".">0.8517</td>
<td align="char" char=".">0.8704</td>
<td align="char" char=".">0.4068</td>
</tr>
<tr>
<td align="center">Cufflinks</td>
<td align="char" char=".">0.8614</td>
<td align="char" char=".">0.6621</td>
<td align="char" char=".">0.4561</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
</sec>
<sec id="sec007">
<title>Real RNA-Seq data</title>
<p>To demonstrate Strawberry utility on real data, we tested all three programs on the Homo sapiens HepG2 data from <italic>Steijger et al</italic>. [<xref ref-type="bibr" rid="pcbi.1005851.ref024">24</xref>]. The data was downloaded from <ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-1730/" xlink:type="simple">http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-1730/</ext-link>, which includes alignment results from a library of 100 million 76bp paired-end Homo sapiens RNA-Seq reads and a total of 140 NanoString probe counts. These 140 probes targeted 109 genes, designed against specific transcripts. NanoString counts were then compared to the highest FPKM value reported for transcripts consistent with the probe design [<xref ref-type="bibr" rid="pcbi.1005851.ref024">24</xref>]. We followed the same procedure used in <italic>Steijger et al</italic>. except for using the Tophat2 alignment result and Cuffcompare for finding the best matching transcripts. Correlations between the log-transformed FPKM reported by each method and NanoString count was calculated. Strawberry again is clearly the front-runner, correlation increased by 10.3%, 5.26% compared to Cufflinks and StringTie respectively (<xref ref-type="table" rid="pcbi.1005851.t002">Table 2</xref>). The number of probes having matched transcripts were very close for all three methods.</p>
<table-wrap id="pcbi.1005851.t002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.t002</object-id>
<label>Table 2</label>
<caption>
<title>Correlation of FPKMs and probe counts on real RNA-Seq data HepG2.</title>
<p>NanoString counts were compared to the FPKM values reported for three programs. The number of probes which have matching transcripts is reported on the last line.</p>
</caption>
<alternatives>
<graphic id="pcbi.1005851.t002g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.t002" xlink:type="simple"/>
<table border="0" frame="box" rules="all">
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="center"/>
<th align="center">Strawberry</th>
<th align="center">Cufflinks</th>
<th align="center">StringTie</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">Spearman Corr.</td>
<td align="center">0.640</td>
<td align="center">0.580</td>
<td align="center">0.608</td>
</tr>
<tr>
<td align="center">Num. of matches</td>
<td align="center">82</td>
<td align="center">82</td>
<td align="center">83</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>It’s worth mentioning that the numbers reported here may not be directly comparable to the numbers in <italic>Steijger et al</italic>. because we use a different aligner. In <italic>Steijger et al</italic>., STAR [<xref ref-type="bibr" rid="pcbi.1005851.ref025">25</xref>] was used as the default aligner. However the STAR alignment result, as a supplementary file in their paper, does not contain <italic>XS</italic>, which is used in the BAM format to suggest the transcription orientation from splice site dinucleotides, such as GT-AG.</p>
<p><xref ref-type="fig" rid="pcbi.1005851.g006">Fig 6</xref> shows an example of a novel isoform discovered by Strawberry in the HepG2 data. At locus ENSG0000009097, Strawberry reconstructs three isoforms. Two of them matches known isoforms ENST00000591590 and ENST00000205194 based on GRCh37 Ensemble annotation. The third isoform, transcript.14285.3, contains a novel splicing junction which is supported by 7 uniquely aligned read-pairs. Strawberry predicts the new isoform at a fraction of 0.277 in all the three predicted isoforms.</p>
<fig id="pcbi.1005851.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Read alignments and reconstructed transcripts at gene NAT14 using HepG2 data.</title>
<p>A new isoform, transcript.14285.3 (shown as the middle one), has been identified by Strawberry. The junction reads that support the new AS event (alternative 3 splice site) are highlighted. The two ends of a read-pair are in the same color. A total 7 uniquely mapped read-pairs supports the novel junction. This figure is made by IGV (<ext-link ext-link-type="uri" xlink:href="http://software.broadinstitute.org/software/igv/" xlink:type="simple">http://software.broadinstitute.org/software/igv/</ext-link>).</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g006" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec008">
<title>Running time</title>
<p>The running time of all three program plus a simple linux word count program on RD25, RD100, and HepG2 are plotted in <xref ref-type="fig" rid="pcbi.1005851.g007">Fig 7</xref>. For the HepG2 data, Cufflinks tooks 62.2 min, Strawberry 12.35 min and StringTie 4.05 min. All programs were run using 8 threads on a Dell Precision T1650, equipped with Intel Core i7-3770 CPU and 16 GB RAM. Each program was given the aligned data in BAM format and the time spent on alignment is not included. To see how well these programs scale when input grows in size, we ran a simple single thread linux word count program <italic>wc</italic> (which is known to have linear complexity) on the SAM format of the same data. Surprisingly, StringTie is even faster than <italic>wc</italic>(which uses 8.69 min), and it demonstrates the simplicity of StringTie algorithm. Strawberry also scales well compared to <italic>wc</italic>. Cufflinks running time shoots up when the number of RNA-Seq reads grows to 100 million. Cufflinks and Strawberry both use the EM algorithm for assigning ambiguous reads to transcripts. The EM algorithm is a time consuming algorithm but the reduced data representation used in Strawberry makes it almost 5 times faster than Cufflinks.</p>
<fig id="pcbi.1005851.g007" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g007</object-id>
<label>Fig 7</label>
<caption>
<title>Running time in minutes of Cufflinks, Strawberry, linux word count and StringTie(ordered by slowest to fastest) on textitRD25(2.5 million reads), <italic>RD100</italic>(10 millions reads), and <italic>HepG2</italic> data(100 millions reads).</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g007" xlink:type="simple"/>
</fig>
</sec>
</sec>
<sec id="sec009" sec-type="conclusions">
<title>Discussion</title>
<p>Strawberry adopts a step-by-step approach for transcript assembly and quantification of expression levels. We believe it is critical to assemble the transcriptome before carrying out quantification since every eukaryotic RNA-Seq experiment is likely to generate unknown transcripts even for the well-annotated species. Our previous study of alternative splicing has shown that an incomplete genome annotation can have a huge negative impact on the detection accuracy of alternative splicing events [<xref ref-type="bibr" rid="pcbi.1005851.ref010">10</xref>]. Strawberry avoids strictly using gene annotations for quantification and is able to assemble novel isoforms. However, with high-quality annotation, Strawberry can take advantage of the annotation and yield a better assembly result. The genome guided assembly is enabled by “-g” option.</p>
<p>Strawberry’s transcriptome assembly takes advantage of the latest genome assembly and state-of-art splice-awareness aligners and is usually more accurate than the de novo assemblers. However, this makes Strawberry reliant on alignment results. Another limitation of current Strawberry’s assembly is the lack of detection of alternative promoter usage and alternative polyadenylation. Unlike other alternative splicing events, de-novo detection of alternative promoter usage and alternative polyadenylation can not be inferred from junction alignments and requires some sophisticated read depth models because of the intrinsic noisiness around transcription start and end sites introduced by RNA-Seq.</p>
<p>Compared to current approaches such as FlipFlop, Strawberry’s assemble-then-quantify procedure cannot best utilize the quantification information in the assembly step. This is because for short-read technologies, such as Illumina, the local estimates of relative abundance are the only information available for phasing distant exons during assembly. However, Strawberry’s flow network algorithm is able alleviate this phasing problem by converting the exon and junction coverage into the weighs of the flows. As a result, for example, the exons and exon-exon junctions which have similar coverages will tend to form one path by the optimization algorithm.</p>
<p>Both Cufflinks and Strawberry use the EM algorithm for optimizing the likelihood functions. However, because of a reduced data representation, Strawberry is 10 around times faster than Cufflinks. StringTie uses a flow algorithm for quantification which is very fast compared to the EM algorithm used by Strawberry and Cufflinks. This makes it unlikely for Strawberry to outrun StringTie. Like StringTie and Cufflinks, Strawberry implements the thread-level parallellism which can process several loci at a time to greatly speed up the program.</p>
<p>The lack of gold standard data for the assessment of RNA-Seq applications is still a major problem for the community. The comparisons used in this paper are primarily based on simulated data where we know the ground truth. However, the simulation programs can fall short of resembling real data in various ways, including sequencing bias, read errors, etc. Numerous studies have shown that bias can be caused by local sequences (e.g., hexamer bias) around the reads [<xref ref-type="bibr" rid="pcbi.1005851.ref026">26</xref>], position of the reads [<xref ref-type="bibr" rid="pcbi.1005851.ref027">27</xref>], GC content bias [<xref ref-type="bibr" rid="pcbi.1005851.ref028">28</xref>], etc. Lahens et al. points out the bias in RNA sequencing is highly unpredictable and might be more complicated than the few reasons aforementioned [<xref ref-type="bibr" rid="pcbi.1005851.ref029">29</xref>]. Interestingly enough, using the bias correction features in Cufflinks does not lead to an increase in performance even in the real data, all probes Pearson’s r 0.672 vs. 0.670 without/with bias correction (-b option). By allowing different subexon bins to have different conditional probabilities, Strawberry model has more flexibility than models assuming uniform distributions of reads along transcripts and thus may be able to account for the bias problem to some extent. However, the bias problem is still a big problem for RNA-Seq and its application. The solution to this will require effort from both the sequencing and bioinformatics communities.</p>
</sec>
<sec id="sec010" sec-type="materials|methods">
<title>Materials and methods</title>
<sec id="sec011">
<title>Assembly problem formulation</title>
<p>Strawberry formulates the assembly problem as an optimization problem, trying to find a parsimonious representation of transcripts which best explains the read alignments. Cufflinks is one of the pioneers which formulates the assembly problem as an optimization problem. Thus, we start with a brief review of the Cufflinks assembly algorithm and use it to introduce Strawberry’s assembly algorithm.</p>
<p>The set of all read-pairs at a locus <inline-formula id="pcbi.1005851.e003"><alternatives><graphic id="pcbi.1005851.e003g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e003" xlink:type="simple"/><mml:math display="inline" id="M3"><mml:mrow><mml:mi mathvariant="script">R</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> forms a partially ordered set in which <italic>r</italic><sub><italic>i</italic></sub> ≤ <italic>r</italic><sub><italic>j</italic></sub> if and only if the start position, in the transcription direction, of <italic>r</italic><sub><italic>i</italic></sub> is less than or equal to <italic>r</italic><sub><italic>j</italic></sub> and the two are compatible (can arise from the same transcript). In brief, two read-pairs are incompatible if they imply two different introns and the two introns overlap (cannot arise from the same isoform) [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>]. Cufflinks defines a read-pair path <italic>p</italic> as a subset of <inline-formula id="pcbi.1005851.e004"><alternatives><graphic id="pcbi.1005851.e004g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e004" xlink:type="simple"/><mml:math display="inline" id="M4"><mml:mi mathvariant="script">R</mml:mi></mml:math></alternatives></inline-formula>, an ordered set of read-pairs {<italic>r</italic><sub><italic>a</italic><sub>1</sub></sub>, …, <italic>r</italic><sub><italic>a</italic><sub><italic>k</italic></sub></sub>} with <italic>r</italic><sub><italic>a</italic> − 1</sub> ≤ <italic>r</italic><sub><italic>a</italic></sub> for all 1 &lt; <italic>a</italic> ≤ <italic>k</italic>. Then, the assembly problem is equivalent to finding the read-pair path cover <italic>C</italic> = {<italic>p</italic><sub>1</sub>, …, <italic>p</italic><sub><italic>n</italic></sub>}, where ‖<italic>C</italic>‖<sub>0</sub> is minimized and
<disp-formula id="pcbi.1005851.e005"><alternatives><graphic id="pcbi.1005851.e005g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e005" xlink:type="simple"/><mml:math display="block" id="M5"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">R</mml:mi><mml:mo>,</mml:mo><mml:mo>∃</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mi>C</mml:mi><mml:mo>∧</mml:mo><mml:mi>p</mml:mi><mml:mo>≠</mml:mo><mml:mi>∅</mml:mi><mml:mo>,</mml:mo><mml:mspace width="4.pt"/><mml:mtext>such</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>that</mml:mtext><mml:mspace width="4.pt"/><mml:mi>r</mml:mi><mml:mspace width="4.pt"/><mml:mtext>is</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>in</mml:mtext><mml:mspace width="4.pt"/><mml:mi>p</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
The final estimated path cover <inline-formula id="pcbi.1005851.e006"><alternatives><graphic id="pcbi.1005851.e006g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e006" xlink:type="simple"/><mml:math display="inline" id="M6"><mml:mover accent="true"><mml:mi>C</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math></alternatives></inline-formula> corresponds to the set of assembled transcripts. This is a canonical computer science problem known as the Minimum Path Cover (MPC) problem [<xref ref-type="bibr" rid="pcbi.1005851.ref030">30</xref>]. Cufflinks uses a maximum matching algorithm in bipartite graphs to solve the MPC problem [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>].</p>
<p>Instead of working with individual read-pairs, Strawberry uses a sparse representation called splicing graphs, a common feature of genome-guided methods. Heber et al. defines a splicing graph <italic>G</italic> = (<italic>V</italic>, <italic>E</italic>) as a directed acyclic graph (DAG) on the set of transcribed positions <italic>V</italic> and edge set <italic>E</italic> [<xref ref-type="bibr" rid="pcbi.1005851.ref031">31</xref>]. <italic>G</italic> contains an edge from <italic>v</italic><sub><italic>i</italic></sub> to <italic>v</italic><sub><italic>j</italic></sub> if and only if <italic>v</italic><sub><italic>i</italic></sub> &lt; <italic>v</italic><sub><italic>j</italic></sub> and they have consecutive positions in at least one transcript. The graph <italic>G</italic> can be refined by collapsing consecutive vertices if all of them have only one outgoing edge and one ingoing edge. When doing so, the vertices <italic>V</italic> become exons (or subexons) and edges <italic>E</italic> become introns [<xref ref-type="bibr" rid="pcbi.1005851.ref031">31</xref>]. We use the term, subexons, to refer to such entities throughout this paper to avoid confusion with real biological exons. Note that subexons are ordered such that <italic>v</italic><sub><italic>i</italic></sub> &lt; <italic>v</italic><sub><italic>j</italic></sub> if subexon <italic>v</italic><sub><italic>i</italic></sub> starts upstream of subexon <italic>v</italic><sub><italic>j</italic></sub>. Furthermore, a read-pair path can be mapped to an ordered collection of subexons, which we call a subexon path.</p>
<p>The splicing graph can be constructed from either a set of transcripts or from read-pairs. Under the assembly mode, Strawberry builds splicing graphs from read-pairs and then assembles the nodes (subexons) into transcripts. Under the splicing graph representation, a similar MPC problem arises on the subexon level. Since the splicing graph is a sparse representation of the read-pairs, assembly on the splicing graph is more time efficient than assembly with the read-pairs. This subexon representation also has a positive impact on quantification, since read-pair counts on subexons can be seen as compact sufficient statistics for our quantification model. The idea of quantification is discussed in more detail in the quantification section.</p>
<p>Our flow network algorithm requires some modifications on the splicing graph. A source node <italic>v</italic><sub><italic>s</italic></sub> connecting to all subexon(s) at the 5’ end site(s), and a target node <italic>v</italic><sub><italic>t</italic></sub> connecting to the subexon(s) having at the 3’ end site(s) are added to the splicing graph. We use the word (<italic>s</italic>, <italic>t</italic>)-path (in order to reserve the use of subexon path for quantification) to refer to an ordered set of subexons from <italic>v</italic><sub><italic>s</italic></sub> to <italic>v</italic><sub><italic>t</italic></sub>, inclusive. Notice that <italic>v</italic><sub><italic>s</italic></sub> and <italic>v</italic><sub><italic>t</italic></sub> are not real exons. Our new MPC problem on the splicing graph can be defined as finding a minimum set of (<italic>s</italic>, <italic>t</italic>)-paths which can cover every subexon at least once. The purpose of including nodes, <italic>v</italic><sub><italic>s</italic></sub> and <italic>v</italic><sub><italic>t</italic></sub>, is to remove partial or incomplete transcripts. In other words, each full transcript corresponds to a (<italic>s</italic>, <italic>t</italic>)-path which flows from a promoter region (<italic>v</italic><sub><italic>s</italic></sub>) to a terminator (<italic>v</italic><sub><italic>t</italic></sub>).</p>
</sec>
<sec id="sec012">
<title>Constructing a weighted splicing graph</title>
<p>To define nodes and edges in the splicing graph, Strawberry separately retrieves primitive exons from the coverage data and retrieves introns from junction alignments. A primitive exon is defined as a continuous stretch of genomic positions covered by reads. An intron is defined as a unique junction alignment. The introns are then used to cut the primitive exons into subexons which are the final nodes defined in the splicing graph (<xref ref-type="fig" rid="pcbi.1005851.g008">Fig 8</xref>). However, in simulated data, many inferred introns are not real because of false junction calls by aligners. There is evidence these false calls also appear in real data [<xref ref-type="bibr" rid="pcbi.1005851.ref032">32</xref>]. Strawberry uses the same criteria to pre-filter introns as in Cufflinks [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>]. The thresholds are arbitrary but work well in practice. Putative introns are discarded if any of the following apply.</p>
<fig id="pcbi.1005851.g008" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g008</object-id>
<label>Fig 8</label>
<caption>
<title>Translation of read alignments into a splicing graph.</title>
<p>(a) Eleven imaginary aligned paired-end reads (or read-pairs) are represented by light blue boxes intersected by solid lines, which indicate splicing junctions, and broken lines, which indicates gap sequences. Above the read-pairs, the coverage plot is shown. The white regions have zero coverage. Below the read-pairs, three primitive exons are shown as purple boxes and five subexons in dark blue, numbered from 1–5. (b) The splicing graph constructed from part (a). The numbered nodes in the splicing graph are subexons from part (a). Dashed Arrows represent the non-intron edges and solid arrows indicate the intron edges. The numbers next to edges are the weights(number of read-pairs supports). A read-pair that contributes to an edge weight is stressed using an asterisk near its upper-left corner. All the arrows also indicate the transcription direction. The source node and target node in the splicing graph are not shown.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g008" xlink:type="simple"/>
</fig>
<list list-type="bullet">
<list-item>
<p>More than 70% of the reads supporting an intron are not uniquely aligned.</p>
</list-item>
<list-item>
<p>If two introns overlap and one’s expression is less than 5% of the other, then the one with lower expression is removed. Intron expression is defined as the total number of junction reads.</p>
</list-item>
<list-item>
<p>The number of small overhang reads supporting a junction is likely to be low under the assumption that reads are distributed uniformly along their parent transcripts. A small overhang read is a particular junction read where one end of the read is mapped within a small distance (we use 6 bp) of a subexon-intron boundary. The expected number of small overhang reads is calculated from a binomial distribution, Bin(<italic>n</italic>, <italic>p</italic>), where <italic>n</italic> is the total junction reads and <inline-formula id="pcbi.1005851.e007"><alternatives><graphic id="pcbi.1005851.e007g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e007" xlink:type="simple"/><mml:math display="inline" id="M7"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula>, <italic>s</italic> being the small overhang distance and <italic>l</italic> being read length. When <italic>n</italic> is large (e.g., &gt;100), we use the normal approximation <italic>N</italic>(<italic>np</italic>, <italic>np</italic>(1 − <italic>p</italic>)).</p>
</list-item>
</list>
<p>Next, nodes (subexons) are connected in the splicing graph. Each subexon is either fully contained or excluded in any transcript. Two subexons are connected by an edge, which does not necessarily represent an intron, when they are consecutive in their genomic coordinates (see <xref ref-type="fig" rid="pcbi.1005851.g008">Fig 8</xref>). For the non-intron edges, the number of reads covering at least 6 bp of both subexons is used as the edge weight representing the support for these two subexons being in the same transcript. For the intron edges, the weight is simply the total junction read number. In the implementation, Strawberry negates the weight and adds the maximum weight to make all weights positive. The algorithm, described next, will solve for the minimum total weight.</p>
</sec>
<sec id="sec013">
<title>Optimization with flow network</title>
<p>We have reformulated the problem on a splicing graph <italic>G</italic>, where (<italic>s</italic>, <italic>t</italic>)-paths (full-length transcripts) are ordered collections of subexons, and we seek a minimum path cover (MPC) of <italic>G</italic>. The ordinary MPC problem is not a good fit for the splicing graph since it only requires that every node (subexon) is covered at least once, leaving the possibility that some edges (indicating two subexons are consecutive in the transcriptome) might not be covered. Also, a read-pair (due to the unsequenced proportion) can span two non-consecutive nodes. These non-consecutive nodes (if they exist) constitute a subpath (<xref ref-type="fig" rid="pcbi.1005851.g009">Fig 9</xref>), denoted by <italic>p</italic><sup><italic>sub</italic></sup>, that also must be covered by at least one (<italic>s</italic>, <italic>t</italic>)-path in the cover. All the edges and subpaths constitute the constraints in a Constrained MPC (CMPC) problem. An efficient algorithm for solving the Constrained MPC (CMPC) problem has been advanced [<xref ref-type="bibr" rid="pcbi.1005851.ref033">33</xref>].</p>
<fig id="pcbi.1005851.g009" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g009</object-id>
<label>Fig 9</label>
<caption>
<title>An input flow network with a subpath constraint {2-4-7}.</title>
<p>(a), the number next to an edge is the edge cost. For every edge <italic>e</italic>, the edge constraint implies 1 ≤ <italic>f</italic>(<italic>e</italic>) ≤ inf. (b), the transformed min-flow circulation network. The 2-tuple (a, b) next to each edge indicates the optimal flow on the edge and the edge cost respectively. After Step 3, the path constraints set is <italic>P</italic><sup>sub</sup> = {(1, 2), (1, 3), (2, 4, 7), (4, 5), (4, 6), (5, 8), (6, 8), (7, 8)}. Two edges no longer in the constraint set are shown in green. For these two edges, the minimum flow requirement is 0; for the rest of edges, it is 1. Two dummy nodes, <italic>s</italic> and <italic>t</italic>, are added to complete the circulation. The number of flows after decomposition is equal to the minimum flow which is 3.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g009" xlink:type="simple"/>
</fig>
<p><bold>Definition 1</bold> <italic>CMPC problem</italic>. <italic>Given a DAG G with nodes V</italic>(<italic>G</italic>) <italic>and edges E</italic>(<italic>G</italic>), <italic>and a weight w</italic>(<italic>e</italic>) <italic>for each e</italic> ∈ <italic>E</italic>(<italic>G</italic>), <italic>and a set of subpaths</italic> <inline-formula id="pcbi.1005851.e008"><alternatives><graphic id="pcbi.1005851.e008g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e008" xlink:type="simple"/><mml:math display="inline" id="M8"><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup><mml:mo>|</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> <italic>the task is to find a minimum number of k directed paths</italic> {<italic>p</italic><sub><italic>i</italic></sub>|<italic>i</italic> ∈ 1, …, <italic>k</italic>} <italic>in G such that</italic></p>
<list list-type="bullet">
<list-item>
<p><italic>Every node in V</italic>(<italic>G</italic>) <italic>occurs at least once in some p</italic><sub><italic>i</italic></sub>.</p>
</list-item>
<list-item>
<p><italic>Every edge in E</italic>(<italic>G</italic>) <italic>occurs at least once in some p</italic><sub><italic>i</italic></sub>.</p>
</list-item>
<list-item>
<p><italic>Every path</italic> <inline-formula id="pcbi.1005851.e009"><alternatives><graphic id="pcbi.1005851.e009g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e009" xlink:type="simple"/><mml:math display="inline" id="M9"><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula> <italic>is entirely contained in some p</italic><sub><italic>i</italic></sub>.</p>
</list-item>
<list-item>
<p><italic>Every path p</italic><sub><italic>i</italic></sub> <italic>starts in v</italic><sub><italic>s</italic></sub> <italic>and ends in v</italic><sub><italic>t</italic></sub>, <italic>where v</italic><sub><italic>s</italic></sub> <italic>and v</italic><sub><italic>t</italic></sub> <italic>are the source and target nodes of G</italic>.</p>
</list-item>
<list-item>
<p><inline-formula id="pcbi.1005851.e010"><alternatives><graphic id="pcbi.1005851.e010g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e010" xlink:type="simple"/><mml:math display="inline" id="M10"><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> <italic>is minimum among all solutions of k paths</italic>.</p>
</list-item>
</list>
<p>Rizzi et al. showed that the CMPC problem can be reduced to the MPC problem with node constraints [<xref ref-type="bibr" rid="pcbi.1005851.ref033">33</xref>]. The MPC with node constraints can be found using one of the well established flow network algorithms, e.g., the min-cost circulation flow algorithm [<xref ref-type="bibr" rid="pcbi.1005851.ref030">30</xref>], where a strong polynomial time solution is guaranteed. In a nutshell, a flow network is a DAG <italic>G</italic> = (<italic>V</italic>, <italic>E</italic>) with source <italic>v</italic><sub><italic>s</italic></sub> ∈ <italic>V</italic>(<italic>G</italic>) and target <italic>v</italic><sub><italic>t</italic></sub> ∈ <italic>V</italic>(<italic>G</italic>), where every edge <italic>e</italic> ∈ <italic>E</italic>(<italic>G</italic>) has an upper <italic>u</italic>(<italic>e</italic>) and lower <italic>l</italic>(<italic>e</italic>) capacity limit and flow <italic>f</italic>(<italic>e</italic>) associated with it. The solution to a flow network problem is to construct a map, <italic>f</italic>: <italic>E</italic> → <italic>R</italic>, which maps an edge to a real number or an integer, called a flow. The flow decomposition theorem (see, e.g., [<xref ref-type="bibr" rid="pcbi.1005851.ref030">30</xref>]) guarantees the flow network can be used to solve the MPC problem. It says that the flow <italic>f</italic>(<italic>e</italic>) on edge <italic>e</italic> can be decomposed into a set of flows on the (<italic>s</italic>, <italic>t</italic>)-path. However the decomposition is not unique, which we overcome using a greedy algorithm.</p>
<p><bold>Algorithm 1</bold> <italic>Constrained Minimum Path Cover Algorithm (CMPC)</italic> [<xref ref-type="bibr" rid="pcbi.1005851.ref033">33</xref>]</p>
<list list-type="order">
<list-item>
<p><italic>Add edges to the subpath constraints</italic>. <italic>Let</italic> <inline-formula id="pcbi.1005851.e011"><alternatives><graphic id="pcbi.1005851.e011g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e011" xlink:type="simple"/><mml:math display="inline" id="M11"><mml:mrow><mml:msup><mml:mi>P</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> <italic>denote the set of subpath constraints</italic>. <italic>Grow the P</italic><sup><italic>sub</italic></sup> <italic>to include all edges as subpath constraints</italic>.</p>
</list-item>
<list-item>
<p><italic>Drop duplicates</italic>. <italic>For every pair of path constraints</italic> <inline-formula id="pcbi.1005851.e012"><alternatives><graphic id="pcbi.1005851.e012g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e012" xlink:type="simple"/><mml:math display="inline" id="M12"><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula> <italic>and</italic> <inline-formula id="pcbi.1005851.e013"><alternatives><graphic id="pcbi.1005851.e013g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e013" xlink:type="simple"/><mml:math display="inline" id="M13"><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula>, <italic>set P</italic><sup><italic>sub</italic></sup> <italic>to</italic> <inline-formula id="pcbi.1005851.e014"><alternatives><graphic id="pcbi.1005851.e014g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e014" xlink:type="simple"/><mml:math display="inline" id="M14"><mml:mrow><mml:msup><mml:mi>P</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msup><mml:mo>∖</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, <italic>if</italic> <inline-formula id="pcbi.1005851.e015"><alternatives><graphic id="pcbi.1005851.e015g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e015" xlink:type="simple"/><mml:math display="inline" id="M15"><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula> <italic>is contained in</italic> <inline-formula id="pcbi.1005851.e016"><alternatives><graphic id="pcbi.1005851.e016g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e016" xlink:type="simple"/><mml:math display="inline" id="M16"><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula>.</p>
</list-item>
<list-item>
<p><italic>For every original path constraint</italic> <inline-formula id="pcbi.1005851.e017"><alternatives><graphic id="pcbi.1005851.e017g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e017" xlink:type="simple"/><mml:math display="inline" id="M17"><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula> <italic>which starts at node u and ends at node v and</italic> (<italic>u</italic>, <italic>v</italic>) ∉ <italic>E</italic>(<italic>G</italic>), <italic>do</italic>:</p>
<list list-type="bullet">
<list-item>
<p><italic>E</italic>(<italic>G</italic>) ≔ <italic>E</italic>(<italic>G</italic>) ∪ {(<italic>u</italic>, <italic>v</italic>)}. <italic>Add a new edge</italic> (<italic>u</italic>, <italic>v</italic>) <italic>directly from the start node of the subpath to the end node of the subpath</italic>.</p>
</list-item>
<list-item>
<p><italic>Set the lower and upper bounds for this new edge</italic>: <italic>lower</italic>(<italic>u</italic>, <italic>v</italic>) = 1 <italic>and upper</italic>(<italic>u</italic>, <italic>v</italic>) = inf.</p>
</list-item>
<list-item>
<p><italic>The weight of the new edge is the sum of weights of the original subpath</italic>: <inline-formula id="pcbi.1005851.e018"><alternatives><graphic id="pcbi.1005851.e018g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e018" xlink:type="simple"/><mml:math display="inline" id="M18"><mml:mrow><mml:mi>w</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>.</p>
</list-item>
</list>
</list-item>
<list-item>
<p><italic>For each e</italic> ∈ <italic>E</italic>(<italic>G</italic>) <italic>and e</italic> ∉ <italic>P</italic><sup><italic>sub</italic></sup>, <italic>set lower</italic>(<italic>e</italic>) = 0 <italic>and upper</italic>(<italic>e</italic>) = inf.</p>
</list-item>
<list-item>
<p><italic>Add an edge</italic> (<italic>v</italic><sub><italic>t</italic></sub>, <italic>v</italic><sub><italic>s</italic></sub>) <italic>from sink node v</italic><sub><italic>t</italic></sub> <italic>to start node v</italic><sub><italic>s</italic></sub> <italic>to complete the circle</italic>. <italic>Set lower and upper bounds for this edge as well</italic>: <italic>lower</italic>(<italic>t</italic>, <italic>s</italic>) = 0 <italic>and upper</italic>(<italic>t</italic>, <italic>s</italic>) = inf.</p>
</list-item>
<list-item>
<p><italic>Compute a min-weight min-flow circulation on this transformed input G with the following properties</italic>.</p>
<list list-type="bullet">
<list-item>
<p><italic>G is a flow network which satisfies capacity constraints and flow conservation constraints</italic>.</p>
</list-item>
<list-item>
<p><italic>Min flow</italic>: ∑<sub><italic>e</italic>∈<italic>E</italic>(<italic>G</italic>)</sub> <italic>f</italic>(<italic>e</italic>) <italic>is minimum</italic>.</p>
</list-item>
<list-item>
<p><italic>Min weight</italic>: ∑<sub><italic>e</italic>∈<italic>E</italic>(<italic>G</italic>)</sub> <italic>w</italic>(<italic>e</italic>) <italic>is minimum</italic>.</p>
</list-item>
</list>
</list-item>
<list-item>
<p><italic>Finally</italic>, <italic>the integer flow on edge</italic> (<italic>v</italic><sub><italic>t</italic></sub>, <italic>v</italic><sub><italic>s</italic></sub>) <italic>equals to the achieved min-flow</italic>. <italic>We decompose the flow network into this number of paths and each path corresponds to an assembled transcript</italic>.</p>
</list-item>
</list>
<p><xref ref-type="fig" rid="pcbi.1005851.g009">Fig 9</xref> demonstrates a toy example of this algorithm.</p>
</sec>
<sec id="sec014">
<title>Quantification with latent class model</title>
<p>Strawberry’s quantification model is based on the generative model proposed in [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>]. As in <italic>Salzman et al</italic>. <italic>2011</italic> [<xref ref-type="bibr" rid="pcbi.1005851.ref016">16</xref>], Strawberry collapses data into sufficient statistics, but to match the assembly, Strawberry collapses the data into subexon paths, defined on the splicing graph. In theory, for a gene with <italic>w</italic> subexons, Strawberry produces 2<sup><italic>w</italic></sup> − 1 equivalent classes independent of the number of isoforms. In contrast, the number of classes in [<xref ref-type="bibr" rid="pcbi.1005851.ref016">16</xref>] depends on the number of isoforms. Although <italic>Salzman et al</italic>. <italic>2011</italic> achieves greater collapsing, Strawberry has a richer parameterization and is able to account for nonuniform distribution of the reads along a transcript. Either way, the idea of collapsing greatly reduces the number of observations and speeds up the calculation.</p>
<p>To describe the Strawberry model, we start with the definition of subexon path. A read-pair can be reduced to a unique set of ordered subexons, called a subexon path. The map from read-pair space <inline-formula id="pcbi.1005851.e019"><alternatives><graphic id="pcbi.1005851.e019g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e019" xlink:type="simple"/><mml:math display="inline" id="M19"><mml:mi mathvariant="script">R</mml:mi></mml:math></alternatives></inline-formula> to subexon path space <inline-formula id="pcbi.1005851.e020"><alternatives><graphic id="pcbi.1005851.e020g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e020" xlink:type="simple"/><mml:math display="inline" id="M20"><mml:mi mathvariant="script">S</mml:mi></mml:math></alternatives></inline-formula> is surjective. Strawberry’s data reduction strategy creates an equivalency between the subexon paths <inline-formula id="pcbi.1005851.e021"><alternatives><graphic id="pcbi.1005851.e021g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e021" xlink:type="simple"/><mml:math display="inline" id="M21"><mml:mi mathvariant="script">S</mml:mi></mml:math></alternatives></inline-formula> and a partition of fragments <inline-formula id="pcbi.1005851.e022"><alternatives><graphic id="pcbi.1005851.e022g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e022" xlink:type="simple"/><mml:math display="inline" id="M22"><mml:mi mathvariant="script">F</mml:mi></mml:math></alternatives></inline-formula> (and hence reads <inline-formula id="pcbi.1005851.e023"><alternatives><graphic id="pcbi.1005851.e023g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e023" xlink:type="simple"/><mml:math display="inline" id="M23"><mml:mi mathvariant="script">R</mml:mi></mml:math></alternatives></inline-formula>). It collapses read-pairs based on the set of subexons they cross. Let <inline-formula id="pcbi.1005851.e024"><alternatives><graphic id="pcbi.1005851.e024g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e024" xlink:type="simple"/><mml:math display="inline" id="M24"><mml:mrow><mml:mi mathvariant="script">S</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> be the collection of subexon paths. Subexon paths are equivalent to sets of genomic intervals {[<italic>G</italic><sub><italic>sx</italic></sub>, <italic>G</italic><sub><italic>sy</italic></sub>] | ∀<italic>s</italic> ∈ <italic>S</italic><sub><italic>l</italic></sub>}, where <italic>G</italic><sub><italic>sx</italic></sub> and <italic>G</italic><sub><italic>sy</italic></sub> are the smallest and largest genomic positions in subexon <italic>s</italic>. Each observable read-pair <italic>r</italic> can be represented as a 4-tuple, (<italic>u</italic><sub>5′</sub>, <italic>u</italic><sub>3′</sub>, <italic>d</italic><sub>5′</sub>, <italic>d</italic><sub>3′</sub>), where <italic>u</italic> and <italic>d</italic> represent the upstream and downstream reads, 5′ and 3′ their respective ends, both along the transcription direction. Then we can partition (or project) the <inline-formula id="pcbi.1005851.e025"><alternatives><graphic id="pcbi.1005851.e025g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e025" xlink:type="simple"/><mml:math display="inline" id="M25"><mml:mi mathvariant="script">R</mml:mi></mml:math></alternatives></inline-formula> onto <italic>S</italic>, so that a read pair <italic>r</italic> is assigned to a subexon path <italic>S</italic><sub><italic>l</italic></sub> if and only if <italic>r</italic> overlaps with only subexons in <italic>S</italic><sub><italic>l</italic></sub> and all subexons forming <italic>S</italic><sub><italic>l</italic></sub> have been hit by this <italic>r</italic>, i.e., <italic>r</italic> ∈ <italic>S</italic><sub><italic>l</italic></sub> ⇔ cond.1 ∧ cond.2, where cond.1 = ∀<italic>s</italic> ∈ <italic>S</italic><sub><italic>l</italic></sub>, [<italic>G</italic><sub><italic>sx</italic></sub>, <italic>G</italic><sub><italic>sy</italic></sub>] ∩ [<italic>u</italic><sub>3′</sub>, <italic>u</italic><sub>5′</sub>] ≠ ∅ ∨ [<italic>G</italic><sub><italic>sx</italic></sub>, <italic>G</italic><sub><italic>sy</italic></sub>] ∩ [<italic>d</italic><sub>5′</sub>, <italic>d</italic><sub>3′</sub>] ≠ ∅ and cond.2 = ∀<italic>j</italic> ∈ [<italic>u</italic><sub>3′</sub>, <italic>u</italic><sub>5′</sub>] ∪ [<italic>d</italic><sub>5′</sub>, <italic>d</italic><sub>3′</sub>], ∃<italic>s</italic> such that <italic>j</italic> ∈ [<italic>G</italic><sub><italic>sx</italic></sub>, <italic>G</italic><sub><italic>sy</italic></sub>]. This definition ensures each <italic>r</italic> is uniquely assigned to a <italic>S</italic><sub><italic>l</italic></sub>. Notice, if a read pair contains an unsequenced portion, such as the insert, the subexon path of the read-pair is an incomplete observation of the unobserved set of subexons. However, when conditioning on the isoform, a subexon path can become a complete observation of the fragment from which the read-pair is generated. Therefore, an subexon path can be included or excluded from an isoform just like the read-pair. For each gene <italic>g</italic>, we derive a binary matrix <italic>C</italic> with <italic>L</italic><sub><italic>g</italic></sub> rows and <italic>K</italic><sub><italic>g</italic></sub> columns, where we assume gene <italic>g</italic> has <italic>L</italic><sub><italic>g</italic></sub> subexon paths and <italic>K</italic><sub><italic>g</italic></sub> isoforms and <italic>C</italic><sub><italic>kl</italic></sub> = 1 if isoform k contains subexon path <italic>l</italic>, otherwise 0. If there are total <italic>n</italic><sub><italic>g</italic></sub> read-pairs observed for gene <italic>g</italic>, we derive our observation {<bold><italic>y</italic></bold><sub><italic>i</italic></sub>}<sub><italic>n</italic><sub><italic>g</italic></sub></sub>, where each element <bold><italic>y</italic></bold><sub><italic>i</italic></sub> identifies the subexon path of the read-pair <italic>i</italic>, i.e., <bold><italic>y</italic></bold><sub><italic>i</italic></sub> is an <italic>L</italic><sub><italic>g</italic></sub>-dimensional vector, one of the standard basis vectors of <italic>L</italic><sub><italic>g</italic></sub>-dimensional Euclidean space. In practice, Strawberry only uses the observed subexon path whose number so <italic>L</italic><sub><italic>g</italic></sub> is smaller than the theoretical number.</p>
<p>Like the assembly, this model handles one locus from a single sample at a time, allowing maximum parallelization. Our generative model for RNA-Seq is as follows. Transcripts from isoform <italic>k</italic> make up a proportion <italic>η</italic><sub><italic>k</italic></sub> in the sample. Transcripts are randomly fragmented, and long isoforms produce more fragments than short isoforms. Isoform <italic>k</italic> fragments constitute approximately proportion <italic>π</italic><sub><italic>k</italic></sub> ≈ <italic>l</italic><sub><italic>k</italic></sub><italic>η</italic><sub><italic>k</italic></sub> in the sample. Having estimated <inline-formula id="pcbi.1005851.e026"><alternatives><graphic id="pcbi.1005851.e026g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e026" xlink:type="simple"/><mml:math display="inline" id="M26"><mml:msub><mml:mover accent="true"><mml:mi>π</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>k</mml:mi></mml:msub></mml:math></alternatives></inline-formula> and knowing <italic>l</italic><sub><italic>k</italic></sub>, we can later retrieve <italic>η</italic><sub><italic>k</italic></sub> [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>]. Given the isoform of origin <italic>k</italic>, the fragment is considered as generated from the underlying subexon path as a one-trial multinomial experiment Mult(1, <bold><italic>θ</italic></bold><sub><italic>k</italic>⋅</sub>), where <italic>θ</italic><sub><italic>kl</italic></sub> is a conditional probability of the fragment generating from subexon path <italic>l</italic>. For a given read set <inline-formula id="pcbi.1005851.e027"><alternatives><graphic id="pcbi.1005851.e027g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e027" xlink:type="simple"/><mml:math display="inline" id="M27"><mml:mrow><mml:mi mathvariant="script">R</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, the likelihood can be written as
<disp-formula id="pcbi.1005851.e028"><alternatives><graphic id="pcbi.1005851.e028g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e028" xlink:type="simple"/><mml:math display="block" id="M28"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">π</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mspace width="0.222222em"/><mml:mo>|</mml:mo><mml:mspace width="0.222222em"/><mml:mi mathvariant="script">R</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:msub><mml:mi>π</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>L</mml:mi></mml:munderover><mml:msubsup><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:msubsup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(3)</label></disp-formula></p>
<p>Following the line of generative model of sampling transcripts first and then the fragments conditioning on the transcript and accounting for the read-isoform assignment uncertainty using a mixture model. Strawberry simultaneously estimates the class probability <bold><italic>π</italic></bold> and the conditional probability <bold><italic>θ</italic></bold> under a EM algorithm [<xref ref-type="bibr" rid="pcbi.1005851.ref034">34</xref>] framework, while other models [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>, <xref ref-type="bibr" rid="pcbi.1005851.ref006">6</xref>, <xref ref-type="bibr" rid="pcbi.1005851.ref016">16</xref>, <xref ref-type="bibr" rid="pcbi.1005851.ref035">35</xref>] assume fixed conditional probability when estimating the class probabilities. Strawberry has a richer set of parameters which allow it to account for the non-uniform distribution of reads along transcripts often observed in real data [<xref ref-type="bibr" rid="pcbi.1005851.ref027">27</xref>, <xref ref-type="bibr" rid="pcbi.1005851.ref036">36</xref>]. Jiang et al. also proposed a model that simultaneously estimates the class probabilities and conditional probabilities for robust estimation of isoform expression [<xref ref-type="bibr" rid="pcbi.1005851.ref037">37</xref>]. However, their model has far more parameters than ours and uses a penalized likelihood. Because they don’t publish their program, the actual performance of their model is unknown.</p>
</sec>
<sec id="sec015">
<title>Estimation</title>
<p>We use the EM algorithm proposed for basic latent class models [<xref ref-type="bibr" rid="pcbi.1005851.ref038">38</xref>] and summarize in algorithm 2:</p>
<p><bold>Algorithm</bold> <bold>2</bold></p>
<list list-type="bullet">
<list-item>
<p><italic>Initialize</italic>
<disp-formula id="pcbi.1005851.e029"><alternatives><graphic id="pcbi.1005851.e029g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e029" xlink:type="simple"/><mml:math display="block" id="M29"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>K</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
<disp-formula id="pcbi.1005851.e030"><alternatives><graphic id="pcbi.1005851.e030g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e030" xlink:type="simple"/><mml:math display="block" id="M30"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mi>t</mml:mi></mml:munder><mml:mfrac><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
<italic>where we sum over possible fragment length t conditioning on subexon bin l and isoform k</italic>. <italic>Here</italic>, <italic>q</italic>(⋅) <italic>is the empirical fragment distribution and n</italic><sub><italic>klt</italic></sub> <italic>is number of possible fragments with length t and l</italic><sub><italic>k</italic></sub> <italic>is the isoform length</italic>.</p>
</list-item>
<list-item>
<p><italic>repeat EM steps until convergence</italic>.
<list list-type="simple">
<list-item>
<label>–</label><p><italic>E-step</italic>:
<disp-formula id="pcbi.1005851.e031"><alternatives><graphic id="pcbi.1005851.e031g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e031" xlink:type="simple"/><mml:math display="block" id="M31"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>π</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mi>m</mml:mi></mml:msup><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mi>m</mml:mi></mml:msup></mml:mrow><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:msubsup><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>π</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mi>m</mml:mi></mml:msup><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mi>m</mml:mi></mml:msup></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></p>
</list-item>
<list-item>
<label>–</label><p><italic>M-step</italic>:
<disp-formula id="pcbi.1005851.e032"><alternatives><graphic id="pcbi.1005851.e032g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e032" xlink:type="simple"/><mml:math display="block" id="M32"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>π</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>L</mml:mi></mml:msubsup><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mi>n</mml:mi></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
<disp-formula id="pcbi.1005851.e033"><alternatives><graphic id="pcbi.1005851.e033g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e033" xlink:type="simple"/><mml:math display="block" id="M33"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mfrac><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>L</mml:mi></mml:msubsup><mml:msup><mml:mover accent="true"><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></p>
</list-item>
</list></p>
</list-item>
</list>
<p>The parameter <bold><italic>θ</italic></bold> is initialized using the concept of <italic>read type</italic> (same as our read-pair concept) and <italic>sample rate</italic> <bold><italic>α</italic></bold> in [<xref ref-type="bibr" rid="pcbi.1005851.ref016">16</xref>]. The probability of observing a read pair <italic>r</italic> is <inline-formula id="pcbi.1005851.e034"><alternatives><graphic id="pcbi.1005851.e034g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e034" xlink:type="simple"/><mml:math display="inline" id="M34"><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:msubsup><mml:msub><mml:mi>π</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> where
<disp-formula id="pcbi.1005851.e035"><alternatives><graphic id="pcbi.1005851.e035g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e035" xlink:type="simple"/><mml:math display="block" id="M35"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>q</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="4.pt"/><mml:mi>r</mml:mi><mml:mspace width="4.pt"/><mml:mtext>is</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>compatible</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>to</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>isoform</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>k</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="4.pt"/><mml:mi>r</mml:mi><mml:mspace width="4.pt"/><mml:mtext>is</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>not</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>compatible</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>to</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>isoform</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>k</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo/></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
We use <italic>t</italic><sub><italic>k</italic></sub> to denote the fragment length of a read-pair under the isoform <italic>k</italic>. Note that Salzman et al.’s model assumes reads are generated uniformly when its isoform of origin is known. Strawberry learns an empirical fragment size distribution <italic>q</italic>(⋅) from a place in genome (&gt; 2<italic>kb</italic>) where no alternative splice sites exist according to the read alignments. If the input is single end reads, Strawberry relies on the users to define a Gaussian distribution for the fragment length. We assume the random fragmentation step in sample preparation leads to a nearly Gaussian distribution [<xref ref-type="bibr" rid="pcbi.1005851.ref036">36</xref>], but it is common to approximate the distribution using an empirical one [<xref ref-type="bibr" rid="pcbi.1005851.ref001">1</xref>].</p>
<p>Strawberry calculates the initial estimate of <italic>θ</italic><sub><italic>kl</italic></sub> for each pair of isoform <italic>k</italic> and subexon path <italic>l</italic> by summing <italic>α</italic><sub><italic>kr</italic></sub> over all potential read-pairs on subexon path <italic>l</italic> including the ones that are not observed:
<disp-formula id="pcbi.1005851.e036"><alternatives><graphic id="pcbi.1005851.e036g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1005851.e036" xlink:type="simple"/><mml:math display="block" id="M36"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="4.pt"/><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="4.pt"/><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo/></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(4)</label></disp-formula>
The summation in <xref ref-type="disp-formula" rid="pcbi.1005851.e036">Eq 4</xref> requires summing over all possible fragment lengths and conditioning on a fragment length, the possible 5’ end which <italic>r</italic> can be generated from a given subexon path and transcript combination (<xref ref-type="fig" rid="pcbi.1005851.g010">Fig 10</xref>).</p>
<fig id="pcbi.1005851.g010" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005851.g010</object-id>
<label>Fig 10</label>
<caption>
<title/>
<p>(a), a gene with three subexons and two isoform are shown. The length of i1 is 260 bp, i2 200 bp. A paired-end read (or read-pair) is represented by light blue boxes intersected by broken lines, which indicates gap sequences. The read length is 50x2 bp. (b) A subexon path {<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>3</sub>} applies to both isoform. When on i1, this subexon path implies three subexons with the one in middle shown in gray. Consider a fixed size fragment with gap size 75 bp(shown in gray) and total fragment length 175 bp. This particular fragment can arise from 16 different positions from subexon path {<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>3</sub>} on i1 and 26 different positions from subexon path {<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>3</sub>} on i2.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.g010" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec016">
<title>Implementation</title>
<p>Strawberry was written in C++14 and utilizes features such as threading library for parallelization. <italic>Lemon</italic> [<xref ref-type="bibr" rid="pcbi.1005851.ref039">39</xref>], a C++ graph template library, was used in assembly and <italic>Eigen3</italic> (<ext-link ext-link-type="uri" xlink:href="http://eigen.tuxfamily.org" xlink:type="simple">http://eigen.tuxfamily.org</ext-link>), a C++ template library for linear algebra, was used in quantification. Strawberry is available as a free software at <ext-link ext-link-type="uri" xlink:href="https://github.com/ruolin/strawberry" xlink:type="simple">https://github.com/ruolin/strawberry</ext-link> under the MIT license.</p>
</sec>
<sec id="sec017">
<title>Conclusion</title>
<p>This paper introduced Strawberry, a fast, accurate genome-guide assembler and quantification tool for RNA-Seq data. It facilitates transcriptome assembly and calculation of transcript-level expression. Based on our simulation, Strawberry not only recovers more true transcripts while achieving the same false discovery rate in assembly compared to two other leading methods but also outperforms them in terms of the quantification accuracy. Using the real data from a highly cited method comparison study, we again show that Strawberry beats Cufflinks and StringTie by convincing margins. The other advantage of Strawberry is its speed and good scalability, makes it an intriguing candidate when processing large dataset (e.g., &gt;100 million reads). It takes 12.35 min for Strawberry to process 100 million input RNA-Seq reads while a simple Linux program <italic>wc</italic> takes 8.69 min. Strawberry achieves this level of speed and accuracy through applying the min-cost, min-flow algorithm to assembly, a reduced data representation to subexon path counts which arise naturally from the splicing graph and latent class model used in the quantification step. Strawberry is written in C++14 and is fully self-contained. The installation does not require any pre-installation packages except for <italic>g++ compiler</italic> and <italic>CMake</italic>. Strawberry applies to both single-end and paired-end libraries, and also supports strand-specific protocols.</p>
</sec>
</sec>
<sec id="sec018">
<title>Supporting information</title>
<supplementary-material id="pcbi.1005851.s001" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.s001" xlink:type="simple">
<label>S1 Fig</label>
<caption>
<title>RD60 assembly result.</title>
<p>Recall and precision at the nucleotide, exon, intron and transcript level for StringTie, Cufflinks and Strawberry at RD60 data.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005851.s002" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.s002" xlink:type="simple">
<label>S2 Fig</label>
<caption>
<title>RD25 assembly result.</title>
<p>Recall and precision at the nucleotide, exon, intron and transcript level for StringTie, Cufflinks and Strawberry at RD25 data.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005851.s003" mimetype="application/eps" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.s003" xlink:type="simple">
<label>S3 Fig</label>
<caption>
<title>RD60 quantification result.</title>
<p>Frequency plot of Proportional correlation, Spearman correlation, Mean Absolute Relative Difference (MARD) for the 10 replicates in RD60 data.</p>
<p>(EPS)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005851.s004" mimetype="application/eps" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.s004" xlink:type="simple">
<label>S4 Fig</label>
<caption>
<title>RD25 quantification result.</title>
<p>Frequency plot of Proportional correlation, Spearman correlation, Mean Absolute Relative Difference (MARD) for the 10 replicates in RD25 data.</p>
<p>(EPS)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005851.s005" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.s005" xlink:type="simple">
<label>S5 Fig</label>
<caption>
<title>Box plots of F1 scores at the exon and intron level.</title>
<p>StringTie, Cufflinks and Strawberry were evaluated on data <italic>GEU</italic>, which is a simulated Human RNA-Seq data set.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1005851.s006" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005851.s006" xlink:type="simple">
<label>S6 Fig</label>
<caption>
<title>Frequency plot of Proportional correlation, Spearman correlation, Mean Absolute Relative Difference (MARD) for the 6 samples in <italic>GEU</italic>, which is a simulated Human data.</title>
<p>These comparisons include only the reconstructed transcripts that fully match the known transcripts.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ack>
<p>We thank Karin S. Dorman for her critical and insightful comments on the manuscript.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1005851.ref001">
<label>1</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Trapnell</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Williams</surname> <given-names>BA</given-names></name>, <name name-style="western"><surname>Pertea</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Mortazavi</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Kwan</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>van Baren</surname> <given-names>MJ</given-names></name>, <etal>et al</etal>. <article-title>Transcript assembly and quantification by RNA-Seq reveals unannotated transcripts and isoform switching during cell differentiation</article-title>. <source>Nat Biotechnol</source>. <year>2010</year>;<volume>28</volume>(<issue>5</issue>):<fpage>511</fpage>–<lpage>515</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nbt.1621" xlink:type="simple">10.1038/nbt.1621</ext-link></comment> <object-id pub-id-type="pmid">20436464</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref002">
<label>2</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Pertea</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Pertea</surname> <given-names>GM</given-names></name>, <name name-style="western"><surname>Antonescu</surname> <given-names>CM</given-names></name>, <name name-style="western"><surname>Chang</surname> <given-names>TC</given-names></name>, <name name-style="western"><surname>Mendell</surname> <given-names>JT</given-names></name>, <name name-style="western"><surname>Salzberg</surname> <given-names>SL</given-names></name>. <article-title>StringTie enables improved reconstruction of a transcriptome from RNA-seq reads</article-title>. <source>Nat Biotechnol</source>. <year>2015</year>;<volume>33</volume>(<issue>3</issue>):<fpage>290</fpage>–<lpage>295</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nbt.3122" xlink:type="simple">10.1038/nbt.3122</ext-link></comment> <object-id pub-id-type="pmid">25690850</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref003">
<label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Bernard</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Jacob</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Mairal</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Vert</surname> <given-names>JP</given-names></name>. <article-title>Efficient RNA isoform identification and quantification from RNA-Seq data with network flows</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>(<issue>17</issue>):<fpage>2447</fpage>–<lpage>2455</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btu317" xlink:type="simple">10.1093/bioinformatics/btu317</ext-link></comment> <object-id pub-id-type="pmid">24813214</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref004">
<label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Patro</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Duggal</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Love</surname> <given-names>MI</given-names></name>, <name name-style="western"><surname>Irizarry</surname> <given-names>RA</given-names></name>, <name name-style="western"><surname>Kingsford</surname> <given-names>C</given-names></name>. <article-title>Salmon provides accurate, fast, and bias-aware transcript expression estimates using dual-phase inference</article-title>. <source>bioRxiv</source>. <year>2016</year>;</mixed-citation>
</ref>
<ref id="pcbi.1005851.ref005">
<label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Love</surname> <given-names>MI</given-names></name>, <name name-style="western"><surname>Hogenesch</surname> <given-names>JB</given-names></name>, <name name-style="western"><surname>Irizarry</surname> <given-names>RA</given-names></name>. <article-title>Modeling of RNA-seq fragment sequence bias reduces systematic errors in transcript abundance estimation</article-title>. <source>Nat Biotechnol</source>. <year>2016</year>;<volume>34</volume>(<issue>12</issue>):<fpage>1287</fpage>–<lpage>1291</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nbt.3682" xlink:type="simple">10.1038/nbt.3682</ext-link></comment> <object-id pub-id-type="pmid">27669167</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref006">
<label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Rossell</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Stephan-Otto Attolini</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Kroiss</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Stocker</surname> <given-names>A</given-names></name>. <article-title>QUANTIFYING ALTERNATIVE SPLICING FROM PAIRED-END RNA-SEQUENCING DATA</article-title>. <source>Ann Appl Stat</source>. <year>2014</year>;<volume>8</volume>(<issue>1</issue>):<fpage>309</fpage>–<lpage>330</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1214/13-AOAS687" xlink:type="simple">10.1214/13-AOAS687</ext-link></comment> <object-id pub-id-type="pmid">24795787</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref007">
<label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Roberts</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Pachter</surname> <given-names>L</given-names></name>. <article-title>Streaming fragment assignment for real-time analysis of sequencing experiments</article-title>. <source>Nat Methods</source>. <year>2013</year>;<volume>10</volume>(<issue>1</issue>):<fpage>71</fpage>–<lpage>73</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nmeth.2251" xlink:type="simple">10.1038/nmeth.2251</ext-link></comment> <object-id pub-id-type="pmid">23160280</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref008">
<label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Li</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Dewey</surname> <given-names>CN</given-names></name>. <article-title>RSEM: accurate transcript quantification from RNA-Seq data with or without a reference genome</article-title>. <source>BMC Bioinformatics</source>. <year>2011</year>;<volume>12</volume>(<issue>1</issue>):<fpage>323</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/1471-2105-12-323" xlink:type="simple">10.1186/1471-2105-12-323</ext-link></comment> <object-id pub-id-type="pmid">21816040</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref009">
<label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Bray</surname> <given-names>NL</given-names></name>, <name name-style="western"><surname>Pimentel</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Melsted</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Pachter</surname> <given-names>L</given-names></name>. <article-title>Near-optimal probabilistic RNA-seq quantification</article-title>. <source>Nat Biotechnol</source>. <year>2016</year>;<volume>34</volume>(<issue>5</issue>):<fpage>525</fpage>–<lpage>527</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nbt.3519" xlink:type="simple">10.1038/nbt.3519</ext-link></comment> <object-id pub-id-type="pmid">27043002</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref010">
<label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Liu</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Loraine</surname> <given-names>AE</given-names></name>, <name name-style="western"><surname>Dickerson</surname> <given-names>JA</given-names></name>. <article-title>Comparisons of computational methods for differential alternative splicing detection using RNA-seq in plant systems</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year>;<volume>15</volume>(<issue>1</issue>):<fpage>364</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/s12859-014-0364-4" xlink:type="simple">10.1186/s12859-014-0364-4</ext-link></comment> <object-id pub-id-type="pmid">25511303</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref011">
<label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Tomescu</surname> <given-names>AI</given-names></name>, <name name-style="western"><surname>Kuosmanen</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Rizzi</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Makinen</surname> <given-names>V</given-names></name>. <article-title>A novel min-cost flow method for estimating transcript expression with RNA-Seq</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>;<volume>14</volume> <issue>Suppl 5</issue>:<fpage>S15</fpage>. <object-id pub-id-type="pmid">23734627</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref012">
<label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Mezlini</surname> <given-names>AM</given-names></name>, <name name-style="western"><surname>Smith</surname> <given-names>EJ</given-names></name>, <name name-style="western"><surname>Fiume</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Buske</surname> <given-names>O</given-names></name>, <name name-style="western"><surname>Savich</surname> <given-names>GL</given-names></name>, <name name-style="western"><surname>Shah</surname> <given-names>S</given-names></name>, <etal>et al</etal>. <article-title>iReckon: simultaneous isoform discovery and abundance estimation from RNA-seq data</article-title>. <source>Genome Res</source>. <year>2013</year>;<volume>23</volume>(<issue>3</issue>):<fpage>519</fpage>–<lpage>529</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/gr.142232.112" xlink:type="simple">10.1101/gr.142232.112</ext-link></comment> <object-id pub-id-type="pmid">23204306</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref013">
<label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Li</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Feng</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Jiang</surname> <given-names>T</given-names></name>. <article-title>IsoLasso: a LASSO regression approach to RNA-Seq based transcriptome assembly</article-title>. <source>J Comput Biol</source>. <year>2011</year>;<volume>18</volume>(<issue>11</issue>):<fpage>1693</fpage>–<lpage>1707</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1089/cmb.2011.0171" xlink:type="simple">10.1089/cmb.2011.0171</ext-link></comment> <object-id pub-id-type="pmid">21951053</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref014">
<label>14</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Garber</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Grabherr</surname> <given-names>MG</given-names></name>, <name name-style="western"><surname>Guttman</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Trapnell</surname> <given-names>C</given-names></name>. <article-title>Computational methods for transcriptome annotation and quantification using RNA-seq</article-title>. <source>Nat Methods</source>. <year>2011</year>;<volume>8</volume>(<issue>6</issue>):<fpage>469</fpage>–<lpage>477</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nmeth.1613" xlink:type="simple">10.1038/nmeth.1613</ext-link></comment> <object-id pub-id-type="pmid">21623353</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref015">
<label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Song</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Florea</surname> <given-names>L</given-names></name>. <article-title>CLASS: constrained transcript assembly of RNA-seq reads</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>;<volume>14</volume> <issue>Suppl 5</issue>:<fpage>S14</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/1471-2105-14-S5-S14" xlink:type="simple">10.1186/1471-2105-14-S5-S14</ext-link></comment> <object-id pub-id-type="pmid">23734605</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref016">
<label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Salzman</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Jiang</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Wong</surname> <given-names>WH</given-names></name>. <article-title>Statistical Modeling of RNA-Seq Data</article-title>. <source>Stat Sci</source>. <year>2011</year>;<volume>26</volume>(<issue>1</issue>). <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1214/10-STS343" xlink:type="simple">10.1214/10-STS343</ext-link></comment> <object-id pub-id-type="pmid">24307754</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref017">
<label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Lamesch</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Berardini</surname> <given-names>TZ</given-names></name>, <name name-style="western"><surname>Li</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Swarbreck</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Wilks</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Sasidharan</surname> <given-names>R</given-names></name>, <etal>et al</etal>. <article-title>The Arabidopsis Information Resource (TAIR): improved gene annotation and new tools</article-title>. <source>Nucleic Acids Res</source>. <year>2012</year>;<volume>40</volume>(<issue>Database issue</issue>):<fpage>D1202</fpage>–<lpage>1210</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkr1090" xlink:type="simple">10.1093/nar/gkr1090</ext-link></comment> <object-id pub-id-type="pmid">22140109</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref018">
<label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Griebel</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Zacher</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Ribeca</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Raineri</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Lacroix</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Guigo</surname> <given-names>R</given-names></name>, <etal>et al</etal>. <article-title>Modelling and simulating generic RNA-Seq experiments with the flux simulator</article-title>. <source>Nucleic Acids Res</source>. <year>2012</year>;<volume>40</volume>(<issue>20</issue>):<fpage>10073</fpage>–<lpage>10083</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gks666" xlink:type="simple">10.1093/nar/gks666</ext-link></comment> <object-id pub-id-type="pmid">22962361</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref019">
<label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Kim</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Pertea</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Trapnell</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Pimentel</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Kelley</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Salzberg</surname> <given-names>SL</given-names></name>. <article-title>TopHat2: accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions</article-title>. <source>Genome Biol</source>. <year>2013</year>;<volume>14</volume>(<issue>4</issue>):<fpage>R36</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/gb-2013-14-4-r36" xlink:type="simple">10.1186/gb-2013-14-4-r36</ext-link></comment> <object-id pub-id-type="pmid">23618408</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref020">
<label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Kim</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Langmead</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Salzberg</surname> <given-names>SL</given-names></name>. <article-title>HISAT: a fast spliced aligner with low memory requirements</article-title>. <source>Nat Methods</source>. <year>2015</year>;<volume>12</volume>(<issue>4</issue>):<fpage>357</fpage>–<lpage>360</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nmeth.3317" xlink:type="simple">10.1038/nmeth.3317</ext-link></comment> <object-id pub-id-type="pmid">25751142</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref021">
<label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Frazee</surname> <given-names>AC</given-names></name>, <name name-style="western"><surname>Jaffe</surname> <given-names>AE</given-names></name>, <name name-style="western"><surname>Langmead</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Leek</surname> <given-names>JT</given-names></name>. <article-title>Polyester: simulating RNA-seq datasets with differential transcript expression</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>31</volume>(<issue>17</issue>):<fpage>2778</fpage>–<lpage>2784</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btv272" xlink:type="simple">10.1093/bioinformatics/btv272</ext-link></comment> <object-id pub-id-type="pmid">25926345</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref022">
<label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Lappalainen</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Sammeth</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Friedlander</surname> <given-names>MR</given-names></name>, <name name-style="western"><surname>’t Hoen</surname> <given-names>PA</given-names></name>, <name name-style="western"><surname>Monlong</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Rivas</surname> <given-names>MA</given-names></name>, <etal>et al</etal>. <article-title>Transcriptome and genome sequencing uncovers functional variation in humans</article-title>. <source>Nature</source>. <year>2013</year>;<volume>501</volume>(<issue>7468</issue>):<fpage>506</fpage>–<lpage>511</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nature12531" xlink:type="simple">10.1038/nature12531</ext-link></comment> <object-id pub-id-type="pmid">24037378</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref023">
<label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Burset</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Guigo</surname> <given-names>R</given-names></name>. <article-title>Evaluation of gene structure prediction programs</article-title>. <source>Genomics</source>. <year>1996</year>;<volume>34</volume>(<issue>3</issue>):<fpage>353</fpage>–<lpage>367</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1006/geno.1996.0298" xlink:type="simple">10.1006/geno.1996.0298</ext-link></comment> <object-id pub-id-type="pmid">8786136</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref024">
<label>24</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Steijger</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Abril</surname> <given-names>JF</given-names></name>, <name name-style="western"><surname>Engstrom</surname> <given-names>PG</given-names></name>, <name name-style="western"><surname>Kokocinski</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Hubbard</surname> <given-names>TJ</given-names></name>, <name name-style="western"><surname>Guigo</surname> <given-names>R</given-names></name>, <etal>et al</etal>. <article-title>Assessment of transcript reconstruction methods for RNA-seq</article-title>. <source>Nat Methods</source>. <year>2013</year>;<volume>10</volume>(<issue>12</issue>):<fpage>1177</fpage>–<lpage>1184</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nmeth.2714" xlink:type="simple">10.1038/nmeth.2714</ext-link></comment> <object-id pub-id-type="pmid">24185837</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref025">
<label>25</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Dobin</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Davis</surname> <given-names>CA</given-names></name>, <name name-style="western"><surname>Schlesinger</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Drenkow</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Zaleski</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Jha</surname> <given-names>S</given-names></name>, <etal>et al</etal>. <article-title>STAR: ultrafast universal RNA-seq aligner</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>1</issue>):<fpage>15</fpage>–<lpage>21</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/bts635" xlink:type="simple">10.1093/bioinformatics/bts635</ext-link></comment> <object-id pub-id-type="pmid">23104886</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref026">
<label>26</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Hansen</surname> <given-names>KD</given-names></name>, <name name-style="western"><surname>Brenner</surname> <given-names>SE</given-names></name>, <name name-style="western"><surname>Dudoit</surname> <given-names>S</given-names></name>. <article-title>Biases in Illumina transcriptome sequencing caused by random hexamer priming</article-title>. <source>Nucleic Acids Res</source>. <year>2010</year>;<volume>38</volume>(<issue>12</issue>):<fpage>e131</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkq224" xlink:type="simple">10.1093/nar/gkq224</ext-link></comment> <object-id pub-id-type="pmid">20395217</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref027">
<label>27</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Roberts</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Trapnell</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Donaghey</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Rinn</surname> <given-names>JL</given-names></name>, <name name-style="western"><surname>Pachter</surname> <given-names>L</given-names></name>. <article-title>Improving RNA-Seq expression estimates by correcting for fragment bias</article-title>. <source>Genome Biol</source>. <year>2011</year>;<volume>12</volume>(<issue>3</issue>):<fpage>R22</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/gb-2011-12-3-r22" xlink:type="simple">10.1186/gb-2011-12-3-r22</ext-link></comment> <object-id pub-id-type="pmid">21410973</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref028">
<label>28</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Benjamini</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Speed</surname> <given-names>TP</given-names></name>. <article-title>Summarizing and correcting the GC content bias in high-throughput sequencing</article-title>. <source>Nucleic Acids Res</source>. <year>2012</year>;<volume>40</volume>(<issue>10</issue>):<fpage>e72</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gks001" xlink:type="simple">10.1093/nar/gks001</ext-link></comment> <object-id pub-id-type="pmid">22323520</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref029">
<label>29</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Lahens</surname> <given-names>NF</given-names></name>, <name name-style="western"><surname>Kavakli</surname> <given-names>IH</given-names></name>, <name name-style="western"><surname>Zhang</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Hayer</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Black</surname> <given-names>MB</given-names></name>, <name name-style="western"><surname>Dueck</surname> <given-names>H</given-names></name>, <etal>et al</etal>. <article-title>IVT-seq reveals extreme bias in RNA sequencing</article-title>. <source>Genome Biol</source>. <year>2014</year>;<volume>15</volume>(<issue>6</issue>):<fpage>R86</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/gb-2014-15-6-r86" xlink:type="simple">10.1186/gb-2014-15-6-r86</ext-link></comment> <object-id pub-id-type="pmid">24981968</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref030">
<label>30</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Ahuja</surname> <given-names>RK</given-names></name>, <name name-style="western"><surname>Magnanti</surname> <given-names>TL</given-names></name>, <name name-style="western"><surname>Orlin</surname> <given-names>JB</given-names></name>. <source>Network flows: theory, algorithms, and applications</source>. <publisher-loc>Upper Saddle River (N. J.)</publisher-loc>: <publisher-name>Prentice Hall</publisher-name>; <year>1993</year>. Available from: <ext-link ext-link-type="uri" xlink:href="http://opac.inria.fr/record=b1117472" xlink:type="simple">http://opac.inria.fr/record=b1117472</ext-link>.</mixed-citation>
</ref>
<ref id="pcbi.1005851.ref031">
<label>31</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Heber</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Alekseyev</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Sze</surname> <given-names>SH</given-names></name>, <name name-style="western"><surname>Tang</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Pevzner</surname> <given-names>PA</given-names></name>. <article-title>Splicing graphs and EST assembly problem</article-title>. <source>Bioinformatics</source>. <year>2002</year>;<volume>18</volume> <issue>Suppl 1</issue>:<fpage>S181</fpage>–<lpage>188</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/18.suppl_1.S181" xlink:type="simple">10.1093/bioinformatics/18.suppl_1.S181</ext-link></comment> <object-id pub-id-type="pmid">12169546</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref032">
<label>32</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Engstrom</surname> <given-names>PG</given-names></name>, <name name-style="western"><surname>Steijger</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Sipos</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Grant</surname> <given-names>GR</given-names></name>, <name name-style="western"><surname>Kahles</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Ratsch</surname> <given-names>G</given-names></name>, <etal>et al</etal>. <article-title>Systematic evaluation of spliced alignment programs for RNA-seq data</article-title>. <source>Nat Methods</source>. <year>2013</year>;<volume>10</volume>(<issue>12</issue>):<fpage>1185</fpage>–<lpage>1191</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nmeth.2722" xlink:type="simple">10.1038/nmeth.2722</ext-link></comment> <object-id pub-id-type="pmid">24185836</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref033">
<label>33</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Rizzi</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Tomescu</surname> <given-names>AI</given-names></name>, <name name-style="western"><surname>Makinen</surname> <given-names>V</given-names></name>. <article-title>On the complexity of Minimum Path Cover with Subpath Constraints for multi-assembly</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year>;<volume>15</volume> <issue>Suppl 9</issue>:<fpage>S5</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/1471-2105-15-S9-S5" xlink:type="simple">10.1186/1471-2105-15-S9-S5</ext-link></comment> <object-id pub-id-type="pmid">25252805</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref034">
<label>34</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Dempster</surname> <given-names>AP</given-names></name>, <name name-style="western"><surname>Laird</surname> <given-names>NM</given-names></name>, <name name-style="western"><surname>Rubin</surname> <given-names>DB</given-names></name>. <article-title>Maximum likelihood from incomplete data via the EM algorithm</article-title>. <source>Journal of The Royal Statistical Society, Series B</source>. <year>1977</year>;<volume>39</volume>(<issue>1</issue>):<fpage>1</fpage>–<lpage>38</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1005851.ref035">
<label>35</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Li</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Ruotti</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Stewart</surname> <given-names>RM</given-names></name>, <name name-style="western"><surname>Thomson</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Dewey</surname> <given-names>CN</given-names></name>. <article-title>RNA-Seq gene expression estimation with read mapping uncertainty</article-title>. <source>Bioinformatics</source>. <year>2010</year>;<volume>26</volume>(<issue>4</issue>):<fpage>493</fpage>–<lpage>500</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btp692" xlink:type="simple">10.1093/bioinformatics/btp692</ext-link></comment> <object-id pub-id-type="pmid">20022975</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref036">
<label>36</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Roberts</surname> <given-names>A</given-names></name>. <source>Ambiguous fragment assignment for high-throughput sequencing experiments</source>. <publisher-name>EECS Department, University of California</publisher-name>, <publisher-loc>Berkeley</publisher-loc>; <year>2013</year>. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.eecs.berkeley.edu/Pubs/TechRpts/2013/EECS-2013-177.html" xlink:type="simple">http://www.eecs.berkeley.edu/Pubs/TechRpts/2013/EECS-2013-177.html</ext-link>.</mixed-citation>
</ref>
<ref id="pcbi.1005851.ref037">
<label>37</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Jiang</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Salzman</surname> <given-names>J</given-names></name>. <article-title>A penalized likelihood approach for robust estimation of isoform expression</article-title>. <source>Statistics and Its Interface</source>. <year>2015</year>; (<issue>4</issue>):<fpage>437</fpage>–<lpage>445</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.4310/SII.2015.v8.n4.a3" xlink:type="simple">10.4310/SII.2015.v8.n4.a3</ext-link></comment> <object-id pub-id-type="pmid">27239250</object-id></mixed-citation>
</ref>
<ref id="pcbi.1005851.ref038">
<label>38</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>McCutcheon</surname> <given-names>AL</given-names></name>. <source>Latent class analysis</source>. <volume>64</volume>. <publisher-name>Sage</publisher-name>; <year>1987</year>.</mixed-citation>
</ref>
<ref id="pcbi.1005851.ref039">
<label>39</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Porkoláb</surname> <given-names>Z</given-names></name>, <name name-style="western"><surname>Pataki</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Dezső</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Jüttner</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Kovács</surname> <given-names>P</given-names></name>. <article-title>Proceedings of the Second Workshop on Generative Technologies (WGT) 2010 LEMON—an Open Source C++ Graph Template Library</article-title>. <source>Electronic Notes in Theoretical Computer Science</source>. <year>2011</year>;<volume>264</volume>(<issue>5</issue>):<fpage>23</fpage>–<lpage>45</lpage>.</mixed-citation>
</ref>
</ref-list>
</back>
</article>