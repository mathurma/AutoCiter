<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
<front>
<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="publisher-id">08-PLCB-RA-0253R3</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1000318</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology/Evolutionary Modeling</subject><subject>Computational Biology/Genomics</subject></subj-group></article-categories><title-group><article-title>Accurate Detection of Recombinant Breakpoints in Whole-Genome Alignments</article-title><alt-title alt-title-type="running-head">Detecting Breakpoints</alt-title></title-group><contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Westesson</surname><given-names>Oscar</given-names></name><xref ref-type="aff" rid="aff1"/></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Holmes</surname><given-names>Ian</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group><aff id="aff1">          <addr-line>Department of Bioengineering, University of California Berkeley, Berkeley, California, United States of America</addr-line>       </aff><contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Regev</surname><given-names>Aviv</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group><aff id="edit1">Broad Institute of MIT and Harvard, United States of America</aff><author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">ihh@berkeley.edu</email></corresp>
<fn fn-type="con"><p>Conceived and designed the experiments: OW IH. Performed the experiments: OW. Analyzed the data: OW. Wrote the paper: OW.</p></fn>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="collection"><month>3</month><year>2009</year></pub-date><pub-date pub-type="epub"><day>20</day><month>3</month><year>2009</year></pub-date><volume>5</volume><issue>3</issue><elocation-id>e1000318</elocation-id><history>
<date date-type="received"><day>10</day><month>4</month><year>2008</year></date>
<date date-type="accepted"><day>4</day><month>2</month><year>2009</year></date>
</history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2009</copyright-year><copyright-holder>Westesson, Holmes</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract>
<p>We propose a novel method for detecting sites of molecular recombination in multiple alignments. Our approach is a compromise between previous extremes of computationally prohibitive but mathematically rigorous methods and imprecise heuristic methods. Using a combined algorithm for estimating tree structure and hidden Markov model parameters, our program detects changes in phylogenetic tree topology over a multiple sequence alignment. We evaluate our method on benchmark datasets from previous studies on two recombinant pathogens, <italic>Neisseria</italic> and HIV-1, as well as simulated data. We show that we are not only able to detect recombinant regions of vastly different sizes but also the location of breakpoints with great accuracy. We show that our method does well inferring recombination breakpoints while at the same time maintaining practicality for larger datasets. In all cases, we confirm the breakpoint predictions of previous studies, and in many cases we offer novel predictions.</p>
</abstract><abstract abstract-type="summary"><title>Author Summary</title>
<p>In viral and bacterial pathogens, recombination has the ability to combine fitness-enhancing mutations. Accurate characterization of recombinant breakpoints in newly sequenced strains can provide information about the role of this process in evolution, for example, in immune evasion. Of particular interest are situations of an admixture of pathogen subspecies, recombination between whose genomes may change the apparent phylogenetic tree topology in different regions of a multiple-genome alignment. We describe an algorithm that can pinpoint recombination breakpoints to greater accuracy than previous methods, allowing detection of both short recombinant regions and long-range multiple crossovers. The algorithm is appropriate for the analysis of fast-evolving pathogen sequences where repeated substitutions may be observed at a single site in a multiple alignment (violating the “infinite sites” assumption inherent to some other breakpoint-detection algorithms). Simulations demonstrate the practicality of our implementation for alignments of longer sequences and more taxa than previous methods.</p>
</abstract><funding-group><funding-statement>This work was funded by National Institutes of Health (NIH)/National Human Genome Research Institute grant GM076705. OW was supported in part by NIH grant 5T32HG00047.</funding-statement></funding-group><counts><page-count count="13"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>Recombination is the process by which a child inherits a mosaic of genes or sequences from multiple parents. Though most species participate in some form of genetic mixing or recombination, the mechanics by which this occurs varies greatly among them. In higher order organisms, crossing over occurs in meiosis along the parent-child relationship, whereas in bacteria, viruses, and protozoans, homologous exchange of DNA material can occur from one individual to another without the need for sexual reproduction <xref ref-type="bibr" rid="pcbi.1000318-Awadalla1">[1]</xref>. The diversity with which recombination occurs motivates the need for different models and methods, each ideally suited to its biological situaion. We have developed a probabilistic approach to recombination detection that we believe to be superior for analyzing situations of admixture of pathogen subspecies with a high mutation/recombination ratio.</p>
<p>The situation we concern ourselves with has been termed <italic>phylogenetic recombination inference</italic> (PRI) by <xref ref-type="bibr" rid="pcbi.1000318-Minin1">[2]</xref>, and works by inferring phylogenetic tree topology changes over a multiple alignment. Though it has been shown that under a neutral coalescent model, the number of recombination events which will lead to a tree topology change is very small, <xref ref-type="bibr" rid="pcbi.1000318-Hein1">[3]</xref> in situations of admixture following geographical separation a greater proportion of topology-changing recombinations are expected. Abandoning the infinite-sites model of sequence evolution and instead using a continuous-time Markov chain makes direct inference intractable, and so we instead employ a phylo-HMM which models an <italic>effect</italic> of recombination, rather than modeling the process explicitly.</p>
<p>While recombination detection is an interesting mathematical challenge, fast, flexible, and reliable computational methods are also motivated by a multitude of biological reasons. We see our method not as being able to answer all of these biological questions on recombination, but rather a potentially valuable tool for furthering recombination research.</p>
<list list-type="bullet"><list-item>
<p><bold>Genome Dynamics</bold> The two most significant factors driving change in genomes in the context of evolutionary adaptation and diversity are point mutation and recombination. The ratio between these two differs greatly among organisms; in most, recombination among subtypes is fairly rare and point mutation occurs comparatively often. Similarly to point mutation, recombination has the possibility to combine independent fitness-enhancing changes among genomes as well as disable genes. As Awadalla remarks, “recombinant genomes are known to be associated with changes in phenotype or fitness, including heightened or reduced pathogenicity or virulence” <xref ref-type="bibr" rid="pcbi.1000318-Awadalla1">[1]</xref>. Our understanding about where, how, and why recombination occurs is comparatively primitive. We know, for example, that pathogens such as <italic>Chlamydia trachomatis</italic> have recombination hotspots <xref ref-type="bibr" rid="pcbi.1000318-Gomes1">[4]</xref>, but the relevant <italic>cis</italic>-acting factors are unknown. The precise determination of breakpoints in recombining pathogens is crucial for higher-level downstream analyses such as that of <xref ref-type="bibr" rid="pcbi.1000318-Gomes1">[4]</xref>, or the methods proposed by <xref ref-type="bibr" rid="pcbi.1000318-Minin1">[2]</xref> and <xref ref-type="bibr" rid="pcbi.1000318-Archer1">[5]</xref> in which genome-scale conclusions about recombination are made from large sets of observed breakpoint locations. We believe our method offers improved precision and flexibility as compared to other programs. Furthermore, in light of the high proportion of HIV isolates which are recombinant, it can be useful that PRI allows one to safely relax the requirement that all but one of the sequences in the alignment are ‘pure’ subtypes.</p>
<p>As well as being an appealing scientific challenge, a better understanding of the dynamics of pathogen genome evolution might help highlight molecular processes to target in designing therapeutics, as well as opening up the possibility for genetic manipulation.</p>
</list-item><list-item>
<p><bold>Phylogenetic Analysis</bold> When performing phylogenetic analysis on a multiple sequence alignment, most methods assume that there is a unique hierarchical relationship among the taxa in question. If recombination has occurred in evolutionary history, this phylogeny reconstruction will be systematically faulty in either its topology, branch lengths or both. Incorrect trees could hinder further comparative genomic inferences made from the data <xref ref-type="bibr" rid="pcbi.1000318-Husmeier1">[6]</xref>. In our training scheme, we estimate separate trees for all regions in the alignment, and if more sophisticated tree-inference methods ought to be used, our precise breakpoint inference allows for training trees on the alignment sections.</p>
</list-item><list-item>
<p><bold>Genetic Mapping</bold> In using genetic mapping information to locate genes associated with various phenotypes, it is vital to know the extent of genome rearrangement present. For a discussion of how this can affect microbial pathogen analysis, see <xref ref-type="bibr" rid="pcbi.1000318-Anderson1">[7]</xref>.</p>
</list-item></list>
<sec id="s1a">
<title>Previous Related Work</title>
<p>We give here an outline of previous methods which are related to our phylo-HMM approach. For a more thorough survey or recombination detection methods, see <xref ref-type="bibr" rid="pcbi.1000318-Awadalla1">[1]</xref>.</p>
<p>The rationale for phylogenetic recombination inference is motivated by the structure of the Ancestral Recombination Graph (ARG), which contains all phylogenetic and recombination histories. The underlying idea is that recombination events in the history of the ARG will, in certain cases, lead to discordant phylogenetic histories for present-day species.</p>
<p>Various approaches to learn the ARG directly from sequence data have been developed, such as <xref ref-type="bibr" rid="pcbi.1000318-Song1">[8]</xref> and <xref ref-type="bibr" rid="pcbi.1000318-Minichiello1">[9]</xref>. We recognize that PRI is in a somewhat different category both in goal and approach as compared these methods, though they are motivated by the same underlying biological phenomenon. Rather than aiming to reconstruct the ARG in its entirety, our emphasis is on modeling fast-evolving organisms with the goal of accurately detecting breakpoints for biological and epidemiological study.</p>
<p>The most widely-used program for phylogenetic recombination detection is SimPlot <xref ref-type="bibr" rid="pcbi.1000318-Lole1">[10]</xref> (on MS Windows). Recombination Identification Program (RIP), a similar program, <xref ref-type="bibr" rid="pcbi.1000318-Siepel1">[11]</xref> runs on UNIX machines as well as from a server on the LANL HIV Database site. This program slides a window along the alignment and plots the similarity of a query sequence to a panel of reference sequences. The window and step size are adjustable to accommodate varying levels of sensitivity. Bootscanning slides a window and performs many replicates of bootstrapped phylogenetic trees in each window, and plots the percentage of trees which show clustering between the query sequence and the given reference sequence. Bootscanning produces similar output to our program, namely a predicted partition of the alignment as well as trees for each region, but the method is entirely different.</p>
<p>In <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref>, Husmeier and Wright use a model that is similar to ours except for the training scheme. Since they have no scalable tree-optimizing heuristic, their input alignment is limited to 4 taxa so as to cover all unrooted tree topologies with only 3 HMM states, making their method intractable for larger datasets. They show they are able to convincingly detect small recombinant regions in <italic>Neisseria</italic> as well as simulated datasets limited to 4 taxa <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref>.</p>
<p>The recombination detection problem can be thought of as two inter-related problems: how to accurately partition the alignment and how to construct trees on each region. This property is due to the dual nature of the ARG: it simultaneously encodes the marginal tree topologies as well as where they occur in the alignment. Notice that if the solution to one sub-problem is known, the other becomes easy. If an alignment is already partitioned, simply run a tree-inference program on the separate regions and this will give the marginal trees of the sample. If the trees are known, simply construct an HMM with one tree in each state and run the forward/backward algorithm to infer breakpoints. Previous methods have used this property by assuming one of these problems to be solved and focusing on the other. For example, in Husmeier and Wright's model, there were very few trees to be tested, and so the main difficulty was partitioning the alignment, which they did with a HMM similar to ours. In SimPlot, windows (which are essentially small partitions) passed along the alignment and trees/similarity plots are constructed. This allows the program to focus on tree-construction (usually done with bootstrapped neighbor-joining) rather than searching for the optimal alignment partition.</p>
<p>By employing a robust probabilistic model with a novel training scheme, we find a middle ground between the heuristic approach of SimPlot <xref ref-type="bibr" rid="pcbi.1000318-Lole1">[10]</xref> and the computational intractability of Husmeier and Wright's method <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref>, where we are essentially able to solve the recombination inference problem a whole, rather than neglecting one sub-part and focusing on the other. We use a HMM to model tree topology changes over the columns of a multiple alignment. This is done much in the same way as Husmeier and Wright, but our use of a more sophisticated tree-optimization (the structural EM heuristic) method allows searching for recombination from a larger pool of sequences. By modifying the usual EM method for estimating HMM parameters in a suitable way, we are able to simultaneously learn the optimal partitioning of the alignment as well as trees in each of these partitions. We are able to detect short recombinant regions better than previous methods for several reasons. First, we do not use any sliding windows which may be too coarse-grained to detect such small regions of differing topology. Second, our method allows each tree after EM convergence to be evaluated at every column, and so small recombinant regions are not limited by their size; they must only ‘match’ the topology to be detected or contribute to the tree training. By embedding trees in hidden states of an HMM, the transition matrix allows us to essentially put a prior on the number of breakpoints, as opposed to considering each column independently. Furthermore, since the counts in the E-Step are computed using all columns of the alignment, distant regions of the alignment with similar topology may contribute their signal to a single tree, whereas in a window-sliding approach each window is analyzed independently.</p>
</sec></sec><sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>Interpretation of the Results</title>
<p>Since it is difficult to experimentally verify predictions of recombination, we test our methods on previously-analyzed data from earlier studies on <italic>Neisseria</italic> and HIV-1 as well as simulated datasets. Individual cases highlighting various facets of our method can be seen in <xref ref-type="supplementary-material" rid="pcbi.1000318.s001">Text S1</xref>, whereas statistics summarizing simulations with respect to several simulation parameters are included in <xref ref-type="fig" rid="pcbi-1000318-g001">Figure 1</xref>.</p>
<fig id="pcbi-1000318-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g001</object-id><label>Figure 1</label><caption>
<title>Accuracy of breakpoint detection varies as a function of simulation and inference parameters.</title>
<p>In each case, we plot both positive predictive value (TP/(TP+FP) = PPV ) and sensitivity (TP/(TP+FN)). A correctly predicted breakpoint is defined as one which occurs less than 10 bp from a true breakpoint. We observe that the overall accuracy remains high except for situations of high diversity, extremely short recombinant region (less than 50 bp), or more than 20 taxa. In several cases, we were resource-limited and only able to provide a few data points for each variable, and this is the reason for the sparseness of the plots. Each data point is the maximum-likelihood outcome of 10 independently run EM trials, each one taking on average 15 minutes for small length/taxa, though this varies as seen in <xref ref-type="fig" rid="pcbi-1000318-g009">Figure 9</xref>.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g001" xlink:type="simple"/></fig>
<p>When comparing real and simulated data, one must keep in mind that real data may have complications such as rate heterogeneity and structural features that are not present in simulations, which are carried out using a simple independent-sites Markov chain model of nucleotide evolution, such as the HKY85 model <xref ref-type="bibr" rid="pcbi.1000318-Hasegawa1">[13]</xref>. While this is currently the only model we use in our program, it is straightforward to extend this to other models.</p>
<p>In analyzing real data, when there were several alignments in the original analysis, we include only those in which we recover new breakpoints, or otherwise demonstrate our method's utility. It is implicitly assumed that in the analyses which we don't include, we came to similar or identical conclusions as the original authors.</p>
<p>In our analysis of simulated data, we aim to quantitatively characterize the strengths and weaknesses of the recHMM method by varying several simulation and analysis parameters. In each simulation case, ARGs (and hence <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e001" xlink:type="simple"/></inline-formula> of trees) were generated with RECODON <xref ref-type="bibr" rid="pcbi.1000318-Arenas1">[14]</xref>, which uses a coalescent-based simulation approach (for exact simulation parameters, see <xref ref-type="supplementary-material" rid="pcbi.1000318.s001">Text S1</xref>). In keeping with the above discussion of PRI vs coalescent modeling, we filter out ARGs whose marginal trees are identical in topology using the <bold>treecomp</bold> program <xref ref-type="bibr" rid="pcbi.1000318-Puigbo1">[15]</xref>. Thus, in all of the simulations, a perfect detector of topology change would find every breakpoint. After tree-simulation, we simulate alignments using Seq-Gen, which generates multiple alignments according to simple independent sites Markov chain models. The reason for this decoupling of tree and sequence simulation is that Seq-Gen allows for easier manipulation of the variables we're testing, namely length of region, divergence since recombination, and overall divergence (by way of branch-scaling.) <xref ref-type="bibr" rid="pcbi.1000318-Rambaut1">[16]</xref>.</p>
<p>After running our program on the simulated data to estimate parameters, recombinant regions are determined by a posterior decoding algorithm which we describe briefly in the <xref ref-type="sec" rid="s4">Methods</xref> section and is fully outlined in <xref ref-type="supplementary-material" rid="pcbi.1000318.s001">Text S1</xref>. (We use posterior decoding as opposed to the Viterbi algorithm since we are primarly concerned with maximizing the expected number of correct column labelings as opposed to maximizing the probability that our state path is exactly correct.) As the notion of a ‘true negative’, a column which was correctly annotated as a non-breakpoint, is not meaningful in this case, we instead examine positive predictive value: <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e002" xlink:type="simple"/></inline-formula>, where a true positive (TP) is defined as a predicted breakpoint which occurs within 10 positions of a true breakpoint. Similarly, a false positive (FP) is a predicted breakpoint which has no true breakpoint within 10 positions. In plotting sensitivity: <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e003" xlink:type="simple"/></inline-formula>, we define a false negative (FN) to be a true breakpoint for which we have no predicted breakpoint within 10 positions.</p>
<p>We vary the following parameters with regard to simulation of data, the results of which are depicted in <xref ref-type="fig" rid="pcbi-1000318-g001">Figure 1</xref>:</p>
<list list-type="bullet"><list-item>
<p><bold>Length of recombinant region</bold> The length of the region which has a discordant phylogenetic signal is inversely proportional to detection power. We simulated alignments with three regions: two regions of length 200 bp on either side of the variable-length region, resulting in two true breakpoints, at positions 200 and 200+length(region).</p>
<p>On alignments with recombinant regions longer than 100 bp, recHMM detects a high percentage of breakpoints with few false positives. Below 100 bp the detection suffered, with the program able to detect approximately 40% of breakpoints. For any recombination-detection program, smaller regions will be harder to detect, and so high accuracy down to 100 bp is promising.</p>
</list-item><list-item>
<p><bold>Taxa</bold> With more taxa, tree estimation becomes more difficult, and so distinguishing regions having different trees becomes more challenging. Further, comparing likelihoods of two large trees becomes unreliable as the scale of the likelihood becomes larger.</p>
<p>In alignments with up to 23 taxa, detection is fairly strong, but begins to taper off around 25 taxa. Still, this is a notable improvement over Husmeier and Wright's model which could only accommodate 4 species. This is practically relevant only for initial screening for recombination; once the donor species are known, the alignment can be pruned of the irrelevant taxa for more accurate breakpoint detection.</p>
</list-item><list-item>
<p><bold>Divergence</bold> We vary the overall evolutionary time since speciation among the taxa by scaling the branch lengths of the tree used to simulate the alignment. The idea is that as divergence grows and the tree becomes indistinguishable from a ‘star-like’ topology, the phylogenetic signal relating species becomes weaker. On the other hand, if divergence were 0, the population would appear clonal (e.g. identity along alignment columns) and recombination would be undetectable.</p>
</list-item><list-item>
<p><bold>Divergence since recombination event</bold> In varying the divergence time since recombination, we wish to quantify the idea that more recent recombination events are easier to detect, since they have closer homology to their donor genomes.</p>
<p>Since directly varying the divergence since the recombination event is difficult, we instead restrict our analysis to a subset of topology-changing ARGs, namely those whose marginal trees differ by a leaf-transfer event (as opposed to a general subtree-transfer). While this may be an unlikely scenario from a pure coalescent perspective, newly emergent recombinant pathogens can be represented as leaf-transfer events. In terms of simulation, this restriction of ARGs allows us to approximate scaling all branches (and sub-branches) since recombination by scaling only terminal branches, allowing us to demonstrate the difference in detection power between ‘ancient’ and ‘recent’ recombination events.</p>
<p>Divergence and divergence since recombination appear to affect detection power in a similar way. Though it is difficult to draw conclusions from so few data points, one can see a sharper dependence in the leaf-scaling case, whereas in scaling all branches, the curve is slightly gentler. This can be intuitively understood considering that the leaf-scaling is varying only the relevant part of the tree, whereas when the whole tree is scaled, the effect on the phylogeny is more evenly dispersed, resulting in a more gradual effect on detection power.</p>
</list-item><list-item>
<p><bold>Number of recombinant regions</bold> <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e004" xlink:type="simple"/></inline-formula> This varies the number of topologically distinct regions in the alignment. In analyzing these alignments, the number of HMM states, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e005" xlink:type="simple"/></inline-formula>, is set to the correct value <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e006" xlink:type="simple"/></inline-formula>.</p>
<p>We observe that the method is relatively stable with respect to number of regions for the values we tested (2–8), provided that the number of regions is correctly specified. When this part of the model is mis-specified, the results are mixed, and we show results from simulation studies varying the model structure for fixed alignments in <xref ref-type="fig" rid="pcbi-1000318-g002">Figure 2</xref>. The <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e007" xlink:type="simple"/></inline-formula> plot in <xref ref-type="fig" rid="pcbi-1000318-g001">Figure 1</xref> does not take into account the possibility that non-bordering regions were wrongly annotated as coming from the same state. The breakpoints of these regions would still be detected, but their tree topology would be incorrect. Thus, we re-emphasize that recHMM is primarily a breakpoint-detection tool, and that if serious inferences are to be made from the trees within each hidden state, then more sophisticated tree construction methods should be used on the separate alignment regions.</p>
</list-item></list>
<fig id="pcbi-1000318-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g002</object-id><label>Figure 2</label><caption>
<title>The detection power increases as more trees are added to the model.</title>
<p>Here we analyze alignments with 5 regions, while setting our predicted number of states to various values. The sensitivity increases steadily while PPV tapers off at a fixed value.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g002" xlink:type="simple"/></fig>
<p>We examined the effect of the following parameters in data analysis:</p>
<list list-type="bullet">
<list-item>
<p><bold>Predicted number of recombinant regions</bold> For certain values of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e008" xlink:type="simple"/></inline-formula> above, we vary <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e009" xlink:type="simple"/></inline-formula> to see how detection power is affected when we have greater or fewer HMM states than distinct regions. We would have liked to vary <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e010" xlink:type="simple"/></inline-formula> extensively for every value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e011" xlink:type="simple"/></inline-formula>, but we as were limited by computing time, we analyzed only <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e012" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e013" xlink:type="simple"/></inline-formula>.</p>
<p>From this study, we concluded that specifying more states increases sensitivity, but at a slight cost of PPV. Intuitively, if a model has too few states, discordant regions may be merged together and modeled by a consensus topology, instead of being correctly modeled as separate recombinant regions with their own tree-states. If excessively many states are used, then presumably more of the genuinely differing regions will be modeled, but also small, spurious regions of convergent mutations or rate heterogeneity could be modeled by one of the extra states, leading to falsely predicted breakpoints. In many cases, the cutoff criterion helps in filtering out small errant regions, and we see only a moderate drop in PPV in <xref ref-type="fig" rid="pcbi-1000318-g002">Figure 2</xref> for 7 and 8 states.</p>
</list-item>
<list-item>
<p><bold>Length of cutoff criterion</bold> The cutoff criterion is the value of the smallest distance between breakpoints we allow in our predicted state path. For a detailed description on how this cutoff criterion informs our posterior decoding algorithm, see the <xref ref-type="sec" rid="s4">Methods</xref> section and <xref ref-type="supplementary-material" rid="pcbi.1000318.s001">Text S1</xref>. Simply stated, we disregard paths with breakpoints occurring within the cutoff of each other when choosing a maximal path.</p>
<p>In <xref ref-type="fig" rid="pcbi-1000318-g001">Figure 1</xref>, we see that sensitivity rises as we allow for shorter region predictions (by specifying a higher cutoff value). PPV shows the opposite trend; with smaller cutoff criteria, we can be increasingly certain that any breakpoints we find are true breakpoints. The cutoff value where the two curves intersect can be thought of as a value which optimally balances sensitivity and PPV, and so in our simulated data analysis we set the cutoff to 30 bp.</p>
</list-item>
</list>
<p>In our analysis of real data, we cover a range of data sizes and types, ranging between 4 and 9 taxa, with length ranging from 700 bp to circa 10,000 bp. We find that in each case, we are able to recover the previous authors' predictions for breakpoints. In many cases, we find compelling evidence for additional, often shorter recombinant regions that the original analysis either missed completely or registered as minor ‘spikes’ in their plot. In each example we highlight the aspects of our method that contribute to its sensitivity, flexibility and utility. In the case where we had no additional predictions to add to a dataset, we omitted that analysis for brevity. For example, we analyzed the data from <xref ref-type="bibr" rid="pcbi.1000318-Gomes1">[4]</xref>, but the low mutation rate enabled their simpler approach to adequately determine breakpoints. In this situation we acknowledge that our method is able, but not necessary, to analyze the data.</p>
</sec><sec id="s2b">
<title><italic>Neisseria</italic> ArgF and penA Genes</title>
<p>We used our program to analyze data from <italic>Neisseria</italic> data that consisted of single gene regions suspected of recombination. In these analyses, recombinant regions were quite short and we demonstrate that our method is capable of handling this situation.</p>
<p>In their 2001 work, Husmeier and Wright use a similar tree-topology HMM to detect recombination. Since each EM iteration involves searching over all possible tree topologies for the optimal trees for each region, they were limited to alignments of 4 taxa, where there are only 3 unrooted phylogenies <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref>. As mentioned earlier, both this and window-based methods assume one part of the recombination inference problem to be solved. In this case, the method allocates one tree per HMM state, and so estimation of the trees is no longer necessary, leaving only the alignment partitioning problem to be solved. Our results on this dataset are shown in <xref ref-type="fig" rid="pcbi-1000318-g003">Figure 3</xref>. The previous predictions are shown in red dashed lines. The horizontal axis refers to the position within the alignment, and the vertical axis is partitioned according to posterior state probability of the HMM. The posterior state probability can intuitively be thought of as the probability that a certain column was generated by a certain phylogenetic tree, taking into account the model structure and all the alignment data. At each position, the posterior probabilities for the three trees must sum to one, and hence the different colors partition the vertical axis. We were able to closely replicate their results (namely the state probabilities depicted in Figure 15 of <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref>).</p>
<fig id="pcbi-1000318-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g003</object-id><label>Figure 3</label><caption>
<title>Analyses of Neisseria <italic>argF</italic> (left) and <italic>penA</italic> (right) data.</title>
<p>The left plot shows the analysis of <italic>Neisseria</italic> argF data with predictions from Husmeier and Wright, who used a similar method, <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref> in red dashed lines. We confirm each of their breakpoints and are able to better characterize uncertain regions. Still, the region from 0–75 remains difficult to characterize. Different colors represent posterior probabilities of different tree-topology states in the HMM, and sharp changes in color indicates likely recombination breakpoints. The right figure shows analysis of <italic>Neisseria</italic> penA data, an alignment of 9 taxa of length circa 1900 bp, demonstrating our ability to analyze many taxa. We confirm with high posterior probabilities the two breakpoints previously found by Bowler et al., shown in red <xref ref-type="bibr" rid="pcbi.1000318-Bowler1">[17]</xref>.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g003" xlink:type="simple"/></fig>
<p>In comparing our results to theirs, we note that our program, which does a probabilistic tree-updating step, rather than providing a hidden state for all possible topologies, recovers all the breakpoints of the previous study. At positions 202, 507, and 538 there are clearly points at which different colors have high posterior probabilites. In regions such as 0–50, it is difficult to make reliable inferences because with so few bases, phylogenetic tree construction is unreliable. As mentioned in the <xref ref-type="sec" rid="s4">Methods</xref> section, we employ a simple length cutoff heuristic whereby all recombinant regions smaller than a certain length are removed. Though this is less sophisticated than, say, explicitly specifying a prior distribution over state paths which takes length into account, it performs reasonably well for the situations we analyzed. In considering putative crossovers, points where a tree with high posterior probability changes abruptly in favor of a different tree should be considered most closely. Also, topology changes that are extremely short could be the result of spurious convergent mutations, in which two phylogenetically distant species undergo mutations to the same base, making it seem as if they had exchanged information. Note also that our method is better able to characterize the regions 537–560 and 750–780. In <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref>, 537–560 is classified as “irregular”, and 750–780 shows only a spike in probability in Figure 13 of <xref ref-type="bibr" rid="pcbi.1000318-Husmeier2">[12]</xref>, and not at all in their Figure 15. We predict the 500–600 region to be composed of two separate topologies, and 750–780 to be a possibly newly characterized recombinant region, having the same topology as the 100–202 region.</p>
<p>In <xref ref-type="bibr" rid="pcbi.1000318-Bowler1">[17]</xref>, Bowler et al. discovered a mosaic structure in the PenA gene of <italic>Neisseria Meningitidis</italic> which conferred resistance to Penicillin. Analyzing a DNA multiple alignment between 9 species, they were able to manually determine estimates for recombination breakpoints. Constructing phylogenetic trees for each of the regions gave them clues as to the donors of the acquired regions, after which these predictions were experimentally verified. In contrast, our method is able to simultaneously partition and estimate the trees of a recombinant alignment. In <xref ref-type="fig" rid="pcbi-1000318-g003">Figure 3</xref> we see that our method predicts nearly the same breakpoints with high posterior probabilities. The alignment analyzed was composed of 9 species, covering the range of virulent and commensal <italic>Neisseria</italic> subtypes, with length 1950 bp. This analysis demonstrates the ability of our phylo-HMM to effectively make use of alignments with relatively many taxa, a notable advantage over Husmeier et al.'s method. For a quantitative look at how detection power varies with taxa number, see <xref ref-type="fig" rid="pcbi-1000318-g001">Figure 1</xref>. By using so many subtypes for comparison, Bowler et al. were able to precisely determine which species were the donors and recipients of the recombinant regions, and subsequently verified these predictions in a laboratory setting. If they had been limited to 4 taxa, the analysis would have had to be repeated many times to cover all the possibilities. Biologically, the results in <xref ref-type="bibr" rid="pcbi.1000318-Bowler1">[17]</xref> motivate a search for recombination <italic>within</italic> genes implicated in resistance, in contrast to the multiple resistance gene transfer that has been previously studied, and this is a possible application of our method.</p>
</sec><sec id="s2c">
<title>HIV-1 Whole-Genome Scans</title>
<p>In order to determine the effectiveness of our method on longer alignments, we analyzed several datasets of entire genomes (10,000 bp) of HIV-1 strains suspected of inter-subtype recombination. Our method is equally able to perform on the genome scale as it is on the single-gene scale. In <italic>Neisseria</italic> argF, one of the predicted recombinant regions was only 30 bp long, whereas in HIV they range from 100 bp to 6 kb. This is a notable advantage over sliding-window methods which have a fixed resolution to be used over the whole scan. We demonstrate here that we are able to determine breakpoints between both large and small recombinant regions, making our method a promising tool for comparative analysis of HIV and similar genomes. In analyzing data from previous studies, we recovered all the breakpoints found by the previous authors. In cases in which we found additional breakpoints, we describe them below, but otherwise we omit the plots for brevity.</p>
</sec><sec id="s2d">
<title>HIV-1 CRF01_AE/B from Malaysia</title>
<p><xref ref-type="fig" rid="pcbi-1000318-g004">Figure 4</xref> depicts our results on a new Malaysian HIV strain previously analyzed by Lau et al. <xref ref-type="bibr" rid="pcbi.1000318-Lau1">[18]</xref>. We recover all six of the breakpoints inferred by the original authors, who used a SimPlot/Bootscanning approach, and also we find two new breakpoints whose significance appears equal to those found previously. In <xref ref-type="fig" rid="pcbi-1000318-g004">Figure 4</xref>, we show for comparison the results from bootscanning, which Lau et al. used for their inference of recombination breakpoints. Lau et al. provided precise breakpoint positions, and these are plotted in our diagram as red dashed lines. Since bootscanning typically removes gaps from multiple alignments before analysis, the breakpoint positions do not align with Lau et al.'s plot very well, and we provide rough mapping between plots. All six of their breakpoint predictions are well-represented in our analysis. Note the ‘spike’ in likelihood at around nt 5800 in Lau et al's plot. This region registered as strongly recombinant in our analysis, depicted as the grey region in region nt 6415–6594. Lau et al.'s characterization of the 1500 to 2000 region ( 2141 to 2856 in ours ) is marked somewhat by uncertainty in the optimal tree topology; their “% trees” line wavers and is never very close to 100%, in contrast to their inference of region 3000 to 5500, where the line remains constant and close to 100%. This uncertainty suggests that there may be additional recombination points within that region, as is more conclusively shown in our diagram. We venture that the region between nt 2141 and 2856 can be further partitioned by two more breakpoints, at nt 2360 and 2553, shown in <xref ref-type="fig" rid="pcbi-1000318-g004">Figure 4</xref>.</p>
<fig id="pcbi-1000318-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g004</object-id><label>Figure 4</label><caption>
<title>The top figure shows our analysis of the strain CRF01_AE/B Malaysian HIV-1 with our recombination phylo-HMM.</title>
<p>We recover 6 previously predicted recombination breakpoints (red), and predict new regions in 6415–6594 and 2360–2553 (green). The grey and black regions correspond to posterior probabilities of the trees shown in the lowest figure. Previous bootscanning analysis of the same data is shown in the middle figure <xref ref-type="bibr" rid="pcbi.1000318-Lau1">[18]</xref>. Since this previous analysis involved removing gaps from the alignment, we provide approximate mappings from our predictions to theirs, as the red dashed lines between the two figures. They provided precise breakpoint locations in <xref ref-type="bibr" rid="pcbi.1000318-Lau1">[18]</xref> based on consensus HXB2 strain, which we plot in our figure as the vertical red lines. Note the spike in their plot that appears in our plot around 6500 as a recombinant region. The trees in the lowest figure were those trained as hidden states in our HMM; the black state clearly shows the query strain clustering with CRF_AE, whereas the gray tree shows a closer relationship with subtype B, in accordance with the previous findings.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g004" xlink:type="simple"/></fig>
<p>When using bootscanning, there is a lower limit to the size of the recombinant region that can be found, which depends closely on the size of the sliding window. The 3283–3617 region, at just over 300 nt, is clearly found, but smaller regions registered only as spikes or showed uncertainty of the region. Our method is probabilistic, and instead of defining sharp partitions of the alignment, we allow the parameter training to gradually decide which regions to use to train different trees. In our analyses, we consistently found that our program is able to find small recombinant regions better than others' methods. In this case, as the posterior probabilities become more certain of the alignment partitioning, each of the grey regions contributes its information in updating the grey tree. If a sliding window was being passed over the alignment, each region would have to ‘fend for itself’ in conveying its phylogenetic signal, and small regions would go undetected. Because we use information from the entire alignment during tree-optimization and sum over all possible tree-column assignments, our approach is computationally more expensive but allows collaboration between small recombinant regions, and, consequently, improved detection.</p>
</sec><sec id="s2e">
<title>HIV-1 A/C Recombinant 95IN21301 from India</title>
<p>We examined data from the original SimPlot paper by Lole et al. In this work, the authors test five newly-sequence HIV-1 strains from India, and find one of them to be recombinant <xref ref-type="bibr" rid="pcbi.1000318-Lole1">[10]</xref>. We examine this strain and confirm all five of their breakpoints and offer one new prediction. SimPlot detects mosaic strains by plotting the similarity of a query strain to other subtype reference strains. The similarity is computed within a sliding window of predefined size, according to various criteria (eg Hamming distance, Jukes-Cantor distance, etc). The result is a visualization of the closest relative of different regions of the query sequence. This is similar in effect to bootscanning distance-based phylogenetic methods (eg Neighbor-joining), and suffers from many of the same pitfalls. For example, in their whole-genome analysis of strain 95IN21301, Lole et al. used a window size of 600 bp, severely limiting the resolution of recombination detection. They conclusively found breakpoints around nt 6400 and 9500 (since gaps were removed, it is difficult to determine exact breakpoint predictions from their plot alone). They then did a second, finer-scale analysis with window size 200 bp on just the <italic>env</italic> and <italic>nef</italic> genes which were suspected to be recombinant. Within each of these single-gene regions they found an additional breakpoint in which the query sequence more closely represented subtype C.</p>
<p>In our analysis, we confirmed all five of these breakpoints by using our method (again, gap-stripping made exact comparison somewhat limited), and our result is shown in <xref ref-type="fig" rid="pcbi-1000318-g005">Figure 5</xref>; breakpoints previously found are in red, and new predictions in green. Since we do not have to specify a window and use instead a probabilistic weighting scheme, we are able to detect large regions (eg the break at position 6402) just as well as shorter regions (eg 6969–7073, 9431–9585). Furthermore, the method uses information from the entire alignment, rather than partitioning it by windows. In this case, it's possible that attempting to train a phylogenetic tree <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e014" xlink:type="simple"/></inline-formula> on the region <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e015" xlink:type="simple"/></inline-formula> between nt 6969 and 7073 wouldn't have yielded conclusive results. If region <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e016" xlink:type="simple"/></inline-formula> has high posterior probability of being generated by the ‘black’ tree that is dominant from positions 1–6402, the following M-Step will incorporate more counts from region <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e017" xlink:type="simple"/></inline-formula>, and so when region <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e018" xlink:type="simple"/></inline-formula> is examined, the inference algorithm recognizes that these columns ‘fit’ perfectly with the black topology, which corresponds to having high emission probabilities from the black HMM state. Also, a short 83 bp region is found supporting grey topology, in which 95IN21301 clusters with subtype A. This region is short, and its posterior probability never reaches 1, but a neighbor-joining tree on this section, 4328–4401 supports this clustering. In this way, our method is able to take into account information from the entire alignment, rather than defining a rigid window which can skip over small recombinant regions.</p>
<fig id="pcbi-1000318-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g005</object-id><label>Figure 5</label><caption>
<title>Analysis of A/C Indian HIV-1 recombinant strain 95IN21301.</title>
<p>In the original paper <xref ref-type="bibr" rid="pcbi.1000318-Lole1">[10]</xref>, gaps were stripped and so mapping predictions to our plot is difficult. Instead, we show our confirmations in red, which correspond closely to the predictions seen in <xref ref-type="fig" rid="pcbi-1000318-g001">Figures 1</xref> and <xref ref-type="fig" rid="pcbi-1000318-g002">2</xref> of <xref ref-type="bibr" rid="pcbi.1000318-Lole1">[10]</xref>. Our new prediction of region 4328–4401 is shown in green. Trees trained as hidden HMM states are shown underneath, with their colored boxes corresponding to the colors in the plot, which in turn denote posterior probabilities of hidden states. Note that in the black tree the query sequence doesn't cluster with C, but the branch length from the (C,F) clade to the query strain is effectively zero, indicating a star-like topology in these areas.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g005" xlink:type="simple"/></fig></sec><sec id="s2f">
<title>Three HIV-1 BF recombinants from Brazil</title>
<p>We considered data from Filho et al. <xref ref-type="bibr" rid="pcbi.1000318-Filho1">[19]</xref>. Their data was composed of 10 newly sequenced strains from Brazil determined to have varying levels and structure of mosaicism, as determined by bootscan analysis. We confirm their predictions (from Figure 2 of <xref ref-type="bibr" rid="pcbi.1000318-Filho1">[19]</xref>) in strains PM12313, BREPM11871, and BREPM16704 and we find several more small recombinant regions. Each of the new recombinant regions we find share breakpoints with other strains we analyzed as well as strain CRF12_BF <xref ref-type="bibr" rid="pcbi.1000318-Thomson1">[20]</xref>, suggesting they could be hotspots for recombination activity.</p>
<p>As seen in <xref ref-type="fig" rid="pcbi-1000318-g006">Figure 6</xref>, strain BREPM12313 showed a clear recombinant region from nt 1322–2571, previously characterized by Filho, et al. Also, a region around 4700–5000 showed some evidence of recombination, having the same topology as 1322–2571. As this region's posterior probability is more ‘spike-shaped,’ rather than having sharp borders between colors, it is difficult to say whether or not it is an ambiguous region or a genuine recombinant. It does share one crossover point with strain BREPM11871, giving it somewhat more credibility. Performing neighbor-joining on nt 4784–4945 (eg positions where posterior probability is higher for grey) showed BREPM12313 clustering with subtype F. At the end of the genome, another possible recombinant region is seen, at around 9700. This region includes only gaps for the query sequence, and thus the inference is not reliable. Our method treats gaps as missing information, and when they are present in small numbers reliability is not affected, but in places like this where only gaps are present it can hinder the tree-inference.</p>
<fig id="pcbi-1000318-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g006</object-id><label>Figure 6</label><caption>
<title>Brazilian strain BREPM12313.</title>
<p>We confirm Filho et al.'s breakpoints near 1322 and 2571 (red), and predict new recombinant regions in nt 4784–4945 as well as 970–1049 (green). The second of these is short, but present in some form in all three strains analyzed here. The spike at 3851–3909 is even shorter and is not represented in the other two species, leading us to not predict it as a likely recombinant region. Trees trained in hidden states are shown below the plot.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g006" xlink:type="simple"/></fig>
<p>Strain BREPM16704 was previously predicted to have four breakpoints, which we recovered with remarkably high posterior probabilities for the tree-states. <xref ref-type="fig" rid="pcbi-1000318-g007">Figure 7</xref> shows our results with previous predictions in red. A new region, at 9281–9405, shows high posterior probability and is common to BREPM11871 and CRF12BF <xref ref-type="bibr" rid="pcbi.1000318-Thomson1">[20]</xref>, making a strong case for a recombination hotspot.</p>
<fig id="pcbi-1000318-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g007</object-id><label>Figure 7</label><caption>
<title>Brazilian strain BREPM16704.</title>
<p>We confirm breakpoints near 1322, 2571, and 5462 (red) and predict recombinations in 9281–9405 and 1017–1085 (green). Trees trained in hidden states are shown below the plot.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g007" xlink:type="simple"/></fig>
<p>In strain BREPM11871, all four breakpoints predicted by Filho et al. were found, as well as a new crossover region, common to BREPM 16704, at 9238–9361 (shown in green in <xref ref-type="fig" rid="pcbi-1000318-g008">Figure 8</xref>). The break previously described at nt 5462 bp was predicted by our method to be at 5277. To determine the more likely crossover point, we performed 1000 bootstrapping trials on each of the following regions: 4782–5277 (our prediction), 4782–5462 (Filho et al.'s prediction), and 5277–5462 (the disputed region). We found that the 5277–5462 region strongly supported BREPM11871 clustering with subtype B, with 98.2% bootstrap support. Moreover, bootstrap support for query-F clustering appears higher for our predicted region (99.9%) than the previous prediction (85.1%). We conclude that our algorithm often outperforms previous methods in accurately determining recombination breakpoints.</p>
<fig id="pcbi-1000318-g008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g008</object-id><label>Figure 8</label><caption>
<title>Brazilian strain BREPM11871.</title>
<p>Confirmation of breakpoints 1322 and 2571, and 4782 (red dashed lines). We predict a region common to BREPM16704 at 9238–9361 (green). Also, the breakpoint previously estimated at 5462 (red) we propose to be at 5277 (green dashed line). In support of this, we provide bootstrapping values (1000 replicates) for the 3 different regions, indicated by horizontal colored lines above the plot. Our prediction (orange) carries the highest value, 99.9%, whereas the previous (blue) is only 85.1%, since it includes a region (purple) that strongly supports BREPM11871 clustering with subtype B, with value 98.2%. The small region at 985–1080 is difficult to confidently categorize, but its high posterior probability for clustering with F and its agreement with the other two strains lead us to suspect a recombination. Trees trained in hidden states are shown below the plot.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g008" xlink:type="simple"/></fig></sec></sec><sec id="s3">
<title>Discussion</title>
<p>Recombination is an important force driving genome evolution, and in several cases it is the primary force for diversity. As such, methods which can detect and characterize recombination events are crucial to the successful utilization of new sequence data. On the single-gene level, recombination has been shown, in at least one case, to be able to confer antibiotic resistance <xref ref-type="bibr" rid="pcbi.1000318-Bowler1">[17]</xref>. It could be possible that inter-subtype recombination conferring drug resistance is a common phenomenon, which could be investigated using our methods. On the multiple-gene scale, <italic>Chlamydia trachomatis</italic> has been shown to undergo frequent inter-subtype recombination resulting in mosaic genomes <xref ref-type="bibr" rid="pcbi.1000318-Gomes1">[4]</xref> which complicate subtype definition and classification. On the genome scale, HIV-1 has long been known to participate in recombination leading to several identified circulating recombinant forms (CRFs). For these clinically relevant pathogens, accurate detection of recombination following introgression is important not only to guide disease treatment methods, but also for tracing the epidemiological history of the virus. In this work we present a novel method for recombination detection which we believe to be more sensitive, flexible, and robust in the aforementioned evolutionary scenario. We combine two long-standing concepts, phylogenetics and hidden Markov models, in a maximum-likelihood framework to model topology changes over an alignment of related sequences.</p>
<p>We present a training scheme which attempts to solve the two problems embedded within recombination detection simultaneously. We model evolution probabilistically with a continuous-time Markov chain which directs the likelihood-based tree construction algorithm <xref ref-type="bibr" rid="pcbi.1000318-Friedman1">[21]</xref>. Furthermore, our alignment-partitioning is handled with posterior probabilities which take into account each hidden state tree. By summing over all possible tree-column assignments and not using sharp window cutoffs, we are able to perform more precise breakpoint determination. We can adjust the specificity and sensitivity of the model with the transition matrix of the HMM, which dictates how much of a likelihood change should cause the model inference to change states. We believe this <italic>likelihood</italic> comparison to be superior to adjusting the size of the window because it enables distant sections of the alignment to combine their phylogenetic signal in training a hidden state of the HMM.</p>
</sec><sec id="s4">
<title>Methods</title>
<p>The goal of this study is to start with a multiple alignment of sequence data and find positions where recombination events have occurred. This is done by recovering a set of phylogenetic trees and a map that assigns a tree to each column. The points at which neighboring columns have different tree assignments will indicate possible locations of recombination events in evolutionary history.</p>
<sec id="s4a">
<title>EM for Recombination-HMM</title>
<p>We use a hidden Markov model with tree topologies as hidden states and alignment columns as observed states. The usual method to train HMM parameters is by the specialization of the EM algorithm known as the Baum-Welch algorithm. Our transitions can be optimized in the usual way, but the emissions are more difficult since their likelihood is governed by the tree topologies in the hidden states, which are not easily optimized. For this problem, we employ an EM method for trees, developed by Friedman et al. <xref ref-type="bibr" rid="pcbi.1000318-Friedman1">[21]</xref>, within our M-step for emission probabilities. Their phylogenetic inference algorithm is implemented with such improvements as simulated annealing and noise injection in SEMPHY, available from their website at <ext-link ext-link-type="uri" xlink:href="http://compbio.cs.huji.ac.il/semphy/" xlink:type="simple">http://compbio.cs.huji.ac.il/semphy/</ext-link>. We instead implemented our own ‘bare-bones’ version of this algorithm, without these improvements. To progressively assign columns to trees, at each M-step, we weight the expected counts of the tree-EM by the posterior counts of the phylo-HMM. Intuitively, this guides the tree-maximization by providing comparatively more information from regions which fit a particular tree. We give a high-level description of our method here and more detail is provided in <xref ref-type="supplementary-material" rid="pcbi.1000318.s001">Text S1</xref>. <xref ref-type="fig" rid="pcbi-1000318-g010">Figure 10</xref> gives a graphical representation of the overall task-flow. After running our program on the alignment data to estimate parameters, a state path through the HMM is computed from the final matrix of posterior probabilities. We would like this path to represent a balance between being biologically reasonable and highly probable under our model. Thus, we propose maximizing the sum of posterior state probabilities subject to a length cutoff by the following method.</p>
<p>Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e019" xlink:type="simple"/></inline-formula> be a path of length <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e020" xlink:type="simple"/></inline-formula> through the state space of the HMM (discounting start and end states), emitting the first <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e021" xlink:type="simple"/></inline-formula> columns of the alignment, with one state per column. Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e022" xlink:type="simple"/></inline-formula> be the total number of columns in the alignment. We say that the state path is <italic>partial</italic> if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e023" xlink:type="simple"/></inline-formula>, and <italic>complete</italic> if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e024" xlink:type="simple"/></inline-formula>.</p>
<p>Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e025" xlink:type="simple"/></inline-formula> denote the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e026" xlink:type="simple"/></inline-formula> state in path <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e027" xlink:type="simple"/></inline-formula>. The <italic>score</italic> of path <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e028" xlink:type="simple"/></inline-formula> is defined as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e029" xlink:type="simple"/></inline-formula> where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e030" xlink:type="simple"/></inline-formula> is the posterior probability that column <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e031" xlink:type="simple"/></inline-formula> was emitted by state <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e032" xlink:type="simple"/></inline-formula>.</p>
<p>We say a state path <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e033" xlink:type="simple"/></inline-formula> is <italic>valid</italic> if all its breakpoints are more than <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e034" xlink:type="simple"/></inline-formula> apart. That is, there exist no <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e035" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e036" xlink:type="simple"/></inline-formula> such that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e037" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e038" xlink:type="simple"/></inline-formula>.</p>
<p>Finding the maximal valid <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e039" xlink:type="simple"/></inline-formula> is solved by a simple dynamic programming procedure, outlined in <xref ref-type="supplementary-material" rid="pcbi.1000318.s001">Text S1</xref>.</p>
<p>Since the EM algorithm has a tendency to converge to local likelihood maxima which are not global maxima, especially when initialized randomly, we ran the algorithm several times for each dataset, took the highest-likelihood result for the set of trials, and performed the above posterior decoding on the final distribution. We show plots of our program's performance when various aspects of the model and input alignment are varied in <xref ref-type="fig" rid="pcbi-1000318-g009">Figure 9</xref>.</p>
<fig id="pcbi-1000318-g009" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g009</object-id><label>Figure 9</label><caption>
<title>Resource use of the algorithm increases with model complexity.</title>
<p>The algorithm converges in a reasonable number of EM steps, as seen in the lower right plot. We observed no dependence of iterations to convergence and the model complexity, and so the lower right histogram represents data concatenated from all simulation trials. The final bar in the histogram represents the proportion of trials which took 14 or more iterations to converge.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g009" xlink:type="simple"/></fig><fig id="pcbi-1000318-g010" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000318.g010</object-id><label>Figure 10</label><caption>
<title>Phylo-HMM training algorithm.</title>
<p>Input Alignment ⇒ Model Selection/Parameter Estimation ⇒ Recombination Inference.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.g010" xlink:type="simple"/></fig></sec><sec id="s4b">
<title>Algorithm: Recombination Phylo-HMM Training</title>
<list list-type="simple"><list-item>
<p>Input: An alignment <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e040" xlink:type="simple"/></inline-formula>, an integer <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e041" xlink:type="simple"/></inline-formula> specifying number of trees, a guess at the true tree topologies and transition matrix. In practice, we initialized the transition matrix to have values of .999 on the diagonal, and split the remaining .001 among the remaining columns. Transition probabilities are trained in the normal Baum-Welch manner. We noted that inference was relatively robust to the initial value of this parameter.</p>
</list-item><list-item>
<p>Output: A proposed MLE of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e042" xlink:type="simple"/></inline-formula> phylogenetic trees and the transition matrix. This determines a posterior state distribution, from which we deduce breakpoints.</p>
</list-item><list-item>
<p>E-Step <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e043" xlink:type="simple"/></inline-formula>: Calculate the Forward, Backward, and posterior probability arrays in the usual manner for HMMs, as in <xref ref-type="bibr" rid="pcbi.1000318-Durbin1">[22]</xref>. The emission probabilities for each tree-state are computed by Felsensteins Pruning algorithm <xref ref-type="bibr" rid="pcbi.1000318-Felsenstein1">[23]</xref>. Use the Forward and Backward arrays to compute the expected transitions between hidden states.</p>
</list-item><list-item>
<p>M-Step <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e044" xlink:type="simple"/></inline-formula>:</p>
</list-item><list-item>
<list list-type="order"><list-item>
<p>Maximize the transition probabilities to obtain a new estimate of the transition matrix.</p>
</list-item><list-item>
<p>Find a new set of trees, using model selection with Structural EM:</p>
</list-item></list>
</list-item><list-item>
<p>E-Step <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e045" xlink:type="simple"/></inline-formula>: For all <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e046" xlink:type="simple"/></inline-formula> trees, compute expected counts of hidden data <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e047" xlink:type="simple"/></inline-formula> (see below). Scale counts for tree <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e048" xlink:type="simple"/></inline-formula> from column <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e049" xlink:type="simple"/></inline-formula> by the posterior probability that column <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e050" xlink:type="simple"/></inline-formula> was emitted from state/tree <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e051" xlink:type="simple"/></inline-formula>.</p>
</list-item><list-item>
<p>M-Step <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e052" xlink:type="simple"/></inline-formula>: Increase the likelihood of each tree topology with Structural EM (see below) <xref ref-type="bibr" rid="pcbi.1000318-Friedman1">[21]</xref>.</p>
</list-item></list>
<p>The hidden data for each tree are defined as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e053" xlink:type="simple"/></inline-formula>, the number of transitions from nucleotide <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e054" xlink:type="simple"/></inline-formula> to nucleotide <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e055" xlink:type="simple"/></inline-formula> from node <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e056" xlink:type="simple"/></inline-formula> to node <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e057" xlink:type="simple"/></inline-formula>, for all pairs of nodes. For neighboring nodes, this can be computed by Elston and Stewart's Peeling algorithm <xref ref-type="bibr" rid="pcbi.1000318-Elston1">[24]</xref>, and for non-neighboring nodes, exact computation requires a dynamic programming routine described in the original Structural EM paper <xref ref-type="bibr" rid="pcbi.1000318-Friedman1">[21]</xref>. In this work, the authors showed that the likelihood contribution of an edge between two nodes can be summarized as a function of this count <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e058" xlink:type="simple"/></inline-formula>.</p>
<p>If we arrange these summaries in a weight matrix <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e059" xlink:type="simple"/></inline-formula> in which <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e060" xlink:type="simple"/></inline-formula> represents the expected likelihood contribution resulting from placing an edge from node <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e061" xlink:type="simple"/></inline-formula> to node <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e062" xlink:type="simple"/></inline-formula>, it is easy to see that the maximum expected likelihood tree will be the topology which maximizes the sum of its edge scores. Finding such a topology is trivial if we do not require that the tree is binary, for instance by maximum spanning tree algorithms. This (possibly non-binary) tree is then transformed to a binary tree by operations which do not alter the tree's likelihood. In this way, Structural EM allows for iteratively constructing higher likelihood trees by choosing the next tree which maximizes the expected likelihood based on the current tree. The reader is referred to <xref ref-type="supplementary-material" rid="pcbi.1000318.s001">Text S1</xref> and the original Structural EM paper <xref ref-type="bibr" rid="pcbi.1000318-Friedman1">[21]</xref> for more detailed discussions of this algorithm which is crucial to our method.</p>
<p>In our methods, instead of allowing Structural EM to converge, we allow two iterations using the same set of transition and posterior probabilities, as a heuristic substitute for finding the true hidden tree topologies.</p>
</sec><sec id="s4c">
<title>Possible Extensions</title>
<p>We outline here a number of extensions which could grow directly from this work. One of the strengths of the method is its generality and flexibility, and so we believe it is ideally suited for continued development.</p>
<list list-type="bullet"><list-item>
<p><bold>Sequence Evolution Model</bold> Currently we model gaps as missing information (e.g., summing over possible values). This is not realistic and may hinder phylogenetic reconstruction, and consequently recombination inference. The simplest possible next step is to treat a gap as a ‘5th nucleotide.’ While this assumes independence among inserted and deleted residues, it has been shown to aid phylogenetic reconstructions more than treating gaps as missing characters <xref ref-type="bibr" rid="pcbi.1000318-McGuire1">[25]</xref>. Our code uses the HKY85 substitution model, whose matrix exponential is solved in closed form. A more general rate matrix diagonalization and exponentiation is currently only implemented in the Python prototype of our core dynamic program, which we find to be too slow (the experiments reported in this paper used a core dynamic programming algorithm implemented in C, for speed). This is, however, purely a technical issue, and modeling gaps is entirely feasible. Similar elaborations of the substitution model, such as codon evolution (if the region of interest was protein-coding) or an extra hidden state determining coding and non-coding regions, might provide more accurate modeling of large genome-scale alignments.</p>
</list-item><list-item>
<p><bold>ARG-like trees and</bold> <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e063" xlink:type="simple"/></inline-formula> The method currently does not restrict the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e064" xlink:type="simple"/></inline-formula> of trees produced at each iteration. As <xref ref-type="bibr" rid="pcbi.1000318-Hudson1">[26]</xref> point out, not all groups of trees can fit together to produce an ARG. Restricting the tree groups would give a more conclusive answer to the epidemiological recombination question, and may even be helpful in informing the tree selection heuristic. One can imagine a simple extension to our method which attempts to learn <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e065" xlink:type="simple"/></inline-formula> as well as producing consistent trees:</p>
</list-item></list>
<p>At each training iteration:</p>
<p>- If the trees maximized in each hidden state are not consistent:</p>
<list list-type="simple"><list-item>
<p>* First, find a set of trees in the usual manner, without regard to whether they are consistent. Then, find the best-scoring set of trees which are consistent. This is computationally intensive but not intractable, since we can enumerate ordered spanning trees for each of our hidden states from our E-Step. Once this set has been found, if the likelihood difference between the inconsistent and consistent set is deemed acceptable, accept the trees and begin a new training iteration.</p>
</list-item><list-item>
<p>* Otherwise, if this likelihood penalty is deemed to large, we recognize that the current <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e066" xlink:type="simple"/></inline-formula> is inadquate to describe the data, and so we add a new hidden state to the model, and continue training.</p>
</list-item></list>
<p>A simpler way of estimating <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000318.e067" xlink:type="simple"/></inline-formula> would be to run a coarser heuristic method (e.g., SimPlot) and seed the HMM with the number of states that it finds.</p>
</sec><sec id="s4d">
<title>Sequence Data</title>
<p>All sequence data used in this study was downloaded from public databases (GenBank and LANL HIV Database). The sequences were aligned with MUSCLE <xref ref-type="bibr" rid="pcbi.1000318-Edgar1">[27]</xref> with the default parameters. Gaps in the alignments were treated as missing information. Bootstrap analyses were performed with CLUSTAL W <xref ref-type="bibr" rid="pcbi.1000318-Thompson1">[28]</xref> with 1000 replicates and the default parameters. The GenBank identifiers for sequences used are as follows, grouped by figure: <xref ref-type="fig" rid="pcbi-1000318-g003">Figure 3</xref>: argF: X64860, X64866, X64869, X64873; penA: X59624–X59635; <xref ref-type="fig" rid="pcbi-1000318-g005">Figure 5</xref>: AF067158, AB253429, AF067159, M17451, AF005494; <xref ref-type="fig" rid="pcbi-1000318-g004">Figure 4</xref>: AB032740, AB023804, AY713408, EF495062; <xref ref-type="fig" rid="pcbi-1000318-g006">Figures 6</xref>–<xref ref-type="fig" rid="pcbi-1000318-g007"/><xref ref-type="fig" rid="pcbi-1000318-g008">8</xref>: AF286228, AF005494, AY173956, AB098332, AY173956, DQ085867, DQ085876, DQ085872.</p>
<p>The source code for our programs, though still being developed, is available upon request or through CVS. For documentation, contact, and download information See <ext-link ext-link-type="uri" xlink:href="http://biowiki.org/RecHMM" xlink:type="simple">http://biowiki.org/RecHMM</ext-link></p>
</sec></sec><sec id="s5">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1000318.s001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000318.s001" xlink:type="simple"><label>Text S1</label><caption>
<p>Results on simulated data; detailed descriptions of training and decoding algorithms</p>
<p>(8.74 MB PDF)</p>
</caption></supplementary-material></sec></body>
<back><ref-list>
<title>References</title>
<ref id="pcbi.1000318-Awadalla1"><label>1</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Awadalla</surname><given-names>P</given-names></name>
</person-group>             <year>2003</year>             <article-title>The evolutionary genomics of pathogen recombination.</article-title>             <source>Nat Rev Genet</source>             <volume>4</volume>             <fpage>50</fpage>             <lpage>60</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Minin1"><label>2</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Minin</surname><given-names>VN</given-names></name>
<name name-style="western"><surname>Dorman</surname><given-names>KS</given-names></name>
<name name-style="western"><surname>Fang</surname><given-names>F</given-names></name>
<name name-style="western"><surname>Suchard</surname><given-names>MA</given-names></name>
</person-group>             <year>2007</year>             <article-title>Phylogenetic mapping of recombination hotspots in human immunodeficiency virus via spatially smoothed change-point processes.</article-title>             <source>Genetics</source>             <volume>175</volume>             <fpage>1773</fpage>             <lpage>1785</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Hein1"><label>3</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hein</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Shierup</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Wiuf</surname><given-names>C</given-names></name>
</person-group>             <year>2005</year>             <source>Gene Genealogies, Variation and Evolution</source>             <publisher-loc>New York</publisher-loc>             <publisher-name>Oxford University Press</publisher-name>          </element-citation></ref>
<ref id="pcbi.1000318-Gomes1"><label>4</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Gomes</surname><given-names>JP</given-names></name>
<name name-style="western"><surname>Bruno</surname><given-names>W</given-names></name>
<name name-style="western"><surname>Nunes</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Santos</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Florindo</surname><given-names>C</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>Evolution of Chlamydia trachomatis diversity occurs by widespread interstrain recombination involving hotspots.</article-title>             <source>Genome Res</source>             <volume>17</volume>             <fpage>50</fpage>             <lpage>60</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Archer1"><label>5</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Archer</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Pinney</surname><given-names>JW</given-names></name>
<name name-style="western"><surname>Fan</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Simon-Loriere</surname><given-names>E</given-names></name>
<name name-style="western"><surname>Arts</surname><given-names>EJ</given-names></name>
<etal/></person-group>             <year>2008</year>             <article-title>Identifying the important HIV-1 recombination breakpoints.</article-title>             <source>PLoS Comput Biol</source>             <volume>4</volume>             <fpage>e1000178</fpage>             <comment>doi:10.1371/journal.pcbi.1000178</comment>          </element-citation></ref>
<ref id="pcbi.1000318-Husmeier1"><label>6</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Husmeier</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Kedzierska</surname><given-names>A</given-names></name>
</person-group>             <year>2006</year>             <article-title>A heuristic Bayesian method for segmenting DNA sequence alignments and detecting evidence for recombination and gene conversion.</article-title>             <source>Stat Appl Genet Mol Biol</source>             <volume>5</volume>             <fpage>Article 27</fpage>          </element-citation></ref>
<ref id="pcbi.1000318-Anderson1"><label>7</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Anderson</surname><given-names>TJ</given-names></name>
<name name-style="western"><surname>Haubold</surname><given-names>B</given-names></name>
<name name-style="western"><surname>Williams</surname><given-names>JT</given-names></name>
<name name-style="western"><surname>Estrada-Franco</surname><given-names>JG</given-names></name>
<name name-style="western"><surname>Richardson</surname><given-names>L</given-names></name>
<etal/></person-group>             <year>2000</year>             <article-title>Microsatellite markers reveal a spectrum of population structures in the malaria parasite Plasmodium falciparum.</article-title>             <source>Mol Biol Evol</source>             <volume>17</volume>             <fpage>1467</fpage>             <lpage>1482</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Song1"><label>8</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Song</surname><given-names>YS</given-names></name>
<name name-style="western"><surname>Hein</surname><given-names>J</given-names></name>
</person-group>             <year>2005</year>             <article-title>Constructing minimal ancestral recombination graphs.</article-title>             <source>J Compu Biol</source>             <volume>12</volume>             <fpage>147</fpage>             <lpage>169</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Minichiello1"><label>9</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Minichiello</surname><given-names>MJ</given-names></name>
<name name-style="western"><surname>Durbin</surname><given-names>R</given-names></name>
</person-group>             <year>2006</year>             <article-title>Mapping trait loci by use of inferred ancestral recombination graphs.</article-title>             <source>Am J Hum Genet</source>             <volume>79</volume>             <fpage>910</fpage>             <lpage>922</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Lole1"><label>10</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Lole</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Bollinger</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Paranjape</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Gadkari</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Kulkarni</surname><given-names>S</given-names></name>
<etal/></person-group>             <year>2001</year>             <article-title>Full-length human immunodeficiency virus type 1 genomes from subtype C-infected seroconverters in India, with evidence of intersubtype recombination.</article-title>             <source>J Virol</source>             <volume>73</volume>             <fpage>152</fpage>             <lpage>160</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Siepel1"><label>11</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Siepel</surname><given-names>AC</given-names></name>
<name name-style="western"><surname>Korber</surname><given-names>BT</given-names></name>
</person-group>             <year>1995</year>             <article-title>Scanning the database for recombinant HIV-1 genomes.</article-title>             <person-group person-group-type="editor">
<name name-style="western"><surname>Myers</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Korber</surname><given-names>BT</given-names></name>
<name name-style="western"><surname>Hahn</surname><given-names>BH</given-names></name>
<name name-style="western"><surname>Jeang</surname><given-names>KT</given-names></name>
<name name-style="western"><surname>Mellors</surname><given-names>JW</given-names></name>
<name name-style="western"><surname>McCutchan</surname><given-names>FE</given-names></name>
<name name-style="western"><surname>Henderson</surname><given-names>LE</given-names></name>
<name name-style="western"><surname>Pavlakis</surname><given-names>GN</given-names></name>
</person-group>             <source>Human Retroviruses and AIDS 1995: A Compilation and Analysis of Nucleic Acid and Amino Acid Sequences.</source>             <publisher-loc>Los Alamos, , New Mexico</publisher-loc>             <publisher-name>Los Alamos National Laboratory</publisher-name>          </element-citation></ref>
<ref id="pcbi.1000318-Husmeier2"><label>12</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Husmeier</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Wright</surname><given-names>F</given-names></name>
</person-group>             <year>2001</year>             <article-title>Detection of recombination in DNA multiple alignments with hidden Markov models.</article-title>             <source>J Comput Biol</source>             <volume>8</volume>             <fpage>401</fpage>             <lpage>427</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Hasegawa1"><label>13</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hasegawa</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Kishino</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Yano</surname><given-names>T</given-names></name>
</person-group>             <year>1985</year>             <article-title>Dating of the human-ape splitting by a molecular clock of mitochondrial DNA.</article-title>             <source>J Mol Evol</source>             <volume>22</volume>             <fpage>160</fpage>             <lpage>174</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Arenas1"><label>14</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Arenas</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Posada</surname><given-names>D</given-names></name>
</person-group>             <year>2007</year>             <article-title>Recodon: coalescent simulation of coding DNA sequences with recombination, migration and demography.</article-title>             <source>BMC Bioinformatics</source>             <volume>8</volume>             <fpage>458</fpage>          </element-citation></ref>
<ref id="pcbi.1000318-Puigbo1"><label>15</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Puigbo</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Garcia-Vallve</surname><given-names>S</given-names></name>
</person-group>             <year>2007</year>             <article-title>TOPD/FMTS: a new software to compare phylogenetic trees.</article-title>             <source>Bioinformatics</source>             <volume>23</volume>             <fpage>1556</fpage>             <lpage>1558</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Rambaut1"><label>16</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Rambaut</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Grassly</surname><given-names>NC</given-names></name>
</person-group>             <year>1997</year>             <article-title>Seq-Gen: an application for the Monte-Carlo simulation of DNA sequence evolution along phylogenetic trees.</article-title>             <source>Comput Appl Biosci</source>             <volume>13</volume>             <fpage>235</fpage>             <lpage>238</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Bowler1"><label>17</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bowler</surname><given-names>LD</given-names></name>
<name name-style="western"><surname>Zhang</surname><given-names>QY</given-names></name>
<name name-style="western"><surname>Riou</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Spratt</surname><given-names>B</given-names></name>
</person-group>             <year>1994</year>             <article-title>Interspecies recombination between the <italic>penA</italic> genes of <italic>Neisseria meningitidis</italic> and commensal <italic>Neisseria</italic> species during the emergence of penicillin resistance in <italic>N. meningitidis</italic>: natural events and laboratory simulation.</article-title>             <source>J Bacteriol</source>             <volume>176</volume>             <fpage>333</fpage>             <lpage>337</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Lau1"><label>18</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Lau</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Wang</surname><given-names>B</given-names></name>
<name name-style="western"><surname>Kamarulzaman</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Ng</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Saksena</surname><given-names>N</given-names></name>
</person-group>             <year>2007</year>             <article-title>Near full-length sequence analysis of a unique CRF01_AE/B recombinant from Kuala Lumpur, Malaysia.</article-title>             <source>AIDS Res Hum Retroviruses</source>             <volume>23</volume>             <fpage>1139</fpage>             <lpage>1145</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Filho1"><label>19</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Filho</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Sucupira</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Caseiro</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Sabino</surname><given-names>E</given-names></name>
<name name-style="western"><surname>Diaz</surname><given-names>R</given-names></name>
<etal/></person-group>             <year>2006</year>             <article-title>Identification of two HIV type 1 circulating recombinant forms in Brazil.</article-title>             <source>AIDS Res Hum Retroviruses</source>             <volume>22(1)</volume>             <fpage>1</fpage>             <lpage>13</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Thomson1"><label>20</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Thomson</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Delgado</surname><given-names>E</given-names></name>
<name name-style="western"><surname>Herrero</surname><given-names>I</given-names></name>
<name name-style="western"><surname>Villahermosa</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Parga</surname><given-names>E</given-names></name>
<etal/></person-group>             <year>2002</year>             <article-title>Diversity of mosaic structures and common ancestry of human immunodeficiency virus type 1 BF intersubtype recombinant viruses from Argentina revealed by analysis of near full-length genome sequences.</article-title>             <source>J Gen Virol</source>             <volume>83</volume>             <fpage>107</fpage>             <lpage>119</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Friedman1"><label>21</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Friedman</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Ninio</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Pe'er</surname><given-names>I</given-names></name>
<name name-style="western"><surname>Pupko</surname><given-names>T</given-names></name>
</person-group>             <year>2001</year>             <article-title>A structural EM algorithm for phylogenetic inference.</article-title>             <source>J Comput Biol</source>             <volume>9</volume>             <fpage>331</fpage>             <lpage>353</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Durbin1"><label>22</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Durbin</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Eddy</surname><given-names>SR</given-names></name>
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Mitchison</surname><given-names>G</given-names></name>
</person-group>             <year>1998</year>             <source>Biological Sequence Analysis</source>             <publisher-loc>Cambridge, UK</publisher-loc>             <publisher-name>Cambridge University Press</publisher-name>          </element-citation></ref>
<ref id="pcbi.1000318-Felsenstein1"><label>23</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Felsenstein</surname><given-names>J</given-names></name>
</person-group>             <year>1981</year>             <article-title>Evolutionary trees from DNA sequences: a maximum likelihood approach.</article-title>             <source>J Mol Evol</source>             <volume>17</volume>             <fpage>368</fpage>             <lpage>376</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Elston1"><label>24</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Elston</surname><given-names>RC</given-names></name>
<name name-style="western"><surname>Stewart</surname><given-names>J</given-names></name>
</person-group>             <year>1971</year>             <article-title>A general model for the genetic analysis of pedigree data.</article-title>             <source>Hum Hered</source>             <volume>21</volume>             <fpage>523</fpage>             <lpage>534</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-McGuire1"><label>25</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>McGuire</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Denham</surname><given-names>MC</given-names></name>
<name name-style="western"><surname>Balding</surname><given-names>DJ</given-names></name>
</person-group>             <year>2001</year>             <article-title>Models of sequence evolution for DNA sequences containing gaps.</article-title>             <source>Mol Biol Evol</source>             <volume>18</volume>             <fpage>481</fpage>             <lpage>490</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Hudson1"><label>26</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hudson</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Kaplan</surname><given-names>NL</given-names></name>
</person-group>             <year>1985</year>             <article-title>Statistical properties of the number of recombination events in the history of a sample of DNA sequences.</article-title>             <source>Genetics</source>             <volume>111</volume>             <fpage>147</fpage>             <lpage>164</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Edgar1"><label>27</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Edgar</surname><given-names>RC</given-names></name>
</person-group>             <year>2004</year>             <article-title>MUSCLE: multiple sequence alignment with high accuracy and high throughput.</article-title>             <source>Nucleic Acids Research</source>             <volume>32</volume>             <fpage>1792</fpage>             <lpage>1797</lpage>          </element-citation></ref>
<ref id="pcbi.1000318-Thompson1"><label>28</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Thompson</surname><given-names>JD</given-names></name>
<name name-style="western"><surname>Higgins</surname><given-names>DG</given-names></name>
<name name-style="western"><surname>Gibson</surname><given-names>TJ</given-names></name>
</person-group>             <year>1994</year>             <article-title>CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice.</article-title>             <source>Nucleic Acids Research</source>             <volume>22</volume>             <fpage>4673</fpage>             <lpage>4680</lpage>          </element-citation></ref>
</ref-list>

</back>
</article>