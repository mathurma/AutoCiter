<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN"><front><journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="allenpress-id">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0030232</article-id><article-id pub-id-type="publisher-id">07-PLCB-RA-0109R2</article-id><article-id pub-id-type="sici">plcb-03-11-25</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology</subject></subj-group><subj-group subj-group-type="System Taxonomy"><subject>None</subject></subj-group></article-categories><title-group><article-title>CATHEDRAL: A Fast and Effective Algorithm to Predict Folds and Domain Boundaries from Multidomain Protein Structures</article-title><alt-title alt-title-type="running-head">A Novel Algorithm</alt-title></title-group><contrib-group><contrib contrib-type="author" equal-contrib="yes" xlink:type="simple"><name name-style="western"><surname>Redfern</surname><given-names>Oliver C</given-names></name><xref ref-type="aff" rid="aff1">
            <sup>
            <sup>1</sup>
          </sup>
          </xref><xref ref-type="corresp" rid="cor1">
            <sup>*</sup>
          </xref></contrib><contrib contrib-type="author" equal-contrib="yes" xlink:type="simple"><name name-style="western"><surname>Harrison</surname><given-names>Andrew</given-names></name><xref ref-type="aff" rid="aff1">
            <sup>
            <sup>1</sup>
          </sup>
          </xref><xref ref-type="aff" rid="aff2">
            <sup>2</sup>
          </xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Dallman</surname><given-names>Tim</given-names></name><xref ref-type="aff" rid="aff1">
            <sup>
            <sup>1</sup>
          </sup>
          </xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Pearl</surname><given-names>Frances M. G</given-names></name><xref ref-type="aff" rid="aff1">
            <sup>
            <sup>1</sup>
          </sup>
          </xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Orengo</surname><given-names>Christine A</given-names></name><xref ref-type="aff" rid="aff1">
            <sup>
            <sup>1</sup>
          </sup>
          </xref></contrib></contrib-group><aff id="aff1">
        <label>1</label>
        <addr-line>
				 Department of Biochemistry and Molecular Biology, University College London, London, United Kingdom
			</addr-line>
      </aff><aff id="aff2">
        <label>2</label>
        <addr-line>
				 Department of Mathematical Sciences and Biological Sciences, University of Essex, Wivenhoe Park, Colchester, United Kingdom
			</addr-line>
      </aff><contrib-group><contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Russell</surname><given-names>Robert B</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">European Molecular Biology Laboratory, Germany</aff><author-notes><corresp id="cor1">* To whom correspondence should be addressed. E-mail: <email xlink:type="simple">ollie@biochem.ucl.ac.uk</email></corresp><fn fn-type="con" id="ack1"><p> OCR, AH, and CAO conceived and designed the experiments. OCR, AH, and TD performed the experiments. OCR, TD, and FMGP analyzed the data. OR wrote the paper.</p></fn><fn fn-type="conflict" id="ack3"><p> The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="ppub"><month>11</month><year>2007</year></pub-date><pub-date pub-type="epub"><day>30</day><month>11</month><year>2007</year></pub-date><volume>3</volume><issue>11</issue><elocation-id>e232</elocation-id><history><date date-type="received"><day>2</day><month>3</month><year>2007</year></date><date date-type="accepted"><day>11</day><month>10</month><year>2007</year></date></history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2007</copyright-year><copyright-holder> Redfern et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><p>We present CATHEDRAL, an iterative protocol for determining the location of previously observed protein folds in novel multidomain protein structures. CATHEDRAL builds on the features of a fast secondary-structure–based method (using graph theory) to locate known folds within a multidomain context and a residue-based, double-dynamic programming algorithm, which is used to align members of the target fold groups against the query protein structure to identify the closest relative and assign domain boundaries. To increase the fidelity of the assignments, a support vector machine is used to provide an optimal scoring scheme. Once a domain is verified, it is excised, and the search protocol is repeated in an iterative fashion until all recognisable domains have been identified. We have performed an initial benchmark of CATHEDRAL against other publicly available structure comparison methods using a consensus dataset of domains derived from the CATH and SCOP domain classifications. CATHEDRAL shows superior performance in fold recognition and alignment accuracy when compared with many equivalent methods. If a novel multidomain structure contains a known fold, CATHEDRAL will locate it in 90% of cases, with &lt;1% false positives. For nearly 80% of assigned domains in a manually validated test set, the boundaries were correctly delineated within a tolerance of ten residues. For the remaining cases, previously classified domains were very remotely related to the query chain so that embellishments to the core of the fold caused significant differences in domain sizes and manual refinement of the boundaries was necessary. To put this performance in context, a well-established sequence method based on hidden Markov models was only able to detect 65% of domains, with 33% of the subsequent boundaries assigned within ten residues. Since, on average, 50% of newly determined protein structures contain more than one domain unit, and typically 90% or more of these domains are already classified in CATH, CATHEDRAL will considerably facilitate the automation of protein structure classification.</p></abstract><abstract abstract-type="summary"><title>Author Summary</title><sec id="st1"><title/><p>Proteins comprise individual folding units known as domains, with a significant proportion containing two or more (multidomain structures). Each domain is thought to represent a unit of evolution and adopts a specific fold. Detecting domains is often the first step in classifying proteins into evolutionary families for studying the relationship between sequence, structure, and function. Automatically identifying domains from structural data is problematic due to the fact that domains vary substantially in their compactness and geometric separation from one another in the whole protein. We present a novel method, CATHEDRAL, which iteratively identifies each domain by comparing a query structure against a library of manually verified domains in the CATH domain database through computational structure comparison. We find that CATHEDRAL is able to outperform the majority of popular structure comparison methods for finding structural relatives. Furthermore, it is able to accurately identify domain boundaries and outperform other methods of structure-based domain prediction for the majority of proteins. CATHEDRAL is available as a Webserver to provide domain annotations for the community and hence aid in structural and functional characterisation of newly solved protein structures.</p></sec></abstract><funding-group><funding-statement> OCR was funded by an Engineering and Physical Sciences Research Council (EPSRC) studentship. TD was funded by a Biotechnology and Biological Sciences Research Council (BBSRC) studentship. CAO and AH thank the Medical Research Council for funding.</funding-statement></funding-group><counts><page-count count="15"/></counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group><custom-meta><meta-name>citation</meta-name><meta-value>Redfern OC, Harrison A, Dallman T, Pearl FMG, Orengo CA (2007) CATHEDRAL: A fast and effective algorithm to predict folds and domain boundaries from multidomain protein structures. PLoS Comput Biol 3(11): e232. doi:<ext-link ext-link-type="doi" xlink:href="http://dx.doi.org/10.1371/journal.pcbi.0030232" xlink:type="simple">10.1371/journal.pcbi.0030232</ext-link></meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1"><title>Introduction</title><p>Proteins comprise individual folding units known as domains, with a significant proportion containing two or more units (multidomain structures) [<xref ref-type="bibr" rid="pcbi-0030232-b001">1</xref>]. Each domain adopts a specific fold, and it is estimated that there are up to several thousand such folds in nature [<xref ref-type="bibr" rid="pcbi-0030232-b002">2</xref>–<xref ref-type="bibr" rid="pcbi-0030232-b004">4</xref>]. As the domain is thought to be an important evolutionarily conserved unit, several structural classifications, such as SCOP [<xref ref-type="bibr" rid="pcbi-0030232-b005">5</xref>] and CATH [<xref ref-type="bibr" rid="pcbi-0030232-b006">6</xref>], have sought to cluster them into fold groups and evolutionary families. Although a given pair of structures in these families can diverge below similarities of ≤30% in their sequence, these relatives still maintain a comparable topology or fold in the core of the structure [<xref ref-type="bibr" rid="pcbi-0030232-b006">6</xref>,<xref ref-type="bibr" rid="pcbi-0030232-b007">7</xref>].</p><p>More than 7,000 new proteins structures were deposited in the Protein Data Bank (PDB; <ext-link ext-link-type="uri" xlink:href="http://www.rcsb.org/pdb" xlink:type="simple">http://www.rcsb.org/pdb</ext-link>) [<xref ref-type="bibr" rid="pcbi-0030232-b008">8</xref>] in 2005. Furthermore, analysis of version 2.6 (April 2005) of the CATH database shows that nearly 50% of classified structures are multidomain. Although many are close in sequence to previously solved structures, the structural genomics initiatives have concentrated their resources on proteins with low sequence similarity to existing structures. As a consequence, they often require considerable manual analysis to be classified in the CATH domain database. That said, the vast majority of newly solved structures contain previously observed folds, although they are often quite remote homologues. In this situation, structural comparison algorithms can be essential to facilitate the automatic and semiautomatic classification of domains.</p><p>The number of larger multidomain structures has been gradually increasing since the formation of the PDB, with improvements in techniques for structure determination. We can expect this trend to continue, as recent analyses of completed genomes have suggested that the proportion of multidomain structures in some organisms, particularly eukaryotes, may be as high as 80% [<xref ref-type="bibr" rid="pcbi-0030232-b001">1</xref>]. <xref ref-type="fig" rid="pcbi-0030232-g001">Figure 1</xref> shows that the majority of multidomain chains comprise two domains, although some structures have been solved with three, four, five, and six domains.</p><fig id="pcbi-0030232-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g001</object-id><label>Figure 1</label><caption><title>Percentage of Multidomain Chains with a Given Number of Component Domains</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g001" xlink:type="simple"/></fig><p>A further complication is that approximately 20% of domains from multidomain proteins in the PDB are discontiguous [<xref ref-type="bibr" rid="pcbi-0030232-b009">9</xref>] (<xref ref-type="fig" rid="pcbi-0030232-g002">Figure 2</xref>); that is, the structure of the individual domains is formed from disconnected regions of the polypeptide chain. Both automated and manual approaches to domain boundary recognition have problems in assigning these domains.</p><fig id="pcbi-0030232-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g002</object-id><label>Figure 2</label><caption><title>Example of a Multidomain Protein (PDB: 1cg2) Chain Containing a Discontiguous Domain</title><p>Domain two (blue) is inserted between two segments of domain one (red).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g002" xlink:type="simple"/></fig><p>Various computational methods have been developed to automatically detect domain boundaries in multidomain structures (see [<xref ref-type="bibr" rid="pcbi-0030232-b010">10</xref>]) through a posteriori knowledge of domain folding and interactions. Several approaches assume that a domain makes more internal contacts (intradomain) than external contacts (contact with residues in the remainder of the structure). For example, the DOMAK algorithm of [<xref ref-type="bibr" rid="pcbi-0030232-b011">11</xref>] derives a “split value” from the number of contacts measured when a protein is divided into two parts. Optimal values are obtained when the separate parts of the split structure are distinct domains. The protein domain parser (PDP) takes a similar approach and looks to divide multidomain structures so that the number of internal contacts in each putative domain increases. By contrast, the parser for protein unfolding units (PUU) algorithm by [<xref ref-type="bibr" rid="pcbi-0030232-b012">12</xref>] uses a harmonic model to describe interdomain dynamics, and is used to define domain units in the FSSP database [<xref ref-type="bibr" rid="pcbi-0030232-b013">13</xref>]. A further approach, used by the DETECTIVE algorithm [<xref ref-type="bibr" rid="pcbi-0030232-b014">14</xref>], attempts to determine the hydrophobic core at the heart of each domain unit. The original CATH classification protocol [<xref ref-type="bibr" rid="pcbi-0030232-b009">9</xref>] used a consensus approach by combining the results from the three independent methods, described above (PUU, DOMAK, and DETECTIVE).</p><p>Although each method reports 70%–80% accuracy in benchmarking tests, our experience of updating the CATH database suggest that these methods frequently (∼80%–90% of the time) produce results that are inconsistent with one another. As a consequence, manual validation becomes the only secure way to resolve these conflicting predictions. A recent analysis by Holland et al. [<xref ref-type="bibr" rid="pcbi-0030232-b010">10</xref>] showed that all automatic methods run into difficulties when assigning boundaries for certain architectures that do not fit their chosen model of a domain unit—for example, an alpha horseshoe domain, which does not form a compact structure. The authors suggested improvements achieved by a heuristic method that accounts for exceptions to the theoretical domain model. An alternative approach would be to compare a given protein chain against a library of known domain folds.</p><p>Although many of the algorithms described above effectively delineate domains for a large percentage of protein chains in the PDB (even those which contain novel folds), they provide no indication as to how similar each predicted domain is to folds already classified within the CATH database. Therefore, it is still necessary to compare the excised domain against the CATH library to classify the fold. Since manual validation of domain boundaries and structure-based database scans are both slow, this has remained one of the major bottlenecks in the CATH classification process.</p><p>As discussed above, there are a limited number of folds, and a novel multidomain structure could well comprise those that have already been classified. This concept of recurrence is not new, and has been successfully exploited by other structural classifications. For example, the DALI algorithm is used to detect recurrent folds for classification in the DALI Domain Database [<xref ref-type="bibr" rid="pcbi-0030232-b013">13</xref>], while the SCOP database uses manual inspection to locate known folds.</p><p>Many methods exist to find recurring domains using pure sequence approaches (e.g., MKDOM [<xref ref-type="bibr" rid="pcbi-0030232-b015">15</xref>], SMART [<xref ref-type="bibr" rid="pcbi-0030232-b016">16</xref>], and PFam [<xref ref-type="bibr" rid="pcbi-0030232-b017">17</xref>]). However, these are designed to identify individual protein families within gene sequences, rather than predict structural domains. Others, such as SnapDragon [<xref ref-type="bibr" rid="pcbi-0030232-b018">18</xref>] and Rigden's covariance analysis [<xref ref-type="bibr" rid="pcbi-0030232-b019">19</xref>], attempt to infer domain boundaries through prior prediction of tertiary structure. Nagarajan and Yona [<xref ref-type="bibr" rid="pcbi-0030232-b020">20</xref>] used a combination of PSI-BLAST multiple alignments, predicted structural features, and neural networks to identify the transition between domains in the sequence (i.e., the boundaries). The authors were able to correctly predict the domain architecture for 35% of multidomain proteins when compared with SCOP.</p><p>Recent analyses of structures solved by the structural genomics initiatives—which are frequently targeted because they have no clear sequence similarity to existing structures and may adopt novel folds—show that approximately 90% are similar to those already observed in the PDB through sequence or structure comparison [<xref ref-type="bibr" rid="pcbi-0030232-b021">21</xref>,<xref ref-type="bibr" rid="pcbi-0030232-b022">22</xref>]. Therefore, exploiting the concept of domain recurrence to detect known folds in newly determined multidomain structures is a sensible strategy to classify the majority of new structures. Moreover, several fast and powerful algorithms for structure comparison now exist that could be used to perform this task. Some of these compare secondary structures between proteins [<xref ref-type="bibr" rid="pcbi-0030232-b023">23</xref>–<xref ref-type="bibr" rid="pcbi-0030232-b025">25</xref>], while others operate at the residue level (DALI [<xref ref-type="bibr" rid="pcbi-0030232-b026">26</xref>], SSAP [<xref ref-type="bibr" rid="pcbi-0030232-b027">27</xref>], COMPARER [<xref ref-type="bibr" rid="pcbi-0030232-b028">28</xref>], STRUCTAL [<xref ref-type="bibr" rid="pcbi-0030232-b029">29</xref>], and CE [<xref ref-type="bibr" rid="pcbi-0030232-b030">30</xref>]).</p><p>The performance of an automatic structural alignment method should be measured both on its ability to generate biologically meaningful alignments and its capacity to accurately detect fold similarities and homologous protein structures. As Kolodny et al. [<xref ref-type="bibr" rid="pcbi-0030232-b029">29</xref>] highlight, not all structural comparison methods are as good at scoring their alignments as they are at producing them. A root-mean–squared deviation (RMSD) value, or any linear transformation of this, often remains dependent on the number of aligned residues. Some algorithms (e.g., CE [<xref ref-type="bibr" rid="pcbi-0030232-b030">30</xref>]) are optimised to find highly conserved regions between two protein structures with a low RMSD. This can be useful in detecting similarities within extremely diverse superfamilies and fold groups. However, this approach does not necessarily give a globally optimal alignment, and can assign high significance to matching small structural motifs that may not be in equivalent positions in the two structures being compared. Hence, for the purpose of domain boundary recognition, it is also vital to consider the number of aligned residues as a proportion of those residues in the larger of the two structures as well as the RMSD of superposed residues.</p><p>This paper reports the development of the CATHEDRAL algorithm, a novel domain identifier that exploits the fold-recurrence philosophy. CATHEDRAL is an acronym for CATH's existing-domain recognition algorithm. It compares a novel multidomain protein structure against a library of previously classified folds in the CATH database [<xref ref-type="bibr" rid="pcbi-0030232-b006">6</xref>] by modifying and combining features from two established structural similarity algorithms. A secondary-structure–matching algorithm, GT (using graph theory) [<xref ref-type="bibr" rid="pcbi-0030232-b025">25</xref>], which is very fast and reasonably accurate, is combined with a residue-based method that uses double-dynamic programming (DDP) [<xref ref-type="bibr" rid="pcbi-0030232-b027">27</xref>], and is therefore slower but very accurate. By combining these approaches, a 100-fold to 1,000-fold increase in speed is achieved, depending on the size of the query structure, at no cost to the quality of the domain alignments. This enables regular scans of newly determined protein structures and rapid classification of their constituent domains into the CATH database.</p><p>To investigate the efficacy of CATHEDRAL in producing quality alignments, it has also been benchmarked against other publicly available structure comparison algorithms at the single-domain level. By aligning domains in a consensus SCOP/CATH dataset, CATHEDRAL was found to give comparable and, in many cases, superior performance for fold recognition. In addition, when assessing the fidelity of the structural alignments in comparison to hand-curated structural alignments with respect to BAliBASE [<xref ref-type="bibr" rid="pcbi-0030232-b031">31</xref>], it consistently performed better than other approaches by aligning more residues correctly.</p></sec><sec id="s2"><title>Results</title><sec id="s2a"><title>Evaluating the Performance of the GT and DDP Algorithms for Fold Recognition at the Domain Level Using a Consensus CATH–SCOP Dataset</title><p>The rationale behind CATHEDRAL was to use a fast secondary structure–based graph theory (GT) algorithm to discover putative fold matches for a given protein domain/chain structure, which could subsequently be more accurately aligned using a residue-based method exploiting DDP. To evaluate the performance of GT and DDP for fold recognition and accurate alignment, we first created a dataset of single CATH–SCOP domains and compared this approach with other publicly available methods before optimising the algorithm for discovering domain folds in multidomain chains. This benchmarking was also performed on a larger dataset of domains in the nonredundant CATH library (version 2.6) and produced almost identical results.</p><sec id="s2a1"><title>Comparing DDP and GT.</title><p>The coverage and precision of the GT and DDP algorithms was compared by scanning the benchmark CATH–SCOP dataset (see <xref ref-type="sec" rid="s4">Methods</xref>) against a library of CATH domains and ranking the results by the GT E-value and the DDP structural alignment score (SAS; see <xref ref-type="sec" rid="s4">Methods</xref> for descriptions of scoring schemes). It can be seen from <xref ref-type="table" rid="pcbi-0030232-t001">Table 1</xref> that the DDP algorithm finds the correct fold as the top hit nearly 95% of the time compared with nearly 84% for the GT method. Nevertheless, the correct fold is within the top 10 hits for GT nearly 98% of the time<italic>.</italic> Given that the DDP algorithm is 100–1,000 times slower than GT, depending on the size of the structures being compared, taking the top ten folds identified by GT forward for more accurate scoring by DDP maintains coverage yet vastly reduces the number of DDP comparisons undertaken. We subsequently refer to the combined use of GT and DDP as CATHEDRAL.</p><table-wrap content-type="1col" id="pcbi-0030232-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.t001</object-id><label>Table 1</label><caption><p>Percentage of Correct Folds Identified by GT and DDP</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.t001" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb1col1" align="char" charoff="0" char="."/><col id="tb1col2" align="char" charoff="0" char="."/><col id="tb1col3" align="char" charoff="0" char="."/></colgroup><thead><tr><td align="left"><hr/>Rank</td><td><hr/>GT E-Value</td><td><hr/>DDP Score</td></tr></thead><tbody><tr><td>1</td><td>83.8</td><td>94.6</td></tr><tr><td>2</td><td>4.2</td><td>1.5</td></tr><tr><td>3</td><td>1.6</td><td>0.5</td></tr><tr><td>4</td><td>1.3</td><td>0.3</td></tr><tr><td>5</td><td>0.6</td><td>0.3</td></tr><tr><td>6</td><td>0.3</td><td>0.2</td></tr><tr><td>7</td><td>0.5</td><td>0.1</td></tr><tr><td>8</td><td>0.5</td><td>0.2</td></tr><tr><td>9</td><td>0.3</td><td>0.1</td></tr><tr><td>10</td><td>0.3</td><td>0.1</td></tr><tr><td>&gt;10</td><td>6.6</td><td>2.1</td></tr></tbody></table> --><!-- --></table-wrap></sec></sec><sec id="s2b"><title>Comparing the Performance of the Component Algorithms in CATHEDRAL (GT, DDP) with Other Established Structure Comparison Algorithms</title><sec id="s2b1"><title>Fold recognition.</title><p>To benchmark CATHEDRAL, we compared its performance against several other publicly available methods (DALI, STRUCTAL, LSQMAN, and CE) using the same CATH–SCOP dataset (see <xref ref-type="sec" rid="s4">Methods</xref>). Kolodny et al. [<xref ref-type="bibr" rid="pcbi-0030232-b029">29</xref>] have also recently benchmarked these methods using various scoring schemes, and they found that a normalised RMSD score (SAS; see <xref ref-type="sec" rid="s4">Methods</xref>), performed best for recognising domains with the same fold.</p><p>It can be seen from <xref ref-type="fig" rid="pcbi-0030232-g003">Figure 3</xref> that CATHEDRAL returns the highest proportion of true positives for a 5% error rate, followed by DALI, DDP, and STRUCTAL. It is interesting to note that CATHEDRAL actually outperforms DDP. This is probably because it excludes potentially low-scoring comparisons at an early stage in the algorithm, thus reducing the number of false positives, while the other methods return scores for all comparisons.</p><fig id="pcbi-0030232-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g003</object-id><label>Figure 3</label><caption><title>ROC (True Positive Rate Versus False Positive Rate) Curve Plotted for Different Structural Comparison Methods Based on the SAS, Where a Positive Match Represents a True CATH–SCOP Fold Match</title><p>TPR, true positive rate; FPR, false positive rate.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g003" xlink:type="simple"/></fig><p>As well as the ability of the SAS to correctly discriminate between true and false fold matches across a range of score cutoffs, it is important to identify the closest relative within a given fold group to obtain the best alignment. Therefore, the correct fold should rank highly in the list of matches.</p><p>It can be seen from <xref ref-type="fig" rid="pcbi-0030232-g004">Figure 4</xref> that CATHEDRAL assigns the correct fold as its top hit more than 94% of the time compared with the best method DDP, at 96%. When the percentage of correct fold matches with the top ten matches are considered, the CATHEDRAL performance rises to 96% and DDP to 98%, with STRUCTAL also slightly outperforming CATHEDRAL. This small discrepancy is mainly for small domains with few secondary structures (less than four), which cannot be compared using GT (see <xref ref-type="sec" rid="s4">Methods</xref>). The performance could relatively quickly be recovered by comparing domains with less than three secondary structures against a library of small domains using just DDP.</p><fig id="pcbi-0030232-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g004</object-id><label>Figure 4</label><caption><title>Graph of the Percentage of Correct Folds Matched Against the Ranked Native Score for the CATH–SCOP Dataset</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g004" xlink:type="simple"/></fig></sec><sec id="s2b2"><title>Assessment of alignment quality.</title><p>Alignment accuracy was initially assessed using a similar strategy to that devised by Kolodney et al. [<xref ref-type="bibr" rid="pcbi-0030232-b029">29</xref>]. The authors measured the proportion of correct fold matches producing a structural similarity score below a given threshold. In assessing DDP in this way, we have also chosen to use the SAS they propose and a new score, SiMax (see <xref ref-type="sec" rid="s4">Methods</xref>). The latter is a modified version of the SiMin score used by Kolodny et al. SiMax normalises by the larger of the two domains being compared rather than the smallest as with SiMin. This allows it to better determine whether methods are good at recognising the best “global” as opposed to “local” fold similarity.</p><p><xref ref-type="fig" rid="pcbi-0030232-g005">Figure 5</xref>A and <xref ref-type="fig" rid="pcbi-0030232-g005">5</xref>B show alignment quality as measured by the SAS and SiMax for domains in the same fold. The best performing method using both scores is LSQMAN, although it is known to align many fewer residues than the other methods. Given that it is one of the worst performers in the receiver operating characteristic (ROC) curve analysis, this suggests that using an RMSD-based score alone as an assessment of alignment quality does not necessarily correlate with a globally optimal alignment. Structural variation within fold groups and superfamilies can result in high RMSD values for otherwise good alignments with algorithms that seek to maximise the number of equivalent residues. For example, LSQMAN looks to align fragments with low RMSDs, and consequently can restrict the number of aligned residues. Although this can be useful for detecting domains sharing common motifs, it will often not identify all biologically equivalent positions—information that is essential for domain boundary recognition.</p><fig id="pcbi-0030232-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g005</object-id><label>Figure 5</label><caption><title>Comparison of Alignment Quality of Domains Adopting the Same CATH Fold Using Two Geometric Scoring Schemes</title><p>(A) Percentage of correct fold pairs for a given SAS threshold.</p><p>(B) Percentage of correct fold pairs for a given SiMax threshold.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g005" xlink:type="simple"/></fig><p>In some domain architectures (e.g., three-layer αβ sandwiches), it is clear that large structural motifs (e.g., βαβα) can overlap between domains in different folds, yet these do not always coincide with equivalent secondary structures. Furthermore, any similarity score based on RMSD will be dependent on the number of superposed residues, and hence aligning more residues in variable parts of two structures can give a disproportionately high score, even if the alignment is actually more biologically relevant. For the purposes of applications such as domain boundary recognition, it is clearly important to identify an alignment between two domains that maximises the number of equivalent residues. Consequently, for a given pair of fold matches, we looked at the average number of residues aligned by each method. <xref ref-type="table" rid="pcbi-0030232-t002">Table 2</xref> shows this calculation relative to DDP, as DDP aligns more residues than all other methods. What is interesting is that there appears to be a correlation between this average value and the SAS ROC curves shown in <xref ref-type="fig" rid="pcbi-0030232-g003">Figure 3</xref>. More specifically, DALI, STRUCTAL, and DDP align the most residues and also perform best under the ROC curve analysis.</p><table-wrap content-type="1col" id="pcbi-0030232-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.t002</object-id><label>Table 2</label><caption><p>Residues Aligned by Each Method Relative to DDP for All Genuine Fold Matches</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.t002" xlink:type="simple"/><!-- <table frame="hsides" rules="none"><colgroup><col id="tb2col1" align="left" charoff="0" char=""/><col id="tb2col2" align="left" charoff="0" char=""/><col id="tb2col3" align="left" charoff="0" char=""/><col id="tb2col4" align="left" charoff="0" char=""/><col id="tb2col5" align="left" charoff="0" char=""/></colgroup><thead><tr><td align="left"><hr/>Residues</td><td><hr/>LSQMAN</td><td><hr/>DALI</td><td><hr/>STRUCTAL</td><td><hr/>CE</td></tr></thead><tbody><tr><td>Aligned residues with respect to DDP, percent</td><td>50</td><td>75</td><td>76</td><td>57</td></tr></tbody></table> --><!-- --></table-wrap><p>We also examined the size of the domain fragments aligned with a given SAS. <xref ref-type="fig" rid="pcbi-0030232-g006">Figure 6</xref> shows that although LSQMAN and STRUCTAL are returning a higher proportion of scores below a given SAS/SiMax threshold (<xref ref-type="fig" rid="pcbi-0030232-g005">Figure 5</xref>), they recognise and align fewer residues. This may be valuable for finding the most conserved structural motif between two domains; however, it is less useful for assigning domain boundaries. Taken together, <xref ref-type="fig" rid="pcbi-0030232-g005">Figure 5</xref> and <xref ref-type="fig" rid="pcbi-0030232-g006">Figure 6</xref> suggest that DDP is a suitable method to use for domain boundary recognition, as it aligns large fragments while ensuring these can be superimposed with reasonable scores.</p><fig id="pcbi-0030232-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g006</object-id><label>Figure 6</label><caption><title>Average Number of Aligned Residues per SAS</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g006" xlink:type="simple"/></fig></sec><sec id="s2b3"><title>Comparison with manually curated alignments.</title><p>A better way to assess the biological significance of automatic structure alignments is to compare them to a manually validated dataset. To this end, we compared all methods against curated alignments from the BAliBASE (see <xref ref-type="sec" rid="s4">Methods</xref>). <xref ref-type="fig" rid="pcbi-0030232-g007">Figure 7</xref> shows that DALI and DDP produce alignments closer to the BaliBASE alignments, with nearly 60% of DALI and DDP alignments having at least 50% residues correctly aligned, compared with 45% for LSQMAN and 40% for STRUCTAL. The data from <xref ref-type="fig" rid="pcbi-0030232-g005">Figures 5</xref>–<xref ref-type="fig" rid="pcbi-0030232-g007">7</xref> suggest that LSQMAN and STRUCTAL may be optimising alignments to reduce the RMSD at the expense of finding the most biologically equivalent residues.</p><fig id="pcbi-0030232-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g007</object-id><label>Figure 7</label><caption><title>Graph Showing How the Alignments of Each Method Compared with Manually Validated BAliBASE Alignments</title><p>The higher the curve (or the curve with the greatest area underneath) represents the method that most agrees with the manually curated BAliBASE alignments.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g007" xlink:type="simple"/></fig><p>In summary, our benchmarking results suggest that GT and DDP are complementary approaches that may be combined to produce a fast yet reliable domain boundary recognition algorithm. The performance of CATHEDRAL for this purpose is described in the next section.</p></sec></sec><sec id="s2c"><title>Performance of CATHEDRAL for Domain Recognition in Multidomain Protein Chains</title><sec id="s2c1"><title>Overview of the protocol adopted by CATHEDRAL.</title><p>The preceding sections dealt with the use of the CATHEDRAL protocol at the <italic>domain</italic> level to identify fold relatives in a domain library. In this section, we develop CATHEDRAL to scan a novel <italic>multidomain</italic> structure against a library of representative single-domain folds in order to identify constituent domains, thereby locating domain boundaries. A GT approach is initially used to find putative folds in CATH within the protein structure. Representatives from each superfamily in each of the high-scoring fold groups are then aligned against the putative domain region in the chain using a more accurate, residue-based DDP algorithm. DDP was modified to allow the common secondary structures determined by GT to guide a residue alignment by DDP, which reduces the search space and hence results in a notable speed increase. The significance of the subsequent matches is assessed using a support vector machine (SVM), which accounts for the percentage of overlapping residues, geometric similarity, and number of aligned residues. Once a domain has been assigned, it is excised from the chain, and the remaining regions are iteratively recompared using the same protocol until all known domains have been found. An optimal balance between coverage and speed was achieved by only realigning domains in the top ten folds identified by GT using DDP.</p></sec><sec id="s2c2"><title>Optimising alignment scoring using an SVM.</title><p>As discussed above, it is essential to consider both the RMSD of the structural alignment of two domains, as well as the percentage of aligned residues in the largest protein. This problem becomes more complex when detecting individual domains in a multidomain chain, as the constituent domains may be unknown. When comparing a chain with a domain library, the best RMSD can sometimes be obtained by small domains with similar secondary structure motifs but different folds, which might inhibit the detection of truly equivalent domains.</p><p>The highest-scoring match recognised by CATHEDRAL is used to determine the boundaries of the domain. Residues associated with that domain are then excised from the multidomain chain before rescanning the chain against the fold library. Therefore, it is important that this top match is frequently the best global match that can be obtained. As well as using information on the number of residues that superpose well (provided by the SAS), it is also important to consider the proportion of residues equivalent between the two domains, domain sizes, and protein classes. All these features have been found to be important in the manual curation process used to classify domains in CATH. We used an SVM to explore whether some optimal combination of these features resulted in a measure that was more discriminating than simply using a single structural similarity score.</p><p>From <xref ref-type="fig" rid="pcbi-0030232-g008">Figure 8</xref>, it can be seen that using an SVM to combine the other scoring schemes into a single value outperforms the individual methods at low error rates. The SVM ROC curve benchmark shown is an average of the performance shown using 5-fold cross-validation to account for any overfitting of the dataset. It is also interesting to note that the GT E-value actually outperforms the SAS at error rates higher than 2%.</p><fig id="pcbi-0030232-g008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g008</object-id><label>Figure 8</label><caption><title>Comparison of GT and DDP Scores with SVM Score for Assigning Domains to Multidomain Chains</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g008" xlink:type="simple"/></fig></sec></sec><sec id="s2d"><title>Optimising a Score Threshold for Accurately Identifying Domains in Multidomain Chains</title><p>Once CATHEDRAL has identified putative domain matches for a query multidomain structure, all domain hits to the chain are ranked by the SVM score, and domain boundaries are assigned using the protocol described in Methods. CATHEDRAL was able to assign 90% of domains in the query dataset to the correct fold group, with 80% of these within ten residues of the actual boundary (<xref ref-type="fig" rid="pcbi-0030232-g009">Figure 9</xref>). Although our dataset only contained multidomain chains in which all component domains were represented in the CATH library, this is not always the case in classifying novel structures. Indeed, assigning erroneous folds to chains could adversely affect the quality of the domain boundaries. <xref ref-type="fig" rid="pcbi-0030232-g010">Figure 10</xref> shows a plot of coverage according to the percentage of accurate boundaries (i.e., within 10 residues). It can be seen that once the SVM score cutoff is increased above 2, the coverage drops dramatically. However, the accuracy of the domain boundaries does not increase significantly, suggesting that this is an appropriate threshold for CATHEDRAL. <xref ref-type="fig" rid="pcbi-0030232-g009">Figure 9</xref> shows the coverage of all chains in the dataset with respect to the accuracy of their predicted domain boundaries.</p><fig id="pcbi-0030232-g009" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g009</object-id><label>Figure 9</label><caption><title>Percentage of Domain Assigned (Blue) and Percentage of Domain Boundaries within Ten Residues of Verified Boundaries (Pink) at a Range of SVM Score Cutoffs</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g009" xlink:type="simple"/></fig><fig id="pcbi-0030232-g010" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g010</object-id><label>Figure 10</label><caption><title>Domain Coverage Versus Quality of Domain Boundaries</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g010" xlink:type="simple"/></fig><p>CATHEDRAL was developed as a method to be applied unilaterally to all protein chains to be classified into the CATH database. As it is not known a priori whether a given chain contains more than one domain, it is important that the algorithm does not split whole-chain domains unnecessarily. To analyse whether this would pose a problem, the iterative version of CATHEDRAL was also applied to the single-domain CATH–SCOP dataset. In less than 4% of cases, CATHEDRAL predicted that these structures contained more than one domain.</p></sec><sec id="s2e"><title>Increasing the Speed of Domain Boundary Assignments by CATHEDRAL</title><p>The major speed increase in CATHEDRAL is due to the fact that GT preselects representatives for DDP to align to the query chain. By default, it takes all relatives (nonredundant at 35% sequence identity level) in each of the top ten top-scoring fold groups identified by GT, even if this results in thousands of comparisons, as occurs in large fold groups such as the Rossmann and TIM barrel folds. This can produce very long running times for some query chains. Nevertheless, it is important to find the closest structural relatives for each assignment to reduce the number of insertions and deletions and therefore increase the accuracy of the domain boundary.</p><p>We explored whether only a limited number of relatives from each fold could be taken without compromising the fidelity of the domains boundaries. However, given that GT does not accurately discriminate between homologues and domains with the same fold, it was decided to take at least one relative from each superfamily in the target fold group and explore the effect of varying this number.</p><p>CATHEDRAL was run as described above (by targeting the top ten fold groups at each iteration), but the number of nonredundant representatives (<italic>fr</italic>) taken from each superfamily to be aligned by DDP was varied. <xref ref-type="fig" rid="pcbi-0030232-g011">Figure 11</xref> shows a plot of the number of correctly assigned domain boundaries (within ten residues of manually validated boundary) at each of these levels. It appears that taking any more than seven representatives from each superfamily does not increase the number of good assignments, and hence appeared to be an appropriate level to set the <italic>fr</italic> parameter.</p><fig id="pcbi-0030232-g011" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g011</object-id><label>Figure 11</label><caption><title>Percentage of Domains with Correct Domain Boundaries (within Ten Residues) When Varying the Number of Representatives Taken from Each Superfamily in the Targeted Fold Groups</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g011" xlink:type="simple"/></fig></sec><sec id="s2f"><title>Relationship between the Accuracy of Assigned Domain Boundaries and Evolutionary Distance from the Matched Domain</title><p><xref ref-type="fig" rid="pcbi-0030232-g012">Figure 12</xref> shows the relationship between the accuracy of the domain boundary and the sequence identity between the assigned domain region and best structural match used to assign the boundary. When sequence identity exceeds 10%, there is an increase in the number of correct domain boundaries. It could be expected that the closer the relative from which the assignment is made, the greater chance of it being correct. However, it is encouraging to note that 60% of assignments with sequence identities between 5% and 10% show very little deviation from the manually verified boundaries.</p><fig id="pcbi-0030232-g012" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g012</object-id><label>Figure 12</label><caption><title>Graph of the Percentage of Correct (within Ten Residues) Domain Boundaries against the Sequence Identity between the Assigned Region and the Matched Domain</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g012" xlink:type="simple"/></fig><p>Structural embellishments of the core of a fold are responsible for the majority of examples where there is a disagreement between a manually assigned boundary and those predicted by CATHEDRAL<italic>.</italic> <xref ref-type="fig" rid="pcbi-0030232-g013">Figure 13</xref> illustrates this problem by showing a domain assignment for a catalase HPII [<xref ref-type="bibr" rid="pcbi-0030232-b032">32</xref>] (PDB code 1iph) domain, through similarity to its closest match in the CATH library [<xref ref-type="bibr" rid="pcbi-0030232-b033">33</xref>] (PDB code 1beb). The matched domain is much smaller than the query, and hence CATHEDRAL is only effective at aligning the core of the fold (shown in red). A number of large insertions in the catalase domain cannot be assigned purely by structural comparison, and these sites are therefore not included within the domain, causing a substantial discrepancy from the correct boundary assignment.</p><fig id="pcbi-0030232-g013" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g013</object-id><label>Figure 13</label><caption><title>Superposition of the Catalase HPII (PDB 1iph; First Domain of Chain A) as It Is Classified in the CATH Database and Its Match to Bovine Beta-Lactoglobulin, Coloured Red, (PDB 1beb; Chain A), the Closest Relative Identified by CATHEDRAL</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g013" xlink:type="simple"/></fig><p>Recent analyses of CATH superfamilies has revealed that in 40% of well-populated superfamilies (nine or more diverse relatives at &lt;35% sequence identity), there is 2-fold or more variation in the sizes of the domains (as measured by the numbers of secondary structures in the domain) [<xref ref-type="bibr" rid="pcbi-0030232-b007">7</xref>]. Therefore, in these superfamilies, it may be difficult to obtain accurate boundaries until a close structural relative is deposited in the PDB.</p></sec><sec id="s2g"><title>Comparison of CATHEDRAL Performance to Domain Boundary Assignment by Other Domain Prediction Methods</title><p>To place the performance of CATHEDRAL in context, we compared its ability to assign domains boundaries with two other methods: hidden Markov models (HMMs) and domain predictions from structure (PDP).</p><p>Our dataset of protein chains was scanned against HMMs built from each structure in the CATH library using the HMMer suite of programs [<xref ref-type="bibr" rid="pcbi-0030232-b034">34</xref>]. Domain boundaries were then assigned to the query chains in the same way as CATHEDRAL, but using the HMM E-value instead of the CATHEDRAL SVM score to rank hits. We found that the HMM method was only able to discover 65% of domain folds within the dataset chains. One of the main reasons for this low coverage was that 11% of the chains were not annotated with any domains using an E-value threshold of 0.001. Of the domain boundaries assigned, only 33% were within ten residues, compared with 80% for CATHEDRAL. It is possible that the number of assigned domains could have been increased by using a less conservative E-value threshold. However, this is unlikely to improve the overall quality of the domain boundaries, given the low quality of those that were assigned by the HMM alignments. The domain recognition performance is on a par with the method of Nagarajan and Yona [<xref ref-type="bibr" rid="pcbi-0030232-b020">20</xref>], who predicted the correct domain architecture of 35% of a dataset of multidomain PDB chains. However, by incorporating structural information they were able to increase the percentage of boundaries within ten residues to 63%.</p><p>CATHEDRAL finds domain boundaries for a query chain by using structural alignment to known folds in CATH. To compare our approach with other methods that do not exploit the concept of fold recurrence, but instead are based on ab initio analysis of structural properties such as residue contacts, we applied the PDP method to our multidomain chain dataset. PDP was able to predict correct domain boundaries (within ten residues) for 67% of the chains in the dataset. Although this is lower than CATHEDRAL, it is substantially higher than the 33% achieved by HMM methods. Furthermore, the performance of PDP is still impressive given the problem of distinguishing domain units in a chain based purely on structural properties such as internal contacts and hydrophobicity.</p></sec><sec id="s2h"><title>CATHEDRAL Webserver</title><p>More than 50 structural comparison algorithms have been published in the literature in the last 30 years, the vast majority of which are not in regular use by the bioinformatics or structural biology communities. Those which have gained popularity tend to have a Web-based interface for users to submit their own structures or structures from the PDB. CATHEDRAL has been implemented as a crucial part of the CATH classification protocol, and a new Webserver was created to provide users to investigate domain assignments and homologue recognition with their protein structure of choice (<ext-link ext-link-type="uri" xlink:href="http://cathwww.biochem.ucl.ac.uk/cgi-bin/cath/CathedralServer.pl" xlink:type="simple">http://cathwww.biochem.ucl.ac.uk/cgi-bin/cath/CathedralServer.pl</ext-link>).</p></sec></sec><sec id="s3"><title>Discussion</title><p>We have developed a protocol for domain boundary assignment in multidomain proteins (CATHEDRAL) that exploits the recurrence of folds in different multidomain contexts. This was devised because a high proportion (currently &gt;90% [<xref ref-type="bibr" rid="pcbi-0030232-b021">21</xref>]) of domains in newly determined structures contain folds that have been previously classified in CATH.</p><p>CATHEDRAL first scans a query structure against a library of folds from the CATH databases. The algorithm first uses GT to perform a secondary structure–based comparison and identify putative domain fold matches in the query structure. A representative sample of nonredundant superfamily relatives from the top ten folds are then recompared to try to obtain a better alignment and refine the domain boundaries. This latter step exploits a DDP algorithm that has been guided by information on equivalent secondary structures identified by the GT match.</p><p>CATHEDRAL combines the power of two established structural comparison algorithms in order to develop a fast and accurate protocol for homologue recognition and domain assignment. CATHEDRAL misses ∼10% of the domains in the target dataset. Of these, ∼30% are too small (fewer than three secondary structures) and so are ignored by the CATHEDRAL protocol. Manual inspection revealed that a further ∼20% are distorted or irregular structures giving poorly defined graphs. The remaining ∼50% are missed because they do not pass the score similarity cutoff, as the relatives are too distant and related structural motifs in neighbouring fold groups are better matched.</p><p>The CATH classification of protein folds gives a discrete description of fold space. However, there are difficulties in identifying distinct folds in some populated regions of fold space where the structural universe could be more reasonably represented as a continuum [<xref ref-type="bibr" rid="pcbi-0030232-b006">6</xref>]. In many cases, as the size of the protein increases, the repertoire of folds appears to consist of extensions to existing motifs. It has been shown by Koppensteiner et al. [<xref ref-type="bibr" rid="pcbi-0030232-b035">35</xref>] that it is possible to “walk” from one α/β sandwich fold to another, through the extension of α/β motifs. Furthermore, certain motifs, described as “attractors,” occur as the core of a protein's structure more frequently than others [<xref ref-type="bibr" rid="pcbi-0030232-b036">36</xref>]. Recent analyses of the overlaps between fold groups has shown that for some protein architectures (αβ sandwiches and mainly β sandwiches), extensive overlaps between fold groups are observed due to large common structural motifs [<xref ref-type="bibr" rid="pcbi-0030232-b037">37</xref>].</p><p>For nearly 80% of the test set, all domain boundaries within the multidomain were correctly assigned within ten residues. This is a considerable improvement over a previous consensus protocol (DBS; [<xref ref-type="bibr" rid="pcbi-0030232-b009">9</xref>]) described above, for which on average only 10%–20% of domains could be identified as having reliable boundary assignments from agreement between three independent methods. Furthermore, as known folds are recognised by CATHEDRAL, individual domains can be simultaneously classified in the CATH database, without the need for further structure comparison as in previous classification protocols. The method is currently being extended to assign a confidence level or <italic>p</italic>-value to the boundary and fold assignments predicted by CATHEDRAL. Furthermore, at present, CATHEDRAL assigns domains to a query chain in an iterative fashion. It could be conceived that a better prediction of boundaries and fold assignments could be attained by considering a number of different classifications. The best of these could be identified as the prediction with the highest confidence value.</p><p>Since CATH aims to maintain high quality domain boundary assignments [<xref ref-type="bibr" rid="pcbi-0030232-b038">38</xref>], results returned by the CATHEDRAL algorithm will continue to be manually assessed. However, the high accuracy of the approach will considerably facilitate this process. Since the proportion of domain folds classified within CATH is likely to continue to increase significantly in the next decade due to the progress of the structural genomics initiatives, the CATHEDRAL algorithm will considerably increase the speed of classification of new multidomain structures and their constituent folds within CATH.</p></sec><sec id="s4"><title>Methods</title><sec id="s4a"><title>Generation of a dataset for benchmarking structure alignments of single domains.</title><p>CATHEDRAL and DDP (a modified version of the SSAP algorithm [<xref ref-type="bibr" rid="pcbi-0030232-b027">27</xref>]) were benchmarked against other publicly available structural comparison methods, STRUCTAL [<xref ref-type="bibr" rid="pcbi-0030232-b029">29</xref>], DALI [<xref ref-type="bibr" rid="pcbi-0030232-b026">26</xref>], LSQMAN, and CE [<xref ref-type="bibr" rid="pcbi-0030232-b030">30</xref>] (see Text S1 for description of methods). An all-against-all structural comparison was performed on the 6,003 unique CATH domains (&lt;35% sequence identity to each other) from 907 fold groups for each of the different structural comparison methods, giving more than 18 million individual comparisons. To minimise any bias in the CATH dataset, a dataset that was a subset of CATH version 2.6.0 and SCOP verson 1.65 was also constructed. Each of 6,003 CATH (SRep) domains was checked to see if it had an equivalent SCOP domain containing at least 80% of the same residues. All domains satisfying this criterion were mapped to their CATH and SCOP superfamilies. These superfamilies were then compared, and only those sharing 80% of the same members were identified. This restricted the CATH–SCOP dataset to 1,779 SReps encompassing 406 folds.</p></sec><sec id="s4b"><title>Overview of the publicly available methods used to assess the relative performance of CATHEDRAL and DDP for domain–domain structure alignment.</title><p>There are several publicly available methods that have been endorsed by widespread community use and/or validation by comparative benchmarking against established methods. We selected a range of methods, many of which had been previously benchmarked by Kolodny et al. [<xref ref-type="bibr" rid="pcbi-0030232-b029">29</xref>] for their performance in fold recognition and alignment accuracy.</p><p><italic>Protocol used to compare the performance of CATHEDRAL and full DDP in fold recognition and alignment accuracy with other established methods—fold recognition.</italic> Structure alignment methods were compared using ROC curves. These plot true positive rate (sensitivity) against the false positive rate (1 − specificity) for different similarity scores returned by the individual methods. A binary classifier was defined by the CATH hierarchy whereby a positive match is one in which both domains share the same fold classification. The matches for each method were ordered by the structural similarity score of their alignment, and the number of true positives and false negatives were calculated at varying thresholds.</p><p>
          <italic>Protocol used to compare the performance of CATHEDRAL and full DDP in fold recognition and alignment accuracy with other established methods—alignment accuracy.</italic>
        </p><p>Kolodny and coworkers tested several measures for assessing the accuracy of structural alignments [<xref ref-type="bibr" rid="pcbi-0030232-b029">29</xref>]. They identified redundant measures, and alignment accuracy was subsequently compared using the two geometric measures shown in Equations 1 and 2 below: SAS, and SiMin where <italic>N<sub>mat</sub></italic> represents the number of aligned residues and <italic>L<sub>1</sub></italic>/<italic>L<sub>2</sub></italic> represents the length of the respective domains. The different measures attempt to balance the different properties that describe a “good” alignment, weighting the RMSD against the length of the alignment as a fraction of the length of the proteins aligned.
					<disp-formula id="pcbi-0030232-e001"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030232.e001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mi>S</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>100</mml:mn><mml:mfrac><mml:mrow><mml:mi>R</mml:mi><mml:mi>M</mml:mi><mml:mi>S</mml:mi><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math> --></disp-formula>
					<disp-formula id="pcbi-0030232-e002"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030232.e002" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>M</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo>&equals;</mml:mo><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mfrac><mml:mrow><mml:mi>R</mml:mi><mml:mi>M</mml:mi><mml:mi>S</mml:mi><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math> --></disp-formula>
				</p><p>As CATHEDRAL is exploiting fold recognition to obtain reliable domain boundary assignment, we developed a further measure that scores the global alignment accuracy. As opposed to SiMin, which gives a good score for a small fold appearing as a conserved motif within a much larger fold, SiMax (Equation 3 below) takes account of the proportion of residues aligned in the larger domain structure to determine whether a significant fold match has been achieved.
					<disp-formula id="pcbi-0030232-e003"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030232.e003" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>M</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>&equals;</mml:mo><mml:mi>max</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mfrac><mml:mrow><mml:mi>R</mml:mi><mml:mi>M</mml:mi><mml:mi>S</mml:mi><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math> --></disp-formula>
				</p><p>All the measurements are in angstroms, and the percentage of alignments within a particular distance in angstroms were calculated for each measure (SAS, SiMax, and SiMin).</p><p>In addition to these geometric measures, alignment accuracy was also assessed by comparison against a set of manually curated alignments. BAliBASE is a database of manually refined multiple structure alignments specifically designed for the evaluation and comparison of multiple sequence alignment programs. The alignments in BAliBASE are selected from the FSSP [<xref ref-type="bibr" rid="pcbi-0030232-b036">36</xref>] or HOMSTRAD [<xref ref-type="bibr" rid="pcbi-0030232-b039">39</xref>] structural databases, or from manually constructed structural alignments taken from the literature. When sufficient structures are not available, additional sequences are included from the HSSP database [<xref ref-type="bibr" rid="pcbi-0030232-b040">40</xref>]. The VAST Webserver [<xref ref-type="bibr" rid="pcbi-0030232-b023">23</xref>] is used to confirm that the sequences in each alignment are structural neighbours and can be structurally superimposed. Functional sites are identified using the PDBsum database [<xref ref-type="bibr" rid="pcbi-0030232-b041">41</xref>], and the alignments are manually adjusted to ensure that conserved residues and secondary structure elements are correctly aligned.</p><p>A total of 14 BAliBASE multiple alignments were selected, comprising 108 pairwise structural comparisons. All the alignments represented single-protein domain chains that shared less than 25% sequence identity, making alignment nontrivial. All three major protein classes were represented, and the quality of the alignments generated by the different structure comparison methods are measured by the score, <italic>f<sub>m</sub></italic>, which quantifies the number of amino acids correctly aligned in the structural alignment divided by the total number of aligned residues in the BAliBASE alignment. CE was not included in this analysis, as it only identifies the largest continuous motif.</p></sec><sec id="s4c"><title>Generation of a dataset used in benchmarking CATHEDRAL for assigning folds to multidomain protein chains.</title><p>CATHEDRAL was benchmarked to calculate its ability to delineate domains within multidomain proteins, as well as correctly recognising the fold of the constituent domains. A set of representatives from 1,071 multidomain S35 sequence families (clustered by single linkage at 35% sequence identity) was selected. From this set, those chains containing domains from folds with less than two S35 sequence families were removed. The remaining set contained 964 chains comprising 1,593 domains. These originated from 245 distinct fold groups and 462 superfamilies.</p></sec><sec id="s4d"><title>Generation of a CATH library of representative folds for CATHEDRAL.</title><p>To identify domain boundaries in a novel multidomain structure, CATHEDRAL scans the query structure against a library of folds classified in the CATH database (see Text S1 for description of CATH hierarchy) that are derived from contiguous domain representatives from each sequence family (in which relatives have at least 35% sequence identity) in version 2.6 of the CATH database. This comprised 4,707 domains, covering 907 folds. A secondary structure graph of each domain was generated as described in Harrison et al. [<xref ref-type="bibr" rid="pcbi-0030232-b025">25</xref>].</p></sec><sec id="s4e"><title>Overview of the CATHEDRAL algorithm.</title><p><italic>Iterative protocol used by CATHEDRAL.</italic> CATHEDRAL uses an iterative protocol illustrated in <xref ref-type="fig" rid="pcbi-0030232-g014">Figure 14</xref>. As described above, novel multidomain proteins are first scanned against a library of domain folds from CATH using the secondary structure GT algorithm. All folds containing hits in the top ten ranked fold hits are then selected for further analysis. To improve the alignment of the matched regions and thereby identify the closest structural neighbour, <italic>fr</italic> representatives from each superfamily in the selected folds are compared against the matched region using the DDP algorithm.</p><fig id="pcbi-0030232-g014" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030232.g014</object-id><label>Figure 14</label><caption><title>Flowchart of CATHEDRAL Algorithm for Assigning Folds and Domain Boundaries to Protein Chains</title></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.g014" xlink:type="simple"/></fig><p>As matches to small domains (fewer than five secondary structures) can produce insignificant E-values (see [<xref ref-type="bibr" rid="pcbi-0030232-b025">25</xref>]) when compared to large chains, these were isolated from the original CATH library and scanned only after all large domains had been assigned by CATHEDRAL.</p><p>A variety of different scoring schemes were assessed for their ability to recognise true matches, together with a combination of several measures using an SVM (see below). If the score suggests that the match is valid, the region is accepted as a putative domain and the alignment used to indicate the residues that can be excluded from the multidomain structure (and score matrix) in future searches. A new graph is constructed from the remaining secondary structures, and the GT and subsequent DDP search is repeated to identify another putative domain. CATHEDRAL continues for up to ten iterations or until there are fewer than three secondary structures left to be assigned.</p><p><italic>Identification of corresponding secondary structures in the multidomain protein and a single domain structure using GT.</italic> GT was first introduced for protein structure comparison by Artymiuk and coworkers [<xref ref-type="bibr" rid="pcbi-0030232-b042">42</xref>]. CATHEDRAL uses a new implementation of this approach [<xref ref-type="bibr" rid="pcbi-0030232-b025">25</xref>] (see Text S1) that includes further structural features (e.g., chirality) to obtain a better resolution between related and unrelated folds. A robust statistical framework was also derived to calculate expectation values (E-values) that can be used to assess the significance of each comparison (see [<xref ref-type="bibr" rid="pcbi-0030232-b025">25</xref>] for a detailed description of the GT algorithm used in CATHEDRAL).</p><p><italic>Generating a residue alignment of the fold match using DDP.</italic> Once a putative domain within the multidomain structure has been matched to a fold in the CATH database, an accurate alignment between this domain and the target structure can be obtained using a residue-based method that exploits DDP.</p><p>CATHEDRAL uses the global alignment version of the DDP algorithm, described in Taylor and Orengo [<xref ref-type="bibr" rid="pcbi-0030232-b027">27</xref>]. This choice followed assessment of the performance obtained using the global and local alignment versions [<xref ref-type="bibr" rid="pcbi-0030232-b043">43</xref>]. The global alignment version is better able to handle proteins with discontiguous domains, as the alignment produced by the local version in such cases was found to match only one of the fragments of the discontinuous domain. The break in the discontiguous domain appears to the alignment program as a large gap, and the local alignment score within the gapped region rapidly falls to zero, thus terminating the alignment incorrectly.</p><p><italic>Using secondary structure matches from the GT filter to guide residue alignment by DDP.</italic> The full DDP algorithm is computationally expensive because it makes an exhaustive search of all possible pathways through the residue and summary level matrices, although this search can be constrained by imposing a window on the score matrix [<xref ref-type="bibr" rid="pcbi-0030232-b027">27</xref>]. Fortunately, it is not necessary to compare all the equivalent positions between two related proteins to obtain an accurate residue alignment. Therefore, the clique information identifying matching secondary structures can be used to exclude large regions of the score matrix by populating a binary matrix, which dictates which residues to compare. First, residues in equivalent secondary structures must pair with one another. As equivalent strands and helices can vary in length (e.g., a helix with 11 residues could be aligned to one with eight residues), it must be an all-versus-all pairing (represented by a square of “1” values in the matrix). Similarly, residues on the end of aligned secondary structures could potentially be paired with residues in the loop regions, so the boundary is extended by 10 residues on either side.</p><p>Second, although the alignment for residues outside the clique is unknown, it is possible to exclude certain pairings. The clique effectively orientates the alignment and dictates that if helix 1 in protein A is equivalent to helix 2 in protein B, it cannot simultaneously be equivalent to helix 3 in protein B. Moreover, it gives the overall direction of the alignment and allows the regions between the clique secondary structures to be linked together.</p><p>Finally, the alignment of embellishments of the core clique secondary structures at the start and ends of the domains is unspecified. However, it is known that these cannot be aligned to any of the core residue pairs. Hence, the starts and ends of the domains are paired up for DDP to decide where the equivalences lie. As outlined in the DDP description in Text S1, residue pairs possessing similar torsional angles and accessibility within these matching secondary structure blocks are then selected for comparison.</p><p>Cliques indicate blocks within which residues in matching secondary structures should be aligned. Gaps between these blocks are also possible locations for the residue alignment algorithm to search. The rest of the score matrix can be ignored. This typically gives a significant reduction in the number of residue pairs that must be compared in the first pass of the DDP algorithm. As well as speeding up the alignment, it also reduces the amount of noise in the summary score matrix accumulated in the first pass, as fewer nonequivalent residue pairs are compared. Similarly, once a domain has been matched in the multidomain structure, the block associated with that domain need not be subsequently searched. These restrictions on the search space result in much faster comparisons without significantly affecting the ability to recognise equivalents.</p><p><italic>Adapting the CATHEDRAL protocol to favour global matches over local motif matches.</italic> The accuracy of the secondary structure–matching algorithm improves with clique size because for larger cliques there are more equivalent geometric relationships identified. This is because a clique that has <italic>N</italic> nodes contains <italic>N</italic>(<italic>N</italic> − 1) / 2 edges. Matches identified using GT are therefore more secure when the clique is large, independent of the residue similarity score. Furthermore, because the scoring scheme for graph-matching breaks down for the very small folds (fewer than three secondary structures [<xref ref-type="bibr" rid="pcbi-0030232-b025">25</xref>]), to maintain the integrity of CATHEDRAL's predictions, these very small proteins are excluded by the algorithm.</p><p>As CATHEDRAL iterates toward a solution, the CATH database is repeatedly scanned. However, some large folds contain structural motifs that match well to small folds. These motif matches sometimes rank higher in the match list because the geometry is very well conserved, and the selection of these matches over equivalent folds can therefore confuse the identification of domain boundaries. This effect can be avoided by attempting to match only large domains first; that is, two passes of CATHEDRAL are performed. The first pass only allows matches to folds in CATH that have graphs of five or more nodes. Once CATHEDRAL has reached its termination, it is applied again to the folds in CATH that have graphs with three or four nodes.</p><p>This strategy results in the smallest folds only being compared against regions of the multidomain protein that are not part of a large fold, as well as typically increasing CATHEDRAL's speed by 50% or more since fewer searches are required. Hence, CATHEDRAL essentially assigns all large domains first before attempting to align smaller domains to any remaining unassigned regions. To aid the assignment of discontiguous domains, in the first iteration, the top hit is also required to be contiguous (i.e., the assigned region comprises one continuous sequence segment).</p><p><italic>Scoring the structural similarity of the domain region aligned by DDP.</italic> To assess whether a given structural hit represents a true fold match within the multidomain protein, several measures of similarity are calculated. The structural similarity score returned by the DDP algorithm is normalised to lie in the range of 0–100 (with 100 for identical structures) irrespective of the protein sizes [<xref ref-type="bibr" rid="pcbi-0030232-b044">44</xref>]. This score is based on similarities in the vectors between C<sub>β</sub> atoms of equivalent residues in the aligned proteins and is normalised to take account of the size of the largest domain being compared.</p><p>A rigid body superposition of the structures is also generated from the equivalent residues identified by the alignment. RMSD of the aligned C<sub>α</sub> atoms is calculated, and a cutoff can be imposed on the local structural similarity (see above) to select only the most similar residue pairs when generating the superposition of the structures. A cutoff of 30 (with 100 representing identical residues) is used to ensure the most equivalent residues pairs are used to calculate the SAS.</p><p><italic>Using an SVM to validate structural matches.</italic> Determining domain boundaries in protein chains through iterative fold assignment presents several challenges. For example, there is the problem of mis-assigning folds that simply match a large structural motif that does not correspond to a significant “global” match to the domain region. Discontiguous domains can also present problems for structural alignment algorithms. Several similarity measures can be considered when gauging whether a match is valid. Manual experimentation can be used to explore and optimise the combination of these measures, or machine learning methodologies can be used. In CATHEDRAL, we exploited an SVM to perform the optimisation automatically and to determine when a significant domain structure match to a classified fold in CATH was occurring.</p><p>In addition to the similarity measures provided by the GT and DDP algorithms, we also considered other features (e.g., the proportion of residues matched between the two structures, and similarity in domain sizes) to help improve recognition of global similarity between domain structures. We used the SVMLight package [<xref ref-type="bibr" rid="pcbi-0030232-b045">45</xref>] to combine these features using a linear kernel.</p><p>To train the SVM, 5-fold cross-validation was used to assess the performance of the SVM models. That is, the dataset was split into five sets, and each one was successively used as the test set, while the model was trained on the other four sets. This reduces any potential bias caused by random fluctuations in the composition of the training and test sets. The error cost for positive examples was weighted according to their ratio to negative examples.</p><p>Features included the raw score, E-value, and clique size (number of matched secondary structures) returned by the GT comparison. In addition, the raw score derived from the DDP algorithm together with the residue overlap (percentage of residues in the CATH domain aligned against the putative domain region), CATH domain size, sequence identity, and SAS. To improve the ability of the classifier to avoid bias toward one feature, each was normalised between 0 and 1.</p><p><italic>Identifying domain boundaries and handling discontinuous domains.</italic> The individual DDP similarity score of equivalent residue pairs, normalised to lie between 0–100, indicates where residue similarity is good (high), where it is poor (low), and where it is nonexistent (residue score is zero). Since only individual domains from CATH are scanned against the multidomain structure, the alignment can be used to find domain boundaries, because the residue pair score falls to zero at the boundary.</p><p>When CATHEDRAL determines which fold to assign to a region of the protein chain, it is also making a judgment of where the domain boundaries lie. The fidelity of this latter process is arguably dependent on the structural similarity between the domain region in the chain and the domain it has matched in the library. Although domain boundaries can be assigned to the chain in the same step as taking the highest scoring hits to each region of the chain, the accuracy can be improved by modifying the boundaries once all assignments have been made.</p><p>Subsequently, domain assignments that contain regions of the chain that overlap with one another are processed as a last step in the protocol. Conflicts are resolved by assuming that the highest-scoring domain is most likely to have the correct boundaries. The boundaries of the overlapping domain are cropped to exclude the shared region. Second, some chains may contain small regions at the start and end that are unassigned. This is often fewer than 20 residues and is unlikely to contain another domain, or comprise an additional segment of a discontiguous domain. In these instances, CATHEDRAL assigns the extra residues at the beginning and end of the chain to the first and last domains, respectively. Similarly, some chains contain small regions between assigned segments. In these cases, CATHEDRAL splits the unassigned residues equally between the two neighbouring segments.</p></sec></sec><sec id="s5"><title>Supporting Information</title><supplementary-material id="pcbi-0030232-se001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030232.sd001" xlink:type="simple"><label>Text S1</label><caption><title>Description of CATH Domain Structure Database</title><p>(48 KB PDF)</p></caption></supplementary-material></sec></body><back><ack><p>We would like to thank the rest of the CATH team for their help and advice, particularly Tony Lewis for technical assistance and Russell Marsden for valuable comments on the manuscript.</p></ack><glossary><title>Abbreviations</title><def-list><def-item><term>DDP</term><def><p>double-dynamic programming</p></def></def-item><def-item><term>GT</term><def><p>graph theory</p></def></def-item><def-item><term>HMM</term><def><p>hidden Markov model</p></def></def-item><def-item><term>PDB</term><def><p>Protein Data Bank</p></def></def-item><def-item><term>PDP</term><def><p>protein domain parser</p></def></def-item><def-item><term>PUU</term><def><p>protein unfolding unit</p></def></def-item><def-item><term>RMSD</term><def><p>root-mean–squared deviation</p></def></def-item><def-item><term>ROC</term><def><p>receiver operating characteristic</p></def></def-item><def-item><term>SAS</term><def><p>structural alignment score</p></def></def-item><def-item><term>SVM</term><def><p>support vector machine</p></def></def-item></def-list></glossary><ref-list><title>References</title><ref id="pcbi-0030232-b001"><label>1</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Apic</surname><given-names>G</given-names></name><name name-style="western"><surname>Gough</surname><given-names>J</given-names></name><name name-style="western"><surname>Teichmann</surname><given-names>SA</given-names></name></person-group>
					<year>2001</year>
					<article-title>Domain combinations in archaeal, eubacterial and eukaryotic proteomes.</article-title>
					<source>J Mol Biol</source>
					<volume>310</volume>
					<fpage>311</fpage>
					<lpage>325</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b002"><label>2</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Orengo</surname><given-names>CA</given-names></name><name name-style="western"><surname>Jones</surname><given-names>DT</given-names></name><name name-style="western"><surname>Thornton</surname><given-names>JM</given-names></name></person-group>
					<year>1994</year>
					<article-title>Protein superfamilies and domain superfolds.</article-title>
					<source>Nature</source>
					<volume>372</volume>
					<fpage>631</fpage>
					<lpage>634</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b003"><label>3</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Coulson</surname><given-names>AF</given-names></name><name name-style="western"><surname>Moult</surname><given-names>J</given-names></name></person-group>
					<year>2002</year>
					<article-title>A unifold, mesofold, and superfold model of protein fold use.</article-title>
					<source>Proteins</source>
					<volume>46</volume>
					<fpage>61</fpage>
					<lpage>71</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b004"><label>4</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Grant</surname><given-names>A</given-names></name><name name-style="western"><surname>Lee</surname><given-names>D</given-names></name><name name-style="western"><surname>Orengo</surname><given-names>C</given-names></name></person-group>
					<year>2004</year>
					<article-title>Progress towards mapping the universe of protein folds.</article-title>
					<source>Genome Biol</source>
					<volume>5</volume>
					<fpage>107</fpage>
				</element-citation></ref><ref id="pcbi-0030232-b005"><label>5</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Murzin</surname><given-names>AG</given-names></name><name name-style="western"><surname>Brenner</surname><given-names>SE</given-names></name><name name-style="western"><surname>Hubbard</surname><given-names>T</given-names></name><name name-style="western"><surname>Chothia</surname><given-names>C</given-names></name></person-group>
					<year>1995</year>
					<article-title>SCOP: A structural classification of proteins database for the investigation of sequences and structures.</article-title>
					<source>J Mol Biol</source>
					<volume>247</volume>
					<fpage>536</fpage>
					<lpage>540</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b006"><label>6</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Orengo</surname><given-names>CA</given-names></name><name name-style="western"><surname>Michie</surname><given-names>AD</given-names></name><name name-style="western"><surname>Jones</surname><given-names>S</given-names></name><name name-style="western"><surname>Jones</surname><given-names>DT</given-names></name><name name-style="western"><surname>Swindells</surname><given-names>MB</given-names></name><etal/></person-group>
					<year>1997</year>
					<article-title>CATH—A hierarchic classification of protein domain structures.</article-title>
					<source>Structure</source>
					<volume>5</volume>
					<fpage>1093</fpage>
					<lpage>1108</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b007"><label>7</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Reeves</surname><given-names>GA</given-names></name><name name-style="western"><surname>Dallman</surname><given-names>TJ</given-names></name><name name-style="western"><surname>Redfern</surname><given-names>OC</given-names></name><name name-style="western"><surname>Akpor</surname><given-names>A</given-names></name><name name-style="western"><surname>Orengo</surname><given-names>CA</given-names></name></person-group>
					<year>2006</year>
					<article-title>Structural diversity of domain superfamilies in the CATH database.</article-title>
					<source>J Mol Biol</source>
					<volume>360</volume>
					<fpage>725</fpage>
					<lpage>741</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b008"><label>8</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Berman</surname><given-names>HM</given-names></name><name name-style="western"><surname>Westbrook</surname><given-names>J</given-names></name><name name-style="western"><surname>Feng</surname><given-names>Z</given-names></name><name name-style="western"><surname>Gilliland</surname><given-names>G</given-names></name><name name-style="western"><surname>Bhat</surname><given-names>TN</given-names></name><etal/></person-group>
					<year>2000</year>
					<article-title>The Protein Data Bank.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>28</volume>
					<fpage>235</fpage>
					<lpage>242</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b009"><label>9</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Jones</surname><given-names>S</given-names></name><name name-style="western"><surname>Stewart</surname><given-names>M</given-names></name><name name-style="western"><surname>Michie</surname><given-names>A</given-names></name><name name-style="western"><surname>Swindells</surname><given-names>MB</given-names></name><name name-style="western"><surname>Orengo</surname><given-names>C</given-names></name><etal/></person-group>
					<year>1998</year>
					<article-title>Domain assignment for protein structures using a consensus approach: Characterization and analysis.</article-title>
					<source>Protein Sci</source>
					<volume>7</volume>
					<fpage>233</fpage>
					<lpage>242</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b010"><label>10</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Holland</surname><given-names>TA</given-names></name><name name-style="western"><surname>Veretnik</surname><given-names>S</given-names></name><name name-style="western"><surname>Shindyalov</surname><given-names>IN</given-names></name><name name-style="western"><surname>Bourne</surname><given-names>PE</given-names></name></person-group>
					<year>2006</year>
					<article-title>Partitioning protein structures into domains: Why is it so difficult?</article-title>
					<source>J Mol Biol</source>
					<volume>361</volume>
					<fpage>562</fpage>
					<lpage>590</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b011"><label>11</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Siddiqui</surname><given-names>AS</given-names></name><name name-style="western"><surname>Barton</surname><given-names>GJ</given-names></name></person-group>
					<year>1995</year>
					<article-title>Continuous and discontinuous domains: An algorithm for the automatic generation of reliable protein domain definitions.</article-title>
					<source>Protein Sci</source>
					<volume>4</volume>
					<fpage>872</fpage>
					<lpage>884</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b012"><label>12</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Holm</surname><given-names>L</given-names></name><name name-style="western"><surname>Sander</surname><given-names>C</given-names></name></person-group>
					<year>1994</year>
					<article-title>Parser for protein folding units.</article-title>
					<source>Proteins</source>
					<volume>19</volume>
					<fpage>256</fpage>
					<lpage>268</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b013"><label>13</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Holm</surname><given-names>L</given-names></name><name name-style="western"><surname>Sander</surname><given-names>C</given-names></name></person-group>
					<year>1998</year>
					<article-title>Dictionary of recurrent domains in protein structures.</article-title>
					<source>Proteins</source>
					<volume>33</volume>
					<fpage>88</fpage>
					<lpage>96</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b014"><label>14</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Swindells</surname><given-names>MB</given-names></name><name name-style="western"><surname>MacArthur</surname><given-names>MW</given-names></name><name name-style="western"><surname>Thornton</surname><given-names>JM</given-names></name></person-group>
					<year>1995</year>
					<article-title>Intrinsic phi, psi propensities of amino acids, derived from the coil regions of known structures.</article-title>
					<source>Nat Struct Biol</source>
					<volume>2</volume>
					<fpage>596</fpage>
					<lpage>603</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b015"><label>15</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Gouzy</surname><given-names>J</given-names></name><name name-style="western"><surname>Corpet</surname><given-names>F</given-names></name><name name-style="western"><surname>Kahn</surname><given-names>D</given-names></name></person-group>
					<year>1999</year>
					<article-title>Whole genome protein domain analysis using a new method for domain clustering.</article-title>
					<source>Comput Chem</source>
					<volume>23</volume>
					<fpage>333</fpage>
					<lpage>340</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b016"><label>16</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Schultz</surname><given-names>J</given-names></name><name name-style="western"><surname>Milpetz</surname><given-names>F</given-names></name><name name-style="western"><surname>Bork</surname><given-names>P</given-names></name><name name-style="western"><surname>Ponting</surname><given-names>CP</given-names></name></person-group>
					<year>1998</year>
					<article-title>SMART, a simple modular architecture research tool: Identification of signaling domains.</article-title>
					<source>Proc Natl Acad Sci U S A</source>
					<volume>95</volume>
					<fpage>5857</fpage>
					<lpage>5864</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b017"><label>17</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bateman</surname><given-names>A</given-names></name><name name-style="western"><surname>Birney</surname><given-names>E</given-names></name><name name-style="western"><surname>Cerruti</surname><given-names>L</given-names></name><name name-style="western"><surname>Durbin</surname><given-names>R</given-names></name><name name-style="western"><surname>Etwiller</surname><given-names>L</given-names></name><etal/></person-group>
					<year>2002</year>
					<article-title>The Pfam protein families database.</article-title>
					<source>Nucleic Acids Res</source>
					<volume>30</volume>
					<fpage>276</fpage>
					<lpage>280</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b018"><label>18</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>George</surname><given-names>RA</given-names></name><name name-style="western"><surname>Heringa</surname><given-names>J</given-names></name></person-group>
					<year>2002</year>
					<article-title>SnapDRAGON: A method to delineate protein structural domains from sequence data.</article-title>
					<source>J Mol Biol</source>
					<volume>316</volume>
					<fpage>839</fpage>
					<lpage>851</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b019"><label>19</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rigden</surname><given-names>DJ</given-names></name></person-group>
					<year>2002</year>
					<article-title>Use of covariance analysis for the prediction of structural domain boundaries from multiple protein sequence alignments.</article-title>
					<source>Protein Eng</source>
					<volume>15</volume>
					<fpage>65</fpage>
					<lpage>77</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b020"><label>20</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Nagarajan</surname><given-names>N</given-names></name><name name-style="western"><surname>Yona</surname><given-names>G</given-names></name></person-group>
					<year>2004</year>
					<article-title>Automatic prediction of protein domains from sequence information using a hybrid learning system.</article-title>
					<source>Bioinformatics</source>
					<volume>20</volume>
					<fpage>1335</fpage>
					<lpage>1360</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b021"><label>21</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Todd</surname><given-names>AE</given-names></name><name name-style="western"><surname>Marsden</surname><given-names>RL</given-names></name><name name-style="western"><surname>Thornton</surname><given-names>JM</given-names></name><name name-style="western"><surname>Orengo</surname><given-names>CA</given-names></name></person-group>
					<year>2005</year>
					<article-title>Progress of structural genomics initiatives: An analysis of solved target structures.</article-title>
					<source>J Mol Biol</source>
					<volume>348</volume>
					<fpage>1235</fpage>
					<lpage>1260</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b022"><label>22</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Chandonia</surname><given-names>JM</given-names></name><name name-style="western"><surname>Brenner</surname><given-names>SE</given-names></name></person-group>
					<year>2006</year>
					<article-title>The impact of structural genomics: Expectations and outcomes.</article-title>
					<source>Science</source>
					<volume>311</volume>
					<fpage>347</fpage>
					<lpage>351</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b023"><label>23</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Madej</surname><given-names>T</given-names></name><name name-style="western"><surname>Gibrat</surname><given-names>JF</given-names></name><name name-style="western"><surname>Bryant</surname><given-names>SH</given-names></name></person-group>
					<year>1995</year>
					<article-title>Threading a database of protein cores.</article-title>
					<source>Proteins</source>
					<volume>23</volume>
					<fpage>356</fpage>
					<lpage>369</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b024"><label>24</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Krissinel</surname><given-names>E</given-names></name><name name-style="western"><surname>Henrick</surname><given-names>K</given-names></name></person-group>
					<year>2004</year>
					<article-title>Secondary-structure matching (SSM), a new tool for fast protein structure alignment in three dimensions.</article-title>
					<source>Acta Crystallogr D Biol Crystallogr</source>
					<volume>60</volume>
					<fpage>2256</fpage>
					<lpage>2268</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b025"><label>25</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Harrison</surname><given-names>A</given-names></name><name name-style="western"><surname>Pearl</surname><given-names>F</given-names></name><name name-style="western"><surname>Sillitoe</surname><given-names>I</given-names></name><name name-style="western"><surname>Slidel</surname><given-names>T</given-names></name><name name-style="western"><surname>Mott</surname><given-names>R</given-names></name><etal/></person-group>
					<year>2003</year>
					<article-title>Recognizing the fold of a protein structure.</article-title>
					<source>Bioinformatics</source>
					<volume>19</volume>
					<fpage>1748</fpage>
					<lpage>1759</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b026"><label>26</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Holm</surname><given-names>L</given-names></name><name name-style="western"><surname>Sander</surname><given-names>C</given-names></name></person-group>
					<year>1993</year>
					<article-title>Protein structure comparison by alignment of distance matrices.</article-title>
					<source>J Mol Biol</source>
					<volume>233</volume>
					<fpage>123</fpage>
					<lpage>138</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b027"><label>27</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Taylor</surname><given-names>WR</given-names></name><name name-style="western"><surname>Orengo</surname><given-names>CA</given-names></name></person-group>
					<year>1989</year>
					<article-title>Protein structure alignment.</article-title>
					<source>J Mol Biol</source>
					<volume>208</volume>
					<fpage>1</fpage>
					<lpage>22</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b028"><label>28</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sali</surname><given-names>A</given-names></name><name name-style="western"><surname>Blundell</surname><given-names>TL</given-names></name></person-group>
					<year>1990</year>
					<article-title>Definition of general topological equivalence in protein structures. A procedure involving comparison of properties and relationships through simulated annealing and dynamic programming.</article-title>
					<source>J Mol Biol</source>
					<volume>212</volume>
					<fpage>403</fpage>
					<lpage>428</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b029"><label>29</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Kolodny</surname><given-names>R</given-names></name><name name-style="western"><surname>Koehl</surname><given-names>P</given-names></name><name name-style="western"><surname>Levitt</surname><given-names>M</given-names></name></person-group>
					<year>2005</year>
					<article-title>Comprehensive evaluation of protein structure alignment methods: Scoring by geometric measures.</article-title>
					<source>J Mol Biol</source>
					<volume>346</volume>
					<fpage>1173</fpage>
					<lpage>1188</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b030"><label>30</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Shindyalov</surname><given-names>IN</given-names></name><name name-style="western"><surname>Bourne</surname><given-names>PE</given-names></name></person-group>
					<year>1998</year>
					<article-title>Protein structure alignment by incremental combinatorial extension (CE) of the optimal path.</article-title>
					<source>Protein Eng</source>
					<volume>11</volume>
					<fpage>739</fpage>
					<lpage>747</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b031"><label>31</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Thompson</surname><given-names>JD</given-names></name><name name-style="western"><surname>Plewniak</surname><given-names>F</given-names></name><name name-style="western"><surname>Poch</surname><given-names>O</given-names></name></person-group>
					<year>1999</year>
					<article-title>BAliBASE: A benchmark alignment database for the evaluation of multiple alignment programs.</article-title>
					<source>Bioinformatics</source>
					<volume>15</volume>
					<fpage>87</fpage>
					<lpage>88</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b032"><label>32</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Bravo</surname><given-names>J</given-names></name><name name-style="western"><surname>Verdaguer</surname><given-names>N</given-names></name><name name-style="western"><surname>Tormo</surname><given-names>J</given-names></name><name name-style="western"><surname>Betzel</surname><given-names>C</given-names></name><name name-style="western"><surname>Switala</surname><given-names>J</given-names></name><etal/></person-group>
					<year>1995</year>
					<article-title>Crystal structure of catalase HPII from <named-content content-type="genus-species" xlink:type="simple">Escherichia coli</named-content>.</article-title>
					<source>Structure</source>
					<volume>3</volume>
					<fpage>491</fpage>
					<lpage>502</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b033"><label>33</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Brownlow</surname><given-names>S</given-names></name><name name-style="western"><surname>Morais Cabral</surname><given-names>JH</given-names></name><name name-style="western"><surname>Cooper</surname><given-names>R</given-names></name><name name-style="western"><surname>Flower</surname><given-names>DR</given-names></name><name name-style="western"><surname>Yewdall</surname><given-names>SJ</given-names></name><etal/></person-group>
					<year>1997</year>
					<article-title>Bovine beta-lactoglobulin at 1.8 A resolution—Still an enigmatic lipocalin.</article-title>
					<source>Structure</source>
					<volume>5</volume>
					<fpage>481</fpage>
					<lpage>495</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b034"><label>34</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Eddy</surname><given-names>SR</given-names></name></person-group>
					<year>1996</year>
					<article-title>Hidden Markov models.</article-title>
					<source>Curr Opin Struct Biol</source>
					<volume>6</volume>
					<fpage>361</fpage>
					<lpage>365</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b035"><label>35</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Koppensteiner</surname><given-names>WA</given-names></name><name name-style="western"><surname>Lackner</surname><given-names>P</given-names></name><name name-style="western"><surname>Wiederstein</surname><given-names>M</given-names></name><name name-style="western"><surname>Sippl</surname><given-names>MJ</given-names></name></person-group>
					<year>2000</year>
					<article-title>Characterization of novel proteins based on known protein structures.</article-title>
					<source>J Mol Biol</source>
					<volume>296</volume>
					<fpage>1139</fpage>
					<lpage>1152</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b036"><label>36</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Holm</surname><given-names>L</given-names></name><name name-style="western"><surname>Sander</surname><given-names>C</given-names></name></person-group>
					<year>1996</year>
					<article-title>Mapping the protein universe.</article-title>
					<source>Science</source>
					<volume>273</volume>
					<fpage>595</fpage>
					<lpage>603</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b037"><label>37</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Harrison</surname><given-names>A</given-names></name><name name-style="western"><surname>Pearl</surname><given-names>F</given-names></name><name name-style="western"><surname>Mott</surname><given-names>R</given-names></name><name name-style="western"><surname>Thornton</surname><given-names>J</given-names></name><name name-style="western"><surname>Orengo</surname><given-names>C</given-names></name></person-group>
					<year>2002</year>
					<article-title>Quantifying the similarities within fold space.</article-title>
					<source>J Mol Biol</source>
					<volume>323</volume>
					<fpage>909</fpage>
					<lpage>926</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b038"><label>38</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Veretnik</surname><given-names>S</given-names></name><name name-style="western"><surname>Bourne</surname><given-names>PE</given-names></name><name name-style="western"><surname>Alexandrov</surname><given-names>NN</given-names></name><name name-style="western"><surname>Shindyalov</surname><given-names>IN</given-names></name></person-group>
					<year>2004</year>
					<article-title>Toward consistent assignment of structural domains in proteins.</article-title>
					<source>J Mol Biol</source>
					<volume>339</volume>
					<fpage>647</fpage>
					<lpage>678</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b039"><label>39</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Mizuguchi</surname><given-names>K</given-names></name><name name-style="western"><surname>Deane</surname><given-names>CM</given-names></name><name name-style="western"><surname>Blundell</surname><given-names>TL</given-names></name><name name-style="western"><surname>Overington</surname><given-names>JP</given-names></name></person-group>
					<year>1998</year>
					<article-title>HOMSTRAD: A database of protein structure alignments for homologous families.</article-title>
					<source>Protein Sci</source>
					<volume>7</volume>
					<fpage>2469</fpage>
					<lpage>2471</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b040"><label>40</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sander</surname><given-names>C</given-names></name><name name-style="western"><surname>Schneider</surname><given-names>R</given-names></name></person-group>
					<year>1991</year>
					<article-title>Database of homology-derived protein structures and the structural meaning of sequence alignment.</article-title>
					<source>Proteins</source>
					<volume>9</volume>
					<fpage>56</fpage>
					<lpage>68</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b041"><label>41</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Laskowski</surname><given-names>RA</given-names></name><name name-style="western"><surname>Hutchinson</surname><given-names>EG</given-names></name><name name-style="western"><surname>Michie</surname><given-names>AD</given-names></name><name name-style="western"><surname>Wallace</surname><given-names>AC</given-names></name><name name-style="western"><surname>Jones</surname><given-names>ML</given-names></name><etal/></person-group>
					<year>1997</year>
					<article-title>PDBsum: A Web-based database of summaries and analyses of all PDB structures.</article-title>
					<source>Trends Biochem Sci</source>
					<volume>22</volume>
					<fpage>488</fpage>
					<lpage>490</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b042"><label>42</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Grindley</surname><given-names>HM</given-names></name><name name-style="western"><surname>Artymiuk</surname><given-names>PJ</given-names></name><name name-style="western"><surname>Rice</surname><given-names>DW</given-names></name><name name-style="western"><surname>Willett</surname><given-names>P</given-names></name></person-group>
					<year>1993</year>
					<article-title>Identification of tertiary structure resemblance in proteins using a maximal common subgraph isomorphism algorithm.</article-title>
					<source>J Mol Biol</source>
					<volume>229</volume>
					<fpage>707</fpage>
					<lpage>721</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b043"><label>43</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Orengo</surname><given-names>CA</given-names></name><name name-style="western"><surname>Taylor</surname><given-names>WR</given-names></name></person-group>
					<year>1993</year>
					<article-title>A local alignment method for protein structure motifs.</article-title>
					<source>J Mol Biol</source>
					<volume>233</volume>
					<fpage>488</fpage>
					<lpage>497</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b044"><label>44</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Orengo</surname><given-names>CA</given-names></name><name name-style="western"><surname>Brown</surname><given-names>NP</given-names></name><name name-style="western"><surname>Taylor</surname><given-names>WR</given-names></name></person-group>
					<year>1992</year>
					<article-title>Fast structure alignment for protein databank searching.</article-title>
					<source>Proteins</source>
					<volume>14</volume>
					<fpage>139</fpage>
					<lpage>167</lpage>
				</element-citation></ref><ref id="pcbi-0030232-b045"><label>45</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Joachims</surname><given-names>T</given-names></name></person-group>
					<year>1999</year>
					<article-title>Making large-scale SVM learning practical.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Schölkopf</surname><given-names>B</given-names></name><name name-style="western"><surname>Burges</surname><given-names>C</given-names></name><name name-style="western"><surname>Smola</surname><given-names>A</given-names></name></person-group>
					<source>Advances in kernel methods—Support vector learning</source>
					<publisher-loc>Cambridge (Massachusetts)</publisher-loc>
					<publisher-name>MIT Press</publisher-name>
					<!--===== Restructure page-count as size[@units="page"] =====--><size units="page">376</size>
				</element-citation></ref></ref-list></back></article>