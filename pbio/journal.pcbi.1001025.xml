<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
<front>
<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="publisher-id">10-PLCB-RA-2768R2</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1001025</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology</subject><subject>Computational Biology/Comparative Sequence Analysis</subject><subject>Computational Biology/Genomics</subject><subject>Evolutionary Biology</subject><subject>Evolutionary Biology/Bioinformatics</subject><subject>Evolutionary Biology/Evolutionary and Comparative Genetics</subject><subject>Evolutionary Biology/Genomics</subject></subj-group></article-categories><title-group><article-title>Identifying a High Fraction of the Human Genome to be under Selective Constraint Using GERP++</article-title><alt-title alt-title-type="running-head">Constrained Element Detection Using GERP++</alt-title></title-group><contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Davydov</surname><given-names>Eugene V.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Goode</surname><given-names>David L.</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Sirota</surname><given-names>Marina</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Cooper</surname><given-names>Gregory M.</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff5"><sup>5</sup></xref><xref ref-type="fn" rid="fn1"><sup>¤</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Sidow</surname><given-names>Arend</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff6"><sup>6</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Batzoglou</surname><given-names>Serafim</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
</contrib-group><aff id="aff1"><label>1</label><addr-line>Department of Computer Science, Stanford University, Stanford, California, United States of America</addr-line>       </aff><aff id="aff2"><label>2</label><addr-line>Department of Genetics, Stanford University School of Medicine, Stanford, California, United States of America</addr-line>       </aff><aff id="aff3"><label>3</label><addr-line>Biomedical Informatics Program, Stanford University, Stanford, California, United States of America</addr-line>       </aff><aff id="aff4"><label>4</label><addr-line>Department of Genome Sciences, University of Washington, Seattle, Washington, United States of America</addr-line>       </aff><aff id="aff5"><label>5</label><addr-line>Howard Hughes Medical Institute, University of Washington, Seattle, Washington, United States of America</addr-line>       </aff><aff id="aff6"><label>6</label><addr-line>Department of Pathology, Stanford University School of Medicine, Stanford, California, United States of America</addr-line>       </aff><contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Wasserman</surname><given-names>Wyeth W.</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group><aff id="edit1">University of British Columbia, Canada</aff><author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">arend@stanford.edu</email></corresp>
<fn fn-type="current-aff" id="fn1"><label>¤</label><p>Current address: HudsonAlpha Institute for Biotechnology, Huntsville, Alabama, United States of America.</p></fn>
<fn fn-type="con"><p>Conceived and designed the experiments: EVD GMC AS SB. Performed the experiments: EVD DLG MS. Analyzed the data: EVD DLG MS. Wrote the paper: EVD DLG MS AS SB.</p></fn>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="collection"><month>12</month><year>2010</year></pub-date><pub-date pub-type="epub"><day>2</day><month>12</month><year>2010</year></pub-date><volume>6</volume><issue>12</issue><elocation-id>e1001025</elocation-id><history>
<date date-type="received"><day>27</day><month>8</month><year>2010</year></date>
<date date-type="accepted"><day>8</day><month>11</month><year>2010</year></date>
</history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2010</copyright-year><copyright-holder>Davydov et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract>
<p>Computational efforts to identify functional elements within genomes leverage comparative sequence information by looking for regions that exhibit evidence of selective constraint. One way of detecting constrained elements is to follow a bottom-up approach by computing constraint scores for individual positions of a multiple alignment and then defining constrained elements as segments of contiguous, highly scoring nucleotide positions. Here we present GERP++, a new tool that uses maximum likelihood evolutionary rate estimation for position-specific scoring and, in contrast to previous bottom-up methods, a novel dynamic programming approach to subsequently define constrained elements. GERP++ evaluates a richer set of candidate element breakpoints and ranks them based on statistical significance, eliminating the need for biased heuristic extension techniques. Using GERP++ we identify over 1.3 million constrained elements spanning over 7% of the human genome. We predict a higher fraction than earlier estimates largely due to the annotation of longer constrained elements, which improves one to one correspondence between predicted elements with known functional sequences. GERP++ is an efficient and effective tool to provide both nucleotide- and element-level constraint scores within deep multiple sequence alignments.</p>
</abstract><abstract abstract-type="summary"><title>Author Summary</title>
<p>There are millions of sequences in the human genome that perform essential functions, such as protein-coding exons, noncoding RNAs, and regulatory sequences that control the transcription of genes. However, these functional sequences are embedded in a background of DNA that serves no discernible function. Thus, a major challenge in the field of genomics is the accurate identification of functional sequences in the human genome. One approach to identify functional sequences is to align the genome sequences of many divergent species and search for sequences whose similarity has been maintained during evolution. We have developed GERP++, a software tool that utilizes this “comparative genomics” approach to identify putatively functional sequences. Given a multiple sequence alignment, GERP++ identifies sites under evolutionary constraint, i.e., sites that show fewer substitutions than would be expected to occur during neutral evolution. GERP++ then aggregates these sites into longer, potentially functional sequences called constrained elements. Using GERP++ results in improved resolution of functional sequence elements in the human genome and reveals that a higher proportion of the human genome is under evolutionary constraint (∼7%) than was previously estimated.</p>
</abstract><funding-group><funding-statement>The work was partly supported by an Encode subcontract to AS and SB (PI, Richard Myers), NIH/NHGRI. This work was supported by US National Library of Medicine (K22 LM008261 and T15 LM007033). This work has been supported in part by NSF grant #0347952. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="13"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>The identification and annotation of all functional elements in the human genome is one of the main goals of contemporary genetics in general, and the ENCODE project in particular <xref ref-type="bibr" rid="pcbi.1001025-Margulies1">[1]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-The1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Birney1">[3]</xref>. Comparative sequence analysis, enabled by multiple sequence alignments of the human genome to dozens of mammalian species, has become a powerful tool in the pursuit of this goal, as sequence conservation due to negative selection is often a strong signal of biological function. After constructing a multiple sequence alignment, one can quantify evolutionary rates at the level of individual positions and identify segments of the alignment that show significantly elevated levels of conservation.</p>
<p>Several computational methods for constrained element (CE) detection have been developed, with most falling into one of two broad categories: generative model-based approaches, which attempt to explicitly model the quantity and distribution of constraint within an alignment, and bottom-up approaches, which first estimate constraint at individual positions and then look for clusters of highly constrained positions. A widely used generative approach, phastCons <xref ref-type="bibr" rid="pcbi.1001025-Siepel1">[4]</xref>, uses a phylo-Hidden Markov Model (HMM) to find the most likely parse of the alignment into constrained and neutral hidden states. While HMMs are widely used in modeling biological sequences, they have known drawbacks: transition probabilities imply a specific geometric state duration distribution, which in the context of phastCons means predicted constrained and neutral segment length. This may bias the resulting estimates of element length and total genomic fraction under constraint.</p>
<p>One of the leading bottom-up approaches is GERP <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref>, which quantifies position-specific constraint in terms of rejected substitutions (RS), the difference between the neutral rate of substitution and the observed rate as estimated by maximum likelihood, and heuristically extends contiguous segments of constrained positions (RS&gt;0) in a BLAST-like <xref ref-type="bibr" rid="pcbi.1001025-Altschul1">[6]</xref> manner. However, GERP is computationally slow because its maximum likelihood computation uses the Expectation Maximization algorithm <xref ref-type="bibr" rid="pcbi.1001025-Dempster1">[7]</xref> to estimate a new set of branch lengths for each position of the alignment; this step is also undesirable methodologically because it involves estimating k real-valued parameters from k nucleotides of data. Furthermore, the extension heuristic used by GERP (and other bottom-up methods <xref ref-type="bibr" rid="pcbi.1001025-Margulies2">[8]</xref>) may induce biases in the length of predicted CEs.</p>
<p>In this work we present GERP++, a novel bottom-up method for constrained element detection that like GERP uses rejected substitutions as a metric of constraint. GERP++ uses a significantly faster and more statistically robust maximum likelihood estimation procedure to compute expected rates of evolution that results in a more than 100-fold reduction in computation time. In addition, we introduce a novel criterion of grouping constrained positions into constrained elements using statistical significance as a guide and assigning p-values to our predictions. We apply a dynamic programming approach to globally predict a set of constrained elements ranked by their p-values and a concomitant false positive rate estimate. Using GERP++ we analyzed an alignment of the human genome and 33 other mammalian species, identifying over 1.3 million constrained elements spanning over 7% of the human genome with high confidence. Compared to previous methods, we predict a larger fraction of the human genome to be contained in constrained elements due to the annotation of many fewer but longer elements, with a very low false positive rate.</p>
</sec><sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>Overview of Algorithm</title>
<p>Like other bottom-up approaches, the GERP++ algorithm consists of two components: calculation of position-specific constraint scores for each column of a multiple alignment, and subsequent aggregation of neighboring columns into segments that score significantly higher than expected by chance (<xref ref-type="fig" rid="pcbi-1001025-g001">Fig 1</xref>; see <xref ref-type="sec" rid="s4">Methods</xref> for more detailed description). These are largely independent procedures: the GERP++ score for a specific position depends entirely on the nucleotides at that position and not on any global element predictions, while identification of statistically significant high-scoring segments depends only on the additivity of individual position scores and can potentially be used in conjunction with other position-specific scoring metrics.</p>
<fig id="pcbi-1001025-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.g001</object-id><label>Figure 1</label><caption>
<title>Overview of GERP++.</title>
<p>(1) For each position of the multiple alignment we compute the conservation score in rejected substitutions by subtracting the estimated evolutionary rate from the neutral rate. The neutral rate is computed by removing species gapped at that position from the phylogenetic tree and summing the branch lengths of the resulting projected tree; the evolutionary rate is estimated by computing the maximum likelihood rescaling of the projected tree. (2) Given position-specific conservation scores, we generate a set of candidate elements. (3) For each candidate element, we compute a p-value to represent the likelihood of observing a segment of equal length and greater than or equal score under the null model. We then select a non-overlapping set of elements in order of increasing p-value.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.g001" xlink:type="simple"/></fig>
<p>Constraint intensity at individual alignment positions is quantified in terms of “rejected substitutions” (RS), defined as the number of substitutions expected under neutrality minus the number of substitutions “observed” at the position <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref>. Thus, positive scores represent a substitution deficit (which would be expected for sites under selective constraint), while negative scores represent a substitution surplus. To estimate this quantity at each aligned position, GERP++ begins with a pre-defined neutral tree relating the genomes present within the alignment that supplies both the total neutral rate across the entire tree and the relative length of each individual branch. For each alignment column, we estimate a scaling factor, applied uniformly to all branches of the tree, that maximizes the probability of the observed nucleotides in the alignment column. The product of the scaling factor and the neutral rate defines the ‘observed’ rate of evolution at each position.</p>
<p>Then, in the element-finding step, GERP++ uses the position-specific RS scores to generate a set of candidate elements. For each putative element it computes a p-value based on the element's length and score (defined as the sum of RS scores for each position within the element) that represents the probability of observing such an element in the null model. These p-values are used to rank CEs in order of significance and report a set of non-overlapping predictions, starting with the lowest (best) p-value. Rather than applying a fixed cutoff, GERP++ estimates the false positive rate by randomly permuting the input RS-scores and treating any prediction within the shuffled sequence as a false positive, similar to the first version of GERP <xref ref-type="bibr" rid="pcbi.1001025-Margulies1">[1]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref>.</p>
</sec><sec id="s2b">
<title>Constraint in the Human Genome</title>
<p>We used GERP++ to analyze the TBA alignment of the human genome to 33 other mammalian species (the most distant mammalian species is Platypus) spanning over 3 billion positions with a phylogenetic scope of 5.83 substitutions per neutral site. We identified 1,354,034 constrained elements covering 214,749,502 nucleotides, or approximately 7% of the human genome, with an estimated false positive rate of 0.86% at the nucleotide level (see <xref ref-type="sec" rid="s4">Methods</xref> for details). Compared to a slightly negative background average of −0.125 RS, GERP++ predictions and certain known functional elements display an elevated level of constraint, in excess of 1.7 RS. GERP++ elements range in size from 4 to nearly 2000 bases, with mean length of 158.6 nucleotides. The minimum (4 bases) and maximum lengths (2000 bases) are parameters of the algorithm, and the tail of the length distribution (<xref ref-type="supplementary-material" rid="pcbi.1001025.s002">Fig S2A</xref>) suggests that with a more permissive upper bound even longer elements could be identified.</p>
<p>We observe significant variation among entire chromosomes of both average RS score and fraction of positions predicted to belong to constrained elements (<xref ref-type="fig" rid="pcbi-1001025-g002">Fig 2</xref>). The mean constraint level varied from −0.3 to −0.05 RS with the exception of chromosome X, which was the only chromosome with a positive average RS score, just under 0.1 RS. This result is consistent with earlier work <xref ref-type="bibr" rid="pcbi.1001025-McVean1">[9]</xref>, which suggested that the X chromosome in rodents has a reduced mutation rate. We also observe substantial fluctuation in the fraction of each chromosome predicted to be inside constrained elements, which varied from 1% of the Y chromosome to 4–9% for other chromosomes. We expect this metric to be low for the Y chromosome because a large portion of the alignments for the Y chromosome are too shallow to perform a rate estimation, but even when adjusting for “effective” chromosome size much of the fluctuation remains (<xref ref-type="fig" rid="pcbi-1001025-g002">Fig 2B</xref>). Surprisingly, despite a low fraction of the Y chromosome being within constrained elements, it does not have a particularly low average RS score, while the X chromosome does not exhibit a high CE fraction despite the positive average RS. In fact, there appears to be at best weak correlation between these two metrics of constraint: since the null model is derived from the actual distribution of RS scores for a given region, any (additive) difference in RS score applied uniformly to every position in the region would not change the p-value of any candidate element (although in practice this would alter the exact boundaries, resulting in a slightly different candidate set). The chromosomal fraction within predicted constrained elements ultimately depends more on the distribution and variance of the scores rather than the mean. Unfortunately, this is impossible to quantify exactly due to confounding factors such as differences in alignment quality and depth.</p>
<fig id="pcbi-1001025-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.g002</object-id><label>Figure 2</label><caption>
<title>Per-chromosome constraint intensity.</title>
<p>(A) Mean RS score for all alignment positions where evolutionary rate was computed. Note the elevated average score for chromosome X. (B) Fraction of chromosome that falls into predicted constrained elements. Light green bars show fraction of entire chromosome, while dark green bars show fraction adjusted for regions where no rate computation was performed and no elements could span (see <xref ref-type="sec" rid="s4">Methods</xref>).</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.g002" xlink:type="simple"/></fig></sec><sec id="s2c">
<title>Estimating Detectable Constraint</title>
<p>The only major parameter for GERP++ is a false positive rate cutoff that determines at what point the algorithm should stop generating predictions in order to avoid too many false discoveries. Throughout its execution GERP++ keeps track of the constrained elements predicted so far, as well as estimates of the number and total size of false positive predictions for the specified cutoff level. Examining how these quantities grow as the cutoff parameter increases permits us to estimate the amount of total constraint that can be detected using this methodology and give an approximate upper bound on the amount of constraint within the human genome.</p>
<p>Let B(<italic>c</italic>) be the number of bases within constrained elements predicted at false positive cutoff <italic>c</italic>, and let B<sup>*</sup>(<italic>c</italic>) = B(<italic>c</italic>)−F(<italic>c</italic>) be the same quantity adjusted for false positive predictions by subtracting the estimated number of false positive bases (as found in shuffled alignments) at cutoff <italic>c</italic>. <xref ref-type="fig" rid="pcbi-1001025-g003">Fig 3</xref> shows B and B<sup>*</sup> as a function of <italic>c</italic> from 0 to 50%: while B continues to increase, B* starts to level off right as B begins to grow linearly. This suggests that max<italic><sub>c</sub></italic> B<sup>*</sup>(<italic>c</italic>) can be used to estimate the total number of bases in constrained elements that can be annotated using this method in any given region or the entire genome. Approximately 225 megabases, or nearly 7.3% of the human genome can be detected as contained in CEs using GERP++ at the mammalian phylogenetic scope. If we adjust for the portions of the genome where rate estimation was not performed (but with a deeper alignment might be in the future), we estimate that up to 8% of the human genome consists of CEs detectable using this kind of methodology. Combined with the observation that about 190 megabases, or 6.2% can be detected at a false positive cutoff of 0 (<xref ref-type="fig" rid="pcbi-1001025-g003">Fig 3</xref>), we obtain a fairly narrow estimate of 6–8% of the human genome under detectable evolutionary constraint, in the mammalian scope. We note that this estimate depends on alignment quality, since we may fail to pinpoint constrained elements not only due to method-intrinsic limitations but also because an appropriate signal may be absent in a given multiple alignment.</p>
<fig id="pcbi-1001025-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.g003</object-id><label>Figure 3</label><caption>
<title>Estimating detectable constraint.</title>
<p>The red curve represents the number of bases within predicted constrained element as a function of the false positive cutoff parameter. The blue curve represents the number of predicted bases minus the expected number of false positive bases, also as a function of the false positive cutoff.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.g003" xlink:type="simple"/></fig></sec><sec id="s2d">
<title>Association of Predicted CEs with Known Functional Elements</title>
<p>We next examine the relationship between evolutionary constraint and several classes of biologically important regions. Overall, coding exons exhibit by far the strongest levels of constraint, as quantified both by the average RS score within functional elements (<xref ref-type="fig" rid="pcbi-1001025-g004">Fig 4A</xref>), and by fraction of bases that overlap the predicted CEs (see <xref ref-type="table" rid="pcbi-1001025-t001">Table 1</xref>). Both 5′ and 3′ UTR regions show weaker but noticeable constraint levels and, somewhat surprisingly, introns on average have slightly lower RS scores than the overall genomic baseline. However, a nontrivial fraction of introns does exhibit evidence of constraint, as nearly 7% of intron positions overlap predicted elements (<xref ref-type="table" rid="pcbi-1001025-t001">Table 1</xref>), and these positions make up a large fraction of constrained element bases (see <xref ref-type="fig" rid="pcbi-1001025-g004">Fig 4B</xref>).</p>
<fig id="pcbi-1001025-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.g004</object-id><label>Figure 4</label><caption>
<title>Relationship between CEs and known functional elements.</title>
<p>(A) Mean rejected substitution scores for entire human genome, constrained elements predicted by GERP++, and known annotated exons, introns, and UTR regions. (B) Breakdown of constrained element positions by region type.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.g004" xlink:type="simple"/></fig><table-wrap id="pcbi-1001025-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.t001</object-id><label>Table 1</label><caption>
<title>Fraction of functional regions covered by constrained elements on a nucleotide level.</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1001025-t001-1" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.t001" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Annotation</td>
<td align="left" colspan="1" rowspan="1">% Coverage by CEs</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">Exons</td>
<td align="left" colspan="1" rowspan="1">84.6%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Introns</td>
<td align="left" colspan="1" rowspan="1">6.9%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">UTR5′</td>
<td align="left" colspan="1" rowspan="1">23.7%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">UTR3′</td>
<td align="left" colspan="1" rowspan="1">33.9%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">ncRNA</td>
<td align="left" colspan="1" rowspan="1">10.1%</td>
</tr>
</tbody>
</table></alternatives></table-wrap>
<p>Over 94% of the coding exons in the human genome overlap at least one predicted CE; conversely, only about 16% of constrained elements overlap a coding exon. CEs that overlap exons are on average ∼60 nucleotides or 40% longer, and consequently have more than two-fold higher scores, than elements that do not overlap exons (both t-tests significant at p-value&lt;2.2·10−16). While overall these results are consistent with what was observed using the previous version of GERP <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref> on much more limited alignments, the length difference between exon-associated and non-overlapping CEs is somewhat smaller than what was previously found. This is partially explained by the differences in the pattern of constraint between coding exons and other regions. Because the previous GERP by default only merges blocks of contiguous constrained positions if they are separated by at most one unconstrained position <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref>, it is far more likely to generate longer elements in exonic regions where most unconstrained bases correspond to 3rd positions of a codon and are usually flanked by constrained positions. In noncoding regions where unconstrained positions are distributed more irregularly and often occur consecutively, the previous GERP algorithm <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref> ends up fragmenting longer constrained regions and generating shorter elements. Because GERP++ does not base merging decisions on any such fixed threshold it is able to better annotate longer noncoding CEs.</p>
<p>To further test this hypothesis, and to investigate a potentially useful signal for detecting coding exons, we introduce a metric that rigorously quantifies this pattern of constraint for any region. For any given segment, we define the 3-periodicity bias as the maximum over the 3 possible reading frames of the mean RS score at positions 1 and 2 minus the mean RS score at position 3. This metric quantifies a periodic bias in constraint and effectively deals with unknown reading frame location and lack of a reading frame altogether, since the maximum is taken over all 3 possibilities. As <xref ref-type="fig" rid="pcbi-1001025-g005">Fig 5</xref> shows, the 3-periodicity bias is a strong signal characteristic of coding exons (mean 2.96) compared to other regions such as UTRs, introns, and ncRNAs (mean 0.13–0.38, difference significant at p-value&lt;2.2·10<sup>−16</sup>). We partitioned the constrained elements predicted by GERP++ according to exon overlap, and found that CEs overlapping coding exons have a much greater mean 3-periodicity bias (<xref ref-type="table" rid="pcbi-1001025-t002">Table 2</xref>). However, the difference between CEs that did not overlap any annotated exons, and known nonexonic regions such as introns was still significant, suggesting some of these CEs intersect unannotated exonic regions. To test this hypothesis, we checked the constrained elements that did not overlap any known coding exons against exon predictions made by the computational gene prediction tool CONTRAST <xref ref-type="bibr" rid="pcbi.1001025-Gross1">[10]</xref>. We found 16,881 CEs (making up 1.5% of all CEs that did not overlap known genes) that overlapped CONTRAST predictions, and these CEs had a significantly higher 3-periodicity bias (1.33) than those that did not overlap CONTRAST predictions (0.54). As this latter figure is still higher than the average 3-periodicity of clearly non-exonic elements, it is possible that a fraction of these elements overlap unannotated exons or pseudogenes with recently lost function. It is interesting to note that the difference between 3-periodicity bias of GERP++ CEs that overlap known exons (2.46) and CEs that overlap CONTRAST predictions (1.33) is also significant. This is likely a combination of two factors: false positives (or errors in identifying the exact boundary) in CONTRAST predictions, and selection bias that manifests as exons with higher 3-periodicity being more conserved and/or easier to identify, and thus annotated in the UCSC Known Genes set.</p>
<fig id="pcbi-1001025-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.g005</object-id><label>Figure 5</label><caption>
<title>Distributions (smoothed histograms) of 3-periodicity bias for known exons (red), introns (green), CEs that overlap exons (orange), and CEs not overlapping exons (blue).</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.g005" xlink:type="simple"/></fig><table-wrap id="pcbi-1001025-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.t002</object-id><label>Table 2</label><caption>
<title>Mean 3-periodicity bias for different types of regions.</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1001025-t002-2" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.t002" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Type</td>
<td align="left" colspan="1" rowspan="1">Mean 3-periodicity Bias</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">Exons</td>
<td align="left" colspan="1" rowspan="1">2.96</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">5′ UTR</td>
<td align="left" colspan="1" rowspan="1">0.57</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">3′ UTR</td>
<td align="left" colspan="1" rowspan="1">0.32</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Introns</td>
<td align="left" colspan="1" rowspan="1">0.18</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">CEs overlapping exons</td>
<td align="left" colspan="1" rowspan="1">2.46</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">CEs not overlapping exons</td>
<td align="left" colspan="1" rowspan="1">0.55</td>
</tr>
</tbody>
</table></alternatives></table-wrap></sec><sec id="s2e">
<title>Comparison with PhastCons</title>
<p>We compared the GERP++ constrained element predictions in placental mammals (see <xref ref-type="sec" rid="s4">Methods</xref>) to phastCons <xref ref-type="bibr" rid="pcbi.1001025-Siepel1">[4]</xref>, the leading generative model-based tool. Not surprisingly, we found significant overlap between GERP++ and phastCons predictions: 80% of GERP++ predictions overlapped at least one phastCons prediction, and vice versa. However, aside from both algorithms detecting clearly constrained areas, there are substantial differences: GERP++ predicts significantly fewer elements, which are much longer on average (see <xref ref-type="supplementary-material" rid="pcbi.1001025.s002">Fig S2B</xref> for distribution of phastCons element lengths) and cover a substantially larger portion of the human genome - almost twice as much as the 4% predicted by phastCons (<xref ref-type="fig" rid="pcbi-1001025-g006">Fig 6A</xref>). As a result, on a nucleotide level GERP++ overlaps 90% of phastCons predictions while only half of GERP++ CE positions are covered by phastCons.</p>
<fig id="pcbi-1001025-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.g006</object-id><label>Figure 6</label><caption>
<title>GERP++ vs phastCons predictions.</title>
<p>(A) Mean length (left), number (middle) and total length (right) of constrained elements predicted by GERP++ (blue) and phastCons(yellow). (B) Nucleotide-level fraction of annotated exons, introns, UTRs and noncoding RNAs genes covered by GERP++ (blue) and phastCons (yellow) predictions. (C&amp;D) Histogram of number of distinct predicted GERP++ (blue, D) and phastCons(yellow, C) constrained elements overlapping each annotated coding exon. Note the difference in scale on the y-axis. (E) A constrained region slightly over 200 base pairs in length that contains a known exon, as annotated by GERP++ (labeled ‘GERP++’, black) and phastCons (purple track labeled ‘Mammal El’). Note how phastCons fragments the exon into multiple CE predictions.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.g006" xlink:type="simple"/></fig>
<p>Part of the reason for these differences is that often phastCons predicts multiple elements where GERP++ makes one longer prediction. PhastCons thus skips intermediate positions which may be under weaker constraint yet still part of one large functional element, as the example in <xref ref-type="fig" rid="pcbi-1001025-g006">Fig 6E</xref> shows. In order to demonstrate that this is not an isolated occurrence and to quantify fragmentation of known functional elements, we computed the number of distinct predicted constrained elements overlapping each annotated coding exon. While the total number of exons that overlap at least one constrained element prediction is approximately the same between the two methods, GERP++ is significantly more effective at identifying entire exons as a single predicted CE, rather than fragmented between two or more CEs like phastCons (<xref ref-type="fig" rid="pcbi-1001025-g006">Fig 6C &amp; 6D</xref>). This phenomenon is not limited to coding exons, as we observed similar behavior for experimentally identified RNA Polymerase II (PolII) binding sites (see <xref ref-type="sec" rid="s4">Methods</xref>), which correspond to poised or active promoters. GERP++ overlaps a larger fraction of nucleotides within 50 base pairs of a PolII binding site (26% vs 19% for phastCons), and exhibits similarly reduced fragmentation as with coding exons (<xref ref-type="fig" rid="pcbi-1001025-g007">Fig 7</xref>).</p>
<fig id="pcbi-1001025-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001025.g007</object-id><label>Figure 7</label><caption>
<title>Mean distribution of PolII binding sites by number of overlapping CEs over 9 Encode PolII ChIP experiments, for GERP++ and phastCons.</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.g007" xlink:type="simple"/></fig>
<p>Due in part to its ability to annotate larger elements in one piece, GERP++ is more effective at predicting constraint within several types of known functional regions. At the nucleotide level GERP++ elements cover a substantially larger fraction of several major types of functional elements, especially coding exons and UTRs (<xref ref-type="fig" rid="pcbi-1001025-g006">Fig 6B</xref>). The improved resolution in detection of known functional elements suggests GERP++ may also be more effective at predicting unannotated regions that are not only constrained but also functional.</p>
</sec></sec><sec id="s3">
<title>Discussion</title>
<p>One of the main challenges in constrained element detection is the lack of a clear gold standard for evaluating the quality of predictions. Human functional elements are sometimes unconstrained at the mammalian scope or missed at the assembly or alignment stages, and CE predictions that do not correspond to any known annotations may have unknown function, and cannot be definitively considered false positives. Given these limitations, we have shown that GERP++ offers several advantages over its predecessor GERP and makes fewer assumptions about the shape of conservation than previous approaches such as PhastCons. Previous bottom-up approaches have been limited largely by the simple heuristics used to merge constrained positions into longer elements; these heuristics may introduce biases in element length due to patterned constraint such as the 3-periodicity in coding exons. With GERP++ we evaluate a much richer set of candidate elements, selecting and ranking final predictions according to statistically meaningful p-values.</p>
<p>Despite the added computational cost at this stage, GERP++ overall is more than 100 times faster than GERP due to the speedup in rate estimation. Because GERP++ estimates a single parameter that directly translates into evolutionary rate, rather than an independent parameter for each branch of the tree, the computation is not only faster but also results in more statistically robust estimates as alignment depth increases. GERP++ takes a few days on a typical machine or a few hours on a small cluster to complete an analysis of the human genome aligned to 33 mammalian species, and can scale to virtually any reasonable genome size and alignment depth.</p>
<p>Our understanding of the evolutionary forces constraining sequence variation is still limited, especially in noncoding regions. This presents a challenge for generative model-based approaches, which model implicitly or explicitly the distribution of length and intensity of constrained elements and the total genomic fraction under constraint. In contrast, rate estimation and element prediction in GERP++ are largely independent procedures, and while GERP's rejected substitution metric <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref> accurately quantifies constraint intensity at individual positions, any additive position-specific scoring scheme could potentially be used instead. For example, in future implementations of the GERP++ package more elaborate or context-dependent models of nucleotide evolution could be easily incorporated in order to improve position-specific evolutionary rate estimation without drastically changing the overall algorithm.</p>
<p>One drawback of GERP++ and other similar approaches is sensitivity to variation in and erroneous estimates of the neutral rate of substitution. Neutral rate estimates are often subject to some uncertainty and can vary depending on the methodology, alignment quality, and genomic region. To test the ability of GERP++ to tolerate a reasonable amount of error in neutral rate estimates, we repeated our analysis with the neutral tree scaled up or down by 5 or 10%. Not surprisingly, overestimating the neutral rate leads to overprediction of constraint, and vice versa. For a fixed false positive cutoff, we observed a linear relationship between the input neutral rate and the amount of constrained element bases predicted; a 5/10% change in neutral rate leads to approximately 8/15% change in the number of predicted constrained bases.</p>
<p>It is important to note that our false positive rates and p-values are computed based on the implicit assumption that the score distribution is homogeneous within a region and all sites are independent. While this assumption has been present in previous approaches that also relied in permuted alignments for false positive rate estimation, it is central to the GERP++ p-value computation. Finally, the greedy manner of resolving candidate element overlap conflicts by smallest p-value presents another potential limitation, as for elements with equal average constraint this will break ties in favor of the longer element. This may or may not be biologically meaningful, especially if complicated conservation patterns are involved or two strongly conserved functional elements are very close together (and the segment between them is at least somewhat constrained). These hypothetical effects are likely mitigated by GERP++'s position-specific scores, which enable higher resolution analysis within individual CEs, and which ultimately may be the criterion upon which to decide whether any particular long element may better be regarded as two shorter ones.</p>
<p>GERP++ recapitulates known biology, at both the nucleotide level and on the scale of entire functional elements and even chromosomes. GERP++ scores are accurate enough to obtain a strong signal of synonymous substitution in coding exons, and the elevated average RS score for chromosome X (<xref ref-type="fig" rid="pcbi-1001025-g002">Fig 2A</xref>) agrees with earlier findings <xref ref-type="bibr" rid="pcbi.1001025-The1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Birney1">[3]</xref>. Compared to phastCons, GERP++ predictions overlap a larger fraction of known functional elements (<xref ref-type="fig" rid="pcbi-1001025-g004">Fig 4B</xref>) and have greater 1∶1 correspondence to constrained coding exons (<xref ref-type="fig" rid="pcbi-1001025-g006">Fig 6C &amp; 6D</xref>) and promoters (<xref ref-type="fig" rid="pcbi-1001025-g007">Fig 7</xref>). Our analysis has also yielded interesting biological insights, including the likely presence of unannotated coding exons among our predicted constrained elements. We detect around 7% of the human genome to be contained in CEs in the mammalian scope, a slightly larger amount than previous predictions, yet with a lower estimated false positive rate. While this estimate is inexact, our analysis suggests 6% and 8% as reasonable lower and upper bounds, a somewhat tighter range than earlier estimates <xref ref-type="bibr" rid="pcbi.1001025-Margulies1">[1]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-The1">[2]</xref>.</p>
<p>Computationally, GERP++ is efficient enough to perform whole-genome analysis of deep mammalian alignments within a few cpu-days, making it suitable for high-throughput analysis of the ever increasing amounts of genomic data. We hope GERP++ will prove to be a useful tool in analyzing, quantifying, and annotating constraint and discovering novel functional elements in the human and other genomes for which sufficient comparative data exist.</p>
</sec><sec id="s4" sec-type="methods">
<title>Methods</title>
<sec id="s4a">
<title>Availability</title>
<p>GERP++ is available at <ext-link ext-link-type="uri" xlink:href="http://mendel.stanford.edu/SidowLab/downloads/gerp/index.html" xlink:type="simple">http://mendel.stanford.edu/SidowLab/downloads/gerp/index.html</ext-link></p>
</sec><sec id="s4b">
<title>Estimation of Evolutionary Rates and RS Scores</title>
<p>Given a multiple sequence alignment and a phylogenetic tree with branch lengths representing the neutral rate between the species within that alignment, GERP++ quantifies constraint intensity at each individual position in terms of rejected substitutions <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref>, the difference between the neutral rate and the estimated evolutionary rate at the position. For our analysis the alignment was compressed to remove gaps in the reference sequence (human), although the RS score computation algorithm does not assume any specific reference sequence. In order to estimate the evolutionary rate we model nucleotide evolution as a continuous-time Markov process, which specifies for each pair of nucleotides <italic>a</italic> and <italic>b</italic> and duration <italic>t</italic> the probability of <italic>a</italic> transforming into <italic>b</italic> over time <italic>t</italic>, designated by p<sub>ab</sub>(t). Many such evolutionary models have been developed <xref ref-type="bibr" rid="pcbi.1001025-Jukes1">[11]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Kimura1">[12]</xref>, each with its own set of simplifying assumptions. GERP++ implements the HKY85 model <xref ref-type="bibr" rid="pcbi.1001025-Hasegawa1">[13]</xref>, but any time-reversible model (where p<sub>a</sub>p<sub>ab</sub>(t) = p<sub>b</sub>p<sub>ba</sub>(t) for all pairs of nucleotides <italic>a</italic> and <italic>b</italic>) that permits efficient computation of p<sub>ab</sub>(t) can be used instead.</p>
<p>For each individual alignment column GERP++ labels the leaves of the phylogenetic tree with the corresponding nucleotides c<sub>1</sub>, …, c<sub>k</sub>; gapped species are projected out. Although this is not necessarily ideal and sometimes leads to information loss, it avoids some of the common difficulties and potentially serious biases that accompany modeling gaps in alignments: aligner errors and artifacts that result from simplified gap penalties and incorrect handling of duplications and rearrangements, assembly mistakes, and missing sequence data. Furthermore, this treatment of gaps avoids explicitly penalizing constrained elements that have undergone lineage-specific deletion <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref>.</p>
<p>Once the gapped species are removed, the site-specific neutral rate is computed as the sum of the branch lengths in the trimmed tree. When there are fewer than 3 species remaining no rate estimation is performed for that position, as there are not enough species to even form a valid tree. We estimate by maximum likelihood a homogeneous scaling factor of the neutral tree at each position; similar but independently developed methods were used for rate estimation in <xref ref-type="bibr" rid="pcbi.1001025-Pollard1">[14]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Garber1">[15]</xref>. Specifically, we introduce a scaling parameter <italic>r</italic> that represents the site's rate of evolution relative to neutrality. When <italic>r</italic>&lt;1 the quantity (<italic>1−r</italic>) can be naturally interpreted as the fraction of neutral substitutions “rejected” by evolutionary selection. GERP++ estimates <italic>r</italic> by maximum likelihood, where the likelihood is given by L(<italic>r</italic>) = Pr(c<sub>1</sub>, …, c<sub>k</sub> | T<italic><sub>r</sub></italic>), where T<italic><sub>r</sub></italic> is the neutral tree T scaled by <italic>r</italic>. For any given <italic>r</italic>, and therefore fixed tree T<italic><sub>r</sub></italic>, this function can be computed efficiently using a dynamic programming algorithm due to Felsenstein <xref ref-type="bibr" rid="pcbi.1001025-Felsenstein1">[16]</xref>. If n is an internal node with children n<sub>1</sub> and n<sub>2</sub>, and {c<sub>1</sub>, …, c<sub>k</sub>}<sub>n</sub> represents the subset of the leaves corresponding to the subtree rooted at n, then<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.e001" xlink:type="simple"/></disp-formula>where T<italic><sub>r</sub></italic>(x,y) is the branch lengths in T<italic><sub>r</sub></italic> between two neighboring nodes x and y.</p>
<p>Since the leaf nucleotides are observed, this equation can be used to compute the subtree probability for all internal nodes, starting at the bottom and reaching the root, where we can compute L(<italic>r</italic>) = Pr(c<sub>1</sub>, …, c<sub>k</sub> | T<italic><sub>r</sub></italic>) = Σ<sub>a</sub> Pr({c<sub>1</sub>, …, c<sub>k</sub>}<sub>n</sub> | root = a) p<sub>a</sub>. Assuming a fixed alphabet and an evolutionary model where the probabilities p<sub>ab</sub>(t) are computable in constant time, this algorithm runs in time O(k) where k is the number of species in the phylogenetic tree.</p>
<p>Using this algorithm as a subroutine to calculate L(<italic>r</italic>), GERP++ computes the maximum likelihood value of <italic>r</italic> using Brent's method <xref ref-type="bibr" rid="pcbi.1001025-Press1">[17]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Brent1">[18]</xref>, a numerical optimization technique that tends to require relatively few computations of the function being optimized. The evolutionary rate for a site with neutral rate <italic>n</italic> is estimated to be <italic>rn</italic>, and the final RS score is computed as <italic>n−rn = n(1−r)</italic>. As maximum likelihood may estimate very large or even infinite values of <italic>r</italic>, we impose a cap of <italic>r</italic> = 3 on GERP++ rate estimates, yielding RS scores that range between <italic>−2n</italic> and <italic>+n</italic>. These scores are then used as the basis for prediction of constrained elements within the region.</p>
</sec><sec id="s4c">
<title>Computation of P-Values and Element Prediction</title>
<p>Given position-specific constraint scores, GERP++ generates a list of elements that exhibit evidence of evolutionary constraint beyond what is likely to occur by chance. For each element, we compute a p-value that represents the probability of a random neutral segment of equal length having an equal or higher RS score. In addition to being used to select final predictions from the set of candidate elements, these p-values in conjunction with position-specific scores provide useful information for biological analysis.</p>
<p>Every segment of contiguous multiple alignment columns is a candidate element. Because considering all possible segments within the alignment is computationally infeasible, GERP++ generates a list of candidate elements using several simple biological heuristics to prune the possibilities. First, we impose a user-specified minimum and maximum on candidate element length; while real functional elements vary in length, very few extend beyond several thousand bases, and even these will not be missed entirely as GERP++ will identify their most constrained parts. Second, since positive RS scores indicate constraint, GERP++ allows only candidate elements that start and end at positions with RS≥0 and cannot be extended further in either direction; this rule has the additional benefit of imposing sensible boundary conditions on predicted elements. Finally, we only consider candidate elements with score above a certain value, which is a function of the element length and the median neutral rate of the region. This allows pruning of candidate elements that have low scores relative to their lengths, and since they will end up with poor p-values anyway ignoring them early reduces the memory requirements considerably.</p>
<p>Using neutrality as the null hypothesis, we can now define p-values for candidate and predicted elements on the basis of score and length. If the probability of a single neutral position having RS score x is given by P(x), then for an element of length L and score S the p-value is the probability of having score at least S in exactly L positions, and is given by:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.e002" xlink:type="simple"/></disp-formula>The RS score distribution is irregular (<xref ref-type="supplementary-material" rid="pcbi.1001025.s003">Fig S3</xref>) and therefore cannot be easily modeled by common statistical distributions; however, the p-values can be computed using dynamic programming, for L = 1, …, L<sub>max</sub>, provided the distribution P(x) can be computed and the space of possible scores x is not too large. The latter is assured by discretizing to within a specified tolerance t; since individual scores range from −2n to +n, there are 3n/t possible discretized scores. We now build a histogram of these discrete scores from the alignment, with two exceptions. First, we exclude long consecutive runs of “shallow” positions (default at least 10), i.e. positions with neutral rate below specified cutoff (default 0.5 substitutions per site), as there are many such primate-specific regions and they tend to skew the score distribution. Additionally, remaining shallow positions are given a small penalty to discourage GERP++ from predicting CEs consisting mostly of shallow positions. Second, we exclude positions that belong to clearly constrained regions, which are identified using a preliminary pass of the algorithm (with false positive cutoff set to 0). All other scores are used to build a score histogram for each region. In order to eliminate artifacts caused by zero probabilities, we add a small uniform prior to the histogram to ensure every discretized score appears at least once.</p>
<p>Once all candidate elements have been assigned p-values, GERP++ selects elements in a greedy manner, from smallest to highest p-value, discarding any elements that overlap previously reported elements. As the p-value increases so does the expected false positive rate of our predictions; when this reaches a user-specified threshold the algorithm terminates. While it would be ideal to compute this directly from the p-values, the multiple hypothesis correction in this case is non-trivial because GERP++ reports a non-overlapping set of predictions. Therefore, we adopt the approach of Cooper et al <xref ref-type="bibr" rid="pcbi.1001025-The1">[2]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Cooper1">[5]</xref> and estimate the false positive rate by generating several independent permuted alignments. These alignments are obtained by randomly shuffling columns of the original multiple alignments, excluding long stretches of shallow positions.</p>
</sec><sec id="s4d">
<title>Overview of the Data</title>
<p>TBA <xref ref-type="bibr" rid="pcbi.1001025-Blanchette1">[19]</xref> alignments of the human genome (hg18) to 43 other vertebrate species were obtained from the UCSC genome browser <xref ref-type="bibr" rid="pcbi.1001025-Kent1">[20]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Rhead1">[21]</xref> together with a phylogenetic tree with the generally accepted topology (<xref ref-type="supplementary-material" rid="pcbi.1001025.s001">Fig S1</xref>) and neutral branch lengths estimated from 4-fold degenerate sites. Both the tree and alignments were projected to the 34 mammalian species. The alignment was compressed to remove gaps in the human sequence, and GERP++ scores were computed for every position with at least 3 ungapped species present, or approximately 88.9% of the 3.08 billion positions on the 22 autosomes and X/Y chromosomes. We used the HKY85 <xref ref-type="bibr" rid="pcbi.1001025-Hasegawa1">[13]</xref> model of evolution with the transition/transversion ratio set to 2.0 and nucleotide frequencies estimated from the multiple alignment.</p>
<p>To limit memory requirements and allow parallelization of the constrained element computation, each chromosome was broken up into regions of approximately 2 megabases, with long segments where no RS score was computed chosen as boundaries. These boundary segments contain no information usable by GERP++ and because the algorithm never annotates constrained elements spanning them, excluding such segments did not sacrifice any predictive ability. These boundary regions made up approximately 6.8% of the human genome, including a 30.2 megabase region that made up more than half of chromosome Y. Constrained element predictions were generated using default parameters and a 5% false positive cutoff measured in terms of number of predictions; the estimated nucleotide-level false positive rate was under 1%. As additional validation, we computed overlap between our predictions and a set of ancestral repeats (L2) annotated by RepeatMasker. We found the overlap to be in line with what we expected given our estimated false positive rates: about 5% of the repeats overlap a predicted CE, with around 1.6% nucleotide-level overlap.</p>
<p>Gene, noncoding RNA, and PhastCons conserved element annotations were obtained from the UCSC genome browser's <xref ref-type="bibr" rid="pcbi.1001025-Kent1">[20]</xref>, <xref ref-type="bibr" rid="pcbi.1001025-Rhead1">[21]</xref> Known Genes <xref ref-type="bibr" rid="pcbi.1001025-Hsu1">[22]</xref>, RNA Genes, and Conservation <xref ref-type="bibr" rid="pcbi.1001025-Siepel1">[4]</xref> tracks respectively. To avoid skewed statistics due to alternative splicing, gene annotations were resolved to a consistent nonoverlapping set where any segment belonging to multiple conflicting annotations was assigned a single annotation in the following order of priority: coding exon, 5′ UTR, 3′ UTR, intron. For meaningful comparison against phastCons, separate GERP++ scores and constrained elements were generated according to the same procedure as above but using only placental mammal data (ignoring platypus and opossum in the alignment and projecting them out of the phylogenetic tree).</p>
<p>PolII binding regions were defined as 50 bp upstream and downstream of PolII binding ‘peaks’ as identified from ChIP-seq experiments performed by the ENCODE Consortium <xref ref-type="bibr" rid="pcbi.1001025-Birney1">[3]</xref>. A 100 bp window allows capture of the likely PolII binding site and its flanking sequence. We obtained data from nine ChIP-seq experiments conducted in two labs (the Snyder lab at Yale and the Myers lab at Hudson Alpha) on six cell types. Data was downloaded through the DCC at UCSC (<ext-link ext-link-type="uri" xlink:href="ftp://encodeftp.cse.ucsc.edu" xlink:type="simple">ftp://encodeftp.cse.ucsc.edu</ext-link>). All data have passed publication embargo periods. Overlap statistics were calculated as described above for other annotation sets and averaged across all nine experiments.</p>
</sec></sec><sec id="s5">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1001025.s001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.s001" xlink:type="simple"><label>Figure S1</label><caption>
<p>Phylogenetic tree used for GERP++ analysis. Tree is drawn to scale with respect to estimated neutral branch lengths.</p>
<p>(0.12 MB PDF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1001025.s002" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.s002" xlink:type="simple"><label>Figure S2</label><caption>
<p>Distribution of constrained element lengths. (A) GERP++. (B) PhastCons.</p>
<p>(0.15 MB PDF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1001025.s003" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001025.s003" xlink:type="simple"><label>Figure S3</label><caption>
<p>Distribution of GERP++ RS scores for 2Mb region of chromosome 1, excluding shallow (neutral rate&lt;0.5) positions.</p>
<p>(0.01 MB PDF)</p>
</caption></supplementary-material></sec></body>
<back>
<ack>
<p>We thank Anshul Kundaje for his help in obtaining PolII binding site data from the UCSC browser. We also thank the anonymous reviewers for their helpful feedback and suggestions.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1001025-Margulies1"><label>1</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Margulies</surname><given-names>EH</given-names></name>
<name name-style="western"><surname>Cooper</surname><given-names>GM</given-names></name>
<name name-style="western"><surname>Asimenos</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Thomas</surname><given-names>DJ</given-names></name>
<name name-style="western"><surname>Dewey</surname><given-names>CN</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>Analyses of deep mammalian sequence alignments and constraint predictions for 1% of the human genome.</article-title>             <source>Genome Res</source>             <volume>17</volume>             <fpage>760</fpage>             <lpage>774</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-The1"><label>2</label><element-citation publication-type="journal" xlink:type="simple">             <collab xlink:type="simple">The ENCODE Project Consortium</collab>             <year>2004</year>             <article-title>The ENCODE (ENCyclopedia Of DNA Elements) Project.</article-title>             <source>Science</source>             <volume>306</volume>             <fpage>636</fpage>             <lpage>640</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Birney1"><label>3</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Birney</surname><given-names>E</given-names></name>
<name name-style="western"><surname>Stamatoyannopoulos</surname><given-names>JA</given-names></name>
<name name-style="western"><surname>Dutta</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Guigo</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Gingeras</surname><given-names>TR</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>Identification and analysis of functional elements in 1% of the human genome by the ENCODE pilot project.</article-title>             <source>Nature</source>             <volume>447</volume>             <fpage>799</fpage>             <lpage>816</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Siepel1"><label>4</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Siepel</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Bejerano</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Pedersen</surname><given-names>JS</given-names></name>
<name name-style="western"><surname>Hinrichs</surname><given-names>AS</given-names></name>
<name name-style="western"><surname>Hou</surname><given-names>M</given-names></name>
<etal/></person-group>             <year>2005</year>             <article-title>Evolutionarily conserved elements in vertebrate, insect, worm, and yeast genomes.</article-title>             <source>Genome Res</source>             <volume>15</volume>             <fpage>1034</fpage>             <lpage>1050</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Cooper1"><label>5</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Cooper</surname><given-names>GM</given-names></name>
<name name-style="western"><surname>Stone</surname><given-names>EA</given-names></name>
<name name-style="western"><surname>Asimenos</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Green</surname><given-names>ED</given-names></name>
<name name-style="western"><surname>Batzoglou</surname><given-names>S</given-names></name>
<etal/></person-group>             <year>2005</year>             <article-title>Distribution and intensity of constraint in mammalian genomic sequence.</article-title>             <source>Genome Res</source>             <volume>15</volume>             <fpage>901</fpage>             <lpage>913</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Altschul1"><label>6</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Altschul</surname><given-names>SF</given-names></name>
<name name-style="western"><surname>Gish</surname><given-names>W</given-names></name>
<name name-style="western"><surname>Miller</surname><given-names>W</given-names></name>
<name name-style="western"><surname>Myers</surname><given-names>EW</given-names></name>
<name name-style="western"><surname>Lipman</surname><given-names>DJ</given-names></name>
</person-group>             <year>1990</year>             <article-title>Basic local alignment search tool.</article-title>             <source>J Mol Biol</source>             <volume>215</volume>             <fpage>403</fpage>             <lpage>410</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Dempster1"><label>7</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Dempster</surname><given-names>APL, NM</given-names></name>
<name name-style="western"><surname>Rubin</surname><given-names>DB</given-names></name>
</person-group>             <year>1977</year>             <article-title>Maximum Likelihood from Incomplete Data via the EM Algorithm.</article-title>             <source>J R Stat Soc Series B Stat Methodol</source>             <volume>39</volume>             <fpage>1</fpage>             <lpage>38</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Margulies2"><label>8</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Margulies</surname><given-names>EH</given-names></name>
<name name-style="western"><surname>Blanchette</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Haussler</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Green</surname><given-names>ED</given-names></name>
</person-group>             <year>2003</year>             <article-title>Identification and characterization of multi-species conserved sequences.</article-title>             <source>Genome Res</source>             <volume>13</volume>             <fpage>2507</fpage>             <lpage>2518</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-McVean1"><label>9</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>McVean</surname><given-names>GT</given-names></name>
<name name-style="western"><surname>Hurst</surname><given-names>LD</given-names></name>
</person-group>             <year>1997</year>             <article-title>Evidence for a selectively favourable reduction in the mutation rate of the X chromosome.</article-title>             <source>Nature</source>             <volume>386</volume>             <fpage>388</fpage>             <lpage>392</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Gross1"><label>10</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Gross</surname><given-names>SS</given-names></name>
<name name-style="western"><surname>Do</surname><given-names>CB</given-names></name>
<name name-style="western"><surname>Sirota</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Batzoglou</surname><given-names>S</given-names></name>
</person-group>             <year>2007</year>             <article-title>CONTRAST: a discriminative, phylogeny-free approach to multiple informant de novo gene prediction.</article-title>             <source>Genome Biol</source>             <volume>8</volume>             <fpage>R269</fpage>          </element-citation></ref>
<ref id="pcbi.1001025-Jukes1"><label>11</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Jukes</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Cantor</surname><given-names>C</given-names></name>
</person-group>             <year>1969</year>             <article-title>Evolution of protein molecules.</article-title>             <person-group person-group-type="editor">
<name name-style="western"><surname>Munro</surname><given-names>HN</given-names></name>
</person-group>             <source>Mammalian Protein Metabolism</source>             <publisher-loc>New York</publisher-loc>             <publisher-name>Academic Press</publisher-name>             <fpage>21</fpage>             <lpage>123</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Kimura1"><label>12</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kimura</surname><given-names>M</given-names></name>
</person-group>             <year>1980</year>             <article-title>A simple method for estimating evolutionary rate of base substitution through comparative studies of nucleotide sequences.</article-title>             <source>J Mol Evol</source>             <volume>16</volume>             <fpage>111</fpage>             <lpage>120</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Hasegawa1"><label>13</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hasegawa</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Kishino</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Yano</surname><given-names>T</given-names></name>
</person-group>             <year>1985</year>             <article-title>Dating of the human-ape splitting by a molecular clock of mitochondrial DNA.</article-title>             <source>J Mol Evol</source>             <volume>22</volume>             <fpage>160</fpage>             <lpage>174</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Pollard1"><label>14</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Pollard</surname><given-names>KS</given-names></name>
<name name-style="western"><surname>Hubisz</surname><given-names>MJ</given-names></name>
<name name-style="western"><surname>Rosenbloom</surname><given-names>KR</given-names></name>
<name name-style="western"><surname>Siepel</surname><given-names>A</given-names></name>
</person-group>             <year>2010</year>             <article-title>Detection of nonneutral substitution rates on mammalian phylogenies.</article-title>             <source>Genome Res</source>             <volume>20</volume>             <fpage>110</fpage>             <lpage>121</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Garber1"><label>15</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Garber</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Guttman</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Clamp</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Zody</surname><given-names>MC</given-names></name>
<name name-style="western"><surname>Friedman</surname><given-names>N</given-names></name>
<etal/></person-group>             <year>2009</year>             <article-title>Identifying novel constrained elements by exploiting biased substitution patterns.</article-title>             <source>Bioinformatics</source>             <volume>25</volume>             <fpage>i54</fpage>             <lpage>62</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Felsenstein1"><label>16</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Felsenstein</surname><given-names>J</given-names></name>
</person-group>             <year>1981</year>             <article-title>Evolutionary trees from DNA sequences: a maximum likelihood approach.</article-title>             <source>J Mol Evol</source>             <volume>17</volume>             <fpage>368</fpage>             <lpage>376</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Press1"><label>17</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Press</surname><given-names>WH</given-names></name>
<name name-style="western"><surname>Teukolsky</surname><given-names>SA</given-names></name>
<name name-style="western"><surname>Vetterling</surname><given-names>WT</given-names></name>
<name name-style="western"><surname>Flannery</surname><given-names>BP</given-names></name>
</person-group>             <year>1992</year>             <source>Numerical Recipes in C: The Art of Scientific Computing</source>             <publisher-loc>New York</publisher-loc>             <publisher-name>Cambridge University Press</publisher-name>          </element-citation></ref>
<ref id="pcbi.1001025-Brent1"><label>18</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Brent</surname><given-names>RP</given-names></name>
</person-group>             <year>1973</year>             <source>Algorithms for Minimization without Derivatives</source>             <publisher-loc>Englewood Cliffs</publisher-loc>             <publisher-name>Prentice-Hall</publisher-name>          </element-citation></ref>
<ref id="pcbi.1001025-Blanchette1"><label>19</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Blanchette</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Kent</surname><given-names>WJ</given-names></name>
<name name-style="western"><surname>Riemer</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Elnitski</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Smit</surname><given-names>AF</given-names></name>
<etal/></person-group>             <year>2004</year>             <article-title>Aligning multiple genomic sequences with the threaded blockset aligner.</article-title>             <source>Genome Res</source>             <volume>14</volume>             <fpage>708</fpage>             <lpage>715</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Kent1"><label>20</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kent</surname><given-names>WJ</given-names></name>
<name name-style="western"><surname>Sugnet</surname><given-names>CW</given-names></name>
<name name-style="western"><surname>Furey</surname><given-names>TS</given-names></name>
<name name-style="western"><surname>Roskin</surname><given-names>KM</given-names></name>
<name name-style="western"><surname>Pringle</surname><given-names>TH</given-names></name>
<etal/></person-group>             <year>2002</year>             <article-title>The human genome browser at UCSC.</article-title>             <source>Genome Res</source>             <volume>12</volume>             <fpage>996</fpage>             <lpage>1006</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Rhead1"><label>21</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Rhead</surname><given-names>B</given-names></name>
<name name-style="western"><surname>Karolchik</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Kuhn</surname><given-names>RM</given-names></name>
<name name-style="western"><surname>Hinrichs</surname><given-names>AS</given-names></name>
<name name-style="western"><surname>Zweig</surname><given-names>AS</given-names></name>
<etal/></person-group>             <year>2010</year>             <article-title>The UCSC Genome Browser database: update 2010.</article-title>             <source>Nucleic Acids Res</source>             <volume>38</volume>             <fpage>D613</fpage>             <lpage>619</lpage>          </element-citation></ref>
<ref id="pcbi.1001025-Hsu1"><label>22</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hsu</surname><given-names>F</given-names></name>
<name name-style="western"><surname>Kent</surname><given-names>WJ</given-names></name>
<name name-style="western"><surname>Clawson</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Kuhn</surname><given-names>RM</given-names></name>
<name name-style="western"><surname>Diekhans</surname><given-names>M</given-names></name>
<etal/></person-group>             <year>2006</year>             <article-title>The UCSC Known Genes.</article-title>             <source>Bioinformatics</source>             <volume>22</volume>             <fpage>1036</fpage>             <lpage>1046</lpage>          </element-citation></ref>
</ref-list>

</back>
</article>