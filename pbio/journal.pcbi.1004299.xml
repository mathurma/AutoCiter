<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1004299</article-id>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-14-01904</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Adaptive Synaptogenesis Constructs Neural Codes That Benefit Discrimination</article-title>
<alt-title alt-title-type="running-head">Adaptive Synaptogenesis</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Thomas</surname>
<given-names>Blake T.</given-names>
</name>
<xref rid="aff001" ref-type="aff"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Blalock</surname>
<given-names>Davis W.</given-names>
</name>
<xref rid="aff002" ref-type="aff"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<name name-style="western">
<surname>Levy</surname>
<given-names>William B.</given-names>
</name>
<xref rid="aff003" ref-type="aff"><sup>3</sup></xref>
<xref rid="cor001" ref-type="corresp">*</xref>
</contrib>
</contrib-group>
<aff id="aff001"><label>1</label> <addr-line>Informed Simplifications, LLC., Earlysville, Virginia, United States of America</addr-line></aff>
<aff id="aff002"><label>2</label> <addr-line>Department of Computer Science, Massachusetts Institute of Technology, Cambridge, Massachusetts, United States of America</addr-line></aff>
<aff id="aff003"><label>3</label> <addr-line>Department of Neurosurgery, School of Medicine, University of Virginia, Charlottesville, Virginia, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Granger</surname>
<given-names>Richard</given-names>
</name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1"><addr-line>Thayer School of Engineering at Dartmouth, UNITED KINGDOM</addr-line></aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<fn fn-type="con" id="contrib001">
<p>Conceived and designed the experiments: WBL. Performed the experiments: DWB BTT. Analyzed the data: DWB BTT. Wrote the paper: BTT DWB WBL.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">wbl@virginia.edu</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<day>15</day>
<month>7</month>
<year>2015</year>
</pub-date>
<pub-date pub-type="collection">
<month>7</month>
<year>2015</year>
</pub-date>
<volume>11</volume>
<issue>7</issue>
<elocation-id>e1004299</elocation-id>
<history>
<date date-type="received">
<day>17</day>
<month>10</month>
<year>2014</year>
</date>
<date date-type="accepted">
<day>26</day>
<month>4</month>
<year>2015</year>
</date>
</history>
<permissions>
<copyright-year>2015</copyright-year>
<copyright-holder>Thomas et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1004299" xlink:type="simple"/>
<abstract>
<p>Intelligent organisms face a variety of tasks requiring the acquisition of expertise within a specific domain, including the ability to discriminate between a large number of similar patterns. From an energy-efficiency perspective, effective discrimination requires a prudent allocation of neural resources with more frequent patterns and their variants being represented with greater precision. In this work, we demonstrate a biologically plausible means of constructing a single-layer neural network that adaptively (i.e., without supervision) meets this criterion. Specifically, the adaptive algorithm includes synaptogenesis, synaptic shedding, and bi-directional synaptic weight modification to produce a network with outputs (i.e. neural codes) that represent input patterns proportional to the frequency of related patterns. In addition to pattern frequency, the correlational structure of the input environment also affects allocation of neural resources. The combined synaptic modification mechanisms provide an explanation of neuron allocation in the case of self-taught experts.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author Summary</title>
<p>One neural correlate of being an expert is more brain volume—and presumably more neurons and more synapses—devoted to processing the input patterns falling within one's field of expertise. As the number of neurons in the neocortex does not increase during the learning period that begins with novice abilities and ends with expert performance, neurons must be viewed as a scarce resource whose connections are adjusted to be more responsive to inputs within the field of expertise and less responsive to input patterns outside this field. To accomplish this enhanced, but localized improvement of representational capacity, the usual theory of associative synaptic modification is extended to include synaptogenesis (formation of new synapses) and synaptic shedding (rejection of synapses by a postsynaptic neuron) in a manner compatible with the original, associative synaptic modification algorithm. Using some mathematically simplifying assumptions, a theory is developed that predicts the algorithm's eventual outcome on expert neuronal coding, and then without the simplifying assumptions, computational simulations confirm the theory’s predictions in long, but finite periods of simulation-time (i.e., finite-sampling leads to stable connections, and thus, stable expert encodings).</p>
</abstract>
<funding-group>
<funding-statement>This work was supported by the National Science Foundation 1162449 - Toby Berger &amp; William Levy; the Department of Neurosurgery, University of Virginia, William B. Levy. The funders had no role in the study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="9"/>
<table-count count="4"/>
<page-count count="23"/>
</counts>
<custom-meta-group>
<custom-meta id="data-availability" xlink:type="simple">
<meta-name>Data Availability</meta-name>
<meta-value>All relevant data are within the paper and its Supporting Information files.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>Adaptive synaptogenesis [<xref rid="pcbi.1004299.ref001" ref-type="bibr">1</xref>–<xref rid="pcbi.1004299.ref004" ref-type="bibr">4</xref>] is designed to allocate neural resources in a thrifty manner or in a manner to regulate function. The three resources of concern are number of synapses, number of neurons, and firing-rate of the neurons. Inspired by the Bienenstock-Cooper-Munro (BCM) algorithm [<xref rid="pcbi.1004299.ref005" ref-type="bibr">5</xref>] and its forcing of a neuron to a predefined activity level, adaptive synaptogenesis achieves a similar goal that not only guarantees the average activity of a postsynaptic neuron but does so in a way that rations synapses.</p>
<p>Previously, adaptive synaptogenesis was used as a mechanism to produce compressive coding with small information losses [<xref rid="pcbi.1004299.ref006" ref-type="bibr">6</xref>–<xref rid="pcbi.1004299.ref010" ref-type="bibr">10</xref>]. It also successfully models developmental studies of ocular dominance [<xref rid="pcbi.1004299.ref011" ref-type="bibr">11</xref>–<xref rid="pcbi.1004299.ref012" ref-type="bibr">12</xref>]. Both results are achieved by postsynaptic neurons discovering implicit correlational structures within the input data space. Through the random acquisition and forced shedding of synapses, associated inputs find their way to the same neuron, and uncorrelated or anti-correlated inputs are ignored. As thus conceived, adaptive synaptogenesis consists of (1) a random Bernoulli process that selects a new excitatory connection between nearby axon <italic>i</italic> and postsynaptic neuron <italic>j</italic>; (2) once formed, associative synaptic modification controls the strength of each existing synapse, and this control includes the possibility of potentiation, depression, or no change of a synaptic weight; but with enough long-term depression, (3) shedding of a synapse occurs when the weight is appropriately weak (near zero for a sufficiently long time) (<xref rid="pcbi.1004299.g001" ref-type="fig">Fig 1</xref>). Critically, the possibility of forming a new synapse on neuron <italic>j</italic> is determined by <italic>j</italic>’s long-term average firing-rate.</p>
<fig id="pcbi.1004299.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g001</object-id>
<label>Fig 1</label>
<caption>
<title>The three processes of adaptive synaptogenesis: Random synaptogenesis, bi-directional associative modification of existing synapses, and synaptic shedding.</title>
<p>(Top) Synaptogenesis and positive associative modification (LTP). (Left) Receptivity for new innervation is below the cutoff firing-rate and three sites for a new synapse are indicated by the broken circles. (Center) Of the three locations, one new synapse is randomly generated (small complete circle), the uppermost available synapse. (Right) The new synapse increases strength due to the associative modification equation and positive correlation with enough of the other synapses on this neuron. Because of the increased excitation due to the new synapse, the post-synaptic neuron increases its average firing-rate above the prescribed design value; as a result of exceeding this value, receptivity for new innervation goes to zero (the broken circles disappear). (Bottom) Negative associative modification (LTD) and shedding. (Left) Having randomly acquired a certain set of inputs, one positively correlated subset (shown in shades of blue) dominates the excitation of the postsynaptic neuron while another input (shown in red) is negatively correlated with this subset. (Center) Associative synaptic modification decreases the weight of the uncorrelated input as indicated by the smaller circle. (Right) Associative synaptic modification further decreases the weight of the uncorrelated input, and because the weight value falls below the threshold, the synapse is shed.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g001" position="float" xlink:type="simple"/>
</fig>
<p>Instead of compressive coding, the context for studying adaptive synaptogenesis here is self-taught discrimination. The motivating idea is that if one studies a particular field and its subject matter over a long enough period of time (perhaps the oft quoted ten thousand hours [<xref rid="pcbi.1004299.ref013" ref-type="bibr">13</xref>]) and if one studies over a wide enough variety of representative examples, the allocation of neurons in the cerebral cortex is enhanced for this particular concentrated field of study.</p>
<p>After a detailed description of the neural algorithm and the input data structures, we establish a mathematical theory that quantifies relationships (e.g. synaptic weights) required for stability (or lack thereof) of the neurons formed by this algorithm. Computational simulations follow these theoretical developments. The simulations demonstrate the development of stable neuron configurations without turning-off the algorithm. Moreover, these simulations also reveal the effect of input statistics—frequency of input patterns and the input correlational structure—on neuron allocation. As shown, the form of adaptive synaptogenesis used here produces neuron allocations that are appropriately biased by the statistics of the input environment (more experience produces more neurons devoted to the experience). Also revealed is an important effect of the input world’s statistical structure that can help or hinder this proportional neuron allocation.</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Methods</title>
<sec id="sec003">
<title>Neurons</title>
<p>Here we study an adaptively constructed, feedforward network of McCulloch-Pitts neurons. The inputs are vectors with binary elements, <italic>x</italic><sub><italic>i</italic></sub>(<italic>k</italic>)ϵ{0,1}, and the outputs are vectors with binary elements, <italic>z</italic><sub><italic>j</italic></sub>(<italic>k</italic>). For the <italic>j</italic><sup><italic>th</italic></sup> neuron, postsynaptic excitation is linear, <italic>y</italic><sub><italic>j</italic></sub>(<italic>t</italic>) = Σ<sub><italic>i</italic></sub><italic>x</italic><sub><italic>i</italic></sub>(<italic>t</italic>)·<italic>c</italic><sub><italic>ij</italic></sub>(<italic>t</italic>)·<italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>) with connection indicator <italic>c</italic><sub><italic>ij</italic></sub>(<italic>k</italic>)ϵ{0,1}, with all weights <italic>w</italic><sub><italic>ij</italic></sub> positive, and output <italic>z</italic><sub><italic>j</italic></sub>(<italic>k</italic>): = {1 if <italic>y</italic><sub><italic>j</italic></sub>(<italic>k</italic>)≥<italic>θ</italic>, and 0 otherwise}. Threshold θ is 3.0 for dataset A and 0.8 for datasets B. The “sensory” input dimensions are 80 (dataset A) or 390 (datasets B) as described below. The number of postsynaptic neurons simulated is 2000 per dataset. Because there is no interaction between the outputs of these neurons (i.e. there is no feedback or lateral inhibition) and because there is no avidity rule [<xref rid="pcbi.1004299.ref007" ref-type="bibr">7</xref>], each neuron develops its connections independent of all other neurons.</p>
<p>Each neuron is initialized with one connection from a randomly chosen input line with weight 0.2.</p>
</sec>
<sec id="sec004">
<title>Adaptive synaptic modification</title>
<p>There are three distinct aspects of synaptic modification: synaptogenesis, associative synaptic modification, and synaptic shedding.</p>
<sec id="sec005">
<title>Synaptogenesis</title>
<p>Synaptogenesis, when it is allowed to occur, is a random Bernoulli process with parameter γ. Synaptogenesis onto postsynaptic neuron <italic>j</italic> changes <italic>c</italic><sub><italic>ij</italic></sub> from 0 to 1 when <italic>u</italic><sub><italic>ij</italic></sub>(<italic>τ</italic>) = 1, where <italic>u</italic><sub><italic>ij</italic></sub>(τ) is the generated Bernoulli random variable. Here, synaptogenesis only depends on the average output of <italic>j</italic> itself at time τ, i.e., <inline-formula id="pcbi.1004299.e001"><alternatives><graphic id="pcbi.1004299.e001g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e001" xlink:type="simple"/><mml:math display="inline" id="M1" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mtext>z</mml:mtext><mml:mo stretchy="true">¯</mml:mo></mml:mover></mml:mrow><mml:mtext>j</mml:mtext></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>τ</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>. This moving average is updated on each timestep: <inline-formula id="pcbi.1004299.e002"><alternatives><graphic id="pcbi.1004299.e002g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e002" xlink:type="simple"/><mml:math display="inline" id="M2" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. Moreover, to keep things as simple as possible and consistent with our requirement for asymptotic stability and certain observations of [<xref rid="pcbi.1004299.ref014" ref-type="bibr">14</xref>], <italic>j</italic>’s receptivity for new innervation, <italic>r</italic><sub><italic>j</italic></sub>(τ), is either positive or zero; specifically, <inline-formula id="pcbi.1004299.e003"><alternatives><graphic id="pcbi.1004299.e003g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e003" xlink:type="simple"/><mml:math display="inline" id="M3" overflow="scroll"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>τ</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi>γ</mml:mi><mml:mtext> if </mml:mtext><mml:msub><mml:mrow><mml:mover accent="true"><mml:mtext>z</mml:mtext><mml:mo stretchy="true">¯</mml:mo></mml:mover></mml:mrow><mml:mtext>j</mml:mtext></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>τ</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>ρ</mml:mi><mml:mo>,</mml:mo><mml:mtext>and 0 otherwise</mml:mtext></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> where ρ = 0.09 for dataset A and 0.1 for datasets B1, B2, and B3. The parameter ρ is referred to as the minimum desired firing-rate because neurons that fire above rate ρ will no longer add new synapses.</p>
<p>When a new synapse is formed, its initial weight, <italic>w</italic><sub><italic>ij</italic></sub>, is 0.2.</p>
</sec>
<sec id="sec006">
<title>Associative synaptic modification</title>
<p>Associative synaptic modification is as suggested in [<xref rid="pcbi.1004299.ref015" ref-type="bibr">15</xref>]. With rate constant ε, <italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>+1) = <italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>)+<italic>ε</italic>·<italic>c</italic><sub><italic>ij</italic></sub>(<italic>t</italic>)·(<italic>x</italic><sub><italic>i</italic></sub>(<italic>t</italic>) – <italic>E</italic>[<italic>x</italic><sub><italic>i</italic></sub>] – <italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>))·<italic>y</italic><sub><italic>j</italic></sub>(<italic>t</italic>), or equivalently,
<disp-formula id="pcbi.1004299.e004">
<alternatives>
<graphic id="pcbi.1004299.e004g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e004" xlink:type="simple"/>
<mml:math display="block" id="M4" overflow="scroll">
<mml:mrow><mml:mo>Δ</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ε</mml:mi><mml:mo>⋅</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow>
</mml:math>
</alternatives>
</disp-formula>
where <italic>t</italic> advances one with each new input. Weights do not change if <italic>c</italic><sub><italic>ij</italic></sub>(<italic>t</italic>) = 0 (i.e., the connection does not exist so there is no weight to change). Because the average firing-rate of all inputs <italic>i</italic> is positive (i.e. E[<italic>X</italic><sub><italic>i</italic></sub>] &gt; 0), an individual weight can be driven negative by the synaptic modification equation. However, such negative values of <italic>w</italic><sub><italic>ij</italic></sub> are prevented by the third mechanism controlling synapses and connectivity.</p>
</sec>
<sec id="sec007">
<title>Synaptic shedding</title>
<p>A synapse is shed whenever its value goes below 0.01, formally <italic>c</italic><sub><italic>ij</italic></sub>(<italic>t</italic>) = 0 if <italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>) &lt; 0.01. Thus no negative weights exist; moreover, new synapses, with their initial value of 0.2, are not immediately subject to shedding.</p>
</sec>
</sec>
<sec id="sec008">
<title>Summary of basic definitions</title>
<p>A connection from input neuron <italic>i</italic> to output neuron <italic>j</italic> is indicated as <italic>c</italic><sub><italic>ij</italic></sub> (<italic>t</italic>)ϵ{0,1}. The strength (weight) of this connection is <italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>)ϵ(0.01,1). Inputs are binary, i.e., <italic>x</italic><sub><italic>i</italic></sub> (<italic>t</italic>)ϵ{0,1}. Excitation of a neuron on a timestep is linear, <italic>y</italic><sub><italic>j</italic></sub>(<italic>t</italic>) = Σ<sub><italic>i</italic></sub><italic>c</italic><sub><italic>ij</italic></sub>(<italic>t</italic>)·<italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>)·<italic>x</italic><sub><italic>i</italic></sub>(<italic>t</italic>). There is no inhibition. A neuron, whose excitation reaches threshold, fires by the rule <italic>z</italic><sub><italic>j</italic></sub>(<italic>t</italic>) = {1 if <italic>y</italic><sub><italic>j</italic></sub>(<italic>t</italic>)≥<italic>θ</italic>, and 0 otherwise}. A weight is updated according to [<xref rid="pcbi.1004299.ref015" ref-type="bibr">15</xref>]; in particular, Δ<italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>) = <italic>ε</italic>·<italic>c</italic><sub><italic>ij</italic></sub>(<italic>t</italic>)·(<italic>x</italic><sub><italic>i</italic></sub>(<italic>t</italic>) – <italic>E</italic>[<italic>x</italic><sub><italic>i</italic></sub>] – <italic>w</italic><sub><italic>ij</italic></sub>(<italic>t</italic>))·<italic>y</italic><sub><italic>j</italic></sub>(<italic>t</italic>). On each timestep, a neuron’s moving-average of firing-rate, <inline-formula id="pcbi.1004299.e005"><alternatives><graphic id="pcbi.1004299.e005g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e005" xlink:type="simple"/><mml:math display="inline" id="M5" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, is updated as <inline-formula id="pcbi.1004299.e006"><alternatives><graphic id="pcbi.1004299.e006g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e006" xlink:type="simple"/><mml:math display="inline" id="M6" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>.</p>
<p>Synaptogenesis is controlled by <inline-formula id="pcbi.1004299.e007"><alternatives><graphic id="pcbi.1004299.e007g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e007" xlink:type="simple"/><mml:math display="inline" id="M7" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> and a random variable: <italic>u</italic><sub><italic>ij</italic></sub> ϵ{0,1} where prob(<italic>u</italic><sub><italic>ij</italic></sub> = 1) = γ.</p>
<disp-formula id="pcbi.1004299.e008">
<alternatives>
<graphic id="pcbi.1004299.e008g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e008" xlink:type="simple"/>
<mml:math display="block" id="M8" overflow="scroll">
<mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mtext>if( </mml:mtext><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mtext> &amp; </mml:mtext><mml:msub><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&lt;</mml:mo><mml:mi>ρ</mml:mi><mml:mtext> &amp; </mml:mtext><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mtext> ),</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>     then </mml:mtext><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mtext> &amp; </mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0.2</mml:mn><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>     else </mml:mtext><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable>
</mml:math>
</alternatives>
</disp-formula>
<p>A connection/weight is shed whenever it falls below 0.01; that is,
<disp-formula id="pcbi.1004299.e009">
<alternatives>
<graphic id="pcbi.1004299.e009g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e009" xlink:type="simple"/>
<mml:math display="block" id="M9" overflow="scroll">
<mml:mrow><mml:mtext>if ( </mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&lt;</mml:mo><mml:mn>0.01</mml:mn><mml:mtext> ), then </mml:mtext><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mtext> &amp; </mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>∅</mml:mo><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
</disp-formula></p>
</sec>
<sec id="sec009">
<title>Parameters</title>
<p>There are two sets of parameterizations. There is one parameterization for dataset A and one parameterization for datasets B1, B2, and B3. However, many parameterizations were examined for each dataset, and in fact there are ranges of parameter settings for which the generic results presented below are valid. In this case ‘valid’ means a parameter set that produces stable connections and postsynaptic neurons that exceed the desired minimum firing-rate. For the results presented here, the parameterizations produce a relatively large number of synapses per neuron compared to other valid settings. The parameterizations are listed in <xref rid="pcbi.1004299.t001" ref-type="table">Table 1</xref>. Neuron parameterizations that change between dataset A and datasets B1, B2, and B3 are threshold to fire (3.0 versus 0.8) and minimum desired firing-rate (9% versus 10%).</p>
<table-wrap id="pcbi.1004299.t001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.t001</object-id>
<label>Table 1</label> <caption><title>Network parameters.</title></caption>
<alternatives>
<graphic id="pcbi.1004299.t001g" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.t001" xlink:type="simple"/>
<table>
<colgroup span="1">
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
</colgroup>
<thead>
<tr>
<th align="left" rowspan="1" colspan="1"/>
<th align="left" rowspan="1" colspan="1">Dataset A</th>
<th align="left" rowspan="1" colspan="1">Datasets B</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1"><bold><italic>ε</italic></bold></td>
<td align="left" rowspan="1" colspan="1">0.001</td>
<td align="left" rowspan="1" colspan="1">0.001</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold><italic>α</italic></bold></td>
<td align="left" rowspan="1" colspan="1">0.95</td>
<td align="left" rowspan="1" colspan="1">0.99</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold><italic>γ</italic></bold></td>
<td align="left" rowspan="1" colspan="1">0.001</td>
<td align="left" rowspan="1" colspan="1">0.001</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>initial connections</bold></td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">1</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>initial synaptic weight</bold></td>
<td align="left" rowspan="1" colspan="1">0.2</td>
<td align="left" rowspan="1" colspan="1">0.2</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>threshold for shedding</bold></td>
<td align="left" rowspan="1" colspan="1">0.01</td>
<td align="left" rowspan="1" colspan="1">0.01</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold><italic>ρ</italic></bold></td>
<td align="left" rowspan="1" colspan="1">0.09</td>
<td align="left" rowspan="1" colspan="1">0.1</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold><italic>θ</italic></bold></td>
<td align="left" rowspan="1" colspan="1">3.0</td>
<td align="left" rowspan="1" colspan="1">0.8</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
</sec>
<sec id="sec010">
<title>Time-scales</title>
<p>As an explicit part of the model, there are three time-scales: i) the shortest is the neuron update (fire or not, given an input); ii) the next in duration is synaptic modification of existing synapses, which occurs every timestep; and iii) the slowest time-scale, which occurs after each training block, synaptogensis and shedding. In one cycle, all input vectors are presented to the network. A training block of inputs equals 10 cycles (e.g. if there are 50 input states, a block occurs after the network is presented with 500 inputs). The length of the simulations are shown in <xref rid="pcbi.1004299.t002" ref-type="table">Table 2</xref>.</p>
<table-wrap id="pcbi.1004299.t002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.t002</object-id>
<label>Table 2</label> <caption><title>Simulation parameters.</title></caption>
<alternatives>
<graphic id="pcbi.1004299.t002g" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.t002" xlink:type="simple"/>
<table>
<colgroup span="1">
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
</colgroup>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>block length in cycles</bold></td>
<td align="left" rowspan="1" colspan="1">10</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>number of blocks presented</bold></td>
<td align="left" rowspan="1" colspan="1">2000</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>total cycles</bold></td>
<td align="left" rowspan="1" colspan="1">20000</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>For each postsynaptic neuron the input blocks are repeated until no synapses are gained or lost for 200 blocks. At this time, a neuron’s synapses are assumed stable. At this point, as shown in the results, the synaptic weights have achieved their predicted values.</p>
</sec>
<sec id="sec011">
<title>Network analysis</title>
<p><xref rid="pcbi.1004299.s002" ref-type="supplementary-material">S1 Code</xref> contains the Matlab program used for simulations. There are 2000 neurons simulated per dataset; this large number serves the purpose of producing accurate statistics. However, because the synaptic modification algorithms used here yield feed-forward networks with excellent data compression and little information loss, certain analyses only make sense when the number of neurons are much fewer than 2000; in particular we limit the number of randomly sampled neurons to 1 through 50 out of the 2000.</p>
<sec id="sec012">
<title>Statistical dependence</title>
<p>Statistical dependence is a measure of redundancy. A decrease in statistical dependence is called ‘compression’. Statistical dependence is calculated by summing the Shannon entropy of each dimension (input line) and then subtracting the Shannon entropy of the entire input set. It is only evaluated for dataset B1.</p>
</sec>
<sec id="sec013">
<title>Discrimination errors</title>
<p>The output of the network is decoded using a supervised centroid rule. First, the centroid of the output vectors of each category is calculated from the training set. Then, each output vector (from the training and testing set) is categorized by selecting the closest centroid (Euclidean distance). If this selected centroid is from the appropriate category, there is no error; otherwise there is an error.</p>
</sec>
<sec id="sec014">
<title>Neuron allocation index</title>
<p>The 2000, adaptively formed neurons are evaluated with a novel input set (a testing set). The primary evaluation is the neuronal allocation index (per category), i.e. the fraction of total firings of the 2000 neurons produced by the inputs drawn from a single category. For example, suppose that ten neurons fire a total of 100 times to an input set with three categories: category one accounts for 18 of these firings, category two accounts for 32 of these firings, and category three accounts for the remaining 50 firings. Then, category one, two, and three will have neuron allocations of 0.18, 0.32, and 0.5, respectively.</p>
</sec>
</sec>
<sec id="sec015">
<title>Datasets</title>
<p>Neuron construction is driven by repeated presentation of patterns from a predetermined dataset. Four different input environments are studied (<xref rid="pcbi.1004299.t003" ref-type="table">Table 3</xref>). The first dataset (dataset A, see <xref rid="pcbi.1004299.g002" ref-type="fig">Fig 2A</xref> and <xref rid="pcbi.1004299.s001" ref-type="supplementary-material">S1 Dataset</xref>) has 80 input lines. There are five orthogonal prototypes that define the corresponding categories: the five prototypes correspond to a higher probability of firing within one of five distinct sets of input lines 1–16, 17–32, 33–48, 49–64, or 65–80. The five exemplars are generated from these prototypes, and presented with relative frequency 0.1, 0.15, 0.2, 0.25, and 0.3 for a total of 100 input patterns.</p>
<table-wrap id="pcbi.1004299.t003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.t003</object-id>
<label>Table 3</label> <caption><title>Datasets.</title></caption>
<alternatives>
<graphic id="pcbi.1004299.t003g" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.t003" xlink:type="simple"/>
<table>
<colgroup span="1">
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
</colgroup>
<thead>
<tr>
<th align="left" rowspan="1" colspan="1"/>
<th align="left" rowspan="1" colspan="1">Dataset A</th>
<th align="left" rowspan="1" colspan="1">Dataset B1, B2, B3</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>input dimensions</bold></td>
<td align="left" rowspan="1" colspan="1">80</td>
<td align="left" rowspan="1" colspan="1">390</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>axons active per pattern</bold></td>
<td align="left" rowspan="1" colspan="1">16</td>
<td align="left" rowspan="1" colspan="1">20</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>number of input categories</bold></td>
<td align="left" rowspan="1" colspan="1">5</td>
<td align="left" rowspan="1" colspan="1">9</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>positive noise (0 to 1)</bold></td>
<td align="left" rowspan="1" colspan="1">Yes</td>
<td align="left" rowspan="1" colspan="1">No</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>negative noise (1 to 0)</bold></td>
<td align="left" rowspan="1" colspan="1">Yes</td>
<td align="left" rowspan="1" colspan="1">Yes</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<fig id="pcbi.1004299.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Randomly generated input vectors.</title>
<p>(A) shows the 100 patterns of dataset A. An input pattern is built by perturbing one of five binary, 80-dimensional orthogonal vectors, see <xref rid="sec002" ref-type="sec">methods</xref>. Each of these five orthogonal vectors can be considered the central, unseen prototype pattern that defines the five distinct categories. The perturbation rule randomly complements two 1's and two 0's of such a prototype. Black pixels represent 1’s, and white pixels represents 0’s. Note the different relative frequencies of the categories: 10, 15, 20, 25, and 30%. (B) shows the 225 patterns of dataset B1. A pattern is built by perturbing each one of nine binary 390-dimensional vectors, see <xref rid="sec002" ref-type="sec">methods</xref>. Each of these nine vectors can be considered the central, unseen prototype that defines a distinct category. The perturbation rule randomly selects 20 out of 60 input lines from the central pattern to be active. Black pixels represent 1’s and white pixels represents 0’s. Note the three orthogonal super-categories, and note the differing overlaps of the categories across super-categories. The equal frequencies of each category only applies to dataset B1.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g002" position="float" xlink:type="simple"/>
</fig>
<p>In the case of dataset A, each prototype is randomly perturbed such that the total number of active input-lines for each generated pattern remains constant. Specifically, two randomly selected active input-lines of the prototype are inactivated, and two randomly selected inactive input-lines of the prototype are activated. <xref rid="pcbi.1004299.g002" ref-type="fig">Fig 2A</xref> illustrates the binary input vectors of dataset A. Note the small amount of overlap between the input patterns only occurs due to noise.</p>
<p>Dataset B1 is much more complex in terms of relationships between input vectors. This set consists of nine categories each with its own prototype. Each of the nine individual categories has the same relative frequency (11.1%). The nine categories can be partitioned evenly into three super-categories: I, II, and III. <xref rid="pcbi.1004299.g002" ref-type="fig">Fig 2B</xref> visualizes the input set. These inputs are coded as 390-dimensional binary vectors. Between super-categories, the input patterns are orthogonal. Within a super-category, the prototypes and the patterns they generate overlap; the degree of overlap varies as a function of the super-category. Within the three super-categories overlap increases from 5 to 10, and then 15 input lines for super-categories I, II, and III, respectively. Each super-category has some input lines that are activated by only a single category; other input lines of this super-category are shared by two of the three categories; and the remaining input lines of the super-category are shared by all three categories. Super-category I has the least overlap: category A has 45 potentially active input lines that belong only to category A, 5 that belong to A and B, 5 that belong to A and C, and 5 that belong to A, B, and C for a total of 60 potentially active input lines per category. Super-category II has more overlap between its three categories (D, E, and F). There are 30 potentially active input lines that belong only to category D, 10 that belong to D and E, 10 that belong to D and F, and 10 that belong to D, E and F for a total of 60 potentially active input lines. Super-category III has the most overlap. There are 15 potentially active input lines that belong only to category G, 15 that belong to G and H, 15 that belong to G and J, and 15 that belong to G, H, and J for a total of 60 potentially active input lines. Thus, each category has a total of 60 potentially active input lines.</p>
<p>Exactly 20 of the 60 potentially active input lines from each category are pseudo-randomly chosen to be active for each pattern. None of the super-category’s designated inactive input lines are turned into active input lines.</p>
<p>Datasets B1, B2, and B3 are carefully constructed to illustrate the effects of category overlap (<xref rid="pcbi.1004299.g003" ref-type="fig">Fig 3</xref> and <xref rid="pcbi.1004299.s001" ref-type="supplementary-material">S1 Dataset</xref>) versus category probability on neuron allocation. Datasets B2 and B3 are constructed in a similar way as dataset B1, but with different relative frequencies for each category. Dataset B2 has relative frequencies: 0.13, 0.13, 0.13, 0.11, 0.11, 0.11, 0.098, 0.093, and 0.093. Dataset B3 has relative frequencies: 0.18, 0.17, 0.15, 0.12, 0.11, 0.087, 0.063, 0.058, and 0.053.</p>
<fig id="pcbi.1004299.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g003</object-id>
<label>Fig 3</label>
<caption>
<title>A visualization of super-category II of the B datasets.</title>
<p>All three super-categories have seven constructed regions of overlap, this visualization shows the proportional overlap for the categories D, E, and F that make up super-category II. Category D is a union of the possibly active input lines from sub-regions 1, 4, 5, and 7. Similarly, Category E is a union of the possibly active input lines from sub-regions 2, 5, 6, and 7. Lastly, Category F is a union of sub-regions 3, 4, 6, and 7. Note that 30 input lines define sub-region 1, 10 define sub-region 4, which is shared between D and F, 10 define sub-region 5 which is shared between D and E, and 10 define sub-region 7 which is shared by D, E, and F.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g003" position="float" xlink:type="simple"/>
</fig>
</sec>
</sec>
<sec id="sec016" sec-type="results">
<title>Results</title>
<sec id="sec017">
<title>Theory</title>
<p>The most important idea of this section is that there is a mathematical derivation that characterizes the stable connectivities for a feedforward neuron whose connections are governed by adaptive synaptogenesis.</p>
<p>This theory’s convergence results provide a means for identifying stable configurations when simulations are performed. Going in the other direction, and of secondary importance is establishing the relevance of the theory via simulations because the theory requires multiple infinities of sampling: thus, simulations must be used to establish the existence of parameterizations capable of achieving the predicted, stable connectivities.</p>
<p>The stable weight values on a neuron with a stable connectivity are a function of the subspace covariance matrix that arises from the set of input lines received by this neuron. For example, one of our input environments is a random vector of 390 distinct input lines (axons arising from distinct neurons which may or may not be correlated in activity). Out of these 390 lines, a postsynaptic neuron may acquire a small fraction of this number, for example 20 input lines. Such an acquired set defines a subspace of the original space, and just as there is a 390-by-390 covariance matrix associated with the full input space, there is a specific 20-by-20 covariance matrix associated with the subspace defined by this neuron's input connections. Then for this neuron (call it <italic>j</italic>), we can also associate a dominant eigenvector and its associated eigenvalue arising from <italic>j</italic>'s covariance matrix. A simple theorem states that the weights of these inputs are proportional to this subspace’s dominant eigenvector. (A pleasing result since this vector maximizes the information throughput compared to all other linear, <italic>n</italic>-by-<italic>1</italic> input filters for a given <italic>y</italic>.) Moreover, the theorem below tells us 1) the proportionality constant that scales this eigenvector to the stable weight values, 2) the average excitation of <italic>j</italic>, and 3) the variance of <italic>j</italic>'s excitation.</p>
<p>In what follows, we assume that ε is a small positive constant and assume synaptic modification has been going on for a long time with a fixed set of input lines. Therefore the synaptic weights, i.e. the column vector <italic>w</italic>(<italic>t</italic>) for neuron <italic>j</italic>, change very slowly and thus can be treated deterministically. For a fixed set of input lines, each input-activation is random column vector <italic>X</italic>(<italic>t</italic>) (with realizations <italic>x</italic>(<italic>t</italic>)) with mean value E[<italic>X</italic>]. Via the definition of excitation, <italic>y</italic>(<italic>t</italic>) = <italic>x</italic>(<italic>t</italic>)<sup><italic>T</italic></sup><italic>w</italic>(<italic>t</italic>), the average excitation is E[<italic>Y</italic>] = E[<italic>X</italic><sup><italic>T</italic></sup><italic>w</italic>]. As noted above, the weights can be treated as a constant; thus in the limit, the mean excitation is E[<italic>Y</italic>] = E[<italic>X</italic><sup><italic>T</italic></sup>]<italic>w</italic>(∞). The variance of this excitation arises from the covariance matrix of the input to this neuron <italic>j</italic>. That is, define <italic>j</italic>’s covariance matrix of its input space as <italic>Cov</italic>(<italic>X</italic>): = E[<italic>XX</italic><sup><italic>T</italic></sup>] − E[<italic>X</italic>]E[<italic>X</italic><sup><italic>T</italic></sup>], and then note that
<disp-formula id="pcbi.1004299.e010">
<alternatives>
<graphic id="pcbi.1004299.e010g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e010" xlink:type="simple"/>
<mml:math display="block" id="M10" overflow="scroll">
<mml:mrow><mml:mi>w</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mi>C</mml:mi><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>w</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mi>X</mml:mi><mml:msup><mml:mi>X</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo>−</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>w</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mi>X</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mtext> </mml:mtext><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>X</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>Y</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mo>−</mml:mo><mml:mi>E</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mi>V</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(1)</label>
</disp-formula>
Finally, define λ<sub>1</sub> to be the largest eigenvalue of this covariance matrix and <italic>e</italic><sub>1</sub> as its associated eigenvector of unit length (the so-called dominant eigenvector).</p>
<p><bold>Theorem</bold>. Assuming a stable set of input weights is achieved via the synaptic modification equation Δ<italic>w</italic><sub><italic>ij</italic></sub> = <italic>ε</italic>(<italic>X</italic>(<italic>t</italic>) – <italic>E</italic>[<italic>X</italic>] – <italic>w</italic>(<italic>t</italic>))<italic>X</italic>(<italic>t</italic>)<sup><italic>T</italic></sup><italic>w</italic>(<italic>t</italic>) operating along with the shedding rule then,
<disp-formula id="pcbi.1004299.e011">
<alternatives>
<graphic id="pcbi.1004299.e011g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e011" xlink:type="simple"/>
<mml:math display="block" id="M11" overflow="scroll">
<mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi>E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mi>Y</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>∞</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mtext>lim</mml:mtext></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>→</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:munder><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mtext> where</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mi>V</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msqrt><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable>
</mml:math>
</alternatives>
<label>(2)</label>
</disp-formula>
Proof.</p>
<p>By definition, stability implies <inline-formula id="pcbi.1004299.e012"><alternatives><graphic id="pcbi.1004299.e012g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e012" xlink:type="simple"/><mml:math display="inline" id="M12" overflow="scroll"><mml:mrow><mml:munder><mml:mrow><mml:mtext>lim</mml:mtext></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>→</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:munder><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mo>Δ</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>. Then, taking this same expectation and limit on the other side of the synaptic modification equation yields
E[Δ<italic>w</italic>(∞)] = 0 = ε((E[<italic>XX</italic><sup><italic>T</italic></sup>] − E[<italic>X</italic>]E[<italic>X</italic><sup><italic>T</italic></sup>]) <italic>w</italic>(∞)<italic> – w</italic>(∞)E[<italic>Y</italic>]), or 
ε(<italic>Cov</italic>(<italic>X</italic>) <italic>w</italic>(∞) – <italic>w</italic>(∞)E[<italic>Y</italic>]) = 0, which implies
<disp-formula id="pcbi.1004299.e013">
<alternatives>
<graphic id="pcbi.1004299.e013g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e013" xlink:type="simple"/>
<mml:math display="block" id="M13" overflow="scroll">
<mml:mrow><mml:mi>C</mml:mi><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>w</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>∞</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:mi>w</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>∞</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mi>Y</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(3)</label>
</disp-formula>
Note that (<xref rid="pcbi.1004299.e013" ref-type="disp-formula">3</xref>) is the eigen-equation, and the shedding rule guarantees all weights are positive while the synaptic modification equation guarantees <italic>w</italic><sub><italic>ij</italic></sub> is bounded from above because <italic>X</italic>–E[<italic>X</italic>] &lt; 1. Therefore because <italic>y</italic> is bounded both below and above, convergence is implied. With our old synaptic modification rule based on a correlation matrix of a non-negative input, the Perron-Frobenius (PF) theorem implies that the dominant eigenvector (associated with λ<sub>1</sub>) is in the all-positive orthant. Here however, without an all-positive covariance matrix, we must conjecture an extension to PF (see below). Thus, by this perturbation conjecture, the synaptic weights align with <italic>e</italic><sub>1</sub> (proving <xref rid="pcbi.1004299.e011" ref-type="disp-formula">2</xref>). Now designate an unknown positive constant <italic>k</italic> and define <italic>w</italic>(∞) = <italic>ke</italic><sub>1</sub>. Pre-multiplying (<xref rid="pcbi.1004299.e013" ref-type="disp-formula">3</xref>) by <inline-formula id="pcbi.1004299.e014"><alternatives><graphic id="pcbi.1004299.e014g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e014" xlink:type="simple"/><mml:math display="inline" id="M14" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> quickly yields (<xref rid="pcbi.1004299.e011" ref-type="disp-formula">2</xref>): <inline-formula id="pcbi.1004299.e015"><alternatives><graphic id="pcbi.1004299.e015g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e015" xlink:type="simple"/><mml:math display="inline" id="M15" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:mi>C</mml:mi><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>∞</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>∞</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> implying <inline-formula id="pcbi.1004299.e016"><alternatives><graphic id="pcbi.1004299.e016g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e016" xlink:type="simple"/><mml:math display="inline" id="M16" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>λ</mml:mi><mml:mn>1</mml:mn><mml:mrow/></mml:msubsup><mml:msubsup><mml:mi>e</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:mi>k</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mn>1</mml:mn><mml:mrow/></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:mi>k</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mn>1</mml:mn><mml:mrow/></mml:msubsup><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, producing the result E[Y] = λ<sub>1</sub>.</p>
<p>For (<xref rid="pcbi.1004299.e011" ref-type="disp-formula">2</xref>), pre-multiple both sides of (<xref rid="pcbi.1004299.e013" ref-type="disp-formula">3</xref>) by <italic>w</italic>(∞)<sup><italic>T</italic></sup>, and note that by <xref rid="pcbi.1004299.e010" ref-type="disp-formula">Eq (1)</xref> the left hand side is <italic>var</italic>(<italic>Y</italic>) while the right hand side yields <italic>k</italic><sup>2</sup>E[<italic>Y</italic>]. Thus,
<disp-formula id="pcbi.1004299.e017">
<alternatives>
<graphic id="pcbi.1004299.e017g" position="anchor" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.e017" xlink:type="simple"/>
<mml:math display="block" id="M17" overflow="scroll">
<mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mi>V</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msqrt></mml:mrow>
</mml:math>
</alternatives>
</disp-formula>
If a neuron happens to acquire enough synapses, a valid central limit theorem (with mean and variance of the excitation values) would even tell us where threshold should be placed to produce the desired activity level. That is, the right-hand tail, beginning at threshold, yields the fraction of times a neuron fires to a randomly sampled input.</p>
<p>This theorem assumes convergence of all algorithmic processes. However there is an important exception to the convergence hypothesis. Certain input configurations will never produce stable connectivities nor achieve their algorithmically guaranteed firing-rates. Sensibly, such neurons might be killed-off; such neurons might lower their firing threshold; or from another perspective, such an input configuration will be very unlikely to exist. For example, we must conjure an input environment in which a set of input patterns is orthogonal to all others (thus very unlikely) and the probability of a member of this set occurring is less than the receptivity cutoff. For example, suppose synaptogenesis remains positive until a neuron fires 10% of the time. Suppose a subset of patterns occurs 9% of the time and that this set of patterns is orthogonal to all the other patterns. If a subspace of this set with its positively correlated input lines gains a controlling influence on a postsynaptic neuron, then any other input line not positively correlated but acquired through synaptogenesis will have its weight decreased by the synaptic modification equation and then it will eventually be shed. Nevertheless, no matter how many positively correlated input lines are acquired, synaptogenesis continues never to halt (because postsynaptic firing will converge to 9%, a value below the required 10% that halts synaptogenesis on such a neuron).</p>
<sec id="sec018">
<title>Extending the Perron-Frobenius theorem</title>
<p>For any one neuron, the algorithmic construction of its all-positive weight vector hinges, in a mathematical sense, on a perturbation of the classic PF result. The classic PF result specifies a sufficient condition for an all-positive dominant eigenvector, specifically an all-positive (and positive definite) symmetric matrix. However, this sufficient condition is not a necessary condition. In fact, one can mildly perturb an all-positive covariance matrix into a matrix with a relatively small number of not-too-negative entries, and it is still the case that the dominant eigenvector is all-positive. Although we know of no theorem that makes, much less quantifies this statement, it is easy to construct such matrices using Mathematica. Moreover, by inspection, we know that the subspaces of the covariances associated with our data sets and the simulation-discovered input vectors have such negative entries while at the same time have an all-positive dominant eigenvector.</p>
<p>From a purely algorithmic perspective, it is the shedding rule that enforces the all-positivity of a neuron’s inputs; thus it is the shedding rule that allows a neuron’s input covariance matrix to be such a suitably mild perturbation of a positive matrix. An issue that needs to be resolved from the combined perspective of random matrix theory and neuroscience is the relative abundance of such mildly perturbed covariance matrices. In regard to this combined perspective, it seems that one needs to examine distributions of covariance entries. For example, here is a sketched proof-heuristic for such a perturbed PF result with an explicit distributional assumption on covariance entries.</p>
<p>There are two steps to the heuristic. First note that the algorithm being used to find the dominant eigenvector can be replaced by the von Mises power method. Then, if for any symmetric matrix <italic>M</italic>, <italic>M</italic> raised to some integer power <italic>p</italic>&gt;1 is all-positive, then the PF result can be applied even if <italic>M</italic> itself is not all-positive. Here we just consider <italic>p</italic> = 2 and the construction of random vectors that are mostly positive but whose inner products with each other are, with high probability, positive. Construct two random vectors each with <italic>n</italic> elements. Suppose the random elements are chosen from a uniform distribution that ranges from—a to 2a (a&gt;0). Then, when <italic>n</italic> is large, 1/3 of the values fall into one of the three ranges. [-a,0), [0,a), and [a,2a]. Now it should be easy to see that the inner product of two such high-dimensional vectors tends to be positive (and the greater the positive offset of the mean from zero the faster this occurs). That is, consider the partitioned inner products of the elements in the range of [a,2a] times those in the other two ranges [-a,0) and [0,a). For large <italic>n</italic> these two inner products will sum to nearly zero; the inner product of values in [-a,0) times (0,a) will be negative, but this sum approximately matches the positively valued inner product of the [-a,0) elements with the other vector’s (-a,0) elements, and then an even greater tendency toward positivity occurs when we add in the positive inner products produced by the two matched partitions of the non-negative elements; thus, the grand total inner product is greater than zero with high probability. Finally, note that it is such inner products that populate <italic>M</italic><sup>2</sup> if <italic>M</italic> is randomly constructed with such a distribution of covariances.</p>
</sec>
</sec>
<sec id="sec019">
<title>Simulations</title>
<sec id="sec020">
<title>Convergence to stable weights</title>
<p>The results of this paper and their interpretation hinge on the stability of the adaptively formed neurons and their input synapses. Because the underlying theory assumes that time goes to infinity multiple times, there is reason to question the physiological applicability of the theory. Here simulations show that, for appropriate settings, the three dynamic aspects of synaptic modification can be combined to produce stable connectivity and stable weights; that is, synaptogenesis and shedding eventually come to a halt and the synaptic weight vectors (both in terms of direction and length) converge to the values predicted by the theory.</p>
<p>In all of the simulations that follow, the synaptic weights are stable and connections are no longer being added or shed. <xref rid="pcbi.1004299.g004" ref-type="fig">Fig 4</xref> shows the number of synapses for ten representative neurons as a function of the number of input blocks. For the last 200 blocks, there is no change in the number of synapses on each neuron. Of course these data could arise from a tread-milling effect in which each new synapse generated is exactly matched by a synapse shed, but the next evaluation denies this possibility. Therefore synaptogenesis and shedding have ceased.</p>
<fig id="pcbi.1004299.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Driven by the adaptive algorithm, synapses are acquired and discarded but eventually a stable connectivity is achieved.</title>
<p>This illustration follows the total connections for each of 10 representative neurons in one simulation as a function of number of blocks of input presentations. Note the wide distribution, across neurons, of the time-to-stable connectivity. Nevertheless all neurons illustrated here achieve stable connectivity by block 310 (the upper orange-red line), but one neuron achieves a stable connectivity as early as block 82 (purple).</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g004" position="float" xlink:type="simple"/>
</fig>
<p>Just as predicted by (<xref rid="pcbi.1004299.e011" ref-type="disp-formula">2</xref>) of the theorem, each neuron has final weights proportional to the dominant eigenvector of its local covariance matrix (i.e. the subspace defined by the neuron’s input lines). For any neuron <italic>j</italic> the constant of this proportionality is equal to the square root of the variance of its excitation value, <italic>y</italic>, divided by the mean of its excitation value as described by <xref rid="pcbi.1004299.e011" ref-type="disp-formula">Eq (2)</xref>. For example, the dominant eigenvector of the local covariance matrix of neuron 28 from the simulations with dataset B1 is [0.192, 0.107, 0.305, 0.226, 0.307, 0.123, 0.416, 0.394, 0.608], and the weights for that neuron are [0.169, 0.094, 0.269, 0.198, 0.27, 0.109, 0.366, 0.347, 0.535]. The element-by-element ratio of the eigenvector to the weight vector is 0.880 for all elements (variance is 10<sup>−27</sup>). In fact, the square root of the variance of <italic>y</italic><sub><italic>j</italic></sub> divided by E[<italic>Y</italic><sub><italic>j</italic></sub>] (<italic>k</italic> from the theorem) is 0.882 (a difference of less than 0.23%). Thus, the simulations confirm the theory, even though the theory requires an infinite number of training blocks.</p>
</sec>
<sec id="sec021">
<title>Convergence and dynamics</title>
<p>Although convergence occurs for all datasets studied here, the time to converge to stable weights is not uniform across input categories. For dataset B1, the neurons that are captured by super-category I take significantly more training blocks to converge than neurons captured by super-category III (t-test, p = 9.15 * 10<sup>−61</sup>, <xref rid="pcbi.1004299.t004" ref-type="table">Table 4</xref>). Thus, time to convergence for neurons learning about one particular super-category is negatively correlated with the number of neurons captured by this super-category (see neuron allocation below). Also, neurons that are captured by super-category I have significantly more synapses than neurons captured by super-category III. Thus, time to convergence for a super-category is positively correlated with the mean number of synapses on neurons captured by that super-category.</p>
<table-wrap id="pcbi.1004299.t004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.t004</object-id>
<label>Table 4</label> <caption><title>Synapses and convergence.</title></caption>
<alternatives>
<graphic id="pcbi.1004299.t004g" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.t004" xlink:type="simple"/>
<table>
<colgroup span="1">
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
<col align="left" valign="middle" span="1"/>
</colgroup>
<thead>
<tr>
<th align="left" rowspan="1" colspan="1">super-category:</th>
<th align="left" rowspan="1" colspan="1">I</th>
<th align="left" rowspan="1" colspan="1">II</th>
<th align="left" rowspan="1" colspan="1">III</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>mean synapses per neuron</bold>:</td>
<td align="char" char="." rowspan="1" colspan="1">22.8</td>
<td align="char" char="." rowspan="1" colspan="1">22.2</td>
<td align="char" char="." rowspan="1" colspan="1">16.6</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"><bold>mean blocks to convergence</bold>:</td>
<td align="char" char="." rowspan="1" colspan="1">280.2</td>
<td align="char" char="." rowspan="1" colspan="1">212.6</td>
<td align="char" char="." rowspan="1" colspan="1">178.7</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
</sec>
<sec id="sec022">
<title>Characterization of the recodings</title>
<p>Feed-forward networks formed from such adaptively generated neurons have been characterized as efficient means of compressing patterns while preserving most of pattern information [<xref rid="pcbi.1004299.ref006" ref-type="bibr">6</xref>, <xref rid="pcbi.1004299.ref008" ref-type="bibr">8</xref>–<xref rid="pcbi.1004299.ref009" ref-type="bibr">9</xref>]. Although compression is not the issue here, it still can be quantified, and indeed, compression occurs. However, as is the case with the antagonism between compression and mutual information in the earlier studies, there is an inverse relationship between pattern recognition errors and statistical dependence when the independent variable is number of post-synaptic neurons.</p>
<p>As indicated in <xref rid="pcbi.1004299.g005" ref-type="fig">Fig 5</xref>, the discrimination error rate of networks with 10 neurons is quite high (32%) while statistical dependence is extremely low (1.61 bits). But for networks defined by 30 randomly sampled neurons, the mean error rate decreases to 10.42% while mean statistical dependence increases 10.72 bits. For networks of 50 randomly chosen neurons (out of 2,000), the mean error rate decreases to 5.2% and mean statistical dependence increases to 21.68 bits (still a substantial reduction from the input statistical dependence 102.4 bits).</p>
<fig id="pcbi.1004299.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Error rate and statistical dependence depend on network size (Dataset B1).</title>
<p>(A) As the number of postsynaptic neurons in a network increases, decoding error-rate monotonically decreases. A 10% error rate is reached once there are 34 neurons, and the amount of error continues to decline reaching 5.2% error at 50 neurons. (B) As the number of neurons increase, statistical dependence monotonically increases. When 34 neurons are sampled, statistical dependence is 12.84. Note that this is much less than the input statistical dependence of 102 bits.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g005" position="float" xlink:type="simple"/>
</fig>
<p>Since these feed-forward networks are reducing statistical dependence while achieving a reasonably low error-rate for unsupervised neurons, we conclude that the algorithm produces efficient data compression.</p>
</sec>
<sec id="sec023">
<title>Neuron allocation</title>
<p>Recall that the basic conjecture: the more frequent the exemplars of a category, then the greater the neural representation for that category [<xref rid="pcbi.1004299.ref010" ref-type="bibr">10</xref>]. Thus, the fraction of neurons devoted to the different categories of an input space is the measurement that produces our most important result.</p>
<p>The simplest demonstration of the input frequency hypothesis uses dataset A. In dataset A there are five categories, occurring with frequency {.1, .15, .2, .25, .3}. After enough cycles for neurons to stabilize, fractional neuron allocation per category is 0.04, 0.13, 0.20, 0.29, and 0.34, respectively. Thus, higher category frequency does lead to greater neuron allocation, and the relationship is nearly linear as can be seen in <xref rid="pcbi.1004299.g006" ref-type="fig">Fig 6</xref>. With a little thinking, this is an intuitive result for the synaptogenesis and synaptic modification algorithm: Having relatively more inputs belong to a category leads to more postsynaptic neurons learning that category because there is a competition ongoing, a computation biased by category frequency (i.e. higher activity inputs tend to chase-off lower activity inputs through the associative modification equation and shedding).</p>
<fig id="pcbi.1004299.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Neuronal allocation is linear in category probability for dataset A.</title>
<p>The fraction of postsynaptic neurons firing to a category is proportional to category probability. For this low overlap dataset (see <xref rid="pcbi.1004299.g002" ref-type="fig">Fig 2A</xref>), each postsynaptic neuron fires exclusively to a single category. The linear regression slope is 1.5 (the intercept is -0.1). Each plotted data point is the fraction of 2000 neurons allocated.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g006" position="float" xlink:type="simple"/>
</fig>
<p>Although this allocation result clearly supports the basic contention of this paper, the simplicity of this observation belies an additional complexity that occurs when categories are not orthogonal in the input domain.</p>
<p>As the datasets become more complicated, category frequency alone will no longer have a simple linear relationship with neuron allocation, a point made quite strongly by dataset B1. Recall that this dataset consists of nine categories, all with equal frequency, where these nine categories arise from three orthogonal “super-categories” as defined in the methods. For this dataset and its equal probable categories, allocation is quite different across categories, not at all uniform as the equiprobable frequency might have suggested. Fewer neurons are allocated to categories with less overlap, while more neurons are allocated to categories with more overlap (<xref rid="pcbi.1004299.g007" ref-type="fig">Fig 7A</xref>). For dataset B1 the fraction of neurons allocated to the three super-categories is 17.4%, 33.45%, and 49.15%. The fractional neuron allocations for each category (grouped by consecutive super-categories) are {0.06, 0.06, 0.05}, {0.11, 0.11, 0.11}, and {0.17, 0.16, 0.16}. Since the relationships between categories within a super-category are relatively constant (small differences due to the randomization algorithm that built the dataset), there is low allocation variance between categories that share a super-category. From a theoretical perspective, increasing overlap within a super-category increases the largest eigenvalue of the covariance matrix of that super-category, which in turn positively correlates with increased neuron allocation.</p>
<fig id="pcbi.1004299.g007" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g007</object-id>
<label>Fig 7</label>
<caption>
<title>Category frequency can overcome the advantage of highly overlapping super-categories in capturing post-synaptic neurons.</title>
<p>(A) shows neuron allocation for dataset B1. Even though the nine categories are equiprobable, categories capture post-synaptic neurons in a non-equiprobable fashion. The greater the overlap within a super-category, the more neurons that are captured by that super-category's base categories. For each category inside a super-category, there is similar neuron allocation. The x-axis labels both category and category frequency (e.g. 11.1%, 11.1%, 11.1%…). (B) shows neuron allocation for dataset B3. By changing the category frequencies, the neuron allocations change, and the effect of overlap is overcome. The change in frequency leads to more neurons allocated to categories with the highest frequency, even inside a super-category. The x-axis labels both category and category frequency (e.g. 18.4%, 17.4%, 15.5%…). Numbers 1 through 9 on each x-axis correspond, in sequence, to the three base patterns comprising the three, sequential super-catergories.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g007" position="float" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec024">
<title>Interacting category probability with category overlap</title>
<p>Dataset B2 specifically modifies dataset B1 to produce <italic>ca</italic>. equal neuron allocations across all categories. To achieve this equal allocation, the relative frequencies change from equiprobable to 13, 13, 13, 11, 11, 11, 10, 9, and 9 percent. These new frequencies produce corresponding relative neuron allocations of 0.11, 0.12, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, and 0.11.</p>
<p>Thus, adjusting category frequency compensates for the overlap effect, so that if viewed in isolation, this result appears to contradict the thesis of this paper. Dataset B3 also modifies dataset B1. However, this time the modification produces data that, even in isolation, support the main theme of this paper, i.e. higher frequencies produce greater neuron allocations. To illustrate this point, the category relative frequencies are set to 18, 17, 15, 12, 11, 9, 6, 6, and 5 percent. These frequencies produce relative neuron allocations of 0.26, 0.24, 0.17, 0.11, 0.09, 0.06, 0.022, 0.020, and 0.016, respectively. In this case, neuron allocation is monotonically decreasing across categories as appropriate to the hypothesis (<xref rid="pcbi.1004299.g007" ref-type="fig">Fig 7B</xref>). Thus, even with the more complex input structure of the B datasets, there are category frequency values that qualitatively reproduce the result of the simpler dataset A; i.e., neuron allocation clearly depends on category frequency.</p>
<p>For the same simulations using dataset B1, an additional characterization quantifies the fraction of neurons that fire exclusively to each category’s centroid (<xref rid="pcbi.1004299.g008" ref-type="fig">Fig 8</xref>). Note that, regardless of overlap within a super-category, a large number of neurons demonstrate such exclusivity, with values ranging from 95 neurons for the third category to 164 for the fourth category out of 2000 post-synaptic neurons. Unsurprisingly, when comparing such results across super-categories, the fraction of neurons exclusively fired by a category centroid, as a percentage of the total number of neurons fired, decreases with category overlap. For example, the fraction of neurons that fire exclusively to the one of the three category centroids of super-category I is greater than the fraction of neurons that fire exclusively to one of the three categories of super-category III. Even so, regardless of super-category, there are more than enough exclusive neurons for a supervised decoder to capture the information needed for selective recognition across all nine categories.</p>
<fig id="pcbi.1004299.g008" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g008</object-id>
<label>Fig 8</label>
<caption>
<title>Neurons fired exclusively and non-exclusively by each category’s centroid.</title>
<p>All post-synaptic neurons fire exclusively to only one super-category, but some neurons are exclusive to a single category within a super-category (filled bars). Unfilled bars count neurons that fire in response to two or three categories within a super-category. Numbers 1 through 9 on the x-axis correspond, in sequence, to the three base patterns of comprising the three, sequential super-catergories. In all cases, testing threshold is 2.4 because the prototypes are noiseless. Training to B1; testing to full prototype.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g008" position="float" xlink:type="simple"/>
</fig>
<p>A third and more subtle characterization of the neuronal allocation quantifies the neurons that respond to the sub-regions of input space created by the overlap between the nine categories (see <xref rid="pcbi.1004299.g003" ref-type="fig">Fig 3</xref>). The number of neurons fired by sub-regions, exclusively and non-exclusively, is presented in <xref rid="pcbi.1004299.g009" ref-type="fig">Fig 9</xref>. Neurons that fire in response to individual super-category I sub-regions do so almost entirely in a non-exclusive manner. In super-category III, more than one quarter of the neurons firing to sub-region II-7 (the triple overlap) are firing exclusively and zero neurons are firing exclusively to sub-regions III-1, III-2, and III-3. On the other hand, the most reliable exclusive recognition of the sub-regions occurs for super-category II. In super-category II (sub-regions II-1 through II-6), the vast majority of firings are non-exclusive, but there are also many neurons firing exclusively to each sub-region. Across sub-regions II-1 through II-6, the exclusively fired neurons are nearly uniformly distributed.</p>
<fig id="pcbi.1004299.g009" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004299.g009</object-id>
<label>Fig 9</label>
<caption>
<title>Neurons fired exclusively and non-exclusively by each sub-region.</title>
<p>The sub-regions, as in <xref rid="pcbi.1004299.g003" ref-type="fig">Fig 3</xref>, can be learned in an exclusive fashion. Such novel learning is poorest for super-category I; Exclusively fired neurons do not exist in sub-regions I-4, I-5, and I-6. Nearly all of the exclusive neuron firing in super-category I occurs in sub-regions I-1, I-2, and I-3. Super-category II has an even distribution of neurons firing exclusively to II-1 through II-6, while II-7 garners approximately twice the number of neurons as any of the other sub-regions. A majority of neurons that learn super-category III are fired by sub-region III-7 (the triple overlap) and the majority of these neurons fire exclusively. There are a sizeable number of neurons that are learning to fire to III-4, III-5, and III-6 exclusively. Such results are dependent on synapse number per neuron. The 21 sub-regions arising from the totality of all super-categories are numbered here as in <xref rid="pcbi.1004299.g003" ref-type="fig">Fig 3</xref> but expanded by the sequence of the three super-categories.</p>
</caption>
<graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1004299.g009" position="float" xlink:type="simple"/>
</fig>
<p>In sum, the higher the overlap inside a super-category, the more likely there will be neurons learning the highly overlapped sub-region and the less likely there will be neurons learning the non-overlapping sub-regions. But as is the case for super-category II, codes can develop that are quite appropriate for learning the sub-regions. Thus, the adaptive algorithm has created codes that refine the environment consistent with the idea that an expert can be self-taught. That is, pattern differences only implicit through relationships within the data will be discriminated by unsupervised neurons.</p>
</sec>
</sec>
</sec>
<sec id="sec025" sec-type="conclusions">
<title>Discussion</title>
<sec id="sec026">
<title>Historical perspective</title>
<p>The theory of adaptive synaptogenesis was developed from observations of empirical neuroscience (see [<xref rid="pcbi.1004299.ref001" ref-type="bibr">1</xref>], [<xref rid="pcbi.1004299.ref002" ref-type="bibr">2</xref>], and [<xref rid="pcbi.1004299.ref016" ref-type="bibr">16</xref>] for motivating studies), from the underlying assumption that in order for a neuron to be most useful, its afferent synapses must reflect the statistical structure of the input world, and from one more motivating idea. We assume that there are desirable operating values for balancing costs versus information (e.g. mean firing-rate or mean excitation vs. variance of excitation). Then, as the outcome of the algorithm, adaptive synaptogenesis guarantees such desirable, predetermined values. In this regard, BCM theory led the way, as it explicitly creates postsynaptic neurons with a particular average excitation [<xref rid="pcbi.1004299.ref005" ref-type="bibr">5</xref>].</p>
<p>In this regard, BCM theory provided the inspiration for adaptive activity control over the long term. More generally, the importance of producing an average activity level in a postsynaptic neuron became clearer with the demonstration [<xref rid="pcbi.1004299.ref017" ref-type="bibr">17</xref>] that neuron parameters (such a axonal leak current) imply a particular optimum firing-rate in order to maximize the bits per joule of an axon. Given a neuron with such an optimized axon, the values of synaptic excitation must be important in terms of matching dendro-somatic-initial segment computation with the axon’s optimal firing-rate. As well, its synapses should in some sense maximize incoming information [<xref rid="pcbi.1004299.ref015" ref-type="bibr">15</xref>]. In any event, the BCM algorithm with initial full-connectivity conjoined with an appropriate shedding rule, may well produce identical results to what is found here. Of course spike-timing rules will also work, again assuming full initial connectivity [<xref rid="pcbi.1004299.ref018" ref-type="bibr">18</xref>].</p>
<p>Indeed, in its earliest version, the utility of adaptive synaptogenesis was understood in the context Barlow’s information-conserving compressive coding idea [<xref rid="pcbi.1004299.ref019" ref-type="bibr">19</xref>–<xref rid="pcbi.1004299.ref020" ref-type="bibr">20</xref>], a clearly energy saving transformation with its reduction in both firing-rate and number of neurons while maintaining almost all of the information of the inputs.</p>
<p>The idea of using random connectivity to create network codes has always been part of our synaptogenesis algorithm; in fact, it is the baseline condition in [<xref rid="pcbi.1004299.ref006" ref-type="bibr">6</xref>–<xref rid="pcbi.1004299.ref007" ref-type="bibr">7</xref>]. Independently, such ideas have been used to study efficient connectivity distributions [<xref rid="pcbi.1004299.ref021" ref-type="bibr">21</xref>] and abstract functions [<xref rid="pcbi.1004299.ref022" ref-type="bibr">22</xref>]. As documented in our early work [<xref rid="pcbi.1004299.ref007" ref-type="bibr">7</xref>], just random connectivity without shedding is still quite useful for compressive coding. That is, these randomly formed networks produce large values of mutual information while decreasing statistical dependence. However, as documented in the series of articles [<xref rid="pcbi.1004299.ref006" ref-type="bibr">6</xref>, <xref rid="pcbi.1004299.ref008" ref-type="bibr">8</xref>–<xref rid="pcbi.1004299.ref009" ref-type="bibr">9</xref>], random connectivity with associative modification is inferior to using the algorithm that includes synaptic shedding of small weights.</p>
<p>Although we know of no first-principles theory for optimizing number of synapses, it is clear from synapse count data and the volume penalties incurred by synaptic structures [<xref rid="pcbi.1004299.ref023" ref-type="bibr">23</xref>] that only a minute fraction of an input space (for example the lateral geniculate as the input to V1) can form synapses with any one postsynaptic neuron in the cerebral cortex. In this light, it may be possible to tune adaptive synaptogenesis to achieve an appropriate range of synapses per neuron.</p>
<p>There are four differences between the adaptive synaptogenesis algorithm used previously and the current version: two of these (A and B below) are improvements that can be applied to the compressive algorithm, a third (C) is a specialization for neurons performing discrimination, and the fourth (D) is largely inconsequential in the context of the data structures used here.</p>
<list list-type="simple">
<list-item><label>(A)</label><p>The learned weights are a function of the local covariance matrix [<xref rid="pcbi.1004299.ref015" ref-type="bibr">15</xref>] instead of the local correlation matrix.</p></list-item>
<list-item><label>(B)</label><p>Instead of an asymptotic approach to zero, receptivity goes to zero for finite values of the relevant variable (here, each neuron's firing-rate).</p></list-item>
<list-item><label>(C)</label><p>For the discrimination problem, receptivity is controlled by firing-rate, E[<italic>Z</italic><sub><italic>j</italic></sub>], while average internal excitation, E[<italic>Y</italic><sub><italic>j</italic></sub>], controls receptivity for the information-based compression problem.</p></list-item>
<list-item><label>(D)</label><p>Finally, the presynaptic synaptogenesis constraint represented by the parameter ‘avidity’ (e.g., see [<xref rid="pcbi.1004299.ref009" ref-type="bibr">9</xref>]) is largely irrelevant here, and possibly counter-productive, because its purpose is to balance presynaptic territory. If taken too far, such a balance could work against the desired neuronal allocation result. Nevertheless with the incorporation of an appropriate avidity function, it is possible that there will be some small improvement in resource allocation for the problem studied here.</p></list-item>
</list>
</sec>
<sec id="sec027">
<title>New results</title>
<p>There are three primary results here: 1) extension of the adaptive synaptogenesis algorithm from data compression to discrimination; 2) documentation of neuronal allocation as a function of a category’s relative frequency and of the statistical input structure; and 3) when suitably formulated, adaptive synaptogenesis produces a stable connectivity in a stable input world.</p>
<sec id="sec028">
<title>Convergence to stable input connections</title>
<p>As confirmed here for the first time – using the combination of the covariance-based synaptic modification rule and a receptivity rule that gets driven to zero – neuronal allocation can be adaptively controlled by experience in a sensible way. Also for the first time, we show that convergence occurs for connections and their weight values in finite time. Stable connectivity, i.e. convergence in finite time, is required in the context of a hierarchical network like the visual system of the neocortex because code alteration (mappings from inputs to their neural representation) at the bottom of a hierarchy will require that all the subsequent levels of the hierarchy to re-organize their codes. Indeed, some systems have “critical periods”; a critical period turns off the algorithm after a given time interval. Thus, critical periods guarantee stability (even for non-stationary inputs) but do not guarantee activity levels or information rates as is the case for the adaptive synaptogenesis algorithm.</p>
</sec>
<sec id="sec029">
<title>Controlling neuronal allocation</title>
<p>The correlations between any subset of input patterns and the frequency of experience of these input patterns have a strong effect on the rate of convergence. In particular, the greater the pattern-overlap within a super-category, the faster the convergence to stable connectivity for neurons coding said super-category (See <xref rid="pcbi.1004299.t004" ref-type="table">Table 4</xref>). Such a relationship makes sense because with more overlap there is a better chance that a randomly chosen input-line will be retained due to the probability of positive correlation with other input lines. Moreover, fewer synapses will be needed on average to reach threshold. Going in the other direction, relatively isolated patterns are unlikely to win neuronal allocations and in the extreme of low correlation and low probability, neurons acquiring input lines used by an isolated pattern will never converge, and thus, such patterns will receive the smallest neuronal allocation.</p>
<p>The one final issue that might appear as a disconnect between theory and simulations is average firing rates. That is, there is a coarseness of the achieved firing levels compared to the desired levels. In all cases this coarseness can be understood in terms of the probability of the input patterns. For example, suppose that the desired activity level is 10% (i.e. receptivity for new innervation goes to zero once a neuron fires at least 10% of the time). It is quite conceivable (and we have observed such instances) that a neuron could be firing 8 or 9% of the time and then, one more synapse is added and the neuron fires 15% of the time. Such coarseness will be unavoidable when there are relatively few patterns encoded by relatively small number of input lines. Presumably with a higher dimension input system and many more patterns being sampled, there will be more variability, more synapses per neuron, and thus, such large jumps in activity will become less likely. Also contributing to the large excitatory effect of single synapses is the lack of any shunting inhibition and leak effects. Such inhibition will act divisively to downgrade the effectiveness of all activated excitatory synapses, thus biasing development for more synapses per neuron and, in turn, greater precision of actual firing rate compared to desired firing rate.</p>
</sec>
<sec id="sec030">
<title>Functional interpretations</title>
<p>The conjecture of energy-efficient brains, constructed from energy-efficient neurons, begs for adaptive processes to control average neuronal activity and to control the information, or the utility, to justify the expense of positive firing-rates and even a neuron’s existence. Studies of compressive coding implicitly, or explicitly, are concerned with optimizing bits per joule. However, when it comes to making decisions, which neurons surely must encode, discriminations are ultimately concerned with some kind of payoff structure generally referred to as utility. Negative error rates can be used as the simplest kind of utility in a discrimination problem. Assuming that all neurons within one class are spread broadly across the input patterns of that class—i.e. in a way such that neurons are equally useful for their cost, the modified adaptive synaptogenesis algorithm can be successfully applied to discrimination problems. Here we picture groups of firing neurons as working together to encode each input pattern, where information inherent in such a group is enough for correct classification. Thus, we do not necessarily require that an individual neuron, by itself, makes a correct classification, although this is certainly very useful. It is also useful when a neuron is one of many that make the classification of the pattern easier by eliminating some of the competing classes. In this regard, the results illustrate (see Figs <xref rid="pcbi.1004299.g008" ref-type="fig">8</xref> and <xref rid="pcbi.1004299.g009" ref-type="fig">9</xref>) the manner in which neuron allocations contribute to various degrees of sub-region specificity.</p>
<p>In general, neural network theories treat discrimination problems as supervised learning problems (e.g. [<xref rid="pcbi.1004299.ref024" ref-type="bibr">24</xref>]). However, such supervision may not always exist, and – our very point here – it is not always necessary. Again, note in Figs <xref rid="pcbi.1004299.g008" ref-type="fig">8</xref> and <xref rid="pcbi.1004299.g009" ref-type="fig">9</xref> that some neurons can get classification exactly right even without supervision while other neurons can help eliminate many of the possibilities without supervision. This unsupervised learning of a precise discrimination – and indeed creation of sub-region codes as occurs uniformly for super-category II (<xref rid="pcbi.1004299.g009" ref-type="fig">Fig 9</xref>) –seems relevant to human learning, particularly in the case of becoming an expert where many years of study are required.</p>
<p>To explain the cognitive relevance of such an unsupervised algorithm, we first considered that, in language, the number of terms and therefore the discriminability of some aspect of the world (e.g., Eskimos and snow, Laps and reindeer, see [<xref rid="pcbi.1004299.ref025" ref-type="bibr">25</xref>]) varies with amount of experience. That is, the more experience one has with some aspect of the world, then the more refined is one’s ability to discriminate among patterns in that aspect of the world. Along with this cognitive idea is the neuroscientific idea: the more neurons devoted to an aspect of the world, the greater a network’s ability to create discriminable neural codes for that aspect. However, by tying language to this cognitive interpretation, the coding problem becomes intertwined with the possibility of supervised learning, including supervised learning without error correction. Thus, rather than an example with supervised learning, a more apt analogy is self-taught discriminations. Consider the chess expert who can discriminate thousands of board positions while only a handful of specific distinguishing names exist [<xref rid="pcbi.1004299.ref026" ref-type="bibr">26</xref>]. After five to fifteen moves into a named opening, the board positions cease to have names, but the grandmaster can recognize the board position vector as being familiar and as a variant of a particular set of positions previously encountered. For example, after a sequence of 12 unseen moves, the grandmaster can classify the current position as either emerging from the Slav Accepted Alapin Variation or the Catalan opening, but definitely not the Kings Gambit.</p>
<p>Thus, we submit a valid cognitive analogy: the problem studied here is much like a grandmaster chess-player gaining the capability to discriminate unnamed board positions at a glance. The theory of adaptive synaptogenesis predicts that the relative frequency of board positions (amongst games studied) will control the neuronal allocation. But also, board positions that have greater similarity with other board positions (frequencies being equal) will receive a greater neuronal allocation.</p>
</sec>
</sec>
</sec>
<sec id="sec031">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1004299.s001" xlink:href="info:doi/10.1371/journal.pcbi.1004299.s001" mimetype="application/zip" position="float" xlink:type="simple">
<label>S1 Dataset</label>
<caption>
<title>Matlab data files illustrated by <xref rid="pcbi.1004299.g002" ref-type="fig">Fig 2A and 2B</xref>.</title>
<p>(ZIP)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004299.s002" xlink:href="info:doi/10.1371/journal.pcbi.1004299.s002" mimetype="text/plain" position="float" xlink:type="simple">
<label>S1 Code</label>
<caption>
<title>The Matlab program used for the simulations; parameter settings described in the main manuscript are used with this program.</title>
<p>(M)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ack>
<p>We thank Costa Colbert for providing helpful comments on an earlier version of this manuscript. We also thank the Department of Neurosurgery for their support.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1004299.ref001"><label>1</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>, <name name-style="western"><surname>Desmond</surname> <given-names>NL</given-names></name>. <chapter-title>The rules of elemental synaptic plasticity</chapter-title>. In: <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>, <name name-style="western"><surname>Anderson</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Lehmkule</surname> <given-names>S</given-names></name>, editors. <source>Synaptic modification, neuron selectivity, and nervous system organization</source>. <publisher-loc>Hillsdale, NJ</publisher-loc>: <publisher-name>Erlbaum</publisher-name>; <year>1985</year>. p. <fpage>105</fpage>–<lpage>121</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref002"><label>2</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>, <name name-style="western"><surname>Colbert</surname> <given-names>CM</given-names></name>, <name name-style="western"><surname>Desmond</surname> <given-names>NL</given-names></name>. <chapter-title>Elemental adaptive processes of neurons and synapses: a statistical/computational perspective</chapter-title>. In: <name name-style="western"><surname>Gluck</surname> <given-names>MA</given-names></name>, <name name-style="western"><surname>Rumelhart</surname> <given-names>DE</given-names></name>, editors. <source>Neuroscience and Connectionist Theory</source>. <publisher-loc>Hillsdale, NJ</publisher-loc>: <publisher-name>Erlbaum</publisher-name>; <year>1990</year>. p. <fpage>187</fpage>–<lpage>235</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref003"><label>3</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Dammasch</surname> <given-names>IE</given-names></name>, <name name-style="western"><surname>Wagner</surname> <given-names>GP</given-names></name>, <name name-style="western"><surname>Wolff</surname> <given-names>JR</given-names></name>. <article-title>Self-stabilization of neuronal networks</article-title>. <source>Biological cybernetics</source>. <year>1986</year>; <volume>54</volume>(<issue>4–5</issue>): <fpage>211</fpage>–<lpage>22</lpage>. <object-id pub-id-type="pmid">3017460</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref004"><label>4</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Miller</surname> <given-names>K</given-names></name>. <article-title>Equivalence of a sprouting-and-retraction model and correlation-based plasticity models of neural development</article-title>. <source>Neural Computation</source>. <year>1998</year>; <volume>10</volume>(<issue>3</issue>): <fpage>529</fpage>–<lpage>47</lpage>. <object-id pub-id-type="pmid">9527832</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref005"><label>5</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Bienenstock</surname> <given-names>EL</given-names></name>, <name name-style="western"><surname>Cooper</surname> <given-names>LN</given-names></name>, <name name-style="western"><surname>Munro</surname> <given-names>PW</given-names></name>. <article-title>Theory for the development of neuron selectivity: orientation specificity and binocular interaction in visual cortex</article-title>. <source>The Journal of Neuroscience</source>. <year>1982</year>; <volume>2</volume>(<issue>1</issue>): <fpage>32</fpage>–<lpage>48</lpage>. <object-id pub-id-type="pmid">7054394</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref006"><label>6</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Adelsberger-Mangan</surname> <given-names>DM</given-names></name>, <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <article-title>Information maintenance and statistical dependence reduction in simple neural networks</article-title>. <source>Biological cybernetics</source>. <year>1992</year>; <volume>67</volume>(<issue>5</issue>): <fpage>469</fpage>–<lpage>77</lpage>. <object-id pub-id-type="pmid">1391119</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref007"><label>7</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Adelsberger-Mangan</surname> <given-names>DM</given-names></name>, <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <article-title>Entropy-based evaluation of adaptively constructed neural networks</article-title>. <source>Annals of Biomedical Engineering</source>. <year>1993</year>; <volume>21</volume>(<issue>6</issue>): <fpage>739</fpage>–<lpage>40</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref008"><label>8</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Adelsberger-Mangan</surname> <given-names>DM</given-names></name>, <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <article-title>Adaptive synaptogenesis constructs networks that maintain information and reduce statistical dependence</article-title>. <source>Biological cybernetics</source>. <year>1993</year>; <volume>70</volume>(<issue>1</issue>): <fpage>81</fpage>–<lpage>7</lpage>. <object-id pub-id-type="pmid">8312400</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref009"><label>9</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Adelsberger-Mangan</surname> <given-names>DM</given-names></name>, <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <article-title>The influence of limited presynaptic growth and synapse removal on adaptive synaptogenesis</article-title>. <source>Biological cybernetics</source>. <year>1994</year>; <volume>71</volume>(<issue>5</issue>): <fpage>461</fpage>–<lpage>8</lpage>. <object-id pub-id-type="pmid">7993933</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref010"><label>10</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Adelsberger-Mangan</surname> <given-names>DM</given-names></name>, <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <article-title>Adaptive synaptogenesis constructs networks which allocate network resources by category frequency</article-title>. <source>1994 IEEE International Conference on Neural Networks, IEEE World Congress on Computational Intelligence</source>. <year>1994</year>; <volume>4</volume>: <fpage>2245</fpage>–<lpage>9</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref011"><label>11</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Colbert</surname> <given-names>CM</given-names></name>, <name name-style="western"><surname>Fall</surname> <given-names>CP</given-names></name>, <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <chapter-title>Using adaptive synaptogenesis to model the development of ocular dominance in kitten visual cortex</chapter-title>. In: <name name-style="western"><surname>Eeckman</surname> <given-names>FH</given-names></name>, editor. <source>Computation in neurons and neural systems</source>. <publisher-loc>Boston</publisher-loc>: <publisher-name>Kluwer</publisher-name>; <year>1994</year>. p <fpage>139</fpage>–<lpage>44</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref012"><label>12</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Shouval</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Intrator</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Cooper</surname> <given-names>LN</given-names></name>. <article-title>BCM network develops orientation selectivity and ocular dominance in natural scene environment</article-title>. <source>Vision research</source>. <year>1997</year>; <volume>37</volume>(<issue>23</issue>): <fpage>3339</fpage>–<lpage>42</lpage>. <object-id pub-id-type="pmid">9425548</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref013"><label>13</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ericsson</surname> <given-names>KA</given-names></name>, <name name-style="western"><surname>Prietula</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Cokely</surname> <given-names>ET</given-names></name>. <article-title>The making of an expert</article-title>. <source>Harvard business review</source>. <year>2007</year>; <volume>85</volume>(<issue>7/8</issue>): <fpage>114</fpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref014"><label>14</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>, <name name-style="western"><surname>Deliç</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Adelsberger-Mangan</surname> <given-names>DM</given-names></name>. <article-title>The statistical relationship between connectivity and neural activity in fractionally connected feed-forward networks</article-title>. <source>Biological cybernetics</source>. <year>1999</year>; <volume>80</volume>(<issue>2</issue>): <fpage>131</fpage>–<lpage>9</lpage>. <object-id pub-id-type="pmid">10074691</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref015"><label>15</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <article-title>Contrasting rules for synaptogenesis, modification of existing synapses, and synaptic removal as a function of neuronal computation</article-title>. <source>Neurocomputing</source>. <year>2004</year>; <volume>58</volume>: <fpage>343</fpage>–<lpage>50</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref016"><label>16</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Desmond</surname> <given-names>NL</given-names></name>, <name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>. <article-title>Changes in the postsynaptic density with long‐term potentiation in the dentate gyrus</article-title>. <source>Journal of Comparative Neurology</source>. <year>1986</year>; <volume>253</volume>(<issue>4</issue>): <fpage>476</fpage>–<lpage>82</lpage>. <object-id pub-id-type="pmid">3025273</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref017"><label>17</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Levy</surname> <given-names>WB</given-names></name>, <name name-style="western"><surname>Baxter</surname> <given-names>RA</given-names></name>. <article-title>Energy efficient neural codes</article-title>. <source>Neural Computation</source>. <year>1996</year>; <volume>8</volume>(<issue>3</issue>): <fpage>531</fpage>–<lpage>43</lpage>. <object-id pub-id-type="pmid">8868566</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref018"><label>18</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gilson</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Burkitt</surname> <given-names>AN</given-names></name>, <name name-style="western"><surname>Grayden</surname> <given-names>DB</given-names></name>, <name name-style="western"><surname>Thomas</surname> <given-names>DA</given-names></name>, <name name-style="western"><surname>van Hemmen</surname> <given-names>JL</given-names></name>. <article-title>Representation of input structure in synaptic weights by spike-timing-dependent plasticity</article-title>. <source>Physical Review E</source>. <year>2010</year>; <volume>82</volume>(<issue>2</issue>): <fpage>021912</fpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref019"><label>19</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Barlow</surname> <given-names>HB</given-names></name>. <chapter-title>Possible principles underlying the transformation of sensory messages</chapter-title>. In: <name name-style="western"><surname>Rosenblith</surname> <given-names>WA</given-names></name>, editor. <source>Sensory communication</source>. <publisher-loc>Boston</publisher-loc>: <publisher-name>MIT</publisher-name>; <year>1961</year>. p. <fpage>217</fpage>–<lpage>34</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref020"><label>20</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Barlow</surname> <given-names>HB</given-names></name>. <article-title>Single units and sensation: a neuron doctrine for perceptual psychology</article-title>. <source>Perception</source>. <year>1972</year>; <volume>1</volume>(<issue>4</issue>): <fpage>371</fpage>–<lpage>94</lpage>. <object-id pub-id-type="pmid">4377168</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref021"><label>21</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Felch</surname> <given-names>AC</given-names></name>, <name name-style="western"><surname>Granger</surname> <given-names>RH</given-names></name>. <article-title>The hypergeometric connectivity hypothesis: Divergent performance of brain circuits with different synaptic connectivity distributions</article-title>. <source>Brain research</source>. <year>2008</year>; <volume>1202</volume>: <fpage>3</fpage>–<lpage>13</lpage>. <object-id pub-id-type="pmid">17719016</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref022"><label>22</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hogan</surname> <given-names>JM</given-names></name>, <name name-style="western"><surname>Diederich</surname> <given-names>J</given-names></name>. <article-title>Recruitment learning of Boolean functions in sparse random networks</article-title>. <source>International journal of neural systems</source>. <year>2001</year>; <volume>11</volume>(<issue>06</issue>): <fpage>537</fpage>–<lpage>59</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref023"><label>23</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wen</surname> <given-names>Q</given-names></name>, <name name-style="western"><surname>Chklovskii</surname> <given-names>DB</given-names></name>. <article-title>A cost—benefit analysis of neuronal morphology</article-title>. <source>Journal of neurophysiology</source>. <year>2008</year>; <volume>99</volume>(<issue>5</issue>): <fpage>2320</fpage>–<lpage>8</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1152/jn.00280.2007" xlink:type="simple">10.1152/jn.00280.2007</ext-link></comment> <object-id pub-id-type="pmid">18305091</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref024"><label>24</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Battiti</surname> <given-names>R</given-names></name>. <article-title>Using mutual information for selecting features in supervised neural net learning</article-title>. <source>IEEE Transactions on Neural Networks</source>. <year>1994</year>; <volume>5</volume>(<issue>4</issue>): <fpage>537</fpage>–<lpage>50</lpage>. <object-id pub-id-type="pmid">18267827</object-id></mixed-citation></ref>
<ref id="pcbi.1004299.ref025"><label>25</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Krupnik</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Müller-Wille</surname> <given-names>L</given-names></name>. <chapter-title>Franz Boas and Inuktitut terminology for ice and snow: From the emergence of the field to the “Great Eskimo Vocabulary Hoax”</chapter-title>. In: <name name-style="western"><surname>Krupnik</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Aporta</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Gearheard</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Laidler</surname> <given-names>GJ</given-names></name>, <name name-style="western"><surname>Holm</surname> <given-names>LK</given-names></name>, editors. <source>SIKU: Knowing our ice</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>Springer</publisher-name>; <year>2010</year>. p. <fpage>377</fpage>–<lpage>400</lpage>.</mixed-citation></ref>
<ref id="pcbi.1004299.ref026"><label>26</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chase</surname> <given-names>WG</given-names></name>, <name name-style="western"><surname>Simon</surname> <given-names>HA</given-names></name>. <article-title>Perception in chess</article-title>. <source>Cognitive psychology</source>. <year>1973</year>; <volume>4</volume>(<issue>1</issue>): <fpage>55</fpage>–<lpage>81</lpage>.</mixed-citation></ref>
</ref-list>
</back>
</article>