<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
<front>
<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="publisher-id">08-PLCB-RA-0443R2</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1000213</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology/Protein Structure Prediction</subject></subj-group></article-categories><title-group><article-title>Transmembrane Topology and Signal Peptide Prediction Using Dynamic Bayesian Networks</article-title><alt-title alt-title-type="running-head">Topology Prediction by Dynamic Bayesian Networks</alt-title></title-group><contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Reynolds</surname><given-names>Sheila M.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>KÃ¤ll</surname><given-names>Lukas</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Riffle</surname><given-names>Michael E.</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Bilmes</surname><given-names>Jeff A.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Noble</surname><given-names>William Stafford</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group><aff id="aff1"><label>1</label><addr-line>Department of Electrical Engineering, University of Washington, Seattle, Washington, United States of America</addr-line>       </aff><aff id="aff2"><label>2</label><addr-line>Department of Genome Sciences, University of Washington, Seattle, Washington, United States of America</addr-line>       </aff><aff id="aff3"><label>3</label><addr-line>Department of Biochemistry, University of Washington, Seattle, Washington, United States of America</addr-line>       </aff><aff id="aff4"><label>4</label><addr-line>Department of Computer Science and Engineering, University of Washington, Seattle, Washington, United States of America</addr-line>       </aff><contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Rost</surname><given-names>Burkhard</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group><aff id="edit1">Columbia University, United States of America</aff><author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">noble@gs.washington.edu</email></corresp>
<fn fn-type="con"><p>Conceived and designed the experiments: SMR LK JAB WSN. Performed the experiments: SMR. Analyzed the data: SMR MER. Contributed reagents/materials/analysis tools: SMR MER JAB. Wrote the paper: SMR LK JAB WSN. Imported predictions into database and developed web interface: MR.</p></fn>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="collection"><month>11</month><year>2008</year></pub-date><pub-date pub-type="epub"><day>7</day><month>11</month><year>2008</year></pub-date><volume>4</volume><issue>11</issue><elocation-id>e1000213</elocation-id><history>
<date date-type="received"><day>2</day><month>6</month><year>2008</year></date>
<date date-type="accepted"><day>23</day><month>9</month><year>2008</year></date>
</history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2008</copyright-year><copyright-holder>Reynolds et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract>
<p>Hidden Markov models (HMMs) have been successfully applied to the tasks of transmembrane protein topology prediction and signal peptide prediction. In this paper we expand upon this work by making use of the more powerful class of dynamic Bayesian networks (DBNs). Our model, <italic>Philius</italic>, is inspired by a previously published HMM, Phobius, and combines a signal peptide submodel with a transmembrane submodel. We introduce a two-stage DBN decoder that combines the power of posterior decoding with the grammar constraints of Viterbi-style decoding. Philius also provides protein type, segment, and topology confidence metrics to aid in the interpretation of the predictions. We report a relative improvement of 13% over Phobius in full-topology prediction accuracy on transmembrane proteins, and a sensitivity and specificity of 0.96 in detecting signal peptides. We also show that our confidence metrics correlate well with the observed precision. In addition, we have made predictions on all 6.3 million proteins in the Yeast Resource Center (YRC) database. This large-scale study provides an overall picture of the relative numbers of proteins that include a signal-peptide and/or one or more transmembrane segments as well as a valuable resource for the scientific community. All DBNs are implemented using the Graphical Models Toolkit. Source code for the models described here is available at <ext-link ext-link-type="uri" xlink:href="http://noble.gs.washington.edu/proj/philius" xlink:type="simple">http://noble.gs.washington.edu/proj/philius</ext-link>. A Philius Web server is available at <ext-link ext-link-type="uri" xlink:href="http://www.yeastrc.org/philius" xlink:type="simple">http://www.yeastrc.org/philius</ext-link>, and the predictions on the YRC database are available at <ext-link ext-link-type="uri" xlink:href="http://www.yeastrc.org/pdr" xlink:type="simple">http://www.yeastrc.org/pdr</ext-link>.</p>
</abstract><abstract abstract-type="summary"><title>Author Summary</title>
<p>Transmembrane proteins control the flow of information and substances into and out of the cell and are involved in a broad range of biological processes. Their interfacing role makes them rewarding drug targets, and it is estimated that more than 50% of recently launched drugs target membrane proteins. However, experimentally determining the three-dimensional structure of a transmembrane protein is still a difficult task, and few of the currently known tertiary structures are of transmembrane proteins despite the fact that as many as one quarter of the proteins in a given organism are transmembrane proteins. Computational methods for predicting the basic topology of a transmembrane protein are therefore of great interest, and these methods must be able to distinguish between mature, membrane-spanning proteins and proteins that, when first synthesized, contain an N-terminal membrane-spanning signal peptide. In this work, we present <italic>Philius</italic>, a new computational approach that outperforms previous methods in simultaneously detecting signal peptides and correctly predicting the topology of transmembrane proteins. Philius also supplies a set of confidence scores with each prediction. A Philius Web server is available to the public as well as precomputed predictions for over six million proteins in the Yeast Resource Center database.</p>
</abstract><funding-group><funding-statement>This work was funded by National Institutes of Health (NIH) awards R01-EB007057 and P41-RR11823 and by an NIH National Research Service Award Training Grant.</funding-statement></funding-group><counts><page-count count="14"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>The structure of a protein determines its function. Knowledge of the structure can therefore be used to guide the design of drugs, to improve the interpretation of other information such as the locations of mutations, and to identify remote protein homologs.</p>
<p>Indirect methods such as X-ray crystallography and nuclear magnetic resonance spectroscopy are required to determine the tertiary structure of a protein. Membrane proteins are essential to a variety of processes including small-molecule transport and signaling, and are of significant biological interest. However, they are not easily amenable to existing crystallization methods, and even though some of the most difficult problems in this area have been overcome in recent years, the number of known tertiary structures of membrane structures remains very low. Computational methods that can accurately predict the basic topology of transmembrane proteins from easily available information therefore continue to be of great interest. To be most valuable, a predicted topology include not only the locations of the membrane-spanning segments, but should also correctly localize the N- and C-termini relative to the membrane.</p>
<p>Many proteins include a short N-terminal signal peptide that initially directs the post-translational transport of the protein across the membrane and is subsequently cleaved off after transport. A signal peptide includes a strongly hydrophobic segment which is not a part of the mature protein but is often misclassified as a membrane-spanning portion of a transmembrane protein. Conversely, a transmembrane protein with a membrane-spanning segment near the N-terminus is often misclassified as having a signal peptide. Therefore, signal peptide prediction and transmembrane topology prediction should be performed simultaneously, rather than being treated as two separate tasks.</p>
<p>Membrane proteins are classically divided into two structural classes: those which traverse the membrane using an <italic>Î±</italic>-helical bundle, such as bacteriorhodopsin, and those which use a <italic>Î²</italic>-barrel, such as porin. The <italic>Î²</italic>-barrel motif is found only in a small fraction of all membrane proteins (e.g., in the outer membrane of Gram negative bacteria and in the mitochondrial membrane). Lately, some attention has been given to some irregular structures such as re-entrant loops and random coil regions. In this work, however, we focus on the <italic>Î±</italic>-helical class, both because most membrane proteins fall into this class, and because they constitute most of the known 3D structures.</p>
<p>The two most common machine learning approaches applied to the prediction of both signal peptides and the topology of transmembrane proteins are hidden Markov models (HMM) and artificial neural networks (ANN), while some predictors use a combination of these two approaches. HMMs are particularly well suited to sequence labeling tasks, and task-specific prior knowledge can be encoded into the structure of the HMM, while ANNs can learn to make classification decisions based on hundreds of inputs.</p>
<p>The first HMM-based transmembrane protein topology predictors were introduced ten years ago: TMHMM <xref ref-type="bibr" rid="pcbi.1000213-Sonnhammer1">[1]</xref> and HMMTOP <xref ref-type="bibr" rid="pcbi.1000213-Tusnady1">[2]</xref>. Both of these predictors define a set of structural classes which capture the variation in amino acid composition of different portions of the membrane protein. For example, the membrane-spanning helix is known to be highly hydrophobic, and cytoplasmic loops generally contain more positively charged amino acids than non-cytoplasmic loops (the so-called positive-inside rule). During training the HMM learns a set of emission distributions, one for each of the structural classes. TMHMM is trained using a two-pass discriminative training approach followed by decoding using the one-best algorithm <xref ref-type="bibr" rid="pcbi.1000213-Schwartz1">[3]</xref>. HMMTOP introduced the hypothesis that the difference between the amino acid distributions in the various structural classes is the main driving force in determining the final protein topology, and that therefore the most likely topology is the one that maximizes this difference for a given protein. HMMTOP <xref ref-type="bibr" rid="pcbi.1000213-Tusnady2">[4]</xref> was also the first to allow constrained decoding to incorporate additional evidence regarding the localization of one or more positions within the protein sequence. The presence of a signal peptide within a given protein has also been successfully predicted using both HMMs <xref ref-type="bibr" rid="pcbi.1000213-Nielsen1">[5]</xref> and ANNs <xref ref-type="bibr" rid="pcbi.1000213-Nielsen2">[6]</xref>.</p>
<p>As mentioned above, the confusion between signal peptides and transmembrane segments is one of the largest sources of error both for conventional transmembrane topology predictors and signal peptide predictors <xref ref-type="bibr" rid="pcbi.1000213-Krogh1">[7]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Kll1">[8]</xref>. Motivated by this difficulty, the HMM Phobius <xref ref-type="bibr" rid="pcbi.1000213-Kll2">[9]</xref> was designed to combine the signal peptide model of SignalP-HMM <xref ref-type="bibr" rid="pcbi.1000213-Nielsen1">[5]</xref> with the transmembrane topology model of TMHMM <xref ref-type="bibr" rid="pcbi.1000213-Sonnhammer1">[1]</xref>. The authors showed that including a signal peptide sub-model improves overall accuracy in detecting and differentiating proteins with signal peptides and proteins with transmembrane segments.</p>
<p>In this work, we introduce <italic>Philius</italic>, a combined transmembrane topology and signal peptide predictor that extends Phobius by exploiting the power of dynamic Bayesian networks (DBN). The application of DBNs to this task provides several advantages, specifically: (a) a new two-stage decoding procedure, (b) a new way of expressing non-geometric duration distributions, and (c) a new approach to expressing label uncertainty during training. Philius is inspired by Phobius and tackles the problem of discriminating among four basic types of proteins: globular (G), globular with a signal peptide (SP+G), transmembrane (TM), and transmembrane with a signal peptide (SP+TM). Philius also predicts the location of the signal peptide cleavage site and the complete topology for membrane proteins.</p>
<p>We report state-of-the-art results on the discrimination task and improvements over Phobius on the topology prediction task. We also introduce a set of confidence measures at three different levels: at the level of protein type, at the level of the individual topology segment (e.g., inside, membrane, outside), and at the level of the full topology. Confidence measures for topology predictions were introduced by MelÃ©n et al. <xref ref-type="bibr" rid="pcbi.1000213-Meln1">[10]</xref>, and we expand upon this work with these three types of scores that correlate well with the observed precision.</p>
<p>Finally, based on the Philius predictions on the entire Yeast Resource Center <xref ref-type="bibr" rid="pcbi.1000213-Riffle1">[11]</xref> protein database, we provide an overview of the relative percentages of different types of proteins in different organisms as well as the composition of the class of membrane proteins.</p>
<sec id="s1a">
<title>Background</title>
<p>Transmembrane protein topology prediction can be stated as a supervised learning problem over amino acid sequences. The training set consists of pairs of sequences of the form (<bold><italic>o</italic></bold>,<bold><italic>s</italic></bold>) where <bold><italic>o</italic></bold>â=â<italic>o</italic><sub>1</sub>,â¦,<italic>o<sub>n</sub></italic> is the sequence of amino acids for a protein of known topology, and <bold><italic>s</italic></bold>â=â<italic>s</italic><sub>1</sub>,â¦,<italic>s<sub>n</sub></italic> is the corresponding sequence of labels. The <italic>o<sub>i</sub></italic> are drawn from the alphabet of 20 amino acids <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000213.e001" xlink:type="simple"/></inline-formula>, and the <italic>s<sub>i</sub></italic> are drawn from the alphabet of topology labels, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000213.e002" xlink:type="simple"/></inline-formula>, corresponding respectively to cytoplasmic (âinsideâ) loops, membrane-spanning segments, non-cytoplasmic (âoutsideâ) loops, and signal peptides. After training, a learned model with parameters Î takes as input a single amino acid test sequence <bold><italic>o</italic></bold> and seeks to predict the âbestâ corresponding label sequence <bold><italic>s</italic></bold><bold>*</bold> (with no unknowns).</p>
<p>We solve this problem using a DBN, which we call Philius. Before describing the details of our model, we first review HMMs and explain how they are a simple form of DBN. The generality of the DBN framework provides significantly expanded flexibility relative to HMMs, as described in <xref ref-type="bibr" rid="pcbi.1000213-Bilmes1">[12]</xref>. A recently published primer <xref ref-type="bibr" rid="pcbi.1000213-Needham1">[13]</xref> provides an introduction to probabilistic inference using Bayesian networks for a variety of applications in computational biology.</p>
</sec><sec id="s1b">
<title>Hidden Markov Models</title>
<p>HMMs are conceptually simple and yet also almost unlimited in their flexibility <xref ref-type="bibr" rid="pcbi.1000213-Bilmes2">[14]</xref>. An HMM is a generative model in which an observed sequence is generated according to an underlying but unknown sequence of states. More precisely, an HMM is a joint probability distribution over a set of 2<italic>N</italic> variables: the <italic>N</italic> observations <bold>o</bold>, and the <italic>N</italic> hidden states, <bold>s</bold>. The HMM assumes that the joint distribution over these 2<italic>N</italic> variables can be factorized as follows:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.e003" xlink:type="simple"/><label>(1)</label></disp-formula>where <bold>s</bold>â=â{<italic>s</italic><sub>1</sub>,â¦,<italic>s<sub>N</sub></italic>}, <bold>o</bold>â=â{<italic>o</italic><sub>1</sub>,â¦,<italic>o<sub>N</sub></italic>}, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000213.e004" xlink:type="simple"/></inline-formula>, and where <italic>i</italic> represents position along the observed sequence. An HMM is often used to compute the probability distribution over the observations Pr[<bold>o</bold>] by summing (or marginalizing) over all possible hidden state sequences <bold>s</bold> in the above joint distribution. An HMM might also be used as a means to infer a most probable sequence of states from an input sequence of observations. The factorization property of an HMM makes these sorts of computations (collectively called <italic>statistical inference</italic>) based on an HMM tractable, and has been one of the keys to their widespread success.</p>
<p>The two conditional relationships that define an HMM are generally constant with respect to the position <italic>i</italic>. An HMM such as this is referred to as a <italic>time-homogeneous</italic> model (since the parameters are homogeneous with respect to time). This time-homogeneity allows the HMM to represent sequences of states and observations of arbitrary length <italic>N</italic> with a fixed and finite number of parameters. Most HMMs and dynamic Bayesian networks are time-homogeneous.</p>
<p>It is perhaps most common in the literature to represent an HMM using a <italic>state transition graph</italic> in which each node is a state in the model, and directed edges between pairs of nodes show the allowed (non-zero probability) transitions between states. Such a graph shows only the allowable state transitionsânothing in this graph describes the observation distributions Pr[<italic>o<sub>i</sub></italic>|<italic>s<sub>i</sub></italic>] nor is anything stated about the HMM joint distribution and the factorization properties mentioned in Equation 1.</p>
</sec><sec id="s1c">
<title>HMMs as Bayesian Networks</title>
<p>In many applications and publications using HMMs, the HMM state transition diagram may be the only descriptive graphic provided. In our research, we often use in addition a quite different graphical description of an HMM, one that depicts a very different set of HMM properties. As mentioned above, Equation 1 makes explicit the factorization properties of an HMM, and these properties allow for efficient inference on the HMM. We can use a type of graph known as a Bayesian network (BN) to visually and precisely convey this set of properties, as is done in <xref ref-type="fig" rid="pcbi-1000213-g001">Figure 1</xref>. <xref ref-type="fig" rid="pcbi-1000213-g001">Figure 1a</xref> shows the âstaticâ relationship between a state variable and the associated observation at a single point <italic>i</italic> corresponding to the factor Pr[<italic>o<sub>i</sub></italic>|<italic>s<sub>i</sub></italic>] in Equation 1. <xref ref-type="fig" rid="pcbi-1000213-g001">Figure 1b</xref> shows the graph for the expanded HMM corresponding to Equation 1, which includes a node for each state and observation variable for all time-points <italic>i</italic>â=â1,â¦,<italic>N</italic>. This figure makes clear the dynamic aspect of the model, i.e., Pr[<italic>s<sub>i</sub></italic>|<italic>s<sub>i</sub></italic><sub>â1</sub>] and Pr[<italic>o<sub>i</sub></italic>|<italic>s<sub>i</sub></italic>] for all <italic>i</italic>. A <italic>Bayesian network</italic> (BN) is one type of graphical model in which edges are directed, and in which directed cycles are not allowed <xref ref-type="bibr" rid="pcbi.1000213-Pearl1">[15]</xref>.</p>
<fig id="pcbi-1000213-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g001</object-id><label>Figure 1</label><caption>
<title>Hidden Markov model.</title>
<p>(a) BN with two variables which constitutes the basic (single frame) template for an HMM, and (b) A DBN representation of an HMM obtained by concatenating a variable number of the BN frames and connecting successive state variables.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g001" xlink:type="simple"/></fig>
<p>A <italic>frame</italic> (often also referred to as a <italic>slice</italic> or <italic>time-slice</italic>) in an HMM corresponds to one vertical section, corresponding to a single time point <italic>i</italic>. For example, in order to model a protein of length <italic>N</italic>, we could use an HMM that consists of <italic>N</italic> frames, where each amino acid has its own local copy of the basic HMM template. In an HMM, this slice contains only two random variables. We refer to the first and last frames as the <italic>prologue</italic> and <italic>epilogue</italic> of the model respectively, and to each frame in between as a <italic>chunk</italic>. In order to create an HMM of length <italic>N</italic>, the chunk is replicated <italic>N</italic>â2 times, a process sometimes referred to as <italic>unrolling</italic>. The prologue and epilogue often differ slightly from the chunk, allowing for distinct modeling at the extreme ends of the sequence. In the BN representation, we follow the convention that shaded nodes represent <italic>observations</italic> (also collectively referred to as the <italic>evidence</italic>), while unshaded nodes represent <italic>hidden</italic> variables. The chain of hidden variables is where the HMM gets its nameâthere is a presumed underlying set of hidden variables that form a (first order) Markov chain.</p>
<p>The BN representation of an HMM illustrates the minimum factorization properties required of a joint probability distributions that fits the model. More generally, the use of the term <italic>graphical model</italic> <xref ref-type="bibr" rid="pcbi.1000213-Lauritzen1">[16]</xref>, implies that there is a graph (a set of nodes and edges) in which nodes correspond to random variables, and edges encode in a mathematically precise way the set of conditional independence (or factorization) properties of any probability distribution over those random variables which can be represented by the graph.</p>
</sec><sec id="s1d">
<title>Dynamic Bayesian Networks</title>
<p><italic>Dynamic Bayesian networks</italic> (DBNs) are BNs that extend over time (or some other dimension such as genomic or protein sequence position). DBNs are strict generalizations of both HMMs and BNs and are constructed in much the same way: by concatenating identical (except possibly the first and last) copies of a âstaticâ BN and linking the adjacent BN copies together in some consistent way. The same advantage of being able to model sequences of essentially unbounded length using a finite number of parameters that gives the HMM much of its power carries over naturally to the DBN. In fact, any HMM is an instance of a DBNâ<xref ref-type="fig" rid="pcbi-1000213-g001">Figure 1a</xref> shows the static BN which when repeated over and over gives us the DBN description of an HMM in <xref ref-type="fig" rid="pcbi-1000213-g001">Figure 1b</xref>. The converse, that any DBN is an instance of an HMM, is however not true.</p>
<sec id="s1d1">
<title>More variables can mean fewer free parameters</title>
<p>DBNs gain flexibility over HMMs because, in a DBN, the repeated static BN is not limited to be a network with two variables as in <xref ref-type="fig" rid="pcbi-1000213-g001">Figure 1a</xref>. For example, <xref ref-type="fig" rid="pcbi-1000213-g002">Figure 2</xref> shows three DBNs where each repeated frame consists of multiple random variables. The relationship between the variables is expressed by a graph, and like any BN the graph conveys factorization properties of any joint distribution that is to be represented by the DBN. As with the HMM, it is the factorization properties of a DBN that (may) allow for efficient inference.</p>
<fig id="pcbi-1000213-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g002</object-id><label>Figure 2</label><caption>
<title>Philius training and decoding graphical models.</title>
<p>(a) Training DBN: only the <monospace>amino acid</monospace> and the <monospace>topoLabel</monospace> are observed in each frame. The <monospace>topoLabel</monospace> is used to constrain the hidden state using an observed child node. The color of the edge between two nodes indicates the type of relationship: black is deterministic, and red is random. (b) First stage decoding DBN: the <monospace>topoState</monospace> is hidden and dependent on the state and the previous <monospace>topoState</monospace>, and specifies the behavior of <monospace><monospace>pType</monospace></monospace>, an additional hidden variable. (c) Second stage decoding DBN: the observed <monospace>amino acid</monospace> node and the duration modeling nodes have been removed, and Pr[<italic><monospace>topoState</monospace><sub>i</sub></italic>] is defined by the posterior probabilities computed in the first stage using the virtual evidence node topo<italic><sub>VE</sub></italic>.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g002" xlink:type="simple"/></fig>
<p>The flexibility to define more than two variables in each frame, as well as more than one connection between adjacent frames has several advantages. While it is sometimes possible to bundle all the variables in a DBN frame into a single HMM âsuper-variableâ, such an HMM super-variable loses the factorization and explicit relationships between variables that can be expressed in a DBN. This loss of factorization can lead to substantial computational costs for an equivalent HMM as compared to a DBN, as well as a dramatically increased number of free parameters.</p>
<p>In any machine learning setting, it is important to control the model complexity, in particular when the amount of training data is limited. Tying of parameters is one way to control the number of free parameters and hence model complexity. Parameter-tying is implicit in all time-homogeneous DBNs (including HMMs) because parameters are tied across time. The flexibility to specify a larger number of variables within each frame of the DBN brings with it the ability to also tie parameters within a single time slice.</p>
</sec><sec id="s1d2">
<title>Constrained inference</title>
<p>Any factorization of the joint probability distribution of a set of random variables, which can be expressed as a graphical model, implies a set of constraints. The topology of the traditional HMM is one way of describing and constraining the relationships between the states and the observations. It has become common practice to impose additional constraints on HMMs, typically during decoding, by implementing customized versions of common algorithms <xref ref-type="bibr" rid="pcbi.1000213-Tusnady2">[4]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Meln1">[10]</xref>. The DBN framework permits these types of constraints to be expressed directly within the graph topology <xref ref-type="bibr" rid="pcbi.1000213-Bilmes3">[17]</xref>, without requiring any changes to the underlying inference algorithms.</p>
<p>A variety of constraints based on prior knowledge can be built into a DBN and can be used both during training and decoding to preclude certain combinations of variable assignments by specifying that these combinations have zero probability. In fact, training on labeled examples can be thought of as learning a probability distribution subject to the constraints specified by the labels. Training on <italic>partially</italic> labeled examples enforces constraints where the labels are known, while removing constraints where the labels are not known. During decoding, constraints may represent experimental knowledge about a particular protein; for example, the location of the N- or C-terminus, or the number of membrane-spanning segments. As an example of such a constrained HMM, a version of TMHMM was created explicitly to predict the topology of known 7-TM GPCRs <xref ref-type="bibr" rid="pcbi.1000213-Mller1">[18]</xref>. More generally, these constraints can be âhardâ (e.g., the N-terminal is known to be on the inside), or âsoftâ (e.g., there is conflicting experimental evidence, but it is likely that the N-terminal is on the inside).</p>
<p>One source of difficulty in defining an HMM for our task is related to the labeling of the training examples, both the uncertainty in the precise locations of the segment boundaries, and the occasionally missing (unknown) labels. Furthermore, there is a one-to-many association between the labels and the structural classes defined in the model, which typically subdivide many of the labeled regions, e.g., membrane, into two or more sub-regions with different emission distributions and/or duration models. Our DBN implementation allows for this one-to-many relationship between labels and states as well as the occasionally missing labels by expressing the relationship between the label and the state as a flexible constraint, including the use of a <italic>wildcard</italic> label which effectively removes the label-imposed local constraint on the state, while the probabilistic relationships (e.g., grammar constraints) between the state and the rest of the graph are maintained.</p>
</sec><sec id="s1d3">
<title>Virtual evidence</title>
<p>A flexible method for applying constraints on a DBN, while remaining within the graphical DBN framework, is to use a concept known as <italic>virtual evidence</italic> <xref ref-type="bibr" rid="pcbi.1000213-Pearl1">[15]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Bilmes3">[17]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Reynolds1">[19]</xref> (sometimes also referred to as <italic>soft</italic> evidence). The virtual evidence nodes typically represent binary random variables, and the evidence is that they are observed to be equal to 1. In this work we use two slightly different virtual evidence mechanisms. In the first, the virtual evidence node <italic>c</italic> is called an âobserved childâ <xref ref-type="bibr" rid="pcbi.1000213-Reynolds1">[19]</xref> and is used to induce a relationship between its (hidden and otherwise unconnected) parents. Consider, for example, three variables, <italic>a</italic>, <italic>b</italic>, and <italic>c</italic>, where <italic>a</italic> and <italic>b</italic> are the parents of <italic>c</italic>, and we observe that <italic>c</italic>â=â1. We define Pr[<italic>c</italic>â=â1|<italic>a</italic>,<italic>b</italic>] â <italic>f</italic>(<italic>a</italic>,<italic>b</italic>) where <italic>f</italic>(<italic>a</italic>,<italic>b</italic>)â¥0 can be used to express a preference for certain pairs (<italic>a</italic>,<italic>b</italic>), or forbid those for which <italic>f</italic>(<italic>a</italic>,<italic>b</italic>)â=â0. Depending on the objectives, this relationship may be based on prior knowledge or it can be learned during training. In the second usage, the virtual evidence node <italic>c</italic> has a single parent <italic>a</italic> which we want to influence in some way. Again we observe <italic>c</italic>â=â1, and set Pr[<italic>c</italic>â=â1|<italic>a</italic>]â=â<italic>f</italic>(<italic>a</italic>) where <italic>f</italic>(<italic>a</italic>)â¥0 expresses the desired influence. A further extension of this notion of virtual evidence, used during the decoding procedure (see <xref ref-type="sec" rid="s2">Methods</xref>) allows position-dependent (i.e., time inhomogeneous) CPTs, i.e., Pr[<italic>c<sub>i</sub></italic>â=â1|<italic>a</italic>] â <italic>f</italic>(<italic>a</italic>,<italic>i</italic>).</p>
</sec><sec id="s1d4">
<title>Duration modeling</title>
<p>DBNs also offer more flexibility in defining segment duration distributions. In a typical HMM, the duration associated with a state <italic>s</italic> follows a geometric distribution: Pr[<italic>D<sub>s</sub></italic>â=â<italic>d</italic>]â=â<italic>p</italic>(1â<italic>p</italic>)<italic><sup>d</sup></italic><sup>â1</sup>, where <italic>D<sub>s</sub></italic> is the random variable representing the duration of state <italic>s</italic>, <italic>d</italic> is a particular segment duration, and <italic>p</italic> is the probability of transitioning to a new state <italic>q</italic>â <italic>s</italic>. If <italic>p</italic>â=â1, then Pr[<italic>D<sub>s</sub></italic>â=â1]â=â1. The geometric distribution is such that the single most likely duration is 1, the mean duration is 1/<italic>p</italic>, and any arbitrarily long duration can occur with non-zero probability. Although the geometric distribution is reasonable for some tasks, it is preferable in many applications to model an arbitrary but finite duration distribution (one with a hard limit on the maximum duration). In an HMM, this modeling is typically done using a âladderâ or âchainâ of non-self-looping states, in which <italic>D</italic><sub>max</sub> distinct states are used to capture a finite duration distribution over [1,<italic>D</italic><sub>max</sub>] by allowing certain states to be skipped with non-zero probability. This is the strategy adopted by the Phobius HMM <xref ref-type="bibr" rid="pcbi.1000213-Kll2">[9]</xref>. Another common HMM strategy chains multiple geometric states together each with self-repeating loops, thus yielding a <italic>negative-binomial</italic> duration distribution <xref ref-type="bibr" rid="pcbi.1000213-Bilmes2">[14]</xref>. A DBN can greatly simplify the specification and learning of a variety of complex duration behaviors within the DBN framework itself, without requiring large numbers of states and more complicated state-transition graphs. For example, the DBN presented in this work defines three basic duration behaviors, one of which will be associated with each state. One of these behaviors captures the geometric distribution described above. The other two are for finite-duration states: a fixed duration <italic>D</italic>, and a variable duration within a fixed window [<italic>D</italic><sub>min</sub>,<italic>D</italic><sub>max</sub>]. This latter case is expressed very easily by defining a duration distribution over a fixed range, and then sampling from this distribution to determine the actual segment duration. This duration modeling is similar to that implemented in the GHMM described by Kulp et al. <xref ref-type="bibr" rid="pcbi.1000213-Kulp1">[20]</xref>, an early example of an extension to the basic HMM.</p>
</sec><sec id="s1d5">
<title>The Graphical Model Toolkit</title>
<p>In this work, we perform all training and inference in DBNs using the Graphical Model Toolkit <xref ref-type="bibr" rid="pcbi.1000213-Bilmes4">[21]</xref> which includes generalized versions of the forward-backward, Baum-Welch, and Viterbi algorithms, and which supports all of the features mentioned above. For discrete variables, training consists of estimating the conditional probability table (CPT), Pr[<italic>v</italic>|<italic>Ï<sub>v</sub></italic>], for each variable <italic>v</italic> given its parents <italic>Ï<sub>v</sub></italic> such that the likelihood of the data is maximal. If all variables are observed during training, then estimating these tables is reduced to a simple counting task. If some variables are hidden, then the expectation-maximization (EM) algorithm <xref ref-type="bibr" rid="pcbi.1000213-Dempster1">[22]</xref> is used to find maximum likelihood estimates of the CPTs.</p>
</sec></sec></sec><sec id="s2">
<title>Methods</title>
<sec id="s2a">
<title>The Philius Model</title>
<p>Philius's state transition diagram is shown in <xref ref-type="fig" rid="pcbi-1000213-g003">Figure 3</xref>. The model includes three basic regionsâcytoplasmic, membrane, and non-cytoplasmicâeach containing multiple states and representing one or more different topology labels. At this level of description, Philius exactly mimics Phobius. In the Phobius HMM, the states shown in <xref ref-type="fig" rid="pcbi-1000213-g003">Figure 3</xref> are implemented as collections of HMM states, with transitions defined to produce the desired segment duration distributions. In Philius, by contrast, the duration modeling is explicit.</p>
<fig id="pcbi-1000213-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g003</object-id><label>Figure 3</label><caption>
<title>State transition diagram.</title>
<p>Each rectangle represents a <italic>state</italic>, which is characterized by an emission distribution and a duration distribution. The state transition topology of Philius exactly mimics that of Phobius.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g003" xlink:type="simple"/></fig></sec><sec id="s2b">
<title>Training</title>
<p>For the typical HMM as in <xref ref-type="fig" rid="pcbi-1000213-g001">Figure 1b</xref>, a state transition diagram along with the transition probabilities and emission distributions is sufficient to completely describe the model. The same DBN is used in training and decoding, the only difference being that the states are observed during (supervised) training and hidden during testing. With DBNs, it is common to use different graph topologies for training and decoding. Philius uses three different graphs, shown in <xref ref-type="fig" rid="pcbi-1000213-g002">Figure 2</xref>.</p>
<p>The training DBN shown in <xref ref-type="fig" rid="pcbi-1000213-g002">Figure 2a</xref> addresses the duration and labeling issues described earlier. The Markov chain backbone over the <monospace>state</monospace> nodes is the same as in a typical HMM, and the relationship between <monospace>state</monospace><italic><sub>i</sub></italic> and <monospace>state</monospace><italic><sub>i</sub></italic><sub>â1</sub> is defined by the usual state transition matrix, Pr[<italic>s<sub>i</sub></italic>|<italic>s<sub>i</sub></italic><sub>â1</sub>], represented in the state transition diagram shown in <xref ref-type="fig" rid="pcbi-1000213-g003">Figure 3</xref>. Beyond the backbone, this DBN differs significantly from the standard HMM. Within each frame, the <monospace>state</monospace> node is related to three other random variables: the <monospace>durationClass</monospace> , the <monospace>emissionClass</monospace>, and the <monospace>topoLabel</monospace>. The first two are hidden variables, but in both cases the relationship to the <monospace>state</monospace> is a deterministic mapping that does not impact the computational complexity. The mapping from <monospace>state</monospace> to <monospace>durationClass</monospace> reflects which states share similar duration properties. Similarly, the mapping from <monospace>state</monospace> to <monospace>emissionClass</monospace> reflects which states share similar emission distributions. The <monospace>emissionClass</monospace> node is the one that âemitsâ the amino acid according to the appropriate distribution. The amino acid is observed during training and during the first decoding stage.</p>
<p>The relationship between state and <monospace>topoLabel</monospace> is enforced using an <italic>observed child</italic> mechanism <xref ref-type="bibr" rid="pcbi.1000213-Reynolds1">[19]</xref>, i.e., the value of state is constrained by the observed value of <monospace>topoLabel</monospace>. There can be a many-to-one relationship between the state and the <monospace>topoLabel</monospace>: one value of <monospace>topoLabel</monospace>, such as <italic>inside</italic>, allows the state variable to take on several different values, while another label, such as <italic>cleavage site</italic> constrains the state variable to a single value. This approach is more flexible than the class-HMM described by Krogh in <xref ref-type="bibr" rid="pcbi.1000213-Krogh2">[23]</xref> in which each state emits a (class, observation) pair.</p>
<p>As previously described, the wildcard label places no restrictions on the current state, while the <italic>sequence</italic> of states remains constrained by the allowed state transitions and state durations, thereby preserving the grammar. Even with fully labeled training data, there is some uncertainty in the locations of the boundaries between adjacent segments. To account for this uncertainty and to allow the model more flexibility during training, we remove up to five labels on either side of every boundary (while keeping at least one label per segment), and replace these labels with the wildcard label. During training the model will adjust the location of the boundary in order to maximize the probability of each training example given the model parameters. Other researchers have addressed this issue with a two-stage training procedure in which an initial model is trained and then used to relabel the training data, before the final model is trained. This type of two-stage training approach may result in a final model that is overly dependent on the decisions made by the initial model. Our wildcard label approach allows us to train the model in a single pass, maintaining the expression of uncertainty regarding the labels, and can also be used in a semi-supervised setting, combining partially-labeled data with fully-labeled data.</p>
<p>The duration modeling for each duration class is handled by the <monospace>stateCountDown</monospace> and <monospace>changeState</monospace> nodes. Three basic types of duration models are allowed: (i) fixed and finite durations; (ii) random and finite durations; and (iii) geometric (possibly infinite) durations. The first two types are defined using a CPT Pr[<italic>D</italic>â=â<italic>d</italic>|<italic>C<sub>v</sub></italic>], representing the probability that the duration of the current segment <italic>D</italic> is equal to <italic>d</italic>, conditioned on the duration class <italic>C<sub>v</sub></italic>. The dimensions of this table are <italic>D</italic><sub>max</sub> by |<italic>C<sub>v</sub></italic>|, where <italic>D</italic><sub>max</sub> is the maximum finite duration and |<italic>C<sub>v</sub></italic>| is the number of different duration classes to be learned. When a transition to a <italic>new</italic> (different) state occurs, a randomly chosen duration is used to initialize the <monospace>stateCountDown</monospace> node. This value is decremented in each successive frame until it reaches a value of 1 whereupon the <monospace>changeState</monospace> node is set to true and a state transition is triggered in the next frame. The states with a geometric duration distribution are handled using a slightly different mechanism. For these states, the <monospace>stateCountDown</monospace> node is assigned the value of 0, which is not decremented in the subsequent frame. Instead, the binary <monospace>changeState</monospace> node is set randomly to <sc>true</sc> or <sc>false</sc> based on the self-looping probability <italic>p</italic> for the appropriate duration class.</p>
<p>The model is trained on labeled data (with wildcards as described above) using the EM algorithm. The free parameters learned during training consist of the start state probabilities, the transition probabilities for the few states that have more than one allowed next-state, the emission distributions for each emission class, the duration distributions for the finite duration classes, and the self-looping probabilities for the geometric duration classes, for a total of 388 free parameters. (There are 6 possible start-states, 4 states with more than one possible next state, 15 different emission classes, 87 finite-duration model parameters and 6 geometric-duration model parameters.) The emission class probabilities were smoothed by adding a single pseudo-count to each of the accumulated counts during training. Although the EM algorithm is only guaranteed to converge to a local maximum, in this case the uncertainties during training are only related to the exact placement of the segment boundaries and we found that repeated EM training runs did not result in significantly different parameters (data not shown).</p>
</sec><sec id="s2c">
<title>Decoding</title>
<p>The Viterbi algorithm is commonly used to find the most likely sequence of hidden states in an HMM given the observations and the model parameters. For a DBN, a generalized version of the Viterbi algorithm similarly finds the single most likely assignment to the set of all hidden variables <bold>h</bold>â=â[<italic>h</italic><sub>1</sub>,â¦,<italic>h<sub>H</sub></italic>] given the evidence variables <bold>e</bold>â=â[<italic>e</italic><sub>1</sub>,â¦,<italic>e<sub>E</sub></italic>] and the model parameters Î:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.e005" xlink:type="simple"/></disp-formula></p>
<p>In this application, however, we are interested in finding the most likely sequence of labels Î»<sup>*</sup>, where the variables in Î» form a subset of <bold>h</bold>, but the best partial assignment Î»<sup>*</sup> is not necessarily contained in the best overall assignment <bold>h<sup>*</sup></bold>. Computing Î»<sup>*</sup> is intractable in general <xref ref-type="bibr" rid="pcbi.1000213-Park1">[24]</xref>, because it requires first that we compute the probabilities of all possible assignments and then sum over all assignments that correspond to each possible sequence of labels. In order to estimate the most likely sequence of labels, we have developed a novel two-stage approach. In the first stage, we compute the posterior probabilities for each Î» by marginalizing out all other hidden variables. Defining a sequence of labels Î» directly based on these posterior probabilities may produce a sequence that does not obey the grammar of the underlying model. Instead, we use the posterior probabilities on the labels in a second stage to influence the choice of the âbestâ assignment <bold>h<sup>*</sup></bold>, while enforcing the same grammar defined by the state transition matrix. Each of the two decoding stages uses a different graph than the one used in training, and these graphs are shown in <xref ref-type="fig" rid="pcbi-1000213-g003">Figure 3b and 3c</xref>.</p>
<p>This two-stage decoding is similar to the <italic>posterior Viterbi</italic> algorithm described in <xref ref-type="bibr" rid="pcbi.1000213-Fariselli1">[25]</xref> and applied to predicting the topology of <italic>Î²</italic>-barrel membrane proteins, and is also similar to the <italic>optimal accuracy decoding</italic> used in <xref ref-type="bibr" rid="pcbi.1000213-Kll3">[26]</xref> to combine information from homologous proteins. Both of these approaches use Viterbi-like algorithms to find the permissible sequence of states that maximizes some function of the posterior state probabilities. Here, we are effectively finding the permissible sequence of states that maximizes the product of the posterior label probabilities, subject to the topology grammar. By using DBNs combined with virtual evidence, there is no need to construct special-purpose inference algorithms; the only changes are in the definition of the topology of the graphical model and in the incorporation of the virtual evidence.</p>
<p>In the first stage decoding DBN, shown in <xref ref-type="fig" rid="pcbi-1000213-g002">Figure 2b</xref>, the observed <monospace>topoLabel</monospace> in the training graph is removed and replaced with a hidden <monospace>topoState</monospace> which is dependent on the current state and the previous <monospace>topoState</monospace>, and combines both the current topology label (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000213.e006" xlink:type="simple"/></inline-formula>) and whether or not the label has just changed (i.e., a new segment has been started). Incorporating this change-of-label information was found to significantly improve the precise localization of the signal peptide cleavage site. In addition, a new summary variable, <monospace>pType</monospace> , has been added which takes on one of four values in {G, SP+G, TM, SP+TM}, representing the four basic protein types. The <monospace>pType</monospace> node keeps track of whether or not a particular state assignment includes a signal peptide, and whether or not it includes a (non-SP) transmembrane segment. This is done by initializing <monospace>pType</monospace>â=â<italic>G</italic> and then or-ing together the <monospace>pType</monospace> from the previous frame with information from the current <monospace>topoState</monospace> to determine the <monospace>pType</monospace> up to and including the current frame. Full inference is performed on this graph to compute the posterior probabilities of all nodes given the evidence (the amino acid sequence) and the model parameters. Specifically, this first stage of the decoding produces as output the posterior probabilities for the <monospace>topoState</monospace> variable in each frame as well as the posterior probabilities for <monospace>pType</monospace> in the final (right-most) frame. Note that these posterior probabilities on the final protein type node should not be confused with a posterior probability on the location of the C-terminus of the protein; for each type in {G, SP+G, TM, SP+TM}, it represents the total probability, after all other hidden variables have been marginalized out, that the test protein is of that type.</p>
<p>The second stage decoding DBN, shown in <xref ref-type="fig" rid="pcbi-1000213-g002">Figure 2c</xref>, is significantly simpler than the other two graphs: the amino acid evidence has been removed along with the <monospace>emissionClass</monospace> node, as has the entire segment duration portion of the graph. In order to incorporate the information from the first stage, a new observed child node topo<italic><sub>VE</sub></italic> has been added in each frame. The parent of this new node is the <monospace>topoState</monospace> node, and the conditional relationship is defined, in a position- <italic>in</italic>homogeneous manner, based on the posterior label probability computed in the first stage:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.e007" xlink:type="simple"/></disp-formula>Because the posterior probabilities already include the effects of the transition, emission and duration probabilities, these no longer need to be included in the second stage. The output of the second stage of the decoder is the topology resulting from the Viterbi assignment to the hidden variables in <xref ref-type="fig" rid="pcbi-1000213-g002">Figure 2c</xref>. The Viterbi topology Î»<sup>v</sup> is now much closer to the optimal solution Î»<sup>*</sup> because of the inclusion of the posterior probabilities from the first stage.</p>
<p>Experimental information can also be easily incorporated into this decoding process. For example, if the protein type is known, then the final <italic><monospace>pType</monospace></italic> node can be constrained to match. If other information is known, such as the location of the C-terminus or details regarding particular membrane-spanning segments, this too can be easily incorporated as additional evidence constraining the <monospace>topoState</monospace> nodes in those frames where the evidence exists.</p>
</sec><sec id="s2d">
<title>Confidence Scores</title>
<p>In the <xref ref-type="sec" rid="s3">Results</xref> section, we describe three types of confidence scores: protein type, per-segment, and topology. The first score reflects Philius's confidence in the assignment of the protein typeâG, SP+G, TM or SP+TM. The protein type score is computed using the posterior probabilities for the <monospace>pType</monospace> variable in the final frame of the first stage decoding DBN. This computation produces a single set of probabilities Pr[<italic>y</italic>] for each evaluated protein. The second stage of the decoder produces the topology prediction and the predicted protein type <italic>yË</italic>. The confidence score associated with the protein type prediction is the posterior probability Pr[<italic>yË</italic>]. The second type of score is the per-segment score, which represents an estimate of the accuracy of the label and boundaries of a particular segment. For this score, we use the Viterbi segmentation from the second stage and compute the arithmetic mean of the first stage posterior probabilities within that segment for the Viterbi-assigned topology label. The third score applies only to transmembrane proteins and reflects Philius's confidence in the overall predicted topology. We define this score as the minimum segment score over all predicted membrane segments and the N-terminal and C-terminal segments.</p>
</sec><sec id="s2e">
<title>Datasets</title>
<p>We used the Phobius dataset <xref ref-type="bibr" rid="pcbi.1000213-Kll2">[9]</xref> during model development. This dataset consists of four non-overlapping subsets of 1087 globular (G) proteins, 1275 globular proteins with signal peptides (SP+G), 247 transmembrane (TM) proteins and 45 transmembrane proteins with signal peptides (SP+TM). The maximum homology among the 247 TM proteins is 80%, and the maximum homology among the 45 SP+TM proteins is 35%. The same cross-validation folds and the same labels that were used to train and test Phobius were also used in this work.</p>
<p>Two additional datasets were obtained and used in the final testing and evaluation of the model: the SCAMPI dataset <xref ref-type="bibr" rid="pcbi.1000213-Bernsel1">[27]</xref> of 124 transmembrane proteins (<ext-link ext-link-type="uri" xlink:href="http://octopus.cbr.su.se/index.php?about=download" xlink:type="simple">http://octopus.cbr.su.se/index.php?about=download</ext-link>) and the SignalP 3.0 <xref ref-type="bibr" rid="pcbi.1000213-Bendtsen1">[28]</xref> training dataset. The labels in the SCAMPI dataset include re-entrant regions which do not completely span the membrane. These were removed and relabeled as <italic>inside</italic> or <italic>outside</italic> because Philius does not currently model those types of segments. The maximum homology among these 124 proteins is 40%. Based on homology between these and the original Phobius TM proteins, this set was divided into one set of 77 proteins that does not overlap the Phobius dataset (maximum homology 80%), and one set of 47 proteins that does. For the purposes of training and testing Philius we only used the signal peptide portion of the SignalP dataset, combining the eukaryotic and bacterial proteins into a single set of 1728 proteins. Truncated versions of these proteins were used in training because the labels covered only the signal peptide and cleavage-site of each protein.</p>
</sec></sec><sec id="s3">
<title>Results</title>
<p>We evaluated the performance of Philius on the development dataset using ten-fold cross-validation. We measured the performance of the model as well as the accuracy of all three types of confidence scores. For proteins containing a signal peptide, we also considered the accuracy with which the cleavage site is localized.</p>
<p>We chose to compare our method to Phobius because it is the only method that we know of that simultaneously predicts signal peptides and complete transmembrane topologies. Several methods, such as MemBrain <xref ref-type="bibr" rid="pcbi.1000213-Sen1">[29]</xref> and P<sc>roteus</sc> <xref ref-type="bibr" rid="pcbi.1000213-Montgomerie1">[30]</xref>, predict transmembrane helices and signal peptides, but without any topological (inside/outside) information. The web server PONGO <xref ref-type="bibr" rid="pcbi.1000213-Amico1">[31]</xref> gives predictions from individual transmembrane topology and signal peptide predictors without combining the individual predictors.</p>
<sec id="s3a">
<title>Protein Type Classification</title>
<p>Initially, we evaluate how accurately Philius identifies a given protein's class as G, SP+G, TM or SP+TM. <xref ref-type="table" rid="pcbi-1000213-t001">Table 1</xref> shows the performance of Phobius and Philius at this task using accuracy, precision, sensitivity, specificity and Matthews correlation coefficient as metrics. Note that, because the SP+TM subset consists of only 45 examples, fewer than 2% of the 2654 proteins in the development set, we will sometimes group them together with the other TM proteins to provide more meaningful statistics. The largest difference between Philius and Phobius at this level is in the precision for the TM and SP+TM category, for which Philius calls 29% fewer false positives than Phobius. (Phobius finds 265 of the 292 true positives, and miscalls 82 of the 2362 true negatives; on the same data, Philius finds 268 TPs and miscalls 58 TNs.) Overall, the performance on the G and SP+G subsets has decreased slightly in exchange for an improvement on the TM subset which is of greatest interest. Note that the class sizes in this dataset are skewed (48% SP+G, 41% G, and 11% TM and SP+TM), and that compared to a complete proteome, the transmembrane proteins are underrepresented in this dataset by a factor of 2 to 3.</p>
<table-wrap id="pcbi-1000213-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t001</object-id><label>Table 1</label><caption>
<title>Phobius and Philius protein type classification performance on the development set: for each protein class, the fraction of the dataset of that type, and the accuracy, precision, sensitivity, specificity, and Matthews correlation coefficient.</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t001-1" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t001" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1"/>
<td align="left" colspan="1" rowspan="1"/>
<td align="left" colspan="2" rowspan="1">Accuracy</td>
<td align="left" colspan="2" rowspan="1">Precision</td>
<td align="left" colspan="2" rowspan="1">Sensitivity</td>
<td align="left" colspan="2" rowspan="1">Specificity</td>
<td align="left" colspan="2" rowspan="1">Matthews C</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Protein Type</td>
<td align="left" colspan="1" rowspan="1">Data %</td>
<td align="left" colspan="1" rowspan="1">Phobius</td>
<td align="left" colspan="1" rowspan="1">Philius</td>
<td align="left" colspan="1" rowspan="1">Phobius</td>
<td align="left" colspan="1" rowspan="1">Philius</td>
<td align="left" colspan="1" rowspan="1">Phobius</td>
<td align="left" colspan="1" rowspan="1">Philius</td>
<td align="left" colspan="1" rowspan="1">Phobius</td>
<td align="left" colspan="1" rowspan="1">Philius</td>
<td align="left" colspan="1" rowspan="1">Phobius</td>
<td align="left" colspan="1" rowspan="1">Philius</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">TM, SP+TM</td>
<td align="left" colspan="1" rowspan="1">11%</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.79</td>
<td align="left" colspan="1" rowspan="1">0.87</td>
<td align="left" colspan="1" rowspan="1">0.91</td>
<td align="left" colspan="1" rowspan="1">0.92</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.83</td>
<td align="left" colspan="1" rowspan="1">0.88</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">SP+G</td>
<td align="left" colspan="1" rowspan="1">48%</td>
<td align="left" colspan="1" rowspan="1">0.96</td>
<td align="left" colspan="1" rowspan="1">0.95</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.95</td>
<td align="left" colspan="1" rowspan="1">0.94</td>
<td align="left" colspan="1" rowspan="1">0.95</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.96</td>
<td align="left" colspan="1" rowspan="1">0.92</td>
<td align="left" colspan="1" rowspan="1">0.91</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">G</td>
<td align="left" colspan="1" rowspan="1">41%</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.96</td>
<td align="left" colspan="1" rowspan="1">0.95</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.94</td>
<td align="left" colspan="1" rowspan="1">0.93</td>
</tr>
</tbody>
</table></alternatives></table-wrap>
<p>For each prediction, Philius reports a protein type confidence score, and <xref ref-type="fig" rid="pcbi-1000213-g004">Figure 4</xref> shows that this score correlates extremely well with the precision of the classification decision. Furthermore, on this dataset, more than 70% of the confidence scores are greater than 0.95. For the TM and SP+TM proteins (the smallest class), the confidence score tends to be somewhat optimistic, as indicated by the points below <italic>y</italic>â=â<italic>x</italic>. We attribute this skew to the fact that the model was tuned to maximize the balanced accuracy across the three major classes.</p>
<fig id="pcbi-1000213-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g004</object-id><label>Figure 4</label><caption>
<title>Protein-type classification precision vs confidence score computed by sorting the proteins by score and computing the average score and precision within a sliding window.</title>
<p>Left: precision vs average score for each of the three main protein types. Right: average (black) and average Â±one standard deviation (gray) across all proteins.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g004" xlink:type="simple"/></fig></sec><sec id="s3b">
<title>Segment-Level Prediction</title>
<p>Next, we evaluated the performance of Philius at the segment level. Philius predicts four basic segment types: signal peptide, transmembrane segment, and inside and outside loops. For a transmembrane segment, the predicted segment must overlap the annotated segment by at least five amino acids to be deemed correctly identified. In order to correctly identify a signal peptide, the model must only predict its existence at the N-terminus of the protein. Because many of the inside and outside loops are very short, the overlap required for these segments is only one amino acid. The sensitivity and precision of the model in predicting each of these segment types is shown in <xref ref-type="table" rid="pcbi-1000213-t002">Table 2</xref>. Accuracy and specificity cannot be calculated at the segment level, because there is no sensible way to define the number of true negatives. Results for outside segments are reported for all segments as well as for the subset of outside loops within transmembrane proteins (i.e., those with at least one non-SP TM segment). All of the inside segments reported are loops within TM proteins. Predicting whether a loop between two adjacent TM segments is on the âinsideâ or on the âoutsideâ of the membrane is clearly the most challenging aspect of this task.</p>
<table-wrap id="pcbi-1000213-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t002</object-id><label>Table 2</label><caption>
<title>Segment-level metrics.</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t002-2" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t002" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Segment Type</td>
<td align="left" colspan="1" rowspan="1">Sensitivity</td>
<td align="left" colspan="1" rowspan="1">Precision</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">SP</td>
<td align="left" colspan="1" rowspan="1">0.96</td>
<td align="left" colspan="1" rowspan="1">0.96</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">TM</td>
<td align="left" colspan="1" rowspan="1">0.94</td>
<td align="left" colspan="1" rowspan="1">0.92</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Inside</td>
<td align="left" colspan="1" rowspan="1">0.87</td>
<td align="left" colspan="1" rowspan="1">0.85</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Outside(TM)</td>
<td align="left" colspan="1" rowspan="1">0.89</td>
<td align="left" colspan="1" rowspan="1">0.88</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Outside(all)</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
</tr>
</tbody>
</table></alternatives></table-wrap>
<p>As shown in <xref ref-type="fig" rid="pcbi-1000213-g005">Figure 5</xref>, the segment-level scores correlate well with precision. The membrane segment and inner and outer loop scores tend to be conservative, as indicated by the points above <italic>y</italic>â=â<italic>x</italic>. The segment score should be interpreted conditioned on the assumption that the protein type has been correctly predicted.</p>
<fig id="pcbi-1000213-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g005</object-id><label>Figure 5</label><caption>
<title>Segment-level classification precision vs score for each of the segment types (excluding the âoutsideâ segments of G and SP+G proteins).</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g005" xlink:type="simple"/></fig></sec><sec id="s3c">
<title>Signal Peptide Cleavage Site Accuracy</title>
<p>Although the precise boundaries of the membrane segments of a transmembrane protein are somewhat difficult to define, the cleavage site of a signal peptide can be very precisely defined if the first amino acid of the mature protein is known. We therefore also evaluated Philius' ability to correctly localize the signal peptide cleavage site.</p>
<p>Combining the SP+G and the SP+TM proteins into one group and the G and TM proteins into another, the development dataset contains 1320 proteins with signal peptides and 1334 without. In the cross-validation experiment, Philius predicts 1271 true positives, 1278 true negatives, 49 false negatives, and 56 false positives (accuracyâ=â0.96, precisionâ=â0.96, sensitivityâ=â0.96, and specificityâ=â0.96).</p>
<p>Of the 1271 predicted true positives, in 948 cases (75% of the predicted positives, and 72% of all positives), the annotated cleavage site is found exactly. Among the errors, there is very little skew in the localization error: in 51% of the cases, the cleavage site is predicted âearlyâ (median offset is 3 amino acids), and in 49% of the cases the cleavage site is predicted âlateâ (median offset is 2 amino acids).</p>
</sec><sec id="s3d">
<title>Full Topology Prediction</title>
<p>For proteins with transmembrane segments (with or without a signal peptide), it is important to be able to correctly predict the entire protein topology. Getting this prediction right requires not only that all of the transmembrane segments be correctly identified, but that the loop regions between the membrane segments be correctly localized. Grouping the TM and SP+TM proteins together, Philius predicts the correct topology for a total of 212 out of 292 proteins (72.6%). For comparison, Phobius predicts 198 correct topologies (67.8%) on this same dataset. <xref ref-type="table" rid="pcbi-1000213-t003">Table 3</xref> shows the confusion matrices for Philius and Phobius. Within each half of the table, values on the diagonal represent correct protein-type predictions, while off-diagonal values represent errors. For G and SP+G proteins, a correct protein-type prediction implies a correct topology, whereas for TM and SP+TM proteins this is not necessarily the case. For these proteins, the first number represents the number of correct complete topologies while the second number represents the number of incorrect topologies. (Incorrect protein-type calls necessarily imply incorrect topologies.)</p>
<table-wrap id="pcbi-1000213-t003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t003</object-id><label>Table 3</label><caption>
<title>Confusion matrices for Phobius and Philius.</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t003-3" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t003" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Phobius</td>
<td align="left" colspan="1" rowspan="1">G</td>
<td align="left" colspan="1" rowspan="1">SP+G</td>
<td align="left" colspan="1" rowspan="1">TM</td>
<td align="left" colspan="1" rowspan="1">SP+TM</td>
<td align="left" colspan="1" rowspan="1">Philius</td>
<td align="left" colspan="1" rowspan="1">G</td>
<td align="left" colspan="1" rowspan="1">SP+G</td>
<td align="left" colspan="1" rowspan="1">TM</td>
<td align="left" colspan="1" rowspan="1">SP+TM</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">G</td>
<td align="left" colspan="1" rowspan="1">1042</td>
<td align="left" colspan="1" rowspan="1">25</td>
<td align="left" colspan="1" rowspan="1">20</td>
<td align="left" colspan="1" rowspan="1">0</td>
<td align="left" colspan="1" rowspan="1">G</td>
<td align="left" colspan="1" rowspan="1">1033</td>
<td align="left" colspan="1" rowspan="1">43</td>
<td align="left" colspan="1" rowspan="1">11</td>
<td align="left" colspan="1" rowspan="1">0</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">SP+G</td>
<td align="left" colspan="1" rowspan="1">27</td>
<td align="left" colspan="1" rowspan="1">1207</td>
<td align="left" colspan="1" rowspan="1">20</td>
<td align="left" colspan="1" rowspan="1">21</td>
<td align="left" colspan="1" rowspan="1">SP+G</td>
<td align="left" colspan="1" rowspan="1">25</td>
<td align="left" colspan="1" rowspan="1">1200</td>
<td align="left" colspan="1" rowspan="1">19</td>
<td align="left" colspan="1" rowspan="1">31</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">TM</td>
<td align="left" colspan="1" rowspan="1">5</td>
<td align="left" colspan="1" rowspan="1">9</td>
<td align="left" colspan="1" rowspan="1">157/66</td>
<td align="left" colspan="1" rowspan="1">10</td>
<td align="left" colspan="1" rowspan="1">TM</td>
<td align="left" colspan="1" rowspan="1">8</td>
<td align="left" colspan="1" rowspan="1">9</td>
<td align="left" colspan="1" rowspan="1">172/54</td>
<td align="left" colspan="1" rowspan="1">4</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">SP+TM</td>
<td align="left" colspan="1" rowspan="1">0</td>
<td align="left" colspan="1" rowspan="1">1</td>
<td align="left" colspan="1" rowspan="1">2</td>
<td align="left" colspan="1" rowspan="1">41/1</td>
<td align="left" colspan="1" rowspan="1">SP+TM</td>
<td align="left" colspan="1" rowspan="1">0</td>
<td align="left" colspan="1" rowspan="1">1</td>
<td align="left" colspan="1" rowspan="1">2</td>
<td align="left" colspan="1" rowspan="1">40/2</td>
</tr>
</tbody>
</table></alternatives><table-wrap-foot><fn id="nt101"><label/><p>Rows are true protein types, and columns are predicted protein types. Where there are two numbers, the first number represents the number of proteins for which the full topology was correctly predicted, while the second number represents the number of proteins for which the protein type was correct but the full topology was not. These results are from the development dataset.</p></fn></table-wrap-foot></table-wrap>
<p><xref ref-type="fig" rid="pcbi-1000213-g006">Figure 6</xref> shows that the full-topology confidence score correlates reasonably well with the observed precision for the transmembrane proteins in the dataset. As with the segment scores, the full-topology confidence score should be interpreted conditioned on the assumption that the protein type has been correctly inferred.</p>
<fig id="pcbi-1000213-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g006</object-id><label>Figure 6</label><caption>
<title>Full-topology prediction precision vs score for the TM proteins.</title>
<p>The black line is the average score within the sliding window used to estimate the precision, and the gray lines indicate the average plus and minus one standard deviation.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g006" xlink:type="simple"/></fig></sec><sec id="s3e">
<title>Results on Test Data</title>
<p>Following the model-development phase, we evaluated Philius on an enhanced dataset that includes the SCAMPI dataset <xref ref-type="bibr" rid="pcbi.1000213-Bernsel1">[27]</xref> and the SignalP 3.0 dataset of signal peptide proteins <xref ref-type="bibr" rid="pcbi.1000213-Bernsel1">[27]</xref>. These new datasets partially overlap the original Phobius datasets that were used during model development as shown in <xref ref-type="fig" rid="pcbi-1000213-g007">Figure 7</xref>. We incorporated this new data to create a new set which we used for a final round of ten-fold cross-validated training and testing. This new dataset was made up of the original Phobius G and SP+TM subsets, the SignalP signal peptide set (combining eukaryotic and bacterial proteins), and a merged TM set created by combining the 124 TM proteins from the SCAMPI set with the 200 non-homologous TM proteins from the Phobius TM subset, for a total of 324 TM proteins.</p>
<fig id="pcbi-1000213-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g007</object-id><label>Figure 7</label><caption>
<title>Original Phobius datasets (G, SP+G, TM and SP+TM) and new SignalP and SCAMPI datasets.</title>
<p>Figure is approximately to scale.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g007" xlink:type="simple"/></fig>
<p>Results were evaluated in two areas: full-topology accuracy on the transmembrane proteins, and signal peptide prediction accuracy on the SignalP dataset. The full-topology accuracy on the TM proteins after performing ten-fold cross-validation on this new dataset is summarized in <xref ref-type="table" rid="pcbi-1000213-t004">Table 4</xref>. The accuracies reported in the first 2 rows of the table are consistent with one another and with the accuracy of 72.6% reported on the development set. Comparing the last two rows in the table it is clear that the novel portion of the SCAMPI dataset contains membrane proteins that are more difficult to predict. This is likely due to the presence in the SCAMPI set of 20 proteins known to have one or more re-entrant segments. Of these 20 proteins, all but one are in the SCAMPI \ Phobius set, and the full-topology accuracy on these 19 proteins is only 53% (10/19).</p>
<table-wrap id="pcbi-1000213-t004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t004</object-id><label>Table 4</label><caption>
<title>Philius full-topology accuracy on new merged TM dataset (top row).</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t004-4" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t004" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">TM Dataset</td>
<td align="left" colspan="1" rowspan="1">Size</td>
<td align="left" colspan="1" rowspan="1">Correct Count</td>
<td align="left" colspan="1" rowspan="1">Correct %</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">Phobius âª SCAMPI</td>
<td align="left" colspan="1" rowspan="1">324</td>
<td align="left" colspan="1" rowspan="1">230</td>
<td align="left" colspan="1" rowspan="1">71.0%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">SCAMPI only</td>
<td align="left" colspan="1" rowspan="1">124</td>
<td align="left" colspan="1" rowspan="1">90</td>
<td align="left" colspan="1" rowspan="1">72.6%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Phobius â© SCAMPI</td>
<td align="left" colspan="1" rowspan="1">47</td>
<td align="left" colspan="1" rowspan="1">37</td>
<td align="left" colspan="1" rowspan="1">78.7%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">SCAMPI \ Phobius</td>
<td align="left" colspan="1" rowspan="1">77</td>
<td align="left" colspan="1" rowspan="1">53</td>
<td align="left" colspan="1" rowspan="1">68.8%</td>
</tr>
</tbody>
</table></alternatives><table-wrap-foot><fn id="nt102"><label/><p>The accuracy on various subsets of the merged set are listed below.</p></fn></table-wrap-foot></table-wrap>
<p>Training and testing Phobius in the same way on this new merged dataset yielded an overall TM topology accuracy of 62.7% (203 out of 324). Compared to Phobius, on this new dataset, Philius achieves a relative increase of 13% in the number of correct topologies (230 correct topologies vs 203).</p>
<p>The signal peptide performance is improved over that reported for the development dataset. We attribute this improvement to the higher quality SignalP dataset. On 1728 signal peptides, Philius predicted 1679 true positives and 49 false negatives (30 were classified as transmembrane proteins, while 19 were classified as globular proteins) for a sensitivity of 0.97 (compared to 0.96 on the Phobius SP set). Furthermore, 1292 cleavage sites are predicted exactly, representing 75% of all signal peptides in the test set, compared to 72% when trained and evaluated on the Phobius SP set.</p>
<p>Although we combined the eukaryotic and bacterial signal peptides during training, we also report in <xref ref-type="table" rid="pcbi-1000213-t005">Table 5</xref> the results broken down by taxon. For these results, the positive set is the SignalP dataset of signal peptides (with the counts for each subset as shown in the table), and the negative set is the Phobius globular protein set (1087 proteins). The results represent the summary from a ten-fold cross-validation experiment. Although we are not using the same set of negative (non-SP) proteins and thus cannot exactly replicate the experiments leading to the SignalP 3.0 performance figures reported by Bendtsen et al. in <xref ref-type="bibr" rid="pcbi.1000213-Bendtsen1">[28]</xref>, Philius' detection and discrimination of signal peptides is comparable to that reported for SignalP-HMM for eukaryotes and Gram negative bacteria. The cleavage site accuracy reported here for Philius is slightly worse than SignalP-HMM for the eukaryote and the Gram negative sets (down 4% and less than 3% respectively), but is significantly worse for the Gram positive set (down 24%). This decline in performance is to be expected, considering that we trained a single model for all three categories, and the Gram positive signal peptides are significantly different from the other two types.</p>
<table-wrap id="pcbi-1000213-t005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t005</object-id><label>Table 5</label><caption>
<title>Philius signal peptide discrimination (accuracy, precision, sensitivity, specificity, and Matthews correlations coefficient) and cleavage-site accuracy (fraction of all SPs detected for which the cleavage-site was predicted exactly).</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t005-5" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t005" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Dataset</td>
<td align="left" colspan="1" rowspan="1">Count</td>
<td align="left" colspan="1" rowspan="1">Acc</td>
<td align="left" colspan="1" rowspan="1">Prec</td>
<td align="left" colspan="1" rowspan="1">Sens</td>
<td align="left" colspan="1" rowspan="1">Spec</td>
<td align="left" colspan="1" rowspan="1">cc</td>
<td align="left" colspan="1" rowspan="1">C-Site</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">Eukaryotes</td>
<td align="left" colspan="1" rowspan="1">1192</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.94</td>
<td align="left" colspan="1" rowspan="1">72.4%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Gramâ</td>
<td align="left" colspan="1" rowspan="1">370</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.91</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.92</td>
<td align="left" colspan="1" rowspan="1">87.8%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">Gram+</td>
<td align="left" colspan="1" rowspan="1">167</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.81</td>
<td align="left" colspan="1" rowspan="1">0.96</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.86</td>
<td align="left" colspan="1" rowspan="1">62.3%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">All</td>
<td align="left" colspan="1" rowspan="1">1729</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1">0.94</td>
<td align="left" colspan="1" rowspan="1">74.7%</td>
</tr>
</tbody>
</table></alternatives><table-wrap-foot><fn id="nt103"><label/><p>The negative set contained 1087 globular proteins.</p></fn></table-wrap-foot></table-wrap>
<p>The key difference between Philius and SignalP, however, is that SignalP is trained to discriminate between proteins with and without signal peptides, excluding transmembrane proteins, whereas Philius has been trained to discriminate between proteins with and without signal peptides <italic>and</italic> those with and without other (non-SP) membrane-spanning segments. It has previously been reported that SignalP 3.0 falsely predicts 21% (52 of 247) of the Phobius TM dataset as containing signal peptides and that 30â65% of all predictions from SignalP 3.0 on whole proteomes overlap with TMHMM 2.0 predictions <xref ref-type="bibr" rid="pcbi.1000213-Kll1">[8]</xref>. Philius, in contrast, predicts only 5% (13 of 247) of the Phobius TM dataset as containing a signal peptide.</p>
</sec><sec id="s3f">
<title><italic>S. cerevisiae</italic> Membrane Proteome</title>
<p>Kim et al. <xref ref-type="bibr" rid="pcbi.1000213-Kim1">[32]</xref> described the experimental localization of the C-terminus for 617 <italic>Saccharomyces cerevisiae</italic> proteins predicted by TMHMM to be multi-spanning membrane proteins using a reporter construct. Based on consistent experimental results as well as BLAST homology searches, the C-terminal location could be confidently assigned for a total of 546 proteins. For 69% of the 546 proteins, the initial TMHMM prediction of the C-terminal location agreed with the experimental result. New topology predictions were made using both TMHMM and prodiv-TMHMM <xref ref-type="bibr" rid="pcbi.1000213-Viklund1">[33]</xref> constrained by the experimentally determined C-terminal location.</p>
<p>The Philius predictions for the 546 proteins described above match the experimentally assigned C-terminal location 78% of the time (428 out of 546). For those C-terminal segments that were correctly predicted by Philius, the median confidence score was 0.90. For those incorrectly predicted, the median score was 0.72. <xref ref-type="fig" rid="pcbi-1000213-g008">Figure 8</xref> shows the total counts and fraction of correctly localized C-terminals as a function of the C-terminal segment confidence score.</p>
<fig id="pcbi-1000213-g008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g008</object-id><label>Figure 8</label><caption>
<title>The total counts and fraction of correct C-terminal localizations as a function of C-terminal segment confidence score for 546 yeast proteins with experimentally assigned C-terminal locations.</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g008" xlink:type="simple"/></fig>
<p>Constrained Philius topology predictions were then made and compared to those given in <xref ref-type="bibr" rid="pcbi.1000213-Kim1">[32]</xref>. The Philius-predicted topology matched both TMHMM and prodiv-TMHMM for 41% of the 536. (For 10 out of the original 546 proteins, the length of the protein given in the supplementary data of <xref ref-type="bibr" rid="pcbi.1000213-Kim1">[32]</xref> did not match the length of the ORF of the same name in the YRC database, so these proteins were disregarded for all other comparisons.) proteins, only prodiv-TMHMM for 21%, only TMHMM for 16%, and neither for 22%. The constrained predictions from TMHMM and prodiv-TMHMM match each other for 48% of the 546 proteins.</p>
<p>The constrained Philius predictions included 40 topologies containing a predicted N-terminal signal peptide. Of these, 31 signal peptides had high confidence scores (greater than 0.9), and all but one of these were also classified as containing a signal peptide by SignalP 3.0. Of these 30 putative signal peptides identified both by Philius and by SignalP, TMHMM annotates 18 (60%) as transmembrane segments. Four of these proteins are classified as SP+G by Philius, indicating that the mature protein is likely a globular protein and not a membrane protein. Of these proteins, three (YFL051C, YNL019C, and YNL033W) are putative proteins, and the fourth (YFL067W) is of uncharacterized function.</p>
</sec><sec id="s3g">
<title>Predictions on YRC Database</title>
<p>A final version of Philius, trained on all of the training data, was used to predict and score the protein type and topology for all 6.3 million proteins in the YRC public data repository <xref ref-type="bibr" rid="pcbi.1000213-Riffle1">[11]</xref> as of March 24, 2008. This database contains Uniprot/SwissProt, the NCBI non-redundant database, the MIPS protein sequence database, and a variety of organism-specific databases, including the <italic>Saccharomyces</italic> Genome Database, Sanger's <italic>S. pombe</italic> database (pompep), Wormbase, Flybase and The <italic>Arabidopsis</italic> Information Resource. Running Philius on this set required approximately 7.2 s per protein, for a total of approximately 1.5 years of CPU time.</p>
<p>A summary of the predictions can be found in <xref ref-type="table" rid="pcbi-1000213-t006">Table 6</xref>. The median protein type confidence scores are very high for all protein types. The median topology confidence score for TM proteins is 0.69, which agrees with the typical topology accuracy of 70%. <xref ref-type="table" rid="pcbi-1000213-t007">Table 7</xref> shows the relative representation of the four basic protein types, for four species. The total fraction of predicted membrane proteins, between 22% and 29% is consistent with previous estimates. <xref ref-type="table" rid="pcbi-1000213-t008">Table 8</xref> shows the fraction of predicted TM and SP+TM proteins that have a single membrane-spanning segment in the mature protein. Single-spanning membrane proteins represent approximately 20% to 35% of all membrane proteins, and an even larger fraction of membrane proteins with signal peptides. For putative multi-spanning transmembrane proteins, proteins predicted to contain an even number of membrane segments outnumber those predicted to have an odd number of membrane segments nearly 2 to 1 (data not shown). This enrichment of membrane proteins with an even number of TM segments may be due to internal duplication events resulting in an even number of TM segments, or the process of membrane insertion may be optimized for pairs of segments. Although the N-terminus of a membrane protein is in general more likely to be on the cytoplasmic side of the membrane, this bias is strongest for proteins with an even number of membrane segments. Two extreme examples illustrate this phenomenon: less than 41% of the putative seven-transmembrane segment proteins are predicted to have the N-terminal on the inside (the large family of GPCR proteins have the N-terminal on the outside), whereas 96% of the proteins predicted to have twelve transmembrane segments are predicted to have the N-terminal on the inside. This same phenomenon was seen in our training data and in other genome-wide prediction studies <xref ref-type="bibr" rid="pcbi.1000213-Kim1">[32]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Daley1">[34]</xref>.</p>
<table-wrap id="pcbi-1000213-t006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t006</object-id><label>Table 6</label><caption>
<title>Overall YRC predictions on 6.3 million proteins: number and relative fraction of each protein type, median protein type confidence score, and median TM topology confidence score (when applicable).</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t006-6" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t006" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Protein Type</td>
<td align="left" colspan="1" rowspan="1">Count</td>
<td align="left" colspan="1" rowspan="1">Percentage</td>
<td align="left" colspan="1" rowspan="1">Median Type Confidence</td>
<td align="left" colspan="1" rowspan="1">Median Topology Confidence</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1">G</td>
<td align="left" colspan="1" rowspan="1">4,248,628</td>
<td align="left" colspan="1" rowspan="1">67.1%</td>
<td align="left" colspan="1" rowspan="1">0.98</td>
<td align="left" colspan="1" rowspan="1"/>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">TM</td>
<td align="left" colspan="1" rowspan="1">1,280,117</td>
<td align="left" colspan="1" rowspan="1">20.2%</td>
<td align="left" colspan="1" rowspan="1">0.99</td>
<td align="left" colspan="1" rowspan="1">0.69</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">SP+G</td>
<td align="left" colspan="1" rowspan="1">698,534</td>
<td align="left" colspan="1" rowspan="1">11.0%</td>
<td align="left" colspan="1" rowspan="1">0.97</td>
<td align="left" colspan="1" rowspan="1"/>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1">SP+TM</td>
<td align="left" colspan="1" rowspan="1">101,224</td>
<td align="left" colspan="1" rowspan="1">1.6%</td>
<td align="left" colspan="1" rowspan="1">0.91</td>
<td align="left" colspan="1" rowspan="1">0.78</td>
</tr>
</tbody>
</table></alternatives></table-wrap><table-wrap id="pcbi-1000213-t007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t007</object-id><label>Table 7</label><caption>
<title>This table shows, for a few different organisms, the total number of proteins for which predictions were made and the relative fractions of the four basic protein types.</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t007-7" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t007" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Organism</td>
<td align="left" colspan="1" rowspan="1">Count</td>
<td align="left" colspan="1" rowspan="1">G</td>
<td align="left" colspan="1" rowspan="1">SP+G</td>
<td align="left" colspan="1" rowspan="1">TM</td>
<td align="left" colspan="1" rowspan="1">SP+TM</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>E. coli</italic></td>
<td align="left" colspan="1" rowspan="1">4,929</td>
<td align="left" colspan="1" rowspan="1">61%</td>
<td align="left" colspan="1" rowspan="1">17%</td>
<td align="left" colspan="1" rowspan="1">21%</td>
<td align="left" colspan="1" rowspan="1">1%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>S. cerevisiae</italic></td>
<td align="left" colspan="1" rowspan="1">6,633</td>
<td align="left" colspan="1" rowspan="1">70%</td>
<td align="left" colspan="1" rowspan="1">7%</td>
<td align="left" colspan="1" rowspan="1">21%</td>
<td align="left" colspan="1" rowspan="1">1%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>C. elegans</italic></td>
<td align="left" colspan="1" rowspan="1">22,969</td>
<td align="left" colspan="1" rowspan="1">55%</td>
<td align="left" colspan="1" rowspan="1">15%</td>
<td align="left" colspan="1" rowspan="1">26%</td>
<td align="left" colspan="1" rowspan="1">3%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>H. sapiens</italic> (HUPO)</td>
<td align="left" colspan="1" rowspan="1">16,941</td>
<td align="left" colspan="1" rowspan="1">60%</td>
<td align="left" colspan="1" rowspan="1">15%</td>
<td align="left" colspan="1" rowspan="1">18%</td>
<td align="left" colspan="1" rowspan="1">7%</td>
</tr>
</tbody>
</table></alternatives></table-wrap><table-wrap id="pcbi-1000213-t008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.t008</object-id><label>Table 8</label><caption>
<title>This table shows the fraction of predicted TM and SP+TM that have a single membrane-spanning segment in the mature protein.</title>
</caption><!--===== Grouping alternate versions of objects =====--><alternatives><graphic id="pcbi-1000213-t008-8" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.t008" xlink:type="simple"/><table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" colspan="1" rowspan="1">Organism</td>
<td align="left" colspan="1" rowspan="1">Total TM</td>
<td align="left" colspan="1" rowspan="1">ss</td>
<td align="left" colspan="1" rowspan="1">Total SP+TM</td>
<td align="left" colspan="1" rowspan="1">ss</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>E. coli</italic></td>
<td align="left" colspan="1" rowspan="1">1,032</td>
<td align="left" colspan="1" rowspan="1">19%</td>
<td align="left" colspan="1" rowspan="1">35</td>
<td align="left" colspan="1" rowspan="1">49%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>S. cerevisiae</italic></td>
<td align="left" colspan="1" rowspan="1">1,416</td>
<td align="left" colspan="1" rowspan="1">35%</td>
<td align="left" colspan="1" rowspan="1">99</td>
<td align="left" colspan="1" rowspan="1">68%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>C. elegans</italic></td>
<td align="left" colspan="1" rowspan="1">5,919</td>
<td align="left" colspan="1" rowspan="1">29%</td>
<td align="left" colspan="1" rowspan="1">778</td>
<td align="left" colspan="1" rowspan="1">67%</td>
</tr>
<tr>
<td align="left" colspan="1" rowspan="1"><italic>H. sapiens</italic> (HUPO)</td>
<td align="left" colspan="1" rowspan="1">3,042</td>
<td align="left" colspan="1" rowspan="1">26%</td>
<td align="left" colspan="1" rowspan="1">1,222</td>
<td align="left" colspan="1" rowspan="1">74%</td>
</tr>
</tbody>
</table></alternatives></table-wrap>
<p><xref ref-type="fig" rid="pcbi-1000213-g009">Figure 9</xref> shows the Philius topology prediction for the human presenilin protein. This topology matches the nine-transmembrane topology which has been recently described <xref ref-type="bibr" rid="pcbi.1000213-Spasic1">[35]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Henricson1">[36]</xref> and is supported by experimental evidence. The nine membrane-spanning regions are shown as vertical cylinders and the cytoplasmic and non-cytoplasmic segments as horizontal bars. Each segment is colored according to type and shaded according to the confidence score. The seventh membrane-helix is missed by many topology predictors and is assigned a relatively low confidence score by Philius and as such is shaded gray. The protein type score for this protein is 0.99, and the full-topology score is 0.56.</p>
<fig id="pcbi-1000213-g009" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000213.g009</object-id><label>Figure 9</label><caption>
<title>Philius topology prediction for the human presenilin protein as shown on the YRC web-page.</title>
<p>The diagram shows the nine membrane-spanning regions as vertical cylinders, and the cytoplasmic and non-cytoplasmic segments as horizontal bars. Each segment is colored according to type and shaded according to the confidence score. The seventh membrane-helix is missed by many topology predictors and is assigned a relatively low confidence score by Philius and as such is shaded gray. Because of this one low-confidence membrane segment, the location of the C-terminus is less confidently assigned than the location of the N-terminus. On the YRC web page, this diagram is accompanied by the type confidence and topology confidence, as well as a copy of the protein sequence, color coded by segment type. Placing the mouse over any part of the topology diagram or the color-coded sequence will produce a pop-up showing the segment type, confidence, and boundary locations.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000213.g009" xlink:type="simple"/></fig></sec></sec><sec id="s4">
<title>Discussion</title>
<p>We have described Philius, a DBN-based approach to transmembrane protein topology prediction. Philius incorporates a two-stage decoding procedure that approximates the most likely label sequence given the protein sequence, a flexible way of handling uncertainty in training labels or partially labeled data, three different types of duration models, and a simple mechanism for tying parameters in order to limit model complexity. We have shown improvements in topology prediction accuracy over Phobius and comparable signal-peptide discrimination to SignalP-HMM. Furthermore, Philius uses a probabilistic framework to derive three informative confidence measures which have been shown to correlate well with observed precision. Finally, we have made available through the YRC web page a prediction server and 6.3 million predicted protein topologies. The predictions provide a global view of membrane protein topology and are a significant resource for scientists interested in understanding protein structure and function.</p>
<p>With respect to the transmembrane protein topology prediction task, we plan to improve Philius in several respects. First, it has previously been shown that the performance of Phobius could be increased from 67.8% to 74.7% correctly predicted TM topologies by including homologs during the decoding stage <xref ref-type="bibr" rid="pcbi.1000213-Kll3">[26]</xref>. Philius currently achieves 72.6% accuracy on the same dataset. We believe that Philius's performance could be similarly improved by exploiting homologs. Other directions for future work include learning periodic motifs (such as the hydrophobic moment <xref ref-type="bibr" rid="pcbi.1000213-Eisenberg1">[37]</xref>) in transmembrane helices, and including parallel tracks of information, such as hydrophobicity measures, in addition to the amino acid sequence. A model that differentiates between single-spanning and multi-spanning membrane proteins may also better capture some of the diversity among these proteins, at the risk of data-sparsity problems. However, including additional features such as hydrophobicity or otherwise clustering the amino acids may help to limit over-fitting to the training data. Furthermore, most existing membrane protein models, including Philius, are guilty of over-simplifying the problem, ignoring, for example, re-entrant segments which penetrate but do not completely span the membrane, or interfacial helices which run roughly parallel to the membrane surface <xref ref-type="bibr" rid="pcbi.1000213-Elofsson1">[38]</xref>. Modeling and predicting these types of features without reducing the accuracy on more âconventionalâ membrane proteins remains an open problem.</p>
<p>Recently, some insight has been gained into which properties of a protein govern the insertion of its membrane segments. Specifically, it has been shown that for a potential transmembrane helix of a given protein, the apparent free energy of insertion Î<italic>G</italic><sub>app</sub> of a TM helix can be expressed as a function of the concentration ratio <italic>K</italic><sub>app</sub> between the membrane integrated and the non-integrated forms: Î<italic>G</italic><sub>app</sub>â=ââ<italic>RT</italic> ln <italic>K</italic><sub>app</sub> <xref ref-type="bibr" rid="pcbi.1000213-Hessa1">[39]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Hessa2">[40]</xref>. Furthermore, this Î<italic>G</italic><sub>app</sub> can be approximated as a sum of position- and residue-dependent contributions from each amino acid in the helix, plus a hydrophobic moment contribution and a length correction <xref ref-type="bibr" rid="pcbi.1000213-Bernsel1">[27]</xref>,<xref ref-type="bibr" rid="pcbi.1000213-Hessa2">[40]</xref>. The additive nature of Î<italic>G</italic><sub>app</sub>, neglecting the hydrophobic moment term, supports the conclusion that probabilistic models in which the probabilities of individual amino acids are multiplied together, or equivalently the log-probabilities are summed, provide an accurate representation of the underlying membrane integration process. The length correction term can be compared to log Pr[<italic>D<sub>h</sub></italic>], where <italic>D<sub>h</sub></italic> is the length of the core membrane helix and Pr[<italic>D<sub>h</sub></italic>] is learned. Within the DBN framework, it is also possible to incorporate additional dependencies between nearby amino acids in order to capture effects such as the hydrophobic moment.</p>
<p>Since their introduction to biological sequence analysis <xref ref-type="bibr" rid="pcbi.1000213-Churchill1">[41]</xref>, hidden Markov models have been considered one of the best ways to model amino acid and DNA sequences. DBNs generalize HMMs and offer a number of significant advantages. While adding complexity to an HMM requires an ever-expanding state space, a DBN can be used to more precisely describe the relationships desired among the random variables, thereby limiting the complexity only to what is actually needed. Because DBNs expose additional factorizations that might not be apparent in an HMM, DBNs may require fewer parameters and allow computationally more efficient probabilistic inference procedures than the corresponding HMM. Recently, Yao et al. <xref ref-type="bibr" rid="pcbi.1000213-Yao1">[42]</xref> have applied DBNs to the task of secondary structure prediction and it seems like a logical step to similarly extend other applications such as gene prediction <xref ref-type="bibr" rid="pcbi.1000213-Burge1">[43]</xref>, protein homology detection <xref ref-type="bibr" rid="pcbi.1000213-Krogh2">[23]</xref>, and coiled-coil prediction <xref ref-type="bibr" rid="pcbi.1000213-Delorenzi1">[44]</xref> from HMMs to DBNs. The DBN used here for protein topology prediction can easily serve as the basis for any similar segmentation and labeling task simply by specifying a different set of states and a different grammar.</p>
</sec></body>
<back>
<ack>
<p>The authors thank Henrik Nielsen and HÃ¥kan Viklund for providing datasets.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1000213-Sonnhammer1"><label>1</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sonnhammer</surname><given-names>E</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
</person-group>             <year>1998</year>             <article-title>A hidden Markov model for predicting transmembrane helices in protein sequences.</article-title>             <source>Proc ISMB</source>             <volume>6</volume>             <fpage>175</fpage>             <lpage>182</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Tusnady1"><label>2</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Tusnady</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Simon</surname><given-names>I</given-names></name>
</person-group>             <year>1998</year>             <article-title>Principles governing amino acid composition of integral membrane proteins: application to topology prediction.</article-title>             <source>J Mol Biol</source>             <volume>283</volume>             <fpage>489</fpage>             <lpage>506</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Schwartz1"><label>3</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Schwartz</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Chow</surname><given-names>YL</given-names></name>
</person-group>             <year>1990</year>             <article-title>The N-best algorithms: an efficient and exact procedure for finding the N most likely sentence hypotheses.</article-title>             <source>IEEE Int Conf Acoust Speech Signal Process</source>             <volume>1</volume>             <fpage>81</fpage>             <lpage>84</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Tusnady2"><label>4</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Tusnady</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Simon</surname><given-names>I</given-names></name>
</person-group>             <year>2001</year>             <article-title>The HMMTOP transmembrane topology prediction server.</article-title>             <source>Bioinformatics</source>             <volume>17</volume>             <fpage>849</fpage>             <lpage>850</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Nielsen1"><label>5</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Nielsen</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
</person-group>             <year>1998</year>             <article-title>Prediction of signal peptides and signal anchors by a hidden Markov model.</article-title>             <source>Proc ISMB</source>             <volume>6</volume>             <fpage>122</fpage>             <lpage>30</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Nielsen2"><label>6</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Nielsen</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Engelbrecht</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Brunak</surname><given-names>S</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
</person-group>             <year>1997</year>             <article-title>Identification of prokaryotic and eukaryotic signal peptides and prediction of their cleavage sites.</article-title>             <source>Protein Eng</source>             <volume>10</volume>             <fpage>1</fpage>             <lpage>6</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Krogh1"><label>7</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Larsson</surname><given-names>B</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Sonnhammer</surname><given-names>E</given-names></name>
</person-group>             <year>2001</year>             <article-title>Predicting transmembrane protein topology with a hidden Markov model: application to complete genomes.</article-title>             <source>J Mol Biol</source>             <volume>305</volume>             <fpage>567</fpage>             <lpage>580</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Kll1"><label>8</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>KÃ¤ll</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Sonnhammer</surname><given-names>E</given-names></name>
</person-group>             <year>2007</year>             <article-title>Advantages of combined transmembrane topology and signal peptide prediction â the Phobius web server.</article-title>             <source>Nucleic Acids Res</source>             <volume>35</volume>             <fpage>W429</fpage>             <lpage>W432</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Kll2"><label>9</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>KÃ¤ll</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Sonnhammer</surname><given-names>E</given-names></name>
</person-group>             <year>2004</year>             <article-title>A combined transmembrane topology and signal peptide prediction method.</article-title>             <source>J Mol Biol</source>             <volume>338</volume>             <fpage>1027</fpage>             <lpage>1036</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Meln1"><label>10</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>MelÃ©n</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
</person-group>             <year>2003</year>             <article-title>Reliability measures for membrane protein topology prediction algorithms.</article-title>             <source>J Mol Biol</source>             <volume>327</volume>             <fpage>735</fpage>             <lpage>744</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Riffle1"><label>11</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Riffle</surname><given-names>M</given-names></name>
<name name-style="western"><surname>MalmstrÃ¶m</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Davis</surname><given-names>T</given-names></name>
</person-group>             <year>2005</year>             <article-title>The Yeast Resource Center Public Data Repository.</article-title>             <source>Nucleic Acids Res</source>             <volume>33</volume>             <fpage>D378</fpage>             <lpage>D382</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Bilmes1"><label>12</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bilmes</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Bartels</surname><given-names>C</given-names></name>
</person-group>             <year>2005</year>             <article-title>Graphical model architectures for speech recognition.</article-title>             <source>IEEE Signal Process Mag</source>             <volume>22</volume>             <fpage>89</fpage>             <lpage>100</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Needham1"><label>13</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Needham</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Brandford</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Bulpitt</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Westhead</surname><given-names>D</given-names></name>
</person-group>             <year>2007</year>             <article-title>A primer on learning in Bayesian networks for computational biology.</article-title>             <source>PLoS Comput Biol</source>             <volume>3</volume>             <fpage>e129</fpage>             <comment>doi:10.1371/journal.pcbi.0030129</comment>          </element-citation></ref>
<ref id="pcbi.1000213-Bilmes2"><label>14</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bilmes</surname><given-names>J</given-names></name>
</person-group>             <year>2006</year>             <article-title>What HMMs can do.</article-title>             <source>IEICE Trans Inf Syst</source>             <volume>E89-D</volume>             <fpage>869</fpage>             <lpage>891</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Pearl1"><label>15</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Pearl</surname><given-names>J</given-names></name>
</person-group>             <year>1988</year>             <source>Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference</source>             <publisher-loc>San Francisco</publisher-loc>             <publisher-name>Morgan Kaufmann</publisher-name>          </element-citation></ref>
<ref id="pcbi.1000213-Lauritzen1"><label>16</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Lauritzen</surname><given-names>S</given-names></name>
</person-group>             <year>1996</year>             <source>Graphical Models</source>             <publisher-loc>New York</publisher-loc>             <publisher-name>Oxford University Press</publisher-name>          </element-citation></ref>
<ref id="pcbi.1000213-Bilmes3"><label>17</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bilmes</surname><given-names>J</given-names></name>
</person-group>             <year>2004</year>             <article-title>On Soft Evidence in Bayesian Networks. Technical Report UWEETR-2004-0016, Department of Electrical Engineering, University of Washington.</article-title>             <comment><ext-link ext-link-type="uri" xlink:href="http://www.ee.washington.edu/techsite/papers" xlink:type="simple">http://www.ee.washington.edu/techsite/papers</ext-link></comment>          </element-citation></ref>
<ref id="pcbi.1000213-Mller1"><label>18</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>MÃ¶ller</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Vilo</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Croning</surname><given-names>M</given-names></name>
</person-group>             <year>2001</year>             <article-title>Prediction of the coupling specificity of G protein coupled receptors to their G proteins.</article-title>             <source>Bioinformatics</source>             <volume>17</volume>             <fpage>S174</fpage>             <lpage>S181</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Reynolds1"><label>19</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Reynolds</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Bilmes</surname><given-names>J</given-names></name>
</person-group>             <year>2005</year>             <article-title>Part-of-speech tagging using virtual evidence and negative training.</article-title>             <source>Proc HLT/EMNLP</source>             <fpage>459</fpage>             <lpage>466</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Kulp1"><label>20</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kulp</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Haussler</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Reese</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Eeckman</surname><given-names>F</given-names></name>
</person-group>             <year>1996</year>             <article-title>A generalized hidden Markov model for the recognition of human genes in DNA.</article-title>             <source>Proc ISMB</source>             <volume>4</volume>             <fpage>134</fpage>             <lpage>142</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Bilmes4"><label>21</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bilmes</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Zweig</surname><given-names>G</given-names></name>
</person-group>             <year>2002</year>             <article-title>The Graphical Models Toolkit: an open source software system for speech and time-series processing.</article-title>             <source>IEEE ICASSP</source>          </element-citation></ref>
<ref id="pcbi.1000213-Dempster1"><label>22</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Dempster</surname><given-names>AP</given-names></name>
<name name-style="western"><surname>Laird</surname><given-names>NM</given-names></name>
<name name-style="western"><surname>Rubin</surname><given-names>DB</given-names></name>
</person-group>             <year>1977</year>             <article-title>Maximum likelihood from incomplete data via the EM algorithm.</article-title>             <source>J R Stat Soc</source>             <volume>39</volume>             <fpage>1</fpage>             <lpage>38</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Krogh2"><label>23</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
</person-group>             <year>1994</year>             <article-title>Hidden Markov models for labeled sequences.</article-title>             <source>Proc Int Conf Pattern Recognit</source>             <fpage>140</fpage>             <lpage>144</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Park1"><label>24</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Park</surname><given-names>J</given-names></name>
</person-group>             <year>2002</year>             <article-title>MAP complexity results and approximation methods.</article-title>             <source>Proc UAI</source>             <fpage>388</fpage>             <lpage>396</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Fariselli1"><label>25</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Fariselli</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Martelli</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Casadio</surname><given-names>R</given-names></name>
</person-group>             <year>2005</year>             <article-title>A new decoding algorithm for hidden Markov models improves the prediction of the topology of all-beta membrane proteins.</article-title>             <source>Bioinformatics</source>             <volume>6</volume>             <supplement>Suppl 4</supplement><fpage>S12</fpage>          </element-citation></ref>
<ref id="pcbi.1000213-Kll3"><label>26</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>KÃ¤ll</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Krogh</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Sonnhammer</surname><given-names>E</given-names></name>
</person-group>             <year>2005</year>             <article-title>An HMM posterior decoder for sequence feature prediction that includes homology information.</article-title>             <source>Bioinformatics</source>             <volume>21</volume>             <fpage>251</fpage>             <lpage>257</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Bernsel1"><label>27</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bernsel</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Viklund</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Falk</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Lindahl</surname><given-names>E</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
<etal/></person-group>             <year>2008</year>             <article-title>Prediction of membrane-protein topology from first principles.</article-title>             <source>Proc Natl Acad Sci USA</source>             <volume>105</volume>             <fpage>7177</fpage>             <lpage>7181</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Bendtsen1"><label>28</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bendtsen</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Nielsen</surname><given-names>H</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Brunak</surname><given-names>S</given-names></name>
</person-group>             <year>2004</year>             <article-title>Improved prediction of signal peptides: SignalP 3.0.</article-title>             <source>J Mol Biol</source>             <volume>340</volume>             <fpage>783</fpage>             <lpage>795</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Sen1"><label>29</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sen</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Chou</surname><given-names>J</given-names></name>
</person-group>             <year>2008</year>             <article-title>MemBrain: improving the accuracy of predicting transmembrane helices.</article-title>             <source>PLoS ONE</source>             <volume>3</volume>             <fpage>e2399</fpage>             <comment>doi:10.1371/journal.pone.0002399</comment>          </element-citation></ref>
<ref id="pcbi.1000213-Montgomerie1"><label>30</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Montgomerie</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Cruz</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Shrivastava</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Arndt</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Berjanskii</surname><given-names>M</given-names></name>
<etal/></person-group>             <year>2008</year>             <article-title>PROTEUS2: a web server for comprehensive protein structure prediction and structure-based annotation.</article-title>             <source>Nucleic Acids Res</source>             <volume>36</volume>             <fpage>202</fpage>             <lpage>209</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Amico1"><label>31</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Amico</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Finelli</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Rossi</surname><given-names>I</given-names></name>
<name name-style="western"><surname>Zauli</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Elofsson</surname><given-names>A</given-names></name>
<etal/></person-group>             <year>2006</year>             <article-title>PONGO: a web server for multiple predictions of all-alpha transmembrane proteins.</article-title>             <source>Nucleic Acids Res</source>             <volume>34</volume>             <fpage>169</fpage>             <lpage>172</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Kim1"><label>32</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kim</surname><given-names>H</given-names></name>
<name name-style="western"><surname>MelÃ©n</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Ãsterberg</surname><given-names>M</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
</person-group>             <year>2006</year>             <article-title>A global topology map of the <italic>Saccharomyces cerevisiae</italic> membrane proteome.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>103</volume>             <fpage>11142</fpage>             <lpage>11147</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Viklund1"><label>33</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Viklund</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Elofsson</surname><given-names>A</given-names></name>
</person-group>             <year>2004</year>             <article-title>Best alpha-helical transmembrane protein topology predictions are achieved using hidden Markov models and evolutionary information.</article-title>             <source>Protein Sci</source>             <volume>13</volume>             <fpage>1908</fpage>             <lpage>1917</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Daley1"><label>34</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Daley</surname><given-names>DO</given-names></name>
<name name-style="western"><surname>Rapp</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Granseth</surname><given-names>E</given-names></name>
<name name-style="western"><surname>MelÃ©n</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Drew</surname><given-names>D</given-names></name>
<etal/></person-group>             <year>2005</year>             <article-title>Global topology analysis of the <italic>Escherichia coli</italic> inner membrane proteome.</article-title>             <source>Science</source>             <volume>308</volume>             <fpage>1321</fpage>             <lpage>1323</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Spasic1"><label>35</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Spasic</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Talia</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Dillen</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Baert</surname><given-names>V</given-names></name>
<name name-style="western"><surname>De Strooper</surname><given-names>B</given-names></name>
<etal/></person-group>             <year>2006</year>             <article-title>Presenelin-1 maintains a nine-transmembrane topology throughout the secretory pathway.</article-title>             <source>J Biol Chem</source>             <volume>281</volume>             <fpage>26569</fpage>             <lpage>26577</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Henricson1"><label>36</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Henricson</surname><given-names>A</given-names></name>
<name name-style="western"><surname>KÃ¤ll</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Sonnhammer</surname><given-names>E</given-names></name>
</person-group>             <year>2005</year>             <article-title>A novel transmembrane topology of presenilin based on reconciling experimental and computational evidence.</article-title>             <source>FEBS J</source>             <volume>272</volume>             <fpage>2727</fpage>             <lpage>2733</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Eisenberg1"><label>37</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Eisenberg</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Weiss</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Terwilliger</surname><given-names>T</given-names></name>
</person-group>             <year>1984</year>             <article-title>The hydrophobic moment detects periodicity in protein hydrophobicity.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>81</volume>             <fpage>140</fpage>             <lpage>144</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Elofsson1"><label>38</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Elofsson</surname><given-names>A</given-names></name>
<name name-style="western"><surname>von Heijne</surname><given-names>G</given-names></name>
</person-group>             <year>2007</year>             <article-title>Membrane protein structure: prediction vs reality.</article-title>             <source>Annu Rev Biochem</source>             <volume>76</volume>             <fpage>125</fpage>             <lpage>140</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Hessa1"><label>39</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hessa</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Kim</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Bihlmaier</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Lundin</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Boekel</surname><given-names>J</given-names></name>
<etal/></person-group>             <year>2005</year>             <article-title>Recognition of transmembrane helices by the endoplasmic reticulum translocon.</article-title>             <source>Nature</source>             <volume>433</volume>             <fpage>377</fpage>             <lpage>381</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Hessa2"><label>40</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hessa</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Meindl-Beinker</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Bernsel</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Kim</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Sato</surname><given-names>Y</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>Molecular code for transmembrane-helix recognition by the Sec61 translocon.</article-title>             <source>Nature</source>             <volume>450</volume>             <fpage>1026</fpage>             <lpage>1030</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Churchill1"><label>41</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Churchill</surname><given-names>G</given-names></name>
</person-group>             <year>1989</year>             <article-title>Stochastic models for heterogeneous DNA sequences.</article-title>             <source>Bull Math Biol</source>             <volume>51</volume>             <fpage>79</fpage>             <lpage>94</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Yao1"><label>42</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Yao</surname><given-names>XQ</given-names></name>
<name name-style="western"><surname>Zhu</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Zhen-Su</surname><given-names>S</given-names></name>
</person-group>             <year>2008</year>             <article-title>A dynamic Bayesian network approach to protein secondary structure prediction.</article-title>             <source>BMC Bioinformatics</source>             <volume>9</volume>             <fpage>49</fpage>          </element-citation></ref>
<ref id="pcbi.1000213-Burge1"><label>43</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Burge</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Karlin</surname><given-names>S</given-names></name>
</person-group>             <year>1997</year>             <article-title>Prediction of complete gene structures in human genomic DNA.</article-title>             <source>J Mol Biol</source>             <volume>268</volume>             <fpage>78</fpage>             <lpage>94</lpage>          </element-citation></ref>
<ref id="pcbi.1000213-Delorenzi1"><label>44</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Delorenzi</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Speed</surname><given-names>T</given-names></name>
</person-group>             <year>2002</year>             <article-title>An HMM model for coiled-coil domains and a comparison with PSSM-based predictions.</article-title>             <source>Bioinformatics</source>             <volume>18</volume>             <fpage>617</fpage>             <lpage>625</lpage>          </element-citation></ref>
</ref-list>

</back>
</article>