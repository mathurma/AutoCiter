<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id><journal-title-group>
<journal-title>PLoS Computational Biology</journal-title></journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-13-02036</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1003849</article-id>
<article-categories><subj-group subj-group-type="heading"><subject>Perspective</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Biology and life sciences</subject><subj-group><subject>Biotechnology</subject><subj-group><subject>Bioengineering</subject><subj-group><subject>Biological systems engineering</subject></subj-group></subj-group></subj-group><subj-group><subject>Computational biology</subject></subj-group><subj-group><subject>Synthetic biology</subject></subj-group><subj-group><subject>Systems biology</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Computer and information sciences</subject><subj-group><subject>Computer applications</subject><subj-group><subject>Computer-aided design</subject></subj-group></subj-group><subj-group><subject>Computerized simulations</subject></subj-group><subj-group><subject>Computer modeling</subject></subj-group><subj-group><subject>Data management</subject><subj-group><subject>Ontologies</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Engineering and technology</subject></subj-group></article-categories>
<title-group>
<article-title>A Reappraisal of How to Build Modular, Reusable Models of Biological Systems</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Neal</surname><given-names>Maxwell L.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Cooling</surname><given-names>Michael T.</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Smith</surname><given-names>Lucian P.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Thompson</surname><given-names>Christopher T.</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Sauro</surname><given-names>Herbert M.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Carlson</surname><given-names>Brian E.</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Cook</surname><given-names>Daniel L.</given-names></name><xref ref-type="aff" rid="aff5"><sup>5</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Gennari</surname><given-names>John H.</given-names></name><xref ref-type="aff" rid="aff6"><sup>6</sup></xref></contrib>
</contrib-group>
<aff id="aff1"><label>1</label><addr-line>Department of Bioengineering, University of Washington, Seattle, Washington, United States of America</addr-line></aff>
<aff id="aff2"><label>2</label><addr-line>Auckland Bioengineering Institute, University of Auckland, Auckland, New Zealand</addr-line></aff>
<aff id="aff3"><label>3</label><addr-line>Department of Physiology, Medical College of Wisconsin, Milwaukee, Wisconsin, United States of America</addr-line></aff>
<aff id="aff4"><label>4</label><addr-line>Department of Molecular and Integrative Physiology, University of Michigan, Ann Arbor, Michigan, United States of America</addr-line></aff>
<aff id="aff5"><label>5</label><addr-line>Department of Physiology and Biophysics, University of Washington, Seattle, Washington, United States of America</addr-line></aff>
<aff id="aff6"><label>6</label><addr-line>Department of Biomedical Informatics and Medical Education, University of Washington, Seattle, Washington, United States of America</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Nussinov</surname><given-names>Ruth</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group>
<aff id="edit1"><addr-line>National Cancer Institute, United States of America and Tel Aviv University, Israel</addr-line></aff>
<author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">maxneal@gmail.com</email></corresp>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn>
</author-notes>
<pub-date pub-type="collection"><month>10</month><year>2014</year></pub-date>
<pub-date pub-type="epub"><day>2</day><month>10</month><year>2014</year></pub-date>
<volume>10</volume>
<issue>10</issue>
<elocation-id>e1003849</elocation-id><permissions>
<copyright-year>2014</copyright-year>
<copyright-holder>Neal et al</copyright-holder><license xlink:type="simple"><license-p>This is an open-access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><funding-group><funding-statement>This work was supported by the National Institutes of Health (P50-GM094503-03, R01-GM081070-06, T15-LM007442-06, R42-HG006737-03 <ext-link ext-link-type="uri" xlink:href="http://www.nih.gov/" xlink:type="simple">http://www.nih.gov/</ext-link>), the American Heart Association (90PRE210064; <ext-link ext-link-type="uri" xlink:href="http://www.heart.org/" xlink:type="simple">http://www.heart.org/</ext-link>), the Virtual Physiological Human Network of excellence (EC FP7 project #248502; <ext-link ext-link-type="uri" xlink:href="http://www.vph-institute.org/" xlink:type="simple">http://www.vph-institute.org/</ext-link>), the Maurice Wilkins Centre for Molecular Biodiscovery (<ext-link ext-link-type="uri" xlink:href="http://www.acore.ac.nz/cores/maurice-wilkins-centre-molecular-biodiscovery" xlink:type="simple">http://www.acore.ac.nz/cores/maurice-wilkins-centre-molecular-biodiscovery</ext-link>) and the Royal Society of New Zealand (Marsden Fast-Start Grant UOA1007; <ext-link ext-link-type="uri" xlink:href="http://www.royalsociety.org.nz/" xlink:type="simple">http://www.royalsociety.org.nz/</ext-link>). The funders had no role in the preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="7"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Overview</title>
<p>Biological researchers increasingly rely on computational models to integrate biological systems knowledge, test hypotheses, and forecast system behavior. The expanding size of these models requires solutions for managing their complexity. Modularity, a time-tested design principle for managing complexity, can be applied within the biological modeling field to parallelize work, automate composition, and promote effective model sharing. As modelers of complex biological systems, we aim to apply modular production to accelerate our efforts and have therefore investigated several currently available approaches for modular modeling. We argue that some traditional features of modularity, in particular the isolation of a module's contents from the rest of the system, can impede model sharing and composition when applied within the context of biological simulation. Alternative approaches that can automatically interface model components based on the biological meaning of their contents (their semantics) avoid these limitations. Our conclusions have strategic implications for the design of systems biology, synthetic biology, and integrated physiological modeling technologies, as well as community-level model curation efforts.</p>
</sec><sec id="s2">
<title>Introduction</title>
<p>Given the enormous increase in systems-level biological information in recent years, along with concurrent advances in computing power, researchers can now simulate biological systems on an unprecedented scale. Contemporary models may contain hundreds or thousands of variables and equations, and as these simulations grow in scope and fidelity, managing model complexity becomes increasingly difficult. A solution to this challenge is to apply modular modeling approaches that break up complex models into more manageable pieces, parallelize work, and enable more automated model composition. As a design principle, modularity is a powerful and time-tested approach for managing complexity. For example, the aircraft, automobile, and electronics industries all rely on modular product development; mass production of their complex goods is impossible without it. We, as modelers of complex biological systems and as members of larger research communities developing systems biology, synthetic biology, and multiscale physiology models, are interested in applying this same production philosophy to facilitate model reuse among the greater modeling community and increase research productivity. Modular modeling offers an opportunity to move beyond traditional modeling practices characterized by hand-coded, custom-made models with limited capabilities for reuse. Our vision is to utilize the expanding set of publicly available biological models as a library of interoperable modeling components that can be easily recombined to build complex, integrated simulations of biological systems.</p>
<p>Working towards this vision, we have explored several technologies for modular modeling to better understand how we might implement a general approach for automated model composition and community-level model sharing. Based on our exploration, we assert that information-hiding interfaces, one of the hallmarks of traditional modular designs because of the advantages it confers, can actually impede reuse of biological models. In a biological context, such interfaces are problematic because they can hide critical points of coupling between modules in the same system. Working from this argument, we describe an alternative approach that can address this problem.</p>
</sec><sec id="s3">
<title>Modularity and Interfaces</title>
<p>Modularity, despite being an intuitive design principle, can be difficult to formally define. Here we summarize and apply a definition articulated by Baldwin and Clark <xref ref-type="bibr" rid="pcbi.1003849-Baldwin1">[1]</xref> that was adapted from McClelland and Rumelhart <xref ref-type="bibr" rid="pcbi.1003849-McClelland1">[2]</xref>. According to this definition, there are two central ideas that comprise the concept of a module:</p>
<list list-type="order"><list-item>
<p>A module is a unit in a larger system that retains an individual identity but interacts with other system units.</p>
</list-item><list-item>
<p>The complexity within a module is isolated from the larger system but made accessible via an interface; the interface defines how the unit can interact with the larger system.</p>
</list-item></list>
<p>Modeling components that adhere to this definition are suitable, and perhaps optimal, when researchers agree on what the appropriate coupling points and interfaces should be for larger model compositions. However, we argue that for broader reuse of models across research groups, or within groups that have evolving modeling needs, these types of modules can be problematic. Our reasoning is as follows:</p>
<p>By the above definition, a module's interface defines how it interacts within a larger system. This presupposes two things. First, that the “larger system” has already been defined. However, because there is no way to anticipate all the ways that the biological modeling community may repurpose a publicly available modeling component, there is no way to define the system in which that component participates a priori. Second, that there is a universal and unchanging agreement about what constitutes a module and how such modules communicate via predefined interfaces. Our concern is that current computational implementations of modules and interfaces, while suitable for specific purposes, prematurely commit modelers to modeling components that may be difficult to recombine and repurpose in the face of changing knowledge and evolving modeling needs. For example, biological information from a new experiment may raise the importance of a variable hidden within a component. Therefore, it becomes difficult to anticipate what information in a component should be exposed or hidden by an interface.</p>
<p>For example, researchers studying nucleotide synthesis might repurpose a glycolysis model for integration with a pentose phosphate pathway (PPP) model, while another research group investigating metabolism might integrate it with a tricarboxylic acid (TCA) cycle model. Both are valid modeling tasks, and modeling approaches for community-level reuse should be able to accommodate both. If the interface to the glycolysis model is specified ahead of time, this can limit its reuse. Let us assume the model was initially intended to link with a PPP module and includes an interface that exposes three variables: the concentrations of glucose 6-phosphate, fructose 6-phosphate, and glyceraldehyde 3-phosphate. Such an interface hides a critical point of coupling between the glycolysis and TCA models: there is no way to integrate them so that the TCA cycle's input pyruvate concentration becomes dependent on the glycolysis model's dynamics (<xref ref-type="fig" rid="pcbi-1003849-g001">Figure 1A</xref>). The interface on the glycolysis model, although quite suitable for the original modeling task, hides biological knowledge critical to its reuse for modeling tasks beyond its initial design goals. Besides hiding the pyruvate concentration variable “Pyr” in <xref ref-type="fig" rid="pcbi-1003849-g001">Figure 1</xref>, the interface may hide other variables, such as ATP and ADP concentration, which can be critical for connecting the glycolysis model to others in a biologically consistent fashion.</p>
<fig id="pcbi-1003849-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003849.g001</object-id><label>Figure 1</label><caption>
<title>A modular model composition task using traditional, information-hiding approaches versus semantics-based, adaptable interface modularity (SAIM).</title>
<p>A: Predefined interfaces applied to publicly-available glycolysis, pentose phosphate pathway (PPP) and tricarboxylic acid cycle (TCA) modules may allow appropriate computational linkage (double-headed arrows) between the first two models but prevent linkage with the third. The interfaces on the glycolysis and PPP models expose codewords representing the concentrations of glucose 6-phosphate (“Gluc6P,” “g6p”), fructose 6-phosphate (“Fruc6P,” “f6p”), and glyceraldehyde 3-phosphate (“Glyc3P,” “g3p”) but conceal the glycolysis model codeword representing pyruvate concentration (“Pyr”), a critical coupling point between the glycolysis and TCA cycle models. B: Using SAIM, all modeling elements are exposed and semantically defined, allowing biologically consistent coupling of the three modeling components at the time of composition.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003849.g001" position="float" xlink:type="simple"/></fig>
<p>The use of such predefined interfaces is a standard approach in component-based software engineering. This is known as “encapsulation” and allows software developers to work independently on a system's components without requiring them to understand the details of other components or accommodate changes to the internals of components developed externally. We do not argue against such predefined interfaces, per se, as they can be useful for composing models, organizing numerical solutions, and simplifying communication about biological systems among researchers. We also acknowledge that in forward-engineering tasks, in which engineers link modules with predefined interfaces to create novel composite systems (such as modeling a novel electronic circuit), it is not necessary to specify all potential composite systems ahead of time for the interfaces to be useful. Nonetheless, these interfaces limit the number and type of compositions available to the engineer; they prevent editing or expanding the mathematical machinery hidden within the modules and can prevent effective interfacing between modules coded for different compositional packages. Very often, these are exactly the modeling tasks that biological modelers face when attempting to reuse shared models. For example, a modeler may wish to increase a model's biological detail to improve its predictive accuracy or integrate multiple, related models coded by different research groups to explore a system more holistically.</p>
<p>A solution to the problems introduced by predefined interfaces is to “white-box” module contents and to label the contents with their biological meanings—their semantics. We call this new approach “semantics-based, adaptable interface modularity,” or SAIM (<xref ref-type="fig" rid="pcbi-1003849-g001">Figure 1B</xref>). As we illustrate in the following sections, SAIM can accelerate and facilitate the repurposing of legacy and emerging models by representing their biological content free of imposed computational interfaces. SAIM leverages these semantic descriptions to propose “on-the-fly” interfaces between merged components that are specific for particular, even transitory, modeling purposes. The advantage we foresee is a major increase in the ease and speed by which modelers across the modeling community can reuse available modeling code.</p>
<p>In the following section we discuss our exploration of modular biological modeling technologies so as to place SAIM within the context of the broader effort to build modular biological systems from reusable models.</p>
</sec><sec id="s4">
<title>Current Modular Modeling Technologies</title>
<p>In our exploration of modular modeling technologies, we focused on those that use declarative model description formats. These formats, in contrast to imperative (procedural) formats, describe models in a more sharable fashion, allow for model exchange across modeling software, and separate the model description from analysis and visualization workflows. These characteristics are important for sharing models because the broader biological modeling community uses a variety of modeling software tools and computational research pipelines.</p>
<p>Among the modular modeling technologies we explored, we found three distinct types of modular composition, which we discuss in turn.</p>
<sec id="s4a">
<title>Type 1: Black-box, code-level coupling using information-hiding interfaces</title>
<p>In these types of compositions, information-hiding interfaces are applied to modeling components and the modeler links the components according to model variables' input/output assignments. This is the standard approach for component-based software engineering and is often used by modelers working in procedural, object-oriented languages such as MATLAB, Java, C++, etc. It is also a compositional approach supported by CellML <xref ref-type="bibr" rid="pcbi.1003849-Cuellar1">[3]</xref>, a declarative, XML-based modeling format developed for the International Union of Physiological Sciences (IUPS) Physiome effort <xref ref-type="bibr" rid="pcbi.1003849-Hunter1">[4]</xref> that includes explicit constructs for delineating reusable modeling components with predefined interfaces. CellML modeling tools such as OpenCell <xref ref-type="bibr" rid="pcbi.1003849-Garny1">[5]</xref> (<ext-link ext-link-type="uri" xlink:href="http://www.opencell.org" xlink:type="simple">http://www.opencell.org</ext-link>) and Cellular Open Resource (COR) <xref ref-type="bibr" rid="pcbi.1003849-Garny2">[6]</xref> (<ext-link ext-link-type="uri" xlink:href="http://cor.physiol.ox.ac.uk/" xlink:type="simple">http://cor.physiol.ox.ac.uk/</ext-link>) use these interfaces to guide and validate the model composition process.</p>
<p>The unit of modular composition in CellML models is the “component” element. Each CellML model must declare at least one component, and all model variables and equations are declared within components. Each component is a computational block within the model with a predefined interface that indicates whether a variable is an input, output, or hidden. A CellML component may represent a distinct computational or biological aspect within a model. As of CellML version 1.1, modelers can reuse any component in a CellML model through the CellML “import” element. This creates a new instance of the component in the model, linking in the component's computational machinery. Components can also be arranged hierarchically using, for example, an encapsulation relationship.</p>
<p>Importing components, as performed in OpenCell, reduces modeling costs by allowing modelers to refer to previously developed model components rather than code them anew. For an example of this kind of composition, see Cooling et al. <xref ref-type="bibr" rid="pcbi.1003849-Cooling1">[7]</xref>. When a component is imported into a new model, the modeler can then specify connections that map the imported component's exposed variables to other exposed variables in the model. This links the imported component to the rest of the model's mathematical structure.</p>
</sec><sec id="s4b">
<title>Type 2: White-box, code-level coupling</title>
<p>In this type of model composition, information-hiding interfaces are absent and all code-level elements of a modeling component are available as potential coupling points with other components. As in Type 1 compositions, the modeler establishes links between models by creating mappings between code-level constructs such as model variables. Technologies that support this type of composition include Antimony <xref ref-type="bibr" rid="pcbi.1003849-Smith1">[8]</xref> (<ext-link ext-link-type="uri" xlink:href="http://antimony.sourceforge.net" xlink:type="simple">http://antimony.sourceforge.net</ext-link>), the Systems Biology Markup Language (SBML) Hierarchical Model Composition package (SBML-comp—<ext-link ext-link-type="uri" xlink:href="http://sbml.org/Documents/Specifications/SBML_Level_3/Packages/comp" xlink:type="simple">http://sbml.org/Documents/Specifications/SBML_Level_3/Packages/comp</ext-link>), and TinkerCell <xref ref-type="bibr" rid="pcbi.1003849-Chandran1">[9]</xref> (<ext-link ext-link-type="uri" xlink:href="http://www.tinkercell.com" xlink:type="simple">http://www.tinkercell.com</ext-link>).</p>
<p>Part of the reason Antimony and SBML-comp apply a white-box approach is to support compositions of SBML models. SBML, which is an XML-based modeling format designed to facilitate reuse of molecular systems models across software tools, intentionally excludes constructs for information-hiding interfaces. One reason for this is that SBML has long supported the reuse of models in new contexts and is intended to allow different computational implementations of the same model. For example, an SBML model can be solved in a continuous or a stochastic manner, depending on the modeler's needs. Core SBML specifies the reactions in the model, their participating chemical species, their kinetic rates, and any necessary kinetic parameters. It leaves the model's full computational implementation, including the construction of the necessary conservation equations, to external simulation software tools. SBML's exclusion of delineated model components and interfaces also allows for maximal flexibility and customization when interconnecting SBML models or decomposing them into reusable subcomponents <xref ref-type="bibr" rid="pcbi.1003849-Neal1">[10]</xref>. (This is also the rationale behind TinkerCell's white-box approach for supporting compositions of synthetic biology models.) However, white boxes require modelers to take explicit care that new connections do not violate assumptions inherent in the models being connected. For example, some models are only accurate if the biological outputs stay within a certain range. If a model is connected to another that causes the first to exceed that range of accuracy, the combined model may be biologically invalid. If Type 1 (black-box) composition is desired, Antimony, SBML-comp, and TinkerCell all provide the ability to define a suggested interface, to which the modeler may choose to restrict themselves. But in all three systems, nothing prevents a modeler from creating new mappings to otherwise internal elements.</p>
<p>The Antimony software package <xref ref-type="bibr" rid="pcbi.1003849-Smith1">[8]</xref> allows modelers to create hierarchical model compositions from SBML as well as CellML source models. To build composite systems, modelers use Antimony's shorthand text commands to manually identify and declare links between code-level elements in component models. Antimony provides a nonbinding, suggested interface for hierarchical models, allowing modelers to choose whether to use Type 1 or Type 2 compositions, or some combination of the two. It does not impose any particular interface on source SBML models and it programmatically exposes the contents of CellML's black boxes—converting them into white boxes—so that users may couple these models as their research tasks demand. Importantly, this process requires users to have a detailed, code-level understanding of each model's contents before interconnecting them into a larger system. These same contingencies apply to SBML-comp and TinkerCell.</p>
</sec><sec id="s4c">
<title>Type 3: White-box, biological-level coupling</title>
<p>As in Type 2 compositions, the computational elements of the modules used in Type 3 compositions are all exposed (white-boxed) as potential coupling points. What distinguishes these modules from purely white-box, Type 2 modules, is that machine-readable annotations are applied to each model that help guide the creation of biologically consistent links between modeling components. This is designed to expedite the composition process by automatically proposing a set of couplings between modeling components and by allowing modelers to work at the biological, rather than computational, level of abstraction. In other words, modelers are not required to know the idiosyncratic names of model elements (variables, etc.) to link systems together. Instead, they can perform their compositions based solely on what is represented by the model, biologically (<xref ref-type="fig" rid="pcbi-1003849-g001">Figure 1B</xref>).</p>
<p>The semanticSBML toolkit <xref ref-type="bibr" rid="pcbi.1003849-Krause1">[11]</xref> is one technology that supports this type of composition (<ext-link ext-link-type="uri" xlink:href="http://www.semanticsbml.org" xlink:type="simple">http://www.semanticsbml.org</ext-link>). Curated SBML models in the BioModels database <xref ref-type="bibr" rid="pcbi.1003849-LeNovere1">[12]</xref> are rich in machine-readable, semantic annotations that define their species, reactions, etc. When merging models with semanticSBML, the software automatically identifies biologically equivalent reactions and chemical species among the models to be merged. The user then chooses which mathematical representation of these commonalities they wish to preserve in the merged system (otherwise, the merged model would be biologically overdetermined). This process establishes the links that couple the models. By establishing model–model connections at the semantic level, semanticSBML reduces the need for modelers to develop code-level knowledge of modeling components.</p>
<p>The semanticSBML toolkit was designed to work with SBML models; thus, its focus is on composition of chemical network models. SemGen <xref ref-type="bibr" rid="pcbi.1003849-Beard1">[13]</xref>–<xref ref-type="bibr" rid="pcbi.1003849-Neal2">[15]</xref>, a software suite for semantics-based model annotation, composition and decomposition, is intended to provide these capabilities for a broader range of models and modeling languages (<ext-link ext-link-type="uri" xlink:href="http://sbp.bhi.washington.edu/projects/semgen" xlink:type="simple">http://sbp.bhi.washington.edu/projects/semgen</ext-link>). With SemGen, users can perform Type 3 compositions with models that adhere to the SemSim framework <xref ref-type="bibr" rid="pcbi.1003849-Beard1">[13]</xref>–<xref ref-type="bibr" rid="pcbi.1003849-Neal2">[15]</xref>, a semantics-based knowledge architecture designed to explicitly capture the computational and biological aspects of simulation models across biological scales. Currently, SemSim models are represented and stored in the Web Ontology Language (OWL <xref ref-type="bibr" rid="pcbi.1003849-Bechhofer1">[16]</xref>), but could theoretically be encoded in other knowledge-representation formats such as the Open Biomedical Ontology format (<ext-link ext-link-type="uri" xlink:href="http://www.geneontology.org/GO.format.obo-1_2.shtml" xlink:type="simple">http://www.geneontology.org/GO.format.obo-1_2.shtml</ext-link>) or Turtle (<ext-link ext-link-type="uri" xlink:href="http://www.w3.org/TR/turtle/" xlink:type="simple">http://www.w3.org/TR/turtle/</ext-link>). In the SemSim approach, annotations against biomedical ontologies are created to compose precise, descriptive definitions of the biophysical phenomena simulated in a model. As with semanticSBML, when SemSim models are integrated into a merged system, these annotations are used to couple the models in a biologically consistent manner. SemSim model variables are not assigned an explicit input/output status a priori, nor are they hidden by interfaces. Instead, the interface between merged models is created at the time of composition and depends on the biological commonalities they share.</p>
<p>The merging task presented in <xref ref-type="fig" rid="pcbi-1003849-g001">Figure 1B</xref> provides a specific example of this type of composition. By examining the annotations on the model variables, a Type 3 composition tool could identify where the models overlap, biologically. For example, the TCA and glycolysis models both simulate pyruvate concentration. With these biological commonalities identified, the user then chooses which mathematical representation of the concentration they wish to preserve in the merged system. Let us suppose that pyruvate concentration is a static constant in the TCA model but a dependent variable in the glycolysis model. If the user chooses the TCA representation, then the static constant from the TCA model would become an input to the glycolysis model, effectively clamping pyruvate concentration in the merged system. If the user chooses the glycolysis representation, then the glycolysis variable becomes an input to the TCA cycle model, and any variables that previously depended on the static constant become mathematically dependent on the output of the glycolysis model instead. For more detailed examples of other Type 3 compositions using SemGen, see Gennari et al. <xref ref-type="bibr" rid="pcbi.1003849-Gennari1">[14]</xref>, Beard et al. <xref ref-type="bibr" rid="pcbi.1003849-Beard1">[13]</xref>, and Neal <xref ref-type="bibr" rid="pcbi.1003849-Neal2">[15]</xref>.</p>
<p>Type 3 model composition offers the traditional benefits of a modular modeling architecture in that modelers can construct systems from externally developed, interoperable pieces, but the component models do not have predefined interfaces. Thus, the components used in these types of compositions do not meet the definition of a module put forth in the <xref ref-type="sec" rid="s2">Introduction</xref>. We therefore reify this new approach to modular model composition, naming it SAIM. To our knowledge, this compositional approach has not been explicitly defined previously. This may be because it requires two key technological ingredients that have appeared only recently: model interchange formats for community-level reuse and semantic web standards that can provide machine-readable definitions of model components.</p>
<p>Although they do not have predefined interfaces, SAIM components retain an independent identity apart from the systems in which they are used (each component used in an integration task originally exists apart from the merged system). It is only when these components are incorporated into a larger system that the input/output connections between them are established. This way, SAIM avoids the “inaccessible variable problem” associated with traditional, information-hiding approaches for software composition articulated in the <xref ref-type="sec" rid="s2">Introduction</xref>. While Type 2 compositions also avoid these problems by applying a white-box approach, SAIM provides an important advantage that can expedite and simplify the model composition process: in lieu of predefined interfaces, the model's semantics provide a guide for how to couple modeling components. Interfaces are one of the hallmarks of traditional modular designs because they make component coupling simpler and more intuitive. If they are removed in favor of white-boxing the components' contents, system creators must have a detailed understanding of each component's internal structure before they can appropriately link them. This, in effect, reduces much of the timesaving compositional power that a modular design is supposed to provide. Therefore, effectively guiding component coupling is one of the primary challenges for any white-box compositional approach. To provide a more concrete example, consider that linking household audio components does not require the user to understand their internal circuitry, only where to connect the cables. In the absence of predefined interfaces on these components, one would need circuit-level knowledge of their internal structure to link them appropriately. In biological modeling, SAIM helps retain some of the compositional power that is lost by eliminating predefined interfaces: the machine-readable biological annotations on SAIM components can be used to propose inter-model links at the time of merging. This allows modelers to connect modeling components in terms of their biology, not necessarily their code. SemGen and semanticSBML provide this semantics-guided approach: both use metadata annotations from a core set of reference ontologies to identify the biological commonalities between models, suggest the appropriate links to merge them, and then make the necessary changes to equations, physical units, etc., when the merged model is exported for simulation (<xref ref-type="fig" rid="pcbi-1003849-g001">Figure 1B</xref>).</p>
</sec></sec><sec id="s5">
<title>Discussion</title>
<p>Generally speaking, our intention is not to advocate any specific type of model composition over another. Each approach described here has advantages and disadvantages. Our intention is to point out the specific advantages that SAIM provides within the context of community-wide modular modeling and reuse. The standard approach to modularity used in software engineering is problematic in this context because information-hiding interfaces can limit the ways modeling components can be recombined. SAIM provides a solution by white-boxing model contents and then guiding the coupling process using machine-readable descriptions of the model's underlying biology. After this process, the model could once again be used in a black-box fashion, if desired.</p>
<p>Also, it is not our intention to champion any particular biological modeling format. Collectively, we constitute a group of modelers who are active in the development of CellML, SBML, and the SemSim framework; therefore, our perspective on model reuse and modularity extends across these, and other, formats. CellML, SBML, and SemSim are each expressive enough to allow all three styles of model composition that we have discussed. In our view, enabling such composition is primarily a matter of developing the software technologies that support working with these models in the different compositional styles. For example, while CellML models do use predefined interfaces on modeling components, software can turn these black boxes into white boxes without altering the original CellML model (as in the Antimony package). Each block of mathematical equations in a CellML component can be analyzed to determine how each variable in the component is computed irrespective of its input/output designation. Furthermore, Resource Description Framework (RDF)-formatted semantic metadata can be applied to CellML models to support SAIM (Type 3) compositions, and the CellML community is currently testing new features in SemGen that support the semantic annotation of these models.</p>
<p>To realize the advantages that semantics-based composition offers in terms of model sharing and reuse, biological content within models must be precisely and thoroughly annotated. This presents a number of challenges. First, despite the rich set of biomedical ontologies and controlled vocabularies now in existence, they often cannot provide the level of semantic detail that is required for annotating biological models precisely. For example, while “cytoplasmic glucose concentration of pancreatic beta cell” is simulated in several publicly available models of pancreatic beta cell dynamics, to our knowledge it is not a concept that is currently represented in any biomedical ontology or other knowledge resource. To address this limitation, the developers of SemSim and SemGen have devised a composite annotation approach <xref ref-type="bibr" rid="pcbi.1003849-Gennari1">[14]</xref> in which existing terms in biomedical knowledge resources are linked via standardized ontological relations to form the new, more exact terms needed for annotating concepts in biological models. Using this approach, a composite annotation for “cytoplasmic glucose concentration of pancreatic beta cell” can be created by linking “Chemical concentration” from the Ontology of Physics for Biology <xref ref-type="bibr" rid="pcbi.1003849-Cook1">[17]</xref>, “D-Glucose” from Chemical Entities of Biological Interest (ChEBI), “Cytoplasm,” from the Foundational Model of Anatomy (FMA) <xref ref-type="bibr" rid="pcbi.1003849-Rosse1">[18]</xref>, and “Type B cell of pancreatic islet” from the FMA (<xref ref-type="fig" rid="pcbi-1003849-g002">Figure 2</xref>, left).</p>
<fig id="pcbi-1003849-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003849.g002</object-id><label>Figure 2</label><caption>
<title>Two possible composite annotations that represent the concept “cytoplasmic glucose concentration of pancreatic beta cell.”</title>
<p>Although the annotations are semantically equivalent, an automated model-merging tool may not recognize them as such, as their component terms originate from different ontologies. Adhering to an agreed-upon set of orthogonal ontologies may help model annotators address this challenge. Abbreviations: OPB, Ontology of Physics for Biology; ChEBI, Chemical Entities of Biological Interest; SNOMED-CT, Systematized Nomenclature of Medicine—Clinical Terms; FMA, Foundational Model of Anatomy; GO, Gene Ontology <xref ref-type="bibr" rid="pcbi.1003849-Harris1">[22]</xref>; NCIT, National Cancer Institute Thesaurus <xref ref-type="bibr" rid="pcbi.1003849-Sioutos1">[23]</xref>.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003849.g002" position="float" xlink:type="simple"/></fig>
<p>Another challenge associated with model annotation is that annotations must be consistent for the same biophysical content across models. Otherwise, recognizing the points of semantic overlap during model merging becomes difficult. Controlled biomedical knowledge resources such as ontologies can provide a standard set of reference terms to achieve this consistency, and we advocate their use in the annotation process; however, these knowledge resources can contain significant semantic overlap, which can result in inconsistencies between annotators. <xref ref-type="fig" rid="pcbi-1003849-g002">Figure 2</xref> demonstrates that an alternative, semantically equivalent composite annotation for “cytoplasmic glucose concentration of pancreatic beta cell” could be created using terms from a different set of ontologies. For example, while one annotator may refer to the concept “D-glucose” from the ChEBI knowledge base <xref ref-type="bibr" rid="pcbi.1003849-Degtyarenko1">[19]</xref>, another may refer to the term “Glucose” from the Systematized Nomenclature of Medicine—Clinical Terms resource (SNOMED-CT <xref ref-type="bibr" rid="pcbi.1003849-Cornet1">[20]</xref>). We believe a tenable solution to this problem is for the various active model curation groups to agree on a core set of orthogonal reference ontologies for use in biological annotation (see, for example, the efforts to develop the CellML Biological Annotation Metadata Specification—<ext-link ext-link-type="uri" xlink:href="https://cellml-metadata-spec-20.readthedocs.org/en/latest/cellmlmetaspec-biological.html" xlink:type="simple">https://cellml-metadata-spec-20.readthedocs.org/en/latest/cellmlmetaspec-biological.html</ext-link>). Our hope is that this solution will promote consistency among annotators within and between model curation groups. We also encourage a sustained, community-wide discussion on semantic annotation standards across modeling formats and domains. It is important that this discussion involve members of both the modeling and knowledge representation communities, not only to ensure consistency in annotation efforts but because as new scientific knowledge is articulated in mathematical models, it will be crucial that knowledge resource developers incorporate this information into existing resources so that model annotators have timely access to emerging biological concepts. Furthermore, as scientific knowledge evolves, terms previously used for annotation may become obsolete. Therefore, a dynamic collaboration between modelers and knowledge resource developers is also important for ensuring that such annotations can be replaced with terms representing more current scientific understanding.</p>
<p>We recognize that creating unambiguous annotations can be time-consuming and requires expertise in existing ontologies. Thus, critical challenges for SAIM modeling include incentivizing model curators to annotate at this level of detail and developing intuitive software that minimizes annotation costs. In terms of incentives, annotation provides important advantages for model sharing, modularity, and reuse. It also provides a basis for linking models with other annotated knowledge resources, including experimental datasets. For modelers, such links can help uncover datasets useful for driving and/or validating models of interest. For experimentalists, they can help uncover biological models that show how the elements of a biological system under investigation influence each other. As demonstrated recently, semantic annotations can also be used to organize the biological content of model collections into integrated knowledge resources that can represent causal biological pathways across multiple physical and temporal scales <xref ref-type="bibr" rid="pcbi.1003849-Neal3">[21]</xref>. A rich semantic layer applied to models can also greatly facilitate the search and retrieval of models and their sub-components within online repositories <xref ref-type="bibr" rid="pcbi.1003849-Neal1">[10]</xref>, <xref ref-type="bibr" rid="pcbi.1003849-Neal3">[21]</xref>.</p>
<p>As more and more biological models become publicly available, researchers will have more opportunities to build upon previous modeling efforts and investigate complex, integrated biological systems in silico. By taking advantage of this growing number of sharable models, we anticipate that modular modeling solutions will significantly accelerate quantitative research in systems biology, synthetic biology, integrated physiology, and all other fields that utilize complex biological models. We hope that our arguments presented here will inform the development of these solutions and ensure their utility across the greater modeling community.</p>
</sec></body>
<back>
<ack>
<p>We would like to thank Drs. Alan Garny and Jason McC. Smith for their input on the issue of modular modeling.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1003849-Baldwin1"><label>1</label>
<mixed-citation publication-type="book" xlink:type="simple">Baldwin CY, Clark KB (2000) Design Rules Volume I: The Power of Modularity. Cambridge: The MIT Press. 471 p.</mixed-citation>
</ref>
<ref id="pcbi.1003849-McClelland1"><label>2</label>
<mixed-citation publication-type="book" xlink:type="simple">McClelland JL, Rumelhart DE (1995) Parallel distributed processing. Cambridge: The MIT Press. 611 p.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Cuellar1"><label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Cuellar</surname><given-names>AA</given-names></name>, <name name-style="western"><surname>Lloyd</surname><given-names>CM</given-names></name>, <name name-style="western"><surname>Nielsen</surname><given-names>PF</given-names></name>, <name name-style="western"><surname>Bullivant</surname><given-names>DP</given-names></name>, <name name-style="western"><surname>Nickerson</surname><given-names>DP</given-names></name>, <etal>et al</etal>. (<year>2003</year>) <article-title>An overview of CellML 1.1, a biological model description language</article-title>. <source>Simulation</source> <volume>79</volume>: <fpage>740</fpage>–<lpage>747</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Hunter1"><label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hunter</surname><given-names>PJ</given-names></name>, <name name-style="western"><surname>Crampin</surname><given-names>EJ</given-names></name>, <name name-style="western"><surname>Nielsen</surname><given-names>PMF</given-names></name> (<year>2008</year>) <article-title>Bioinformatics, multiscale modeling and the IUPS Physiome Project</article-title>. <source>Brief Bioinform</source> <volume>9</volume>: <fpage>333</fpage>–<lpage>343</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Garny1"><label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Garny</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Nickerson</surname><given-names>DP</given-names></name>, <name name-style="western"><surname>Cooper</surname><given-names>J</given-names></name>, <name name-style="western"><surname>dos Santos</surname><given-names>RW</given-names></name>, <name name-style="western"><surname>Miller</surname><given-names>AK</given-names></name>, <etal>et al</etal>. (<year>2008</year>) <article-title>CellML and associated tools and techniques</article-title>. <source>Philos Trans A Math Phys Eng Sci</source> <volume>366</volume>: <fpage>3017</fpage>–<lpage>3043</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Garny2"><label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Garny</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Noble</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Hunter</surname><given-names>PJ</given-names></name>, <name name-style="western"><surname>Kohl</surname><given-names>P</given-names></name> (<year>2009</year>) <article-title>Cellular Open Resource (COR): current status and future directions</article-title>. <source>Philos Trans A Math Phys Eng Sci</source> <volume>367</volume>: <fpage>1885</fpage>–<lpage>1905</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Cooling1"><label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Cooling</surname><given-names>MT</given-names></name>, <name name-style="western"><surname>Rouilly</surname><given-names>V</given-names></name>, <name name-style="western"><surname>Misirli</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Lawson</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Yu</surname><given-names>T</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>Standard virtual biological parts: a repository of modular modeling components for synthetic biology</article-title>. <source>Bioinformatics</source> <volume>26</volume>: <fpage>925</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Smith1"><label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Smith</surname><given-names>LP</given-names></name>, <name name-style="western"><surname>Bergmann</surname><given-names>FT</given-names></name>, <name name-style="western"><surname>Chandran</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Sauro</surname><given-names>HM</given-names></name> (<year>2009</year>) <article-title>Antimony: a modular model definition language</article-title>. <source>Bioinformatics</source> <volume>25</volume>: <fpage>2452</fpage>–<lpage>2454</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Chandran1"><label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chandran</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Bergmann</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Sauro</surname><given-names>H</given-names></name> (<year>2009</year>) <article-title>TinkerCell: modular CAD tool for synthetic biology</article-title>. <source>J Biol Eng</source> <volume>3</volume>: <fpage>19</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Neal1"><label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Neal</surname><given-names>ML</given-names></name>, <name name-style="western"><surname>Galdzicki</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Gallimore</surname><given-names>JT</given-names></name>, <name name-style="western"><surname>Sauro</surname><given-names>HM</given-names></name> (<year>2014</year>) <article-title>A C library for retrieving specific reactions from the BioModels database</article-title>. <source>Bioinformatics</source> <volume>30</volume>: <fpage>129</fpage>–<lpage>130</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Krause1"><label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Krause</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Uhlendorf</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Lubitz</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Schulz</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Klipp</surname><given-names>E</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>Annotation and merging of SBML models with semanticSBML</article-title>. <source>Bioinformatics</source> <volume>26</volume>: <fpage>421</fpage>–<lpage>422</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-LeNovere1"><label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Le Novere</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Bornstein</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Broicher</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Courtot</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Donizelli</surname><given-names>M</given-names></name>, <etal>et al</etal>. (<year>2006</year>) <article-title>BioModels Database: a free, centralized database of curated, published, quantitative kinetic models of biochemical and cellular systems</article-title>. <source>Nucleic Acids Res</source> <volume>34</volume>: <fpage>D689</fpage>–<lpage>D691</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Beard1"><label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Beard</surname><given-names>DA</given-names></name>, <name name-style="western"><surname>Neal</surname><given-names>ML</given-names></name>, <name name-style="western"><surname>Tabesh-Saleki</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Thompson</surname><given-names>CT</given-names></name>, <name name-style="western"><surname>Bassingthwaighte</surname><given-names>JB</given-names></name>, <etal>et al</etal>. (<year>2012</year>) <article-title>Multi-scale modeling and data integration in the Virtual Physiological Rat Project</article-title>. <source>Ann Biomed Eng</source> <volume>40</volume>: <fpage>2365</fpage>–<lpage>2378</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Gennari1"><label>14</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gennari</surname><given-names>JH</given-names></name>, <name name-style="western"><surname>Neal</surname><given-names>ML</given-names></name>, <name name-style="western"><surname>Galdzicki</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Cook</surname><given-names>DL</given-names></name> (<year>2011</year>) <article-title>Multiple ontologies in action: Composite annotations for biosimulation models</article-title>. <source>J Biomed Inform</source> <volume>44</volume>: <fpage>146</fpage>–<lpage>154</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Neal2"><label>15</label>
<mixed-citation publication-type="book" xlink:type="simple">Neal ML (2010) Modular, semantics-based composition of biosimulation models [Ph.D. Dissertation]. University of Washington.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Bechhofer1"><label>16</label>
<mixed-citation publication-type="other" xlink:type="simple">Bechhofer S, van Harmelen F, Hendler J, Horrocks I, McGuinness DL, <etal>et al</etal>.. (2004) OWL Web Ontology Language Reference. W3C recommendation. Available: <ext-link ext-link-type="uri" xlink:href="http://www.w3.org/TR/owl-features/" xlink:type="simple">http://www.w3.org/TR/owl-features/</ext-link>. Accessed 8 September 2014.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Cook1"><label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Cook</surname><given-names>DL</given-names></name>, <name name-style="western"><surname>Bookstein</surname><given-names>FL</given-names></name>, <name name-style="western"><surname>Gennari</surname><given-names>JH</given-names></name> (<year>2011</year>) <article-title>Physical Properties of Biological Entities: An Introduction to the Ontology of Physics for Biology</article-title>. <source>PLoS ONE</source> <volume>6</volume>: <fpage>e28708</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Rosse1"><label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Rosse</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Mejino</surname><given-names>JLV</given-names></name> (<year>2003</year>) <article-title>A Reference Ontology for Bioinformatics: The Foundational Model of Anatomy</article-title>. <source>J Biomed Inform</source> <volume>36</volume>: <fpage>478</fpage>–<lpage>500</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Degtyarenko1"><label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Degtyarenko</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Matos</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Ennis</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Hastings</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Zbinden</surname><given-names>M</given-names></name>, <etal>et al</etal>. (<year>2007</year>) <article-title>ChEBI: a database and ontology for chemical entities of biological interest</article-title>. <source>Nucleic Acids Res</source> <volume>36</volume>: <fpage>D344</fpage>–<lpage>D350</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Cornet1"><label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Cornet</surname><given-names>R</given-names></name>, <name name-style="western"><surname>de Keizer</surname><given-names>N</given-names></name> (<year>2008</year>) <article-title>Forty years of SNOMED: a literature review</article-title>. <source>BMC Med Inform Decis Mak</source> <volume>8</volume>: <fpage>S2</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Neal3"><label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Neal</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Cook</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Gennari</surname><given-names>J</given-names></name> (<year>2013</year>) <article-title>An OWL knowledge base for classifying and querying collections of physiological models: A prototype human physiome</article-title>. <source>Proceedings: ICBO</source> <volume>2013</volume>: <fpage>16</fpage>–<lpage>21</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Harris1"><label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Harris</surname><given-names>MA</given-names></name>, <name name-style="western"><surname>Clark</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Ireland</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Lomax</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Ashburner</surname><given-names>M</given-names></name>, <etal>et al</etal>. (<year>2004</year>) <article-title>The Gene Ontology (GO) database and informatics resource</article-title>. <source>Nucleic Acids Res</source> <volume>32</volume>: <fpage>D258</fpage>–<lpage>261</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003849-Sioutos1"><label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Sioutos</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Coronado</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Haber</surname><given-names>MW</given-names></name>, <name name-style="western"><surname>Hartel</surname><given-names>FW</given-names></name>, <name name-style="western"><surname>Shaiu</surname><given-names>WL</given-names></name>, <etal>et al</etal>. (<year>2007</year>) <article-title>NCI Thesaurus: a semantic model integrating cancer-related clinical and molecular information</article-title>. <source>J Biomed Inform</source> <volume>40</volume>: <fpage>30</fpage>–<lpage>43</lpage>.</mixed-citation>
</ref>
</ref-list></back>
</article>