<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN"><front><journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="publisher">pcbi</journal-id><journal-id journal-id-type="allenpress-id">plcb</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.1371/journal.pcbi.0030166</article-id><article-id pub-id-type="publisher-id">07-PLCB-RA-0240R2</article-id><article-id pub-id-type="sici">plcb-03-08-18</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology</subject><subject>Neuroscience</subject></subj-group><subj-group subj-group-type="System Taxonomy"><subject>Rattus (rat)</subject><subject>Primates</subject></subj-group></article-categories><title-group><article-title>Slowness and Sparseness Lead to Place, Head-Direction, and Spatial-View Cells</article-title><alt-title alt-title-type="running-head">Place, Head-Direction, and Spatial-View Cells</alt-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Franzius</surname><given-names>Mathias</given-names></name><xref ref-type="corresp" rid="cor1">
            <sup>*</sup>
          </xref><xref ref-type="aff" rid="aff1"/></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Sprekeler</surname><given-names>Henning</given-names></name><xref ref-type="aff" rid="aff1"/></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Wiskott</surname><given-names>Laurenz</given-names></name><xref ref-type="aff" rid="aff1"/></contrib></contrib-group><aff id="aff1">
        <label>1</label>
        <addr-line>Institute for Theoretical Biology, Humboldt-Universität zu Berlin, Berlin, Germany</addr-line>
      </aff><contrib-group><contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Friston</surname><given-names>Karl J</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">University College London, United Kingdom</aff><author-notes><fn fn-type="con" id="ack1"><p>MF and LW conceived and designed the experiments. MF and HS analyzed the data. All authors contributed to writing the paper. MF performed experiments. HS and LW designed and performed mathematical analysis.</p></fn><corresp id="cor1">* To whom correspondence should be addressed. E-mail: <email xlink:type="simple">m.franzius@biologie.hu-berlin.de</email></corresp><fn fn-type="conflict" id="ack3"><p> The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="ppub"><month>8</month><year>2007</year></pub-date><pub-date pub-type="epub"><day>31</day><month>8</month><year>2007</year></pub-date><volume>3</volume><issue>8</issue><elocation-id>e166</elocation-id><history><date date-type="received"><day>1</day><month>5</month><year>2007</year></date><date date-type="accepted"><day>5</day><month>7</month><year>2007</year></date></history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2007</copyright-year><copyright-holder>Franzius et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><p>We present a model for the self-organized formation of place cells, head-direction cells, and spatial-view cells in the hippocampal formation based on unsupervised learning on quasi-natural visual stimuli. The model comprises a hierarchy of Slow Feature Analysis (SFA) nodes, which were recently shown to reproduce many properties of complex cells in the early visual system [<xref ref-type="bibr" rid="pcbi-0030166-b001">1</xref>]. The system extracts a distributed grid-like representation of position and orientation, which is transcoded into a localized place-field, head-direction, or view representation, by sparse coding. The type of cells that develops depends solely on the relevant input statistics, i.e., the movement pattern of the simulated animal. The numerical simulations are complemented by a mathematical analysis that allows us to accurately predict the output of the top SFA layer.</p></abstract><abstract abstract-type="summary"><title>Author Summary</title><sec id="st1"><title/><p>Rats excel at navigating through complex environments. In order to find their way, they need to answer two basic questions. Where am I? In which direction am I heading? As the brain has no direct access to information about its position in space, it has to rely on sensory signals—from eyes and ears for example—to answer these questions. Information about its position and orientation is typically present in the information it gathers from its senses, but unfortunately it is encoded in a way that is not obvious to decode. Three major types of cells in the brain whose firing directly reflects spatial information are place, head-direction, and view cells. Place cells, for example, fire when the animal is at a particular location independent of the direction the animal is looking in. In this study, we present a self-organizational model that develops these three representation types by learning on naturalistic videos mimicking the visual input of a rat. Although the model works on complex visual stimuli, a rigorous mathematical description of the system is given as well.</p></sec></abstract><funding-group><funding-statement>Funding from the Volkswagen Foundation.</funding-statement></funding-group><counts><page-count count="18"/></counts><!--===== Restructure custom-meta-wrap to custom-meta-group =====--><custom-meta-group><custom-meta><meta-name>citation</meta-name><meta-value>Franzius M, Sprekeler H, Wiskott L (2007) Slowness and sparseness lead to place, head-direction, and spatial-view cells. PLoS Comput Biol 3(8): e166. doi:<ext-link ext-link-type="doi" xlink:href="http://dx.doi.org/10.1371/journal.pcbi.0030166" xlink:type="simple">10.1371/journal.pcbi.0030166</ext-link></meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1"><title>Introduction</title><p>The brain needs to extract behaviorally relevant information from sensory inputs in order to successfully interact with the environment. Position and head direction of an animal in the space surrounding it is part of this relevant information. Neural representations of a rodent's spatial position—termed <italic>place cells</italic>—were found more than 35 years ago in hippocampal areas CA1 and CA3 [<xref ref-type="bibr" rid="pcbi-0030166-b002">2</xref>], correlates of head orientation—termed <italic>head-direction cells</italic>—were found twenty years later [<xref ref-type="bibr" rid="pcbi-0030166-b003">3</xref>], and recently nonlocalized representations—termed <italic>grid cells—</italic>were found in entorhinal cortex (EC) of rats [<xref ref-type="bibr" rid="pcbi-0030166-b004">4</xref>]. Primates possibly also have place cells, certainly head-direction cells, and also <italic>spatial-view cells</italic> that do not encode the animal's own (idiothetic) position but fire whenever the animal views a certain part of the environment [<xref ref-type="bibr" rid="pcbi-0030166-b005">5</xref>–<xref ref-type="bibr" rid="pcbi-0030166-b008">8</xref>]. Grid cells in primates have not yet been reported.</p><p>All of these cells selectively encode some aspects of position and/or orientation of the animal, while being invariant to others. Head-direction cells are strongly selective for the direction of the animal's head and largely invariant to its position [<xref ref-type="bibr" rid="pcbi-0030166-b009">9</xref>]. They typically have a single peak of activity with a Gaussian or triangular shape and a tuning width of roughly 60° to 150° [<xref ref-type="bibr" rid="pcbi-0030166-b010">10</xref>], depending on brain area. In contrast, most place cells recorded in open fields are invariant to head direction while being selective for the animal's position. Interestingly, the degree of orientation–invariance depends on the behavioral task of the animal and possibly on the structure of the environment. In linear track environments and for repeated linear paths in open environment most place cells are orientation-specific [<xref ref-type="bibr" rid="pcbi-0030166-b011">11</xref>]. Grid cells in EC also exhibit conjunctive representations of position and orientation [<xref ref-type="bibr" rid="pcbi-0030166-b012">12</xref>]. Spatial-view cells in primates show very different firing properties. These cells are neither position invariant nor orientation invariant but fire when a certain part of the environment is in the animal's field of view (FOV), resembling head-direction cells for the case of an infinitely distant view. <xref ref-type="fig" rid="pcbi-0030166-g001">Figure 1</xref> illustrates the difference between grid cells, place cells, head-direction cells, and spatial-view cells.</p><fig id="pcbi-0030166-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030166.g001</object-id><label>Figure 1</label><caption><title>Spatial and Orientation Tuning of an Idealized Grid Cell, Place Cell, Head-Direction Cell, and a Spatial-View Cell</title><p>Oriospatial activity is indicated by arrows. Length of arrows indicates strength of activity at the arrow base if the animal looks in the direction of the arrow. The activity of a grid cell is mostly orientation invariant and not spatially localized but repeats in a hexagonal grid, whereas a place cell is also orientation invariant but spatially localized. The activity of a head-direction cell shows a global direction preference but is spatially invariant, and the spatial-view cell is maximally active when a specific view is fixated (indicated by ×) with an amplitude that is independent of spatial position.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030166.g001" xlink:type="simple"/></fig><p>Throughout this paper, <italic>oriospatial cells</italic> will be used as a superordinate term for place cells, grid cells, head-direction cells, and spatial-view cells. While the precise role of these oriospatial cells is still discussed, they probably form the neural basis for the ability of an animal to self-localize and navigate [<xref ref-type="bibr" rid="pcbi-0030166-b013">13</xref>].</p><p>Stimuli available to oriospatial cells can be classified as either <italic>idiothetic,</italic> including motor feedback, proprioception, and vestibular input, or as <italic>allothetic,</italic> which includes all information from sensors about the external environment, e.g., vision or olfaction. While place cells are influenced by several modalities, they seem to be driven primarily by visual input (e.g., [<xref ref-type="bibr" rid="pcbi-0030166-b014">14</xref>]), but since their firing properties remain stable in the absence of external sensory cues for several minutes, idiothetic stimuli must play a major role for place-cell firing as well [<xref ref-type="bibr" rid="pcbi-0030166-b015">15</xref>]. Using idiothetic information for navigation, which is referred to as <italic>path integration</italic> (or dead reckoning), inherently accumulates errors over longer timescales, which can only be corrected by allothetic information. For the head-direction cells it is commonly assumed that idiothetic input from the vestibular system is dominant (e.g., [<xref ref-type="bibr" rid="pcbi-0030166-b009">9</xref>]), but like place cells they need external sensory stimuli to correct for drift.</p><p>We introduce here a model for the self-organized formation of hippocampal place cells, head-direction cells, and spatial-view cells based on unsupervised learning on quasi-natural visual stimuli. Our model has no form of memory and receives raw high-dimensional visual input. The former means that our model cannot perform path integration, the latter means that positional information has to be extracted from complex images. While such a model can certainly not be a complete model of oriospatial cells, it can show how far a memoryless purely sensory-driven system can model oriospatial cells. The learning rule of the model is based on the concept of slowness or temporal stability, which is motivated by the observation that raw sensory signals (like individual pixel values of a camera) typically vary much more quickly than some behaviorally relevant features of the animal or its environment, such as the animal's position in space. By extracting slowly varying features from the sensory input, one can hope to obtain a useful representation of the environment. This <italic>slowness principle</italic> forms the basis for a variety of learning rules (e.g., [<xref ref-type="bibr" rid="pcbi-0030166-b016">16</xref>–<xref ref-type="bibr" rid="pcbi-0030166-b018">18</xref>]). The implementation used here is <italic>Slow Feature Analysis</italic> (SFA) as introduced by Wiskott [<xref ref-type="bibr" rid="pcbi-0030166-b019">19</xref>,<xref ref-type="bibr" rid="pcbi-0030166-b020">20</xref>]. For a given set of time-dependent training data, in our case video sequences, we are looking for a nonlinear scalar function from a given function space that generates the slowest possible output signal <italic>y</italic>(<italic>t</italic>) when applied to the training data. The slowness of the signal is measured in terms of its Δ-value, which is given by the mean square of the signal's temporal derivative (see the section Slow Feature Analysis). As small Δ-values correspond to slowly varying signals, the objective is to find the function that minimizes the Δ-value. To avoid the trivial constant solution, the signal is required to have unit variance and zero mean. Furthermore, we can find a second function that optimizes the objective under the additional constraint that its output signal is uncorrelated to the first, a third function, whose output is uncorrelated to the first two signals, and so on. In this manner we generate a sequence of functions with increasing Δ-value that extracts slowly varying features from the training data. More details on the approach as well as its mathematical formalization can be found in the section Slow Feature Analysis. It is important, however, to stress that SFA is not related to low-pass filtering, as the apparent paradox of slowly varying but instantaneously extracted output signals is a frequent source of misunderstandings. Low-pass filtering is a trivial way to generate slowly varying, but most often completely uninformative, outputs. Such signals cannot be instantaneous, as by definition they are generated by averaging over the past. In contrast, the representations our model finds depend on the temporal structure of sensory data <italic>during the training phase</italic> of the model, but once they are established they are instantaneous, i.e., a single “snapshot”of sensory stimuli is sufficient to generate the model output (e.g., a model place cell response).</p><p>SFA has been successfully applied as a model for the self-organized formation of complex cell receptive fields in primary visual cortex [<xref ref-type="bibr" rid="pcbi-0030166-b001">1</xref>]. Here, we embed this approach in a biologically inspired hierarchical network of visual processing of a simulated rat where each layer learns the slowest features from the previous layer by SFA (see the section Experimental Methods). We find that the output of the highest layer performing SFA forms a distributed oriospatial representation. In a subsequent linear step, the model applies a mechanism for sparse coding resulting in localized oriospatial codes. The same model in the same environment can reproduce the firing characteristics of place cells, head-direction cells, and spatial-view cells, depending solely on the movement statistics of the simulated rat. For roughly uncorrelated head direction and body movement, the system learns head-direction cells or place cells depending on the relative speed of head rotation and body movement. If the movement statistics is altered such that spots in the room are fixated for a while during simulated locomotion, the model learns spatial-view cell characteristics.</p><p>Any computation in the brain is useless unless it leads to a change of behavior of the animal. We assume a phenomenological approach and model rat and primate oriospatial cells without asking the question what behavioral purpose these oriospatial cells serve. The last linear step of sparsification might seem irrelevant in this context; however, sparse codes have a number of advantages for subsequent processing steps that include easier decoding, energy efficiency, and, notably in the context of hippocampus, increased efficiency of memory storage in recurrent networks such as CA3 [<xref ref-type="bibr" rid="pcbi-0030166-b021">21</xref>].</p><p>We introduce a mathematical framework in the section Theoretical Methods that analytically explains the results of the SFA output. The mathematically less inclined reader may consider skipping this section. Both analytical and computer simulation results are presented in the <xref ref-type="sec" rid="s3">Results</xref> section.</p><p>We conclude that a purely sensory-driven model can capture the key properties of several major cell types associated with spatial coding, namely place cells, head-direction cells, spatial-view cells, and to some extent grid cells.</p></sec><sec id="s2" sec-type="methods"><title>Methods</title><sec id="s2a"><title>Slow Feature Analysis</title><p>SFA solves the following learning task: given a multidimensional input signal we want to find instantaneous scalar input–output functions that generate output signals that vary as slowly as possible but still carry significant information. To ensure the latter, we require the output signals to be uncorrelated and to have unit variance. In mathematical terms, this can be stated as follows.</p><p><bold><italic>Optimization problem.</italic></bold> <italic>Given a function space ℱ and an I</italic>-<italic>dimensional input signal</italic> <bold>x</bold>(<italic>t</italic>)<italic>, find a set of</italic> <italic>J</italic> <italic>real-valued input–output functions g<sub>j</sub></italic>(<bold>x</bold>) ∈ ℱ <italic>such that the output signals y<sub>j</sub></italic>(<italic>t</italic>) := <italic>g<sub>j</sub></italic>(<bold>x</bold>(<italic>t</italic>))
					<disp-formula id="pcbi-0030166-e001"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>minimize</mml:mtext><mml:mspace width="6pt"/><mml:mi>&Delta;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msubsup><mml:mover accent='true'><mml:mi>y</mml:mi><mml:mo>&dot;</mml:mo></mml:mover><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:math> --></disp-formula><italic>under the constraints</italic>
					<disp-formula id="pcbi-0030166-e002"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e002" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="6pt"/><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>zero mean</mml:mtext></mml:mrow><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math> --></disp-formula>
					<disp-formula id="pcbi-0030166-e003"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e003" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mspace width="6pt"/><mml:mo>(</mml:mo><mml:mrow><mml:mtext>unit variance</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>
					<disp-formula id="pcbi-0030166-e004"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e004" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&forall;</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mspace width="2pt"/><mml:mn>j</mml:mn><mml:mspace width="-2pt"/><mml:mo>:</mml:mo><mml:mspace width="-2pt"/><mml:msub><mml:mrow><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="6pt"/><mml:mo stretchy='false'>(</mml:mo><mml:mtext>decorrelation and order</mml:mtext><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><italic>with</italic> 〈·〉<italic><sub>t</sub> and</italic> <inline-formula id="pcbi-0030166-ex001"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex001" xlink:type="simple"/></inline-formula>
					 <italic>indicating temporal averaging and the derivative of y, respectively.</italic>
				</p><p><xref ref-type="disp-formula" rid="pcbi-0030166-e001">Equation 1</xref> introduces the Δ-value, which is a measure of the temporal slowness of the signal <italic>y</italic><sub><italic>j</italic></sub>(<italic>t</italic>). It is given by the mean square of the signal's temporal derivative, so small Δ-values indicate slowly varying signals. The constraints (2) and (3) avoid the trivial constant solution and constraint (4) ensures that different functions <italic>g<sub>j</sub></italic> code for different aspects of the input.</p><p>It is important to note that although the objective is slowness, the functions <italic>g<sub>j</sub></italic> are instantaneous functions of the input, so that slowness cannot be enforced by low-pass filtering. Slow output signals can only be obtained if the input signal contains slowly varying features that can be extracted instantaneously by the functions <italic>g<sub>j</sub></italic>.</p><p>In the computationally relevant case where ℱ is finite-dimensional, the solution to the optimization problem can be found by means of SFA [<xref ref-type="bibr" rid="pcbi-0030166-b001">1</xref>,<xref ref-type="bibr" rid="pcbi-0030166-b020">20</xref>]. This algorithm, which is based on an eigenvector approach, is guaranteed to find the global optimum. Biologically more plausible learning rules for the optimization problem, both for graded response and spiking units, exist [<xref ref-type="bibr" rid="pcbi-0030166-b022">22</xref>,<xref ref-type="bibr" rid="pcbi-0030166-b023">23</xref>].</p><p>If the function space is infinite-dimensional, the problem requires variational calculus and will in general be difficult to solve. In the section The modified optimization problem, we demonstrate that the optimization problem for the high-dimensional visual input, as faced by the hierarchical model, can be reformulated for the low-dimensional configural input of position and orientation. In this case, the variational calculus approach becomes tractable and allows us to make analytical predictions for the behavior of the full model.</p></sec><sec id="s2b"><title>Experimental Methods</title><p>The outcome of an unsupervised learning rule, such as SFA, is crucially determined by the statistics of the training data. As we want to show that oriospatial cells can be learned from raw sensory stimuli, we approximate the retinal stimuli of a rat by video sequences generated in a virtual-reality environment. The input statistics of the training data are thus jointly determined by the structure of the virtual-reality environment and the movement pattern of the simulated rat. As this video data is very high-dimensional, nonlinear SFA in a single step is computationally unfeasible. To overcome this problem, the model is organized as a hierarchy of SFA nodes in analogy to the hierarchy of the brain's visual system (see <xref ref-type="fig" rid="pcbi-0030166-g002">Figure 2</xref>C).</p><fig id="pcbi-0030166-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030166.g002</object-id><label>Figure 2</label><caption><title>Model Architecture</title><p>At a given position and orientation of the virtual rat (arrow) in the naturally textured virtual-reality environment (A), input views are generated (B), and processed in a hierarchical network (C). The lower three layers perform the same sequence (D) of linear SFA (for dimensionality reduction), expansion, additive noise, linear SFA (for feature extraction), and clipping; the last layer performs sparse coding (either ICA or CL).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030166.g002" xlink:type="simple"/></fig><sec id="s2b1"><title>Simulated environments.</title><p>Many experimental place field data were recorded either in a linear track or in an open field apparatus. For our simulations, we use a linear track of 10:1 side length and a rectangular open field of 3:2 side length. We have also simulated radial mazes (e.g., plus or eight-arm mazes) as a third apparatus type, but they can be considered as a combination of an open field in the center with linear tracks extending from it, and simulation results for this type will not be presented here.</p><p>The input data consists of pixel images generated by a virtual-reality system based on OpenGL with textures from the Vision Texture Database [<xref ref-type="bibr" rid="pcbi-0030166-b024">24</xref>]. The virtual rat's horizontal FOV is 320° and is consistent with that of a real rat [<xref ref-type="bibr" rid="pcbi-0030166-b025">25</xref>] (see <xref ref-type="fig" rid="pcbi-0030166-g002">Figure 2</xref>A for a top view of the environment, and <xref ref-type="fig" rid="pcbi-0030166-g002">Figure 2</xref>B for a typical rat's view from this environment). The vertical FOV is reduced to 40° because outside this range usually only unstructured floor and ceiling are visible. An input picture has 40 by 320 color pixels (RGB, 1 pixel/°). The input dimensionality for the system is thus 38,400, while the dimensionality of the interesting oriospatial parameter space is only three-dimensional (<italic>x</italic>- and <italic>y</italic>-position and orientation).</p></sec><sec id="s2b2"><title>Movement patterns of the virtual rat.</title><p>As an approximation of a rat's trajectory during exploration in place-field experiments, we use Brownian motion on the three-dimensional parameter space of position and orientation (i.e., head direction). The virtual rat's position <monospace>pos(t)</monospace> at each time step <monospace>t</monospace> is updated by a weighted sum of the current velocity and Gaussian white noise <monospace>noise</monospace> with standard deviation <monospace>vr</monospace>. The momentum term <monospace>m</monospace> can assume values between zero (massless particle) and one (infinitely heavy particle), so that higher values of <monospace>m</monospace> lead to smoother trajectories and a more homogeneous sampling of the apparatus in limited time. When the virtual rat would traverse the apparatus boundaries, the current velocity is halved and an alternative random velocity update is generated, until a new valid position is reached:</p><p>
            <monospace>currentVelocity = pos(t) − pos(t−1);</monospace>
          </p><p>
            <monospace>repeat</monospace>
          </p><p>
            <monospace>  noise = GaussianWhiteNoise2d() * vr;</monospace>
          </p><p>
            <monospace>  pos(t+1) = pos(t) + m * currentVelocity + (1−m) * noise;</monospace>
          </p><p>
            <monospace>  if not isInsideApparatus(pos(t+1)):</monospace>
          </p><p>
            <monospace>   currentVelocity = currentVelocity / 2;</monospace>
          </p><p>
            <monospace>until isInsideApparatus(pos(t+1))</monospace>
          </p><p>We call the standard deviation (normalized by room size <italic>L</italic>) of the noise term <italic>translational speed v</italic><bold><sub>r</sub></bold>. In the <italic>simple movement</italic> paradigm, the head direction is calculated analogously (but without checks for traversal of boundaries), and we call the standard deviation of the noise term (in units of 2π) for the head direction trajectory <italic>rotational speed</italic> <italic>v</italic><sub>ϕ</sub>. On long timescales and with finite room size, this type of movement approximates homogeneous position and orientation probability densities, except at the apparatus boundaries where a high momentum term can increase the position probability. We call the ratio of rotational to translational speed <italic>v<sub>ϕ</sub></italic>/<italic>v</italic><bold><sub>r</sub></bold> the <italic>relative rotational speed v<sub>rel</sub></italic>. The actual choice of <italic>v<sub>rel</sub></italic> is based on the rat's behavior in different environments and behavioral tasks. In linear track experiments, the rat's movement is essentially one-dimensional and the animal rarely turns on mid-track but instead mostly at the track ends. Accordingly, we use a large momentum term, so that the virtual rat often translates smoothly between track ends and rarely turns on mid-track. In the open field, on the other hand, full two-dimensional movement and rotation is possible, but the actual statistics depend on the behavioral task at hand. We mimic the common pellet-chasing experiment [<xref ref-type="bibr" rid="pcbi-0030166-b011">11</xref>] by using isotropic two-dimensional translational speed and setting <italic>v<sub>rel</sub></italic> to a relatively high value.</p><p>In the <italic>simple movement</italic> paradigm, head direction and body movement are completely independent, so that head direction can be modeled with unrestricted Brownian motion. We also consider a <italic>restricted head movement</italic> paradigm, in which the head direction is enforced to be within ±90° of the direction of body movement:</p><p>
            <monospace>currentAngularVelocity = phi(t) - phi(t-1);</monospace>
          </p><p>
            <monospace>repeat</monospace>
          </p><p>
            <monospace>  noise = GaussianWhiteNoise1d() * vphi;</monospace>
          </p><p>
            <monospace>  phi(t+1) = phi(t) + m * currentAngularVelocity +      (1-m) * noise;</monospace>
          </p><p>
            <monospace>until headDirIsWithin+/-90DegOfMovementDir     (pos(t+1)- pos(t), phi(t+1))</monospace>
          </p><p>This constraint implicitly restricts the range of possible relative speeds. While it is still possible to have arbitrarily high relative rotational speed by turning often or quickly, very low relative rotational speed cannot be achieved anymore in finite rooms. Typically, if the rat reaches a wall, it has to turn, resulting in a lower bound for the relative rotational speed <italic>v</italic><sub><italic>rel</italic></sub>. To generate input sequences with lower <italic>v</italic><sub><italic>rel</italic></sub>, one needs to discard periods with dominant rotations from the input sequence. For a biological implementation of such a mechanism, the rat's limbic system could access the vestibular rotational acceleration signal in order to downregulate the learning rate during quick turns. We will refer to this mechanism as <italic>learning rate adaptation</italic> (LRA).</p><p>A third movement statistics can be generated if we assume that an animal looks at objects or locations in the room for some time while moving around. During this period the animal fixates a specific location <italic>X</italic> in the room, i.e., it always turns its head into the direction of <italic>X</italic>, independently of its position. We implement <italic>X</italic> as a fixation point on the wall that moves in the following way: first, we generate an orientation <italic>ϕ</italic> using the algorithm and the same parameters as for the head-direction cell simulations. Second, the point <italic>X</italic> is defined as the point on the wall the rat would fixate if it were in the center of the room with head direction <italic>ϕ</italic>. We employ the identical translational movement mechanism as above, whereas the head direction is now completely determined by the animal position and the position of the viewpoint <italic>X</italic>. In this paradigm, both position and orientation are dependent and vary rather quickly, while the position of <italic>X</italic> changes slowly. We call this movement pattern <italic>spatial view</italic> paradigm and suggest that it is a more appropriate description of a primate's movement pattern than the previous two.</p></sec><sec id="s2b3"><title>Model architecture and training.</title><p>Our computational model consists of a converging hierarchy of layers of SFA nodes and a single final sparse coding step (see <xref ref-type="fig" rid="pcbi-0030166-g002">Figure 2</xref>C). Each SFA node finds the slowest output features from its input according to the SFA algorithm given in the section Slow Feature Analysis and performs the following sequence of operations: linear SFA for dimensionality reduction, quadratic expansion with subsequent additive Gaussian white noise (with a variance of 0.05), another linear SFA step for slow-feature extraction, and clipping of extreme values at ±4 (see <xref ref-type="fig" rid="pcbi-0030166-g002">Figure 2</xref>D). Effectively, a node implements a subset of full quadratic SFA. The clipping removes extreme values that can occur on test data very different from training data.</p><p>In the following, the part of the input image that influences a node's output will be denoted as its <italic>receptive field</italic>. On the lowest layer, the receptive field of each node consists of an image patch of 10 by 10 pixels with three color dimensions each. The nodes form a regular (i.e., non-foveated) 7 by 63 grid with partially overlapping receptive fields that jointly cover the input image of 40 by 320 pixels. The second layer contains 2 by 15 nodes, each receiving input from 3 by 8 layer 1 nodes with neighboring receptive fields, resembling a retinotopical layout. All layer 2 output converges onto a single node in layer 3, whose output we call <italic>SFA-output</italic>. Thus, the hierarchical organization of the model captures two important aspects of cortical visual processing: increasing receptive field sizes and accumulating computational power at higher layers.</p><p>The network's SFA-output is subsequently fed into a final computational node that performs linear sparse coding, either by applying Independent Component Analysis (ICA) (we use CuBICA which is based on the diagonalization of third and fourth order cumulants [<xref ref-type="bibr" rid="pcbi-0030166-b026">26</xref>]) or by performing competitive learning (CL). The top-layer output will be called <italic>ICA-output</italic> or <italic>CL-output</italic>, respectively. ICA applied to nonlocalized grid-cell inputs finds sparser codes than CL, but the latter seems biologically more realistic. More details on different approaches for sparse coding of grid-cell input can be found in [<xref ref-type="bibr" rid="pcbi-0030166-b027">27</xref>].</p><p>The layers are trained sequentially from bottom to top on different trajectories through one of the simulated environments. For computational efficiency, we train only one node with stimuli from all node locations in its layer and replicate this node throughout the layer. This mechanism effectively implements a weight-sharing constraint. However, the system performance does not critically depend on this mechanism. To the contrary, individually learned nodes <italic>improve</italic> the overall performance.</p><p>In analogy to a rat's brain, the lower two layers are trained only once and are kept fixed for all simulations presented here (like the visual system, which remains rather stable for adult animals). Only the top SFA and ICA layer are retrained for different movement statistics and environments. For our simulations, we use 100,000 time points for the training of each layer. Since training time of the entire model on a single PC is on the order of multiple days, the implementation is parallelized and training times thus reduced to hours. The simulated rat's views are generated from its configuration (position and orientation) with floating point precision and are not artificially discretized to a smaller configuration set.</p><p>The network is implemented in Python using the MDP toolbox [<xref ref-type="bibr" rid="pcbi-0030166-b028">28</xref>], and the code is available upon request.</p></sec><sec id="s2b4"><title>Analysis methods.</title><p>The highly nonlinear functions learned by the hierarchical model can be characterized by their outputs on the three-dimensional configuration space of position and head direction. We will call two-dimensional sections of the output with constant (or averaged) head direction <italic>spatial firing maps</italic> and one-dimensional sections of the output with constant (or averaged) position <italic>orientation tuning curves</italic>. For the sparse coding results with ICA, the otherwise arbitrary signs are chosen such that the largest absolute response is positive.</p><p>The sensitivity of a function <italic>f</italic> to spatial position <bold>r</bold> will be characterized by its mean positional variance <italic>η</italic><bold><sub>r</sub></bold>, which is the variance of <italic>f</italic>(<bold>r</bold>,<italic>ϕ</italic>) with respect to <bold>r</bold> averaged over all head directions <italic>ϕ</italic>: <italic>η</italic><bold><sub>r</sub></bold>(<italic>f</italic>) = 〈var<bold><sub>r</sub></bold> (<italic>f</italic>(<bold>r</bold>,<italic>ϕ</italic>))〉<italic><sub>ϕ</sub></italic>. Correspondingly, the sensitivity of a function <italic>f</italic> to head direction <italic>ϕ</italic> will be characterized by its directional variance <italic>η<sub>ϕ</sub></italic> averaged over all spatial positions <bold>r</bold>: <italic>η<sub>ϕ</sub></italic>(<italic>f</italic>) = 〈var<italic><sub>ϕ</sub></italic> (<italic>f</italic>(<bold>r</bold>,<italic>ϕ</italic>))〉<bold><sub>r</sub></bold>. A perfect head-direction cell has no spatial structure and thus a vanishing <italic>η</italic><bold><sub>r</sub></bold> and positive <italic>η<sub>ϕ</sub></italic>, while a perfect place cell has positive <italic>η</italic><bold><sub>r</sub></bold> due to its spatial structure but no orientation dependence and thus a vanishing <italic>η<sub>ϕ</sub></italic>.</p></sec></sec><sec id="s2c"><title>Theoretical Methods</title><p>Considering the complexity of the computational model presented in the last section, one might expect that it would be impossible to make any analytical statement about the model's behavior. However, in this section we introduce a mathematical framework that actually allows us to make detailed predictions depending on the movement statistics of the simulated rat. The theoretically less inclined reader should feel free to skip all sections marked by a * without loss of the general understanding of our model and the results.</p><sec id="s2c1"><title>The modified optimization problem*.</title><p>Consider a rat in an environment that is kept unchanged for the duration of the experiment. The visual input the rat perceives during the experiment is the input signal for the learning task stated above. This section addresses the following question: can we predict the functions learnt in such an experiment, and, in particular, will they encode the rat's position in a structured way?</p><p>As the rat's environment remains unchanged for the duration of the experiment, the visual input cannot cover the full range of natural images but only the relatively small subset that can be realized in our setup. Given the environment, the rat's visual input can at all times be uniquely characterized by the rat's position and its head direction. We combine these parameters in a single <italic>configuration vector</italic> <bold>s</bold> and denote the image the rat perceives when it is in a particular configuration <bold>s</bold> as <bold>x</bold>(<bold>s</bold>). We refer to the manifold of possible configurations as <italic>configuration space V</italic>. Note that <italic>V</italic> in general does not have the structure of a vector space.</p><p>In a sufficiently complex environment, we can not only infer the image from the configuration but also the configuration from the image, so that there is a one-to-one correspondence between the configurations and the images. If we are not interested in how the functions the system learns respond to images other than those possible in the experiment, we can think of them as functions of the configuration <bold>s</bold>, since for any function <inline-formula id="pcbi-0030166-ex002"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex002" xlink:type="simple"/></inline-formula>
						(<bold>x</bold>) of the images, we can immediately define an equivalent function <italic>g</italic>(<bold>s</bold>) of the configuration:
						<disp-formula id="pcbi-0030166-e005"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e005" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:mover accent='true'><mml:mi>g</mml:mi><mml:mo>&tilde;</mml:mo></mml:mover><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>x</mml:mi></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>
					</p><p>This leads to a simplified version of our problem. Instead of using the images <bold>x</bold>(<italic>t</italic>), we use the configuration <bold>s</bold>(<italic>t</italic>) as an input signal for our learning task.</p><p>It is intuitively clear that functions that vary slowly with respect to the configuration <bold>s</bold> will create slowly varying output when applied to <bold>s</bold>(<italic>t</italic>) as an input signal, because <bold>s</bold>(<italic>t</italic>) is continuous in time. Mathematically, this is reflected by the chain rule:
						<disp-formula id="pcbi-0030166-e006"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e006" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mover accent='true'><mml:mi>y</mml:mi><mml:mo>&dot;</mml:mo></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mi>t</mml:mi></mml:mrow></mml:mfrac><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&sum;</mml:mo><mml:mi>&mu;</mml:mi></mml:munder><mml:mfrac><mml:mo>&part;</mml:mo><mml:mrow><mml:mo>&part;</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>&mu;</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>)</mml:mo><mml:mfrac><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mi>t</mml:mi></mml:mrow></mml:mfrac><mml:msub><mml:mi>s</mml:mi><mml:mi>&mu;</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>&nabla;</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&middot;</mml:mo><mml:mover accent='true'><mml:mi mathvariant='bold'>s</mml:mi><mml:mo>&dot;</mml:mo></mml:mover><mml:mo>&equals;</mml:mo><mml:mi>&nabla;</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&middot;</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle></mml:mrow></mml:math> --></disp-formula>where ∇<italic>g<sub>j</sub></italic> is the gradient of <italic>g<sub>j</sub></italic> and <inline-formula id="pcbi-0030166-ex003"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex003" xlink:type="simple"/></inline-formula>
						 is the velocity in configuration space (note the difference in notation to ∇· <bold>A</bold>(<bold>s</bold>), which denotes the divergence of a vector-valued function <bold>A</bold>).
					</p><p>In order to generate slowly varying output, <italic>g<sub>j</sub></italic> should vary slowly with <bold>s</bold> in configuration regions with large velocities <bold>v</bold> and reserve stronger gradients for regions with small velocities. Thus, the optimal functions depend on the velocity statistics of the input signal. As their dependence on the detailed time-course of the input signal <bold>s</bold>(<italic>t</italic>) is inconvenient to handle mathematically, we assume that the duration of the experiment is long enough to do statistics on the behavior of the rat. Its motion can then be described by means of a joint probability density function <italic>p</italic><sub><bold>s,v</bold></sub>(<bold>s</bold>,<bold>v</bold>), which quantifies how often the rat is found in a particular configuration <bold>s</bold> and moves with velocity <bold>v</bold>. If the movement of the rat is ergodic, we may equivalently replace the temporal averages in the original formulation of the learning task by weighted averages over all configurations and velocities:
						<disp-formula id="pcbi-0030166-e007"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e007" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:mo>&rarr;</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:mo>&int;</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mspace width="2.5pt"/><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mspace width="2.5pt"/><mml:mo>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo>)</mml:mo><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mspace width="2.5pt"/><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo>.</mml:mo></mml:math> --></disp-formula>
					</p><p>If we take the average of a function that does not explicitly depend on the velocity <bold>v</bold> (i.e., <italic>F</italic>(<bold>s</bold>,<bold>v</bold>) = <italic>F</italic>(<bold>s</bold>)), we can simplify the average 〈<italic>F</italic>(<bold>s</bold>)〉<bold><sub>s</sub></bold><sub>,<bold>v</bold></sub> by integrating over the velocity:
						<disp-formula id="pcbi-0030166-e008"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e008" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mspace width="2.5pt"/><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mspace width="2.5pt"/><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mspace width="2.5pt"/><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:munder><mml:munder><mml:mrow><mml:mrow><mml:mo>&lsqb;</mml:mo><mml:mrow><mml:mstyle displaystyle='true'><mml:mrow><mml:mrow><mml:mo stretchy='true'>&int;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi mathvariant="bold">s</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">v</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo>)</mml:mo><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle></mml:mrow><mml:mo>&rsqb;</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy='true'></mml:mo></mml:munder><mml:mrow><mml:mo>&equals;</mml:mo><mml:mo>:</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi mathvariant='bold'>s</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant='bold'>s</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>&equals;</mml:mo><mml:mo>:</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>Here <italic>p</italic><bold><sub>s</sub></bold> is the marginal probability of finding the rat in configuration <bold>s</bold>, irrespective of its velocity.
					</p><p>Making use of <xref ref-type="disp-formula" rid="pcbi-0030166-e005">Equations 5</xref>–<xref ref-type="disp-formula" rid="pcbi-0030166-e008">8</xref>, we can now state an equivalent alternative formulation of the learning task.</p><p><bold><italic>Optimization problem 2.</italic></bold> <italic>Given a function space</italic> ℱ <italic>on a configuration space V, which is sampled with probability density p</italic><bold><sub>s</sub></bold><sub>,<bold>v</bold></sub>(<bold>s</bold>,<bold>v</bold>), <italic>find a set of J functions g<sub>j</sub></italic>(<bold>s</bold>) ∈ ℱ <italic>that</italic>
						<disp-formula id="pcbi-0030166-e009"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e009" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mtext>minimize</mml:mtext><mml:mspace width="2pt"/><mml:mi>&Delta;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mo>g</mml:mo><mml:mo>j</mml:mo></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>&nabla;</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&middot;</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle></mml:mrow></mml:msub></mml:mrow></mml:math> --></disp-formula><italic>under the constraints</italic>
						<disp-formula id="pcbi-0030166-e010"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e010" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mspace width="6pt"/><mml:mo>(</mml:mo><mml:mrow><mml:mtext>zero mean</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e011"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e011" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mspace width="6pt"/><mml:mo>(</mml:mo><mml:mrow><mml:mtext>unit variance</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e012"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e012" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&forall;</mml:mo><mml:mo>i</mml:mo><mml:mo>&lt;</mml:mo><mml:mtext>j</mml:mtext><mml:mspace width="-2pt"/><mml:mo>:</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mspace width="6pt"/><mml:mo>(</mml:mo><mml:mrow><mml:mtext>decorrelation and order</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>
					</p><p>If we do not impose any restriction on the function space ℱ (apart from sufficient differentiability and integrability), this modified optimization problem can be solved analytically for a number of cases. Following a previous analytical treatment [<xref ref-type="bibr" rid="pcbi-0030166-b029">29</xref>], we refer to the optimal functions in the unrestricted function space as Δ-<italic>optimal functions</italic>; they are shown in the <xref ref-type="sec" rid="s3">Results</xref> section together with the numerical simulations.</p></sec><sec id="s2c2"><title>A differential equation for the optimal functions*.</title><p>In this section we apply variational calculus to optimization problem 2 and derive a partial differential equation for the optimal functions <italic>g<sub>j</sub></italic>. We prove that the optimization problem can be simplified to an eigenvalue problem of a partial differential operator 𝒟 whose eigenfunctions and eigenvalues form the Δ-optimal functions and their Δ-values, respectively. For the sake of brevity, we shift the proofs to <xref ref-type="supplementary-material" rid="pcbi-0030166-sd001">Protocol S1</xref>, so that the reader can focus on the main theorems.</p><p>Using Lagrange multipliers we get an objective function for the functions <italic>g<sub>j</sub></italic> that incorporates the constraints:
						<disp-formula id="pcbi-0030166-e013"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e013" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&Psi;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>&Delta;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>)</mml:mo><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle></mml:msub><mml:mo>&minus;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle></mml:msub><mml:mo>&minus;</mml:mo><mml:mstyle displaystyle='true'><mml:mspace width="-2.5pt"/><mml:munder><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi mathvariant='bold'>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mi mathvariant='bold'>s</mml:mi></mml:msub></mml:mrow></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>Here, factors 1/2 have been introduced for mathematical convenience and have no influence on the results.
					</p><p>In the following, we will not need the full dependence of the probability density <italic>p</italic><bold><sub>s</sub></bold><sub>,<bold>v</bold></sub> on the velocity, but only the following function:
						<disp-formula id="pcbi-0030166-e014"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e014" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>K</mml:mi></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi mathvariant='bold'>v</mml:mi><mml:msup><mml:mi mathvariant='bold'>v</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi mathvariant="bold">s</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">v</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mspace width="2pt"/><mml:mi>d</mml:mi><mml:mi mathvariant='bold'>v</mml:mi><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:mrow><mml:mo>&int;</mml:mo><mml:mrow><mml:mi mathvariant='bold'>v</mml:mi><mml:msup><mml:mi mathvariant='bold'>v</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:msub><mml:mi mathvariant="italic">p</mml:mi><mml:mrow><mml:mi mathvariant='bold'>v</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant='bold'>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi mathvariant='bold'>v</mml:mi><mml:mo>|</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mspace width="2pt"/><mml:mi>d</mml:mi><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mo>&equals;</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:msup><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>v</mml:mi></mml:mstyle><mml:mi>T</mml:mi></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi mathvariant='bold'>v</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant='bold'>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><bold>K</bold> is the matrix containing the second-order moments of the conditional velocity distribution <italic>P</italic>(<bold>v</bold>|<bold>s</bold>) = <italic>P</italic>(<bold>s</bold>,<bold>v</bold>)/<italic>P</italic>(<bold>s</bold>). It contains information on how fast and in which direction the rat typically moves given it is in configuration <bold>s</bold>.
					</p><p>Applying variational calculus to the objective function of <xref ref-type="disp-formula" rid="pcbi-0030166-e013">Equation 13</xref>, we can derive a necessary condition for the solutions of optimization problem 2.</p><p><bold><italic>Theorem 1.</italic></bold> <italic>For a particular choice of the parameters λ<sub>ij</sub>, the solutions g<sub>j</sub> of optimization problem 2 obey the Euler-Lagrange equation</italic>
						<disp-formula id="pcbi-0030166-e015"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e015" xlink:type="simple"/><!-- <mml:math display='block'><mml:mi>&#x1D49F;</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>&minus;</mml:mo><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mo>&minus;</mml:mo><mml:mstyle displaystyle='true'><mml:munder><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>&lambda;</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:mrow></mml:math> --></disp-formula><italic>with the boundary condition</italic>
						<disp-formula id="pcbi-0030166-e016"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e016" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>n</mml:mi></mml:mstyle><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>K</mml:mi></mml:mstyle><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&nabla;</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="10pt"/><mml:mtext>for</mml:mtext><mml:mspace width="3pt"/><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>&isin;</mml:mo><mml:mo>&part;</mml:mo><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula><italic>Here, the partial differential operator</italic> 𝒟 <italic>is defined as</italic>
						<disp-formula id="pcbi-0030166-e017"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e017" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&#x1D49F;</mml:mi><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:mo>&minus;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi mathvariant='bold'>s</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>&nabla;</mml:mo><mml:mo>&middot;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mi>K</mml:mi><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mo>&nabla;</mml:mo></mml:mrow></mml:math> --></disp-formula><italic>and</italic> <bold>n</bold>(<bold>s</bold>) <italic>is the unit normal vector on the boundary</italic> ∂<italic>V of the configuration space V</italic>.
					</p><p>We now show that the solutions of optimization problem 2 are given by the eigenfunctions of the operator 𝒟. The essential observation we need is stated in Theorem 2.</p><p><bold><italic>Theorem 2.</italic></bold> <italic>Let</italic> ℱ<italic><sub>b</sub></italic> ⊂ ℱ <italic>be the space of functions that obey the boundary condition <xref ref-type="disp-formula" rid="pcbi-0030166-e016">Equation 16</xref>. Then</italic> 𝒟 <italic>is self-adjoint on</italic> ℱ<italic><sub>b</sub> with respect to the scalar product</italic>
						<disp-formula id="pcbi-0030166-e018"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e018" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>f</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>:</mml:mo><mml:mo>&equals;</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:mspace width="2pt"/><mml:mi>f</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle><mml:mo stretchy='false'>)</mml:mo><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>s</mml:mi></mml:mstyle></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula><italic>i.e.,</italic>
						<disp-formula id="pcbi-0030166-e019"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e019" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&forall;</mml:mo><mml:mi>f</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo>&isin;</mml:mo><mml:msub><mml:mi>&#x2131;</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>&#x1D49F;</mml:mi><mml:mi>f</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>,</mml:mo><mml:mi>&#x1D49F;</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math> --></disp-formula>
					</p><p>This property is useful, as it allows the application of the spectral theorem known from functional analysis, which states that any self-adjoint operator possesses a complete set of eigenfunctions <italic>f<sub>j</sub></italic>(<bold>s</bold>) ∈ ℱ<italic><sub>b</sub></italic> with real eigenvalues Δ<italic><sub>j</sub></italic>, which are pairwise orthogonal, i.e., a set of functions that fulfills the following conditions:
						<disp-formula id="pcbi-0030166-e020"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e020" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo mathvariant='script'>D</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>&Delta;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:msub><mml:mi>f</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mspace width="3pt"/><mml:mtext>with</mml:mtext><mml:mspace width="3pt"/><mml:msub><mml:mi>&Delta;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&isin;</mml:mo><mml:mi>&real;</mml:mi><mml:mrow><mml:mspace width="12pt"/><mml:mo>(</mml:mo><mml:mrow><mml:mtext>eigenvalue equation</mml:mtext></mml:mrow><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e021"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e021" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>&delta;</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mspace width="12pt"/><mml:mo>(</mml:mo><mml:mrow><mml:mtext>orthonormality</mml:mtext></mml:mrow><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e022"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e022" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&forall;</mml:mo><mml:mi>f</mml:mi><mml:mo>&isin;</mml:mo><mml:msub><mml:mo mathvariant='script'>F</mml:mo><mml:mi>b</mml:mi></mml:msub><mml:mspace width="2pt"/><mml:mo>&exist;</mml:mo><mml:msub><mml:mi>&alpha;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mi>f</mml:mi><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:munderover><mml:mo>&sum;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>&infin;</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>&alpha;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mi>f</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mstyle><mml:mspace width="12pt"/><mml:mo stretchy='false'>(</mml:mo><mml:mtext>completeness</mml:mtext><mml:mo stretchy='false'>)</mml:mo><mml:mo>.</mml:mo><mml:mtext> </mml:mtext></mml:mrow></mml:math> --></disp-formula>
					</p><p>Because the weighted average over configurations is equivalent to a temporal average, the scalar product (<xref ref-type="disp-formula" rid="pcbi-0030166-e018">Equation 18</xref>) is essentially the covariance of the output of the functions <italic>f</italic> and <italic>g</italic> (if they have zero mean). The orthonormality (<xref ref-type="disp-formula" rid="pcbi-0030166-e021">Equation 21</xref>) of the eigenfunctions thus implies that the eigenfunctions fulfill the unit variance and decorrelation constraint. This is stated in Theorem 3.</p><p><bold><italic>Theorem 3.</italic></bold> <italic>Apart from the constant function, which is always an eigenfunction, the (adequately normalized) eigenfunctions f<sub>j</sub></italic> ∈ <italic>ℱ of the operator 𝒟 fulfill the constraints of <xref ref-type="disp-formula" rid="pcbi-0030166-e010">Equations 10</xref>–<xref ref-type="disp-formula" rid="pcbi-0030166-e012">12</xref>.</italic></p><p>If we set <italic>λ<sub>j</sub></italic><sub>0</sub> = <italic>λ<sub>ji</sub></italic> = 0 for <italic>i</italic> ≠ <italic>j</italic>, the eigenfunctions also solve <xref ref-type="disp-formula" rid="pcbi-0030166-e015">Equation 15</xref>, making them good candidates for the solution of optimization problem 2. To show that they indeed minimize the Δ-value, we need Theorem 4.</p><p><bold><italic>Theorem 4.</italic></bold> <italic>The</italic> Δ-<italic>value of the normalized eigenfunctions f<sub>j</sub> is given by their eigenvalue</italic> Δ<italic><sub>j</sub></italic>.</p><p>At this point, it is intuitively clear that the eigenfunctions with the smallest eigenvalues form the solution to optimization problem 2. This is stated in Theorem 5.</p><p><bold><italic>Theorem 5.</italic></bold> <italic>The J eigenfunctions with the smallest eigenvalues</italic> Δ<italic><sub>j</sub></italic> ≠ 0 <italic>are a solution of optimization problem 2.</italic></p><p>The advantage of this approach is that it transfers the original optimization problem to that of finding the eigenfunctions of a partial differential operator. This type of problem is encountered frequently in other contexts and has been studied extensively.</p><p>It is worth noting that the formalism described here is not restricted to the example used here. As it is independent of the concrete nature of the configuration space, it can be applied to more complicated problems, e.g., to a rat moving in an environment with moving objects, whose positions would then be additional components of the configuration <bold>s</bold>.</p></sec><sec id="s2c3"><title>Qualitative behavior of the solutions for inhomogeneous movement statistics*.</title><p>Structurally, <xref ref-type="disp-formula" rid="pcbi-0030166-e020">Equation 20</xref> is a wave equation that describes the eigenmodes of an inhomogeneous membrane, which generally show oscillatory behavior. A brief calculation for a one-dimensional configuration space with <italic>p</italic><sub>s</sub> and <bold>K</bold> independent of <bold>s</bold> shows that the wavelength of the oscillation is given by <inline-formula id="pcbi-0030166-ex004"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex004" xlink:type="simple"/></inline-formula>
						. It is reasonable to assume that this behavior will be preserved qualitatively if <italic>p</italic><sub>s</sub> and <bold>K</bold> are no longer homogeneous but depend weakly on the configuration. In particular, if the wavelength of the oscillation is much shorter than the typical scale on which <italic>p</italic><sub>s</sub> and <bold>K</bold> vary, it can be expected that the oscillation “does not notice” the change. Of course, we are not principally interested in quickly varying functions, but they can provide insights into the effect of variations in <italic>p</italic><sub><bold>s</bold></sub> and <bold>K</bold>.
					</p><p>To examine this further, we consider the eigenvalue <xref ref-type="disp-formula" rid="pcbi-0030166-e020">Equation 20</xref> for a one-dimensional configuration space and multiply it by <italic>p</italic><sub><bold>s</bold></sub>:
						<disp-formula id="pcbi-0030166-e023"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e023" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mfrac><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mi>s</mml:mi></mml:mrow></mml:mfrac><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mfrac><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant='normal' mathsize='normal'><mml:mi>d</mml:mi></mml:mstyle><mml:mi>s</mml:mi></mml:mrow></mml:mfrac><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:mi>&Delta;</mml:mi><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mover><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mn>17</mml:mn><mml:mo>,</mml:mo><mml:mn>20</mml:mn><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mover><mml:mn>0</mml:mn></mml:mrow></mml:math> --></disp-formula>
					</p><p>We can derive an approximate solution of this equation by treating <inline-formula id="pcbi-0030166-ex005"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex005" xlink:type="simple"/></inline-formula>
						 as a small but finite perturbation parameter. This corresponds to large Δ-values, i.e., quickly varying functions. For this case we can apply a perturbation theoretical approach that follows the scheme of the Wentzel-Kramers-Brillouin (WKB) approximation used in quantum mechanics. Knowing that the solution shows oscillations, we start with the complex ansatz
						<disp-formula id="pcbi-0030166-e024"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e024" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>A</mml:mi><mml:mspace width="3pt"/><mml:mi>exp</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>i</mml:mi><mml:mi>&epsiv;</mml:mi></mml:mfrac><mml:mi>&Phi;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>where Φ(<italic>s</italic>) is a complex function that needs to be determined.
					</p><p>Treating <italic>ɛ</italic> as a small number, we can expand Φ in orders of <italic>ɛ</italic>
						<disp-formula id="pcbi-0030166-e025"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e025" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>&Phi;</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:msub><mml:mi>&Phi;</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:mi>&epsiv;</mml:mi><mml:msub><mml:mi>&Phi;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&plus;</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>where again the ellipses stand for higher-order terms. We insert this expansion into <xref ref-type="disp-formula" rid="pcbi-0030166-e023">Equation 23</xref> and collect terms of the same order in <italic>ɛ</italic>. Requiring each order to vanish separately and neglecting orders <italic>ɛ</italic><sup>2</sup> and higher, we get equations for Φ<sub>0</sub> and Φ<sub>1</sub>:
						<disp-formula id="pcbi-0030166-e026"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e026" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>&Phi;</mml:mi><mml:mn>0</mml:mn><mml:mo>&prime;</mml:mo></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>K</mml:mi></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e027"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e027" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msubsup><mml:mi>&Phi;</mml:mi><mml:mn>1</mml:mn><mml:mo>&prime;</mml:mo></mml:msubsup><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:mfrac><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mi>K</mml:mi><mml:msubsup><mml:mi>&Phi;</mml:mi><mml:mn>0</mml:mn><mml:mo>&prime;</mml:mo></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mi>K</mml:mi><mml:msubsup><mml:mi>&Phi;</mml:mi><mml:mn>0</mml:mn><mml:mo>&prime;</mml:mo></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>where the prime denotes the derivative with respect to <italic>s</italic>. These equations are solved by
						<disp-formula id="pcbi-0030166-e028"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e028" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>&Phi;</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mstyle displaystyle='true'><mml:mrow><mml:munderover><mml:mo>&int;</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mi>s</mml:mi></mml:munderover><mml:mrow><mml:msqrt><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>K</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:msqrt><mml:mtext>d</mml:mtext><mml:mi>x</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e029"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e029" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>&Phi;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:mfrac><mml:mi>ln</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:msup><mml:mi>K</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math> --></disp-formula>where <italic>s</italic><sub>0</sub> is an arbitrary reference point. Inserting this back into <xref ref-type="disp-formula" rid="pcbi-0030166-e024">Equation 24</xref>, we get the approximate solution
						<disp-formula id="pcbi-0030166-e030"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e030" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mroot><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi>K</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:mroot></mml:mrow></mml:mfrac><mml:mi>exp</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mstyle displaystyle='true'><mml:mrow><mml:munderover><mml:mo>&int;</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mi>s</mml:mi></mml:munderover><mml:mrow><mml:msqrt><mml:mrow><mml:mfrac><mml:mi>&Delta;</mml:mi><mml:mrow><mml:mi>K</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:msqrt><mml:mtext>d</mml:mtext><mml:mi>x</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>
					</p><p>This shows that the solutions with large Δ-values show oscillations with local frequency <inline-formula id="pcbi-0030166-ex006"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex006" xlink:type="simple"/></inline-formula>
						 and amplitude <inline-formula id="pcbi-0030166-ex007"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex007" xlink:type="simple"/></inline-formula>
						. As large values of <italic>K</italic> indicate that the rat moves quickly, this implies that the local frequency of the solutions is smaller in regions with larger velocities whereas small velocities, e.g., close to walls, lead to higher frequencies than expected for homogeneous movement. Intuitively, this means that the functions compensate for quick movements with smaller spatial frequencies such that the effective temporal frequency of the output signal is kept constant.
					</p><p>Understanding the dependence of the amplitude on <italic>p<sub>s</sub></italic> and <italic>K</italic> is more subtle. Under the assumption that <italic>K</italic> is independent of <italic>s</italic>, the amplitude decreases where <italic>p<sub>s</sub></italic> is large and increases where <italic>p<sub>s</sub></italic> is small. Intuitively, this can be interpreted as an equalization of the fraction of the total variance that falls into a small interval of length <inline-formula id="pcbi-0030166-ex008"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex008" xlink:type="simple"/></inline-formula>
						. This fraction is roughly given by the product of the probability <italic>p</italic>(<italic>s</italic>)Δ<italic>s</italic> of being in this section times the squared amplitude
						<disp-formula id="pcbi-0030166-eq001"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.eq001" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msqrt><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi>K</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:math> --></disp-formula>of the oscillation. For constant <italic>K</italic>, this fraction is also constant, so the amplitude is effectively rescaled to yield the same “local variance” everywhere. If <italic>p<sub>s</sub></italic> is constant but <italic>K</italic> varies, on the other hand, the amplitude of the oscillation is small in places where the rat moves quickly and large where the rat moves slowly. This corresponds to the intuition that from the perspective of slowness there are two ways of treating places where the rat moves quickly: decreasing the spatial frequency to generate slower output signals and/or decreasing the amplitude to “pay less attention” to these regions. There is also a strong formal argument why the amplitude should depend on <inline-formula id="pcbi-0030166-ex009"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex009" xlink:type="simple"/></inline-formula>
						. As the optimization problem is invariant under arbitrary invertible nonlinear coordinate changes, the amplitude of the oscillation should depend only on a function of <italic>p<sub>s</sub></italic> and <italic>K</italic> that is independent of the coordinate system. This constrains the amplitude to depend on <inline-formula id="pcbi-0030166-ex010"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex010" xlink:type="simple"/></inline-formula>
						, as this is the only combination that is invariant under coordinate changes.
					</p><p>The key insight of this analysis is that the optimal functions show oscillations that are spatially compressed in regions where the rat moves with low velocities. This implies that the spatial resolution of the SFA solutions is higher in those regions. Consequently, the size of the place fields after sparse coding should be smaller in regions with small velocities, which might explain smaller place fields near arena boundaries [<xref ref-type="bibr" rid="pcbi-0030166-b008">8</xref>,<xref ref-type="bibr" rid="pcbi-0030166-b030">30</xref>]. If we assume the animal moves faster parallel to a wall of the arena than perpendicular to it, our theory predicts elongated place fields along the walls that might be similar to the crescent-shaped fields reported in [<xref ref-type="bibr" rid="pcbi-0030166-b031">31</xref>] for a circular arena.</p></sec></sec></sec><sec id="s3"><title>Results</title><p>We apply our theoretical framework and computer simulations to a number of environments and movement patterns that resemble typical place-cell experiments. In the next section, Open Field, we show results for the open field, beginning with the mathematical analysis and simulation results for the simple movement paradigms with high and low relative speeds. Subsequently, the simulation results for the restricted head movement paradigm, including LRA, and the spatial view paradigm are shown. In the section Linear Track, the results for the linear track with its two-dimensional configuration space are shown.</p><sec id="s3a"><title>Open Field</title><p>One of the most common environments for place-cell experiments is an open-field apparatus of rectangular or circular shape. Here, the most typical experimental paradigm is to throw food pellets randomly into the apparatus at regular intervals, leading to a random search behavior of the rat. For this case, the rat's oriospatial configuration space comprises the full three-dimensional manifold of position and orientation. In this section, we present results from experiments with simulated rat trajectories at either high or low relative rotational speeds leading to undirected place cells or position invariant head-direction cell-type results, respectively.</p><sec id="s3a1"><title>Theoretical predictions for the simple movement paradigm*.</title><p>In a rectangular open field, the configuration space can be parametrized by the animal's position, indicated by the coordinates <italic>x</italic> and <italic>y</italic>, and by its head direction <italic>ϕ</italic>. The total configuration space is then given by <bold>s</bold> = (<italic>x</italic>,<italic>y</italic>,<italic>ϕ</italic>) ∈ [0,<italic>L<sub>x</sub></italic>] × [0,<italic>L<sub>y</sub></italic>] × [0,2π[. <italic>L<sub>x</sub></italic> and <italic>L<sub>y</sub></italic> denote the size of the room in <italic>x</italic>- and <italic>y</italic>-direction, respectively. We choose the origin of the head direction <italic>ϕ</italic> such that <inline-formula id="pcbi-0030166-ex011"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex011" xlink:type="simple"/></inline-formula>
						 corresponds to the rat looking to the North. The velocity vector is given by <bold>v</bold> <inline-formula id="pcbi-0030166-ex012"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex012" xlink:type="simple"/></inline-formula>
						, where <italic>v<sub>x</sub></italic>, <italic>v<sub>y</sub></italic> denote the translation velocities and <italic>ω</italic> is the rotation velocity. For the typical pellet-throwing experiment, we make the approximation that the velocities in the three different directions are decorrelated and that the rat's position and head direction are homogeneously distributed in configuration space. Moreover, in an open field there is no reason why the variance of the velocity should be different in <italic>x</italic>- and <italic>y</italic>-directions. The covariance matrix of the velocities then takes the form
						<disp-formula id="pcbi-0030166-e031"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e031" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mstyle mathvariant='bold' mathsize='normal'><mml:mi>K</mml:mi></mml:mstyle><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo stretchy='true'>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>&omega;</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo stretchy='true'>)</mml:mo></mml:mrow></mml:mrow></mml:math> --></disp-formula>and the probability density <italic>p</italic>(<italic>x</italic>,<italic>y</italic>,<italic>ϕ</italic>) is a constant.
					</p><p>In this case, the eigenvalue problem (<xref ref-type="disp-formula" rid="pcbi-0030166-e020">Equation 20</xref>) for the operator 𝒟 takes the following form:
						<disp-formula id="pcbi-0030166-e032"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e032" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&minus;</mml:mo><mml:mrow><mml:mo stretchy='true'>&lsqb;</mml:mo><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&part;</mml:mo><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:mo>&part;</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac><mml:mo>&plus;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mo>&part;</mml:mo><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:mo>&part;</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&plus;</mml:mo><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>&omega;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&part;</mml:mo><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:mo>&part;</mml:mo><mml:msup><mml:mi mathvariant='italic'>&phiv;</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mrow><mml:mo stretchy='true'>&rsqb;</mml:mo></mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant='italic'>&phiv;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>&Delta;</mml:mi><mml:mspace width="3pt"/><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant='italic'>&phiv;</mml:mi><mml:mo stretchy='false'>)</mml:mo></mml:mrow></mml:math> --></disp-formula>with the boundary conditions (<xref ref-type="disp-formula" rid="pcbi-0030166-e016">Equation 16</xref>) yielding
						<disp-formula id="pcbi-0030166-e033"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e033" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mfrac><mml:mo>&part;</mml:mo><mml:mrow><mml:mo>&part;</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:mfrac><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant='italic'>&phiv;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="8pt"/><mml:mtext>for</mml:mtext><mml:mspace width="2pt"/><mml:mi>x</mml:mi><mml:mo>&isin;</mml:mo><mml:mrow><mml:mo>&lcub;</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow><mml:mo>&rcub;</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e034"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e034" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mfrac><mml:mo>&part;</mml:mo><mml:mrow><mml:mo>&part;</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:mfrac><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant='italic'>&phiv;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="8pt"/><mml:mtext>for y</mml:mtext><mml:mo>&isin;</mml:mo><mml:mrow><mml:mo>&lcub;</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow><mml:mo>&rcub;</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math> --></disp-formula>and cyclic boundary conditions in the angular direction.
					</p><p>It is easy to check that the eigenfunctions and the corresponding Δ-values are given by
						<disp-formula id="pcbi-0030166-e035"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e035" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant='italic'>&phiv;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo stretchy='true'>&lcub;</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mtext> </mml:mtext><mml:msqrt><mml:mn>8</mml:mn></mml:msqrt><mml:mspace width="3pt"/><mml:mi>cos</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>&pi;</mml:mi><mml:mfrac><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>cos</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mi>&pi;</mml:mi><mml:mfrac><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>sin</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mi>n</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:mfrac><mml:mi>&phiv;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="6pt"/><mml:mtext>for</mml:mtext><mml:mspace width="3pt"/><mml:mo>n</mml:mo><mml:mspace width="3pt"/><mml:mtext>odd</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msqrt><mml:mn>8</mml:mn></mml:msqrt><mml:mspace width="3pt"/><mml:mi>cos</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>&pi;</mml:mi><mml:mfrac><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>cos</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mi>&pi;</mml:mi><mml:mfrac><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>sin</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:mfrac><mml:mi>&phiv;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="8pt"/><mml:mtext>for</mml:mtext><mml:mspace width="3pt"/><mml:mo>n</mml:mo><mml:mspace width="3pt"/><mml:mtext>even</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e036"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e036" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>&Delta;</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo>&lcub;</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mi>&pi;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo></mml:mrow><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>&plus;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow><mml:mo>&plus;</mml:mo><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>&omega;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mtext>2</mml:mtext></mml:msup></mml:mrow><mml:mn>4</mml:mn></mml:mfrac><mml:mspace width="8pt"/><mml:mtext>for</mml:mtext><mml:mspace width="3pt"/><mml:mo>n</mml:mo><mml:mspace width="3pt"/><mml:mtext>odd</mml:mtext><mml:mo>,</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mi>&pi;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>&plus;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&plus;</mml:mo><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>&omega;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mtext>2</mml:mtext></mml:msup></mml:mrow><mml:mn>4</mml:mn></mml:mfrac><mml:mspace width="8pt"/><mml:mtext>for</mml:mtext><mml:mspace width="3pt"/><mml:mo>n</mml:mo><mml:mspace width="3pt"/><mml:mtext>even</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math> --></disp-formula>with <italic>l</italic>, <italic>m</italic>, and <italic>n</italic> being nonnegative natural numbers. Only <italic>l</italic> = <italic>m</italic> = <italic>n</italic> = 0 is not allowed, as this case corresponds to the constant solution, which violates the unit variance constraint.
					</p><p>To predict the actual outcome of the simulations, we need to order these solutions by their Δ-values. For better comparability with the simulation results, it is convenient to rewrite the Δ-values in the following form:
						<disp-formula id="pcbi-0030166-e037"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e037" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>&Delta;</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>&pi;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mrow><mml:mo stretchy='true'>&lcub;</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&plus;</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&plus;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>n</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mspace width="12pt"/><mml:mtext>for</mml:mtext><mml:mspace width="3pt"/><mml:mo>n</mml:mo><mml:mspace width="3pt"/><mml:mtext>odd</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&plus;</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>L</mml:mi><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&plus;</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:msup><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mspace width="36pt"/><mml:mtext>for</mml:mtext><mml:mspace width="3pt"/><mml:mo>n</mml:mo><mml:mspace width="3pt"/><mml:mtext>even</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math> --></disp-formula>where
						<disp-formula id="pcbi-0030166-e038"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e038" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&equals;</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy='true'>&lang;</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>&omega;</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>&pi;</mml:mi></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy='true'>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy='true'>&lang;</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>v</mml:mi><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy='true'>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math> --></disp-formula>denotes the relative rotational speed, i.e., the ratio of the root mean square of rotational and translational velocity, if translational velocity is measured in units of the room size in <italic>x</italic>-direction per second and rotational velocity is measured in full circles per second.
					</p><p>We can now discuss two limit cases in terms of the relative velocity <italic>v<sub>rel</sub></italic>. Let us first consider the case where the rat moves at small velocities while making a lot of quick turns, i.e., <italic>v</italic><sub><italic>rel</italic></sub> ≫ 1. In this case, the smallest Δ-values can be reached by setting <italic>n</italic> = 0 unless <inline-formula id="pcbi-0030166-ex013"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex013" xlink:type="simple"/></inline-formula>
						. Since for <italic>n</italic> = 0 the functions <italic>g<sub>lmn</sub></italic> do not depend on the angle <italic>ϕ</italic>, the slowest functions for this case are invariant with respect to head direction and lead to place cells, see below. The behavior of the solutions and the respective simulation results are depicted in <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>A and <xref ref-type="fig" rid="pcbi-0030166-g003">3</xref>B.
					</p><fig id="pcbi-0030166-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030166.g003</object-id><label>Figure 3</label><caption><title>Theoretical Predictions and Simulation Results for the Open Field with the Simple Movement Paradigm (Independent Translation and Head Direction), Separately Learned Place Cells and Head-Direction Cells, and ICA for Sparsification</title><p>Each row within each panel shows the response of one unit as a function of position for different head directions (indicated by arrows), as well as the mean value averaged over all head directions (indicated by the superimposed arrows). Blue denotes low activity, green intermediate activity, and red high activity. (C) also shows orientation tuning curves at the position of a unit's maximal activity. (D–F) also show orientation tuning curves averaged over all positions ± one standard deviation.</p><p>(A) Theoretical prediction for the SFA layer with relatively quick rotational speed compared with translational speed (<italic>v</italic><italic><sub>rel</sub></italic> = 32). Solutions are ordered by slowness. All solutions are head-direction invariant and have regular rectangular grid structures.</p><p>(B) Simulation results for the SFA layer for the same settings as in (A), ordered by slowness. The results are similar to the theoretical predictions up to mirroring, sign, and mixing of almost equally slow solutions. All units are head-direction invariant and code for spatial position but are not localized in space.</p><p>(C) Simulation results for the ICA layer for the same simulation as in (B), ordered by sparseness (kurtosis). Firing patterns of all units are head-direction invariant and localized in space, resembling hippocampal place cells.</p><p>(D) Theoretical prediction for the SFA layer for relatively slow rotational speed compared with translational speed. Solutions are ordered by slowness. All solutions are position invariant and constitute a Fourier basis in head-direction space. As the phases of the theoretical solutions are not uniquely determined, they were adjusted to match the simulation results in (E).</p><p>(E) Simulation results for the SFA layer for the same settings as in D (<italic>v</italic><italic><sub>rel</sub></italic> = 0.08), ordered by slowness. The results are similar to the theoretical predictions. All units are position invariant and head-direction specific but not localized in head-direction space, i.e., all units except 1 and 2 have multiple peaks.</p><p>(F) Simulation results for the ICA layer for the same simulation as in (E) ordered by sparseness (kurtosis). Firing patterns of all units are position invariant and localized in head-direction space resembling subicular head-direction cells.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030166.g003" xlink:type="simple"/></fig><p>In the other extreme, <italic>v<sub>rel</sub></italic> is much smaller than one, i.e., the rat runs relatively fast while making few or slow turns. The smallest Δ-values can then be reached by choosing <italic>l</italic> = <italic>m</italic> = 0 unless <italic>n</italic><sup>2</sup> &gt; <inline-formula id="pcbi-0030166-ex014"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex014" xlink:type="simple"/></inline-formula>
						. The corresponding functions are invariant with respect to position while being selective to head direction, a feature that is characteristic for head-direction cells. A comparison of these theoretically predicted functions with simulation results are shown in <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>D and <xref ref-type="fig" rid="pcbi-0030166-g003">3</xref>E.
					</p></sec><sec id="s3a2"><title>Simulation results for the simple movement paradigm.</title><p>It is intuitively clear and has been shown in the last section that for high relative orientational speed <italic>v<sub>rel</sub></italic> the system output becomes slowest if it is invariant to head direction and only codes for spatial position. For low <italic>v<sub>rel</sub></italic> on the other hand, invariance for position while coding for head orientation is the best solution to the optimization problem.</p><p>In <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>B, the spatial firing maps of SFA output units from the simulation with high <italic>v<sub>rel</sub></italic> = 32 are shown. Here, all units are almost completely orientation invariant and resemble the theoretical predictions from <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>A. The first unit has low activity when the simulated rat is in the South of the apparatus, is most active in the North, and shows a gradual increase in the shape of a half cosine wave in between. The unit is invariant to movements in the East–West direction. The second unit behaves similarly, but its activity pattern is rotated by 90°. The following units have more spatial oscillations and somewhat resemble grid cells, which are not localized. <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>C shows ICA output units from the same simulation as in <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>B. All units are orientation invariant, just as is their input from the first 16 SFA units, but most have only a single peak of activity and each at a different position. The sparser units are more localized in space while less sparse units have larger firing fields or multiple peaks. These results closely resemble place cells from rodent's hippocampal areas CA1 and CA3.</p><p>In <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>E, SFA output units from the simulation with low relative rotational speed <italic>v<sub>rel</sub></italic> = 0.08 are shown. In this case, all units are almost completely position invariant but their response oscillates with the orientation of the rat. The first unit changes activity with the sine of orientation and the second unit is modulated like a cosine. Unit 3 has twice the frequency, unit 5 has a frequency of three, and unit 8 has a frequency of four. Again, the simulation results reproduce the theoretical predictions shown in <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>D. <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>F shows ICA output units from the same simulation as in <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>E. All units are position invariant like their inputs from the first eight SFA units, but most have only a single peak of activity and each at a different orientation. The sparser units are more localized in orientation while later ones have broader tuning curves. These results closely resemble head-direction cells from rodent's subicular areas.</p></sec><sec id="s3a3"><title>Simulation results for the restricted head movement paradigm.</title><p>In the previous section we used independent head direction and body movement and used different movement statistics for different cell types, such as fast rotational speed for place cells and slow rotational speed for head-direction cells. This allowed us to obtain nearly ideal simulation results that match closely the theoretical predictions, but it is unrealistic for two reasons. First, in a real rat, head-direction and movement direction are correlated. Second, in a real rat, place cells and head-direction cells have to be learned simultaneously and thus with the same movement pattern.</p><p>In this section we introduce three changes for more realism. First, a more realistic movement pattern is used, where the rat's head is enforced to be within 90° of the current body movement (see <xref ref-type="sec" rid="s2">Methods</xref>) and the relative rotational speed <italic>v<sub>rel</sub></italic> is set to an intermediate value of 0.6. Second, place cells and head-direction cells are learned on the same input statistics and LRA is used in the top SFA layer for the head-direction cell population (see <xref ref-type="sec" rid="s2">Methods</xref>). Third, ICA for sparse coding in the last layer is replaced by CL. Simulation results are shown in <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>.</p><fig id="pcbi-0030166-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030166.g004</object-id><label>Figure 4</label><caption><title>Simulation Results for the Open Field with More Realistic Movement Patterns and Competitive Learning for Sparsification in the Last Layer</title><p>The network was trained with a movement pattern of relatively high rotational speed. Two distinct populations of cells were trained, one as before, the other was trained with LRA in the top SFA layer, reducing the impact of periods with high rotational speed.</p><p>(A) Simulation results for the top layer CL units without LRA. Each subplot shows the mean spatial firing rate of one output unit averaged over all orientations. The slowest 16 SFA outputs were used for CL, and 16 CL units were trained. All units are localized in space, closely resembling hippocampal place cells. Blue color denotes low activity, green intermediate activity, and red high activity.</p><p>(B) Orientation tuning of the units shown in (A). Firing patterns of all units are mostly head direction invariant.</p><p>(C) Simulation results for the top layer CL units with LRA in the top SFA layer. Each subplot shows the mean orientation tuning curve in blue, and a gray area indicates ± one standard deviation. The slowest eight SFA outputs were used for CL, and eight CL units were trained. Firing patterns of all units are mostly position invariant and localized in head-direction space closely resembling subicular head-direction cells.</p><p>(D) Scatterplot of mean directional variance <italic>η<sub>ϕ</sub></italic> and mean positional variance <italic>η</italic><sub>r</sub> (see <xref ref-type="sec" rid="s2">Methods</xref>) of the results shown in (A) (red circles) and (C) (blue triangles). Units from (A) cluster in an area with high positional variance <italic>η</italic><sub>r</sub> and low orientational variance <italic>η<sub>ϕ</sub></italic>, while units from (C) cluster in an area with low positional variance <italic>η</italic><sub>r</sub> and high orientational variance <italic>η<sub>ϕ</sub></italic>.</p><p>(E) Scatterplot of <italic>η<sub>ϕ</sub></italic> and <italic>η</italic><sub>r</sub> for the same simulation parameters as in (A–D) but with more CL output units. 32 units were trained without LRA (red circles) and 16 with LRA (blue triangles). The solutions lie in similar areas as in (D).</p><p>(F) Scatterplot of <italic>η<sub>ϕ</sub></italic> and <italic>η</italic><sub>r</sub> for the same simulation parameters as in (A–D), but with more SFA outputs used for CL. 32 SFA units were used without LRA (red circles) and 16 with LRA (blue triangles). The solutions show mixed dependence on position and head direction but are still clearly divided into a mostly head-direction invariant population (red) and a mostly position invariant population (blue).</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030166.g004" xlink:type="simple"/></fig><p>As the relative rotational speed <italic>v<sub>rel</sub></italic> is smaller than in the previous section, some SFA solutions (unpublished data) change with head direction: unit 16 of 32 is the first unit with noticeable head-direction dependence, while none of the first 32 SFA solutions in the place-cell simulation in the last section was head-direction dependent. In <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>A, the spatial firing maps for all units trained without LRA are shown averaged over all orientations. The corresponding orientation tuning curves (measured at the peak of the place field) are given in <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>B. All units are localized in space and are largely independent of orientation with activity centers distributed evenly in the room.</p><p><xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>C shows the simulation results with identical movement statistics but with LRA turned on in the top SFA layer, so that learning is downregulated at timepoints with rapid head-direction changes. Tuning curves of all units are shown together with the spatial standard deviation of activity, which is generally very small. All units are localized in head-direction space and mostly position independent, with approximately even spacing of directions of maximum activity. The LRA can eliminate the effect of head rotation only to some extent and thus SFA units 7 and 8 (unpublished data) show significant dependence on position, while the slowest unit affected by position in the previous section was unit 15.</p><p>A scatterplot of the mean positional variance <italic>η</italic><sub>r</sub> versus mean orientational variance <italic>η</italic><italic><sub>ϕ</sub></italic> (see <xref ref-type="sec" rid="s2">Methods</xref>) of the units from <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>A and <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>C is shown in <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>D. Perfect head-direction cells would be located in the bottom right, while perfect place cells would be located in the top left. Red circles denote the simulated place cells from <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>A. Blue triangles denote the simulated head-direction cells from <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>C. Both populations cluster near the positions of optimal solutions in the corners.</p><p>How does the number of inputs to the last layer (i.e., the number of SFA outputs used) and the number of CL outputs influence the results? <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>E shows the same analysis for a simulation with identical settings except the number of CL output units was doubled to 32 without LRA and 16 with LRA, respectively. Most units lie in a similar area as in <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>D, but the clusters are denser, since the number of units has doubled. In <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>F, the number of output units is again the same as in <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>D, but the number of SFA outputs for the last layer is doubled to 32 for the simulation without LRA and 16 for the simulation with LRA. The output units now get inputs from higher, i.e., quicker, SFA units, which tend to depend on both position and orientation. As a result, the CL units span the entire spectrum of completely position invariant to completely orientation invariant solutions, with the more position dependent solutions coming from the simulations without LRA, and the more head-direction dependent solutions coming from the LRA simulation. We have no conclusive explanation, though, why the shape of the data distribution seemingly changes from linear (<xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>D and <xref ref-type="fig" rid="pcbi-0030166-g004">4</xref>E) to convex (<xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>F) with increasing numbers of SFA units. We conclude that the number of CL output units mostly determines the density of place cells but not the qualitative behavior of the solutions, while the number of SFA outputs directly affects the invariance properties of the solutions.</p></sec><sec id="s3a4"><title>Simulation results for the spatial view paradigm.</title><p>The previous sections have shown that the same learning mechanism in the same environment, but with different movement statistics, results in either head-direction or place cell–like representations. Although the last section introduced certain restrictions on the head direction, body position and head direction remained mostly independent.</p><p>In the following simulation, the virtual animal fixates a location <italic>X</italic> on a wall while it moves through the room. The position of <italic>X</italic> is subject to a random walk on the wall with the same statistics as the head direction in the simple movement paradigm with small <italic>v<sub>rel</sub></italic> (see <xref ref-type="sec" rid="s2">Methods</xref>). The animal's position is also changed with the same statistics as position in the simple movement paradigm, and the actual head direction is thus determined by the current position and currently fixated point <italic>X</italic>.</p><p>Note that the configuration space consisting of position and viewpoint has the same structure as the one consisting of position and head direction for the simple movement paradigm. Accordingly, the theoretical predictions for the two scenarios are identical if head direction is “replaced'” by the fixation point. In <xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>C, we plot the spatial activity pattern such that at each position the rat fixates a specific location marked by an ×. As expected, these plots are virtually identical to the head direction cell plots in <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>D and <xref ref-type="fig" rid="pcbi-0030166-g003">3</xref>E in that activity is largely invariant to position. This can also be seen by the corresponding tuning curves that show small standard deviations (indicated by gray areas). However, while in <xref ref-type="fig" rid="pcbi-0030166-g003">Figure 3</xref>D and <xref ref-type="fig" rid="pcbi-0030166-g003">3</xref>E the activities are modulated by head direction, activities in <xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>C depend on the position of viewpoint. If we plot the same data with fixed head direction instead of fixed viewpoint, (<xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>A), the structure of the activity patterns is obscured. Units 3–5 in <xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>A, for example, show clear diagonal stripes and correspondingly larger standard deviations in their tuning curves. These SFA solutions jointly code for “view space,” but as before the SFA results are not localized.</p><fig id="pcbi-0030166-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030166.g005</object-id><label>Figure 5</label><caption><title>Simulation Results for the Open Field with Trajectories Where Spots on the Wall Were Fixated</title><p>Blue color denotes low activity, green intermediate activity, and red high activity.</p><p>(A) Spatial firing map of five representative SFA output units for different “global head directions” (indicated by arrows) and averages over orientations and space. No unit shows spatial or orientation invariance when plotting position and “global head direction” as in previous Figures.</p><p>(B) ICA results plotted with “global head direction.”</p><p>(C) Same results as in (A) but plotted with “local head direction” (at each position oriented toward fixation point ×).</p><p>(D) Same results as in (B) but using the plot method from (C). All units code for a specific view closely resembling primate spatial-view cells.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030166.g005" xlink:type="simple"/></fig><p><xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>B and <xref ref-type="fig" rid="pcbi-0030166-g005">5</xref>D show the results of the ICA layer. The “global direction” plot in <xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>B is as inadequate as in <xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>A, while the plot in <xref ref-type="fig" rid="pcbi-0030166-g005">Figure 5</xref>D clearly illustrates the behavior of these cells. Unit 2, for example, is active only when the rat looks at the bottom left corner of the rectangular room, independent of the animal's position. This cell type resembles spatial-view cells found in the primate hippocampal formation (e.g., [<xref ref-type="bibr" rid="pcbi-0030166-b032">32</xref>]).</p></sec></sec><sec id="s3b"><title>Linear Track</title><p>In a linear track, the rat's movement is essentially restricted to two degrees of freedom, a spatial one and an orientational one. In experimental measurements, the orientational dimension is often collapsed into a binary variable indicating only the direction of movement. In the linear track, these two dimensions are thus experimentally much easier to sample smoothly than the full three-dimensional parameter space of the open field.</p><sec id="s3b1"><title>Theoretical predictions for the linear track*.</title><p>In principle, the configuration space for the linear track is the same as for the open field, only with a small side length <italic>L<sub>x</sub></italic> in one direction. <xref ref-type="disp-formula" rid="pcbi-0030166-e036">Equation 36</xref> shows that for small <italic>L<sub>x</sub></italic> the solutions that are not constant in the <italic>x</italic>-direction, i.e., the solutions with <italic>l</italic> ≠ 0, have large Δ-values and thus vary quickly. Therefore, slow functions will be independent of <italic>x,</italic> and we will neglect this dimension and restrict the configuration space to position in <italic>y</italic>-direction and head direction <italic>ϕ</italic>.</p><p>Another difference between the simulation setup for the open field and the linear track lies in the movement statistics of the rat. Due to the momentum of the Brownian motion, the rat rarely turns on mid-track. In combination with the coupling between head direction and body motion, this implies that given the sign of the velocity in <italic>y</italic>-direction the head direction is restricted to angles between either 0 and <italic>π</italic> (positive velocity in <italic>y</italic>-direction, North) or between <italic>π</italic> and 2<italic>π</italic> (negative velocity in <italic>y</italic>-direction, South). If, in addition, the rat makes a lot of quick head rotations, the resulting functions can only be slowly varying if they are invariant with respect to head direction within these ranges. This leaves us with a reduced configuration space that contains the position <italic>y</italic> and a binary value <italic>d</italic> ∈ {North, South} that determines whether 0 ≤ <italic>ϕ</italic> &lt; <italic>π</italic> or <italic>π</italic> ≤ <italic>ϕ</italic> &lt; 2<italic>π</italic>.</p><p>We assume that the rat only switches between North and South at the ends of the track. Because discontinuities in the functions lead to large Δ-values, slow functions <italic>g</italic>(<italic>y</italic>,<italic>d</italic>) should fulfill the continuity condition that <italic>g</italic>(0,North) = <italic>g</italic>(0,South) and <italic>g</italic>(<italic>L<sub>y</sub></italic>,North) = <italic>g</italic>(<italic>L<sub>y</sub></italic>,South). This means that the configuration space has the topology of a circle, where one half of the circle represents all positions with the rat facing North and the other half the positions with the rat facing South. It is thus convenient to introduce a different variable <italic>ξ</italic> ∈ [0,2<italic>L<sub>y</sub></italic>] that labels the configurations in the following way:
						<disp-formula id="pcbi-0030166-e039"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e039" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&xi;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&xi;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo stretchy='true'>&lcub;</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>&xi;</mml:mi><mml:mo>,</mml:mo><mml:mtext>North)</mml:mtext><mml:mspace width="35pt"/><mml:mtext>for</mml:mtext><mml:mspace width="2pt"/><mml:mi>&xi;</mml:mi><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo>&minus;</mml:mo><mml:mi>&xi;</mml:mi><mml:mo>,</mml:mo><mml:mtext>South</mml:mtext><mml:mo stretchy='false'>)</mml:mo><mml:mspace width="12pt"/><mml:mtext>for</mml:mtext><mml:mspace width="2pt"/><mml:mi>&xi;</mml:mi><mml:mo>&ge;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>
					</p><p>The topology of the configuration space is then captured by cyclic boundary conditions for the functions <italic>g</italic>(<italic>ξ</italic>).</p><p>For simplicity, we assume that there are no preferred positions or head directions, i.e., that both the variance of the velocity <inline-formula id="pcbi-0030166-ex015"><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.0030166.ex015" xlink:type="simple"/></inline-formula>
						 and the probability distribution <italic>p</italic>(<italic>ξ</italic>) is independent of <italic>ξ</italic>. The equation for the optimal function is then given by
						<disp-formula id="pcbi-0030166-e040"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e040" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:mo>&minus;</mml:mo><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mover><mml:mi>&xi;</mml:mi><mml:mo>&dot;</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&part;</mml:mo><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:mo>&part;</mml:mo><mml:msup><mml:mi>&xi;</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&xi;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mi>&Delta;</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy='false'>(</mml:mo><mml:mi>&xi;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math> --></disp-formula>
					</p><p>The solutions that satisfy the cyclic boundary condition and their Δ-values are given by
						<disp-formula id="pcbi-0030166-e041"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e041" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy='false'>(</mml:mo><mml:mi>&xi;</mml:mi><mml:mo stretchy='false'>)</mml:mo><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo stretchy='true'>&lcub;</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msqrt><mml:mn>2</mml:mn></mml:msqrt><mml:mspace width='4pt'/><mml:mi>sin</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mi>&pi;</mml:mi><mml:mfrac><mml:mi>&xi;</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mtext>for j even</mml:mtext></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msqrt><mml:mn>2</mml:mn></mml:msqrt><mml:mspace width='4pt'/><mml:mi>cos</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>j</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy='false'>)</mml:mo><mml:mi>&pi;</mml:mi><mml:mfrac><mml:mi>&xi;</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>L</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mtext>for j odd</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math> --></disp-formula>
						<disp-formula id="pcbi-0030166-e042"><graphic mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.0030166.e042" xlink:type="simple"/><!-- <mml:math display='block'><mml:mrow><mml:msub><mml:mi>&Delta;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&equals;</mml:mo><mml:mrow><mml:mo stretchy='true'>&lcub;</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mi>&pi;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mfrac><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mover><mml:mi>&xi;</mml:mi><mml:mo>&dot;</mml:mo></mml:mover></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msubsup><mml:mi>L</mml:mi><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:msup><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mtext>for j even</mml:mtext></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mi>&pi;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mfrac><mml:mrow><mml:mrow><mml:mo>&lang;</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mover><mml:mi>&xi;</mml:mi><mml:mo>&dot;</mml:mo></mml:mover></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>&rang;</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msubsup><mml:mi>L</mml:mi><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:msup><mml:mrow><mml:mo stretchy='false'>(</mml:mo><mml:mi>j</mml:mi><mml:mo>&plus;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy='false'>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mtext>for j odd</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math> --></disp-formula>
					</p><p>Note that there are always two functions with the same Δ-value. Theoretically, any linear combination of these functions has the same Δ-value and is thus also a possible solution. In the simulation, this degeneracy does not occur, because mid-track turns do occur occasionally, so those functions that are head-direction–dependent on mid-track (i.e., even <italic>j</italic>) will have higher Δ-values than theoretically predicted. This avoids mixed solutions and changes the order of the functions when ordered by slowness.</p><p><xref ref-type="fig" rid="pcbi-0030166-g006">Figure 6</xref>A shows seven of the theoretically predicted functions <italic>g<sub>j</sub></italic>, reordered such that they match the experimental results.</p><fig id="pcbi-0030166-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.0030166.g006</object-id><label>Figure 6</label><caption><title>Theoretical Predictions and Simulation Results for the Linear Track</title><p>Head directions are indicated by arrows, orientation averages are indicated by superimposed arrows, and principal directions (North, South) are emphasized with a dark border. Blue color denotes low activity, green intermediate activity, and red high activity.</p><p>(A) Theoretical predictions.</p><p>(B) Spatial firing maps of the first (i.e., slowest) seven out of ten SFA output units. Units 1–6 are mostly head-direction invariant, whereas unit 7 responds differently to North and South views. Two out of the three remaining units are also head-direction invariant.</p><p>(C) Spatial firing maps of the first (i.e., most kurtotic) seven out of ten ICA output units. All units are localized in space, and most of them are only active for either North or South views closely resembling place fields recorded from rats in linear track experiments.</p></caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030166.g006" xlink:type="simple"/></fig></sec><sec id="s3b2"><title>Simulation results for the linear track.</title><p>For simulations in the linear track, we use the more realistic movement paradigm similar to the open field experiment from the section Simulation results for the restricted head movement paradigm. A similar relative speed is assumed (<italic>v<sub>rel</sub></italic> = 26), and sparse coding in the last layer is performed with ICA.</p><p><xref ref-type="fig" rid="pcbi-0030166-g006">Figure 6</xref>B and <xref ref-type="fig" rid="pcbi-0030166-g006">6</xref>C shows the simulation results for the linear track. The spatial firing maps of the seven slowest SFA outputs out of ten are shown in <xref ref-type="fig" rid="pcbi-0030166-g006">Figure 6</xref>B. Units 1–6 are mostly head-direction–invariant (<italic>η<sub>ϕ</sub></italic> ≤ 0.1), and code for spatial position in the form of sine waves with frequencies of 1/2, 1, 3/2, 2, 5/2, and 3, as theoretically predicted. Units 7–10 (latter three not shown) code for position and orientation. At track ends, where most rotation occurs, all units are head-direction–invariant, and the spatial modulation is compressed due to slower mean translational speeds compared with mid-track (cf. the section Qualitative behavior of the solutions for inhomogeneous movement statistics). As expected, none of these units are localized in space or orientation.</p><p>The spatial firing maps of the first seven out of ten ICA outputs for different head directions are shown in <xref ref-type="fig" rid="pcbi-0030166-g006">Figure 6</xref>C. Units 1 and 6 are only active at the southern track end, independent of head direction. Units 9 and 10 (not shown) are active on mid-track and mostly independent of head direction (<italic>η<sub>ϕ</sub></italic> ≤ 0.1). The other six units are localized in the joint position–head-direction space, meaning that they fire only at specific positions on the track when the rat faces a specific direction. These results are similar to place-cell recordings from rats in linear tracks where most cells only fire when the rat moves in one direction [<xref ref-type="bibr" rid="pcbi-0030166-b033">33</xref>].</p><p>Changing the movement pattern to yield much higher or much lower mean relative rotational speeds can lead to very different results resembling those presented earlier for the open field, namely head-direction cells and head-direction–invariant place cells.</p></sec></sec><sec id="s3c"><title>Model Parameters</title><p>Although most of the parameters in our model (i.e., all the weights in the SFA and ICA steps) are learned in an unsupervised manner, a number of parameters were chosen by hand. These parameters include the input picture size, receptive field sizes, receptive field positions, and overlaps in all layers, the room shape, and textures, the expansion function space, number of layers, choice of sparsification algorithm, movement pattern, FOV, and number of training steps. We cannot explore the entire parameter space here and show instead that the model performance is very robust with respect to most of these parameters. The fact that the simulation results presented are very similar to the analytical solutions also indicates that the results presented are generic and not a mere artifact of a specific parameter set. The most interesting parameters are discussed in the following.</p><sec id="s3c1"><title>Image resolution.</title><p>We use high-resolution input pictures of 40 by 320 RGB pixels, showing the capability of the model to handle high-dimensional sensory data. However, it could be argued that the rat's vision is rather blurred and has little color sensitivity. We find that smaller and/or grayscale input pictures yield similar results, which degrade only below a dimensionality of a few hundred input pixels.</p></sec><sec id="s3c2"><title>Field of view.</title><p>The model's FOV has been modeled to represent the 320° of a rat's FOV. Smaller FOVs down to 60° still reproduce our results, and especially rotation invariance is not an effect of a large FOV. However, the views have to contain enough visual information in order to fulfill the one-to-one correspondence between stimulus and oriospatial configuration.</p></sec><sec id="s3c3"><title>Receptive fields.</title><p>The receptive fields are restricted to about 100 input dimensions (before quadratic expansion) due to computational limitations. Larger receptive fields tend to yield better solutions, since the available total function space increases. Position and overlap of receptive fields have been varied to some extent but have no noticeable impact on the result unless too many of the inputs are discarded.</p></sec><sec id="s3c4"><title>Room shape.</title><p>The room shape has a strong impact on the SFA solutions, which can be predicted analytically. We show here only results from convex rooms, but experiments with radial mazes and multiple rooms have been performed and these results are similar to experimental data, too. Choice of specific textures was irrelevant for the model's performance except when multiple walls are textured with similar or identical textures, which leads to degraded results due to visual ambiguities. For small FOV values and symmetrical environments, the model's representations become symmetrical as well.</p></sec><sec id="s3c5"><title>Nonlinear expansion.</title><p>The expansion function space was chosen as all monomials up to degree 2, but alternative function spaces like linear random mixtures passed through sigmoidals with different offsets were successful, too. However, the size of the function space is limited by computational constraints and monomials have proven to be particularly efficient. Even a linear function space is sufficient to generate a subset of the theoretically predicted results in some cases. The head-direction cell simulations reproduce seven out of eight optimal SFA solutions in the linear case and with a 320° FOV. In a linear place-cell simulation, only every second optimal SFA solution was found, and most of the ICA representations had two or more separate peaks. Simulations with a linear function space yield the theoretically predicted results only for a large FOV.</p></sec><sec id="s3c6"><title>Number of layers.</title><p>The number of layers is determined by receptive field sizes and overlaps. An increased number of layers also increases the function space and can thus improve performance. We did not see any effect of overfitting for up to two more SFA layers. Additional top layers simply reproduced the output of earlier layers.</p></sec><sec id="s3c7"><title>Sparse coding algorithm.</title><p>As for the choice of the sparse coding algorithm, we found no qualitative difference for different techniques including CuBICA, fastICA, CL, or just finding rotations of the SFA output with maximal kurtosis [<xref ref-type="bibr" rid="pcbi-0030166-b027">27</xref>].</p></sec><sec id="s3c8"><title>Movement statistics.</title><p>The choice of movement pattern has a clear impact on the optimal solutions of SFA. The theoretical analysis presented here can in principle predict the solutions for arbitrary movement patterns, but for the predictions presented here we made simplifying assumptions to obtain closed form solutions. In spite of these simplifications, the theoretical predictions are still close to the simulation results, e.g., in the section named Simulation results for the restricted head movement paradigm, where the head orientation is restricted to an angular range with respect to the direction of body motion.</p><p>In the movement paradigm for the spatial-view cells, the fixated point <italic>X</italic> changes smoothly over time without abrupt changes. If <italic>X</italic> instead changed seldom but abruptly, as by saccadic eye movement, similar representations as for smooth changes of <italic>X</italic> emerge (unpublished data), except that the SFA solutions need no longer be similar for adjacent viewpoints. However, in our simulations the similarity of the visual stimuli for adjacent view points often suffices for locally smooth responses.</p></sec><sec id="s3c9"><title>Training set size.</title><p>More training steps result in a smoother sampling of the virtual reality environment and yield better approximations to the theoretical predictions. We found that a few laps crossing and spanning the whole room within 5,000 training samples were sufficient for the qualitative results. For too little training data and too few crossings of paths, an overfitting effect occurs resulting in a slowly varying activity of the outputs on the training path but not on other (test) paths.</p></sec></sec></sec><sec id="s4"><title>Discussion</title><p>We have presented a model for the formation of oriospatial cells based on the unsupervised learning principles of slowness and sparseness. The model is feed-forward, instantaneous, and purely sensory-driven. The architecture of the model is inspired by the hierarchical organization of the visual system and applies the identical learning rule, SFA, on all but the last layer, which performs sparse coding. Our results show that all major oriospatial cell types—place cells, head-direction cells, spatial-view cells, and to some extent even grid cells—can be learned with this approach. We have shown that this model is capable of extracting cognitive information such as an animal's position from complex high-dimensional visual stimuli, which we simulated as views in a virtual environment. The generated representations were coding specifically for some information (e.g., position) and were invariant to the others (e.g., head direction). These invariant representations are not explicitly built into the model but induced by the input statistics, which are in turn determined by the room shape and a specific movement paradigm. Nevertheless, the type of learned invariance can be influenced by a temporal adaptation of the learning rate. Control experiments show that the model performance is robust to noise and architectural details. This robustness is also supported by a general mathematical framework that allows exact analytical predictions of the system behavior at the top SFA level.</p><p>Our model comprises sensory processing stages that mimic parts of visual cortex and the hippocampal formation. The model layers cannot be exactly associated with specific brain areas, but we suggest some relations. The behavior of the lower two layers are primarily determined by the visual environment and mostly independent of the spatial movement pattern. In the simulations presented here, we trained the two lower layers only once and only adapted the higher layers for different environments and movement patterns. The first layer could be associated with V1 [<xref ref-type="bibr" rid="pcbi-0030166-b001">1</xref>], the second layer with higher visual areas. Units in the third layer show a periodic non-localized spatial activity pattern (cf. <xref ref-type="fig" rid="pcbi-0030166-g004">Figure 4</xref>A and <xref ref-type="fig" rid="pcbi-0030166-g004">4</xref>B), which strongly depends on the movement pattern and might be associated with grid cells in EC. However, two major differences between the SFA representations in the third layer and grid cells are notable. First, grid cells form a hexagonal grid, while the structure in the SFA representations depends on the shape of the room (rectangular rooms yield rectangular SFA patterns). Second, the lowest spatial frequency in the SFA representation is half the size of the simulated room, while the peak distances found in EC grid cells show intrinsic spatial scales that range from 39 cm to 73 cm [<xref ref-type="bibr" rid="pcbi-0030166-b004">4</xref>].</p><p>The strong influence of room shape on the SFA results is due to the temporally global decorrelation and unit variance constraints in SFA. Thus, SFA requires a decorrelation of activities over arbitrarily long timescales, which might be difficult to achieve in a biologically plausible manner. We expect that a relaxation of these constraints to a limited time window leads to decorrelated representations only within the spatial range that is typically covered by the rat within this time window. This weakens the dependence of the results on the shape of the room and introduces an intrinsic spatial scale as found in EC. Preliminary results indicate that hexagonal activity patterns can emerge in such a system.</p><p>Depending on the movement statistics during learning, representations in the sparse coding layer resemble either place cells as found in hippocampal areas CA1 and CA3 or head-direction cells as found in many areas of the hippocampal formation or spatial-view cells as found in the hippocampal formation of monkeys. For the case of approximately uncorrelated body movement and head direction, the model learns either place or head-direction cells, depending on the relative speed of translation and rotation. For much quicker rotation than translation, the model develops orientation invariant place fields, while for much quicker translation than rotation the model develops position invariant head direction codes. In intermediate cases, e.g., for the linear track, mixed representations such as direction-dependent place fields emerge. Such mixed representations have also been reported in the subicular complex [<xref ref-type="bibr" rid="pcbi-0030166-b034">34</xref>,<xref ref-type="bibr" rid="pcbi-0030166-b035">35</xref>] and medial EC [<xref ref-type="bibr" rid="pcbi-0030166-b012">12</xref>]. In the case of correlated body movement and head direction caused by elongated fixations of objects or positions, the model learns view-specific codes, similar to spatial-view cells in primates.</p><p>Although the model is capable of learning place cells and head-direction cells, if it learns on distinct adequate movement statistics, a model rat should obviously not have to traverse its environment once with low relative rotational speed to learn head-direction cells and once more with high relative rotational speed to learn place cells. How can both populations be trained with a single given input statistics? For this problem we have considered output from the rat's vestibular system as a possible solution. This system is essential for the oriospatial specificity of head-direction cells and place cells [<xref ref-type="bibr" rid="pcbi-0030166-b036">36</xref>]. Other models like the well-established ring attractor model by Skaggs et al. [<xref ref-type="bibr" rid="pcbi-0030166-b037">37</xref>] assume that the head direction system performs angular integration of body motion based on vestibular velocity signals. We hypothesize that these signals could also be used to influence the learning rate of two populations of cells that learn according to our model. One of these populations learns more strongly at periods with high relative translational speed (as signaled by the vestibular angular velocity signals), and the other adapts more strongly for low relative translational speed. The former should develop head-direction cell characteristics and the latter place cell characteristics. In our simulations, the model successfully learned both populations with the same input data, one population without LRA, and one population with reduced learning rate during quick rotations. Once the model has been trained, the vestibular acceleration signal is no longer needed for the model behavior. With LRA, the model neurons effectively learn on a different movement statistics, e.g., head-direction cells learn more strongly at times with relatively high translational speed. Nevertheless, if the real movement statistics contains very few episodes of relatively quick translation at all, the mechanism fails and head-direction cells cannot become position invariant. The principle of LRA is not limited to changing the effective relative rotational speed, as it can be adapted to reduce learning speed during episodes of quick changes of any feature, as long as some internal signal that is correlated with the change of the feature is available to control the LRA process. We expect that LRA could be used to concurrently learn spatial-view and place cells. This would require a faster change of gaze than in our view-cell simulations above. Then we expect that a population of cells trained without LRA develops place cell characteristics, whereas cells using LRA during episodes of fast fixation point changes develop spatial-view cell characteristics.</p><p>Our implementation of the slowness principle involves solving an eigenvalue problem and cannot be considered biologically plausible. However, more plausible implementations exist in the form of gradient-descent learning rules [<xref ref-type="bibr" rid="pcbi-0030166-b022">22</xref>,<xref ref-type="bibr" rid="pcbi-0030166-b038">38</xref>] and as a spike-timing–dependent plasticity rule [<xref ref-type="bibr" rid="pcbi-0030166-b023">23</xref>]. The choice of ICA (and specifically our implementation based on CuBICA) to generate localized representations from nonlocalized codes might seem biologically unrealistic as well [but note <xref ref-type="bibr" rid="pcbi-0030166-b039">39</xref>], whereas a formulation in the form of nonlinear Hebbian learning [<xref ref-type="bibr" rid="pcbi-0030166-b040">40</xref>] or CL seems more plausible. An in-depth discussion of this topic can be found in [<xref ref-type="bibr" rid="pcbi-0030166-b027">27</xref>].</p><sec id="s4a"><title>Related Work</title><p>According to Redish's classification, our model is a <italic>local view model,</italic> for it “only depends on the local view to explain place- cell firing” [<xref ref-type="bibr" rid="pcbi-0030166-b041">41</xref>]. Models of this class usually extract a number of features from sensory inputs in order to obtain a lower-dimensional representation that still carries information about spatial position in the environment but is invariant to everything else. Pure local view models do not comprise a path integration system and thus cannot fully explain oriospatial firing properties, e.g., in darkness. Pure path integration systems without external sensory input on the other hand accumulate errors, and hence a sensory coding mechanism, as proposed here, is necessary to complement any such model. Therefore, many models combine local view and path integration mechanisms [<xref ref-type="bibr" rid="pcbi-0030166-b041">41</xref>,<xref ref-type="bibr" rid="pcbi-0030166-b042">42</xref>], but here we focus only on local view models.</p><p>The model by Wyss et al. [<xref ref-type="bibr" rid="pcbi-0030166-b043">43</xref>] is based on similar principles as our model. It applies a learning rule based on temporal stability to natural stimuli, some of which are obtained from a robot. The resulting spatial representations are localized, resembling hippocampal place fields. The learning rule involves local memory, and no explicit sparsification method is applied. The fact that the resulting representations are localized is somewhat surprising, since by itself temporal stability does not lead to localized representations [<xref ref-type="bibr" rid="pcbi-0030166-b027">27</xref>]. This article does not investigate the influence of movement statistics on the learned representations.</p><p>The model by Sharp [<xref ref-type="bibr" rid="pcbi-0030166-b044">44</xref>] assumes abstract sensory inputs and acquires a place code by CL, resulting in units that code for views with similar input features. Thus, this model is similar to our model's last layer performing sparsification. Similarly to our results, the degree of head-direction invariance depends on the movement statistics. Unlike our results, however, this is not due to the temporal structure of input views but to the relative density with which orientation or position are sampled.</p><p>The work by Fuhs et al. [<xref ref-type="bibr" rid="pcbi-0030166-b045">45</xref>] uses realistic natural stimuli obtained by a robot and extracts “blobs” of uniform intensity with rectangular or oval shape from these images. Radial basis functions are tuned to blob parameters at specific views, and a CL scheme on these yields place cell-like representations. Our model agrees with their conclusion that rodents need no explicit object recognition in order to extract spatial information from natural visual stimuli.</p><p>The model by Brunel and Trullier [<xref ref-type="bibr" rid="pcbi-0030166-b046">46</xref>] investigates the head-direction dependency of simulated place fields using abstract local views as inputs. A recurrent network learns with an unsupervised Hebbian rule to associate local views with each other, so that their intrinsically directional place cells can become head-direction–invariant for maze positions with many rotations. The article also conjectures that movement patterns determine head-direction dependence of place cells, which is consistent with our results.</p><p>The results by de Araujo et al. [<xref ref-type="bibr" rid="pcbi-0030166-b047">47</xref>] suggest that the size of the rat's FOV is important for the distinction between spatial-view cells and place cells. With a large FOV (as for rats), the animal can see most landmarks from all orientations, while an animal with a small FOV (like a monkey) can only see a subset of all landmarks at each timepoint. We find no dependence of our results on the FOV size for values between 60° and 320° as long as the environment is rich enough (e.g., diverse textures, not a single cue card). Instead, our results suggest that differences in the movement statistics play a key role for establishing this difference.</p><p>To our knowledge, no prior model allows the learning of place cells, head-direction cells, and spatial-view cells with the same learning rule. Furthermore there are only a few models that allow clear theoretical predictions, learn oriospatial cells from (quasi) natural stimuli, and are based on a learning rule that is also known to model early visual processing well.</p></sec><sec id="s4b"><title>Future Perspectives</title><p>Our simulated visual stimuli come from a virtual reality environment which is completely static during the training of the virtual rat. In this case, the slowest features are position, orientation, or view direction, as shown before. However, the assumption that the environment remains unchanged during oriospatial cell learning certainly does not hold for the real world. A more realistic environment will include other changing variables such as lighting direction, pitch and roll of the head, etc. The impact of these variables on the model representations depends on the timescale on which the variables change. For instance, the additional white noise in all SFA layers of the model is ignored since it varies much more quickly than position and orientation, but the direction of sunlight might become the slowest feature. Generally, the SFA solutions will depend on any variable whose timescale is equal to or slower than the position and orientation of the animal. After the sparse coding step, representations become not only localized in position and/or head direction but in the other variables as well. This behavior is not consistent with the definition of an ideal place or head-direction cell. However, many experiments show correlations of place-cell firing with nonspatial variables as well [<xref ref-type="bibr" rid="pcbi-0030166-b041">41</xref>]. One particularly interesting instance of such a variable is “room identity.” If a rat experiences multiple environments, usually transitions between these will be seldom, i.e., the rat will more often turn and traverse a single room rather than switch rooms. In this case, room identity is encoded by the SFA outputs (unpublished data). For <italic>n</italic> rooms at most (<italic>n</italic> – 1) decorrelated SFA outputs can code for the room identity. The following outputs will then code for a joint representation of space and room identity. After sparse coding, many output units will fire in one room only (the less sparse ones in few rooms), and possibly in a completely unrelated fashion to their spatial firing patterns in another room. This behavior is consistent with the “remapping” phenomenon in place cells (e.g., [<xref ref-type="bibr" rid="pcbi-0030166-b048">48</xref>]).</p><p>A great amount of work has been done investigating the impact of environmental manipulations on oriospatial cell firing in <italic>known</italic> rooms, e.g., shifts and rotations of landmarks relative to each other [<xref ref-type="bibr" rid="pcbi-0030166-b041">41</xref>]. How would our model behave after such changes to the learned environment? Such transformations effectively lead to visual input stimuli outside the set of all possible views in the training environment. In this case, we expect the system's performance to deteriorate unless a new representation is learned, but more work is necessary to investigate this question.</p><p>Our approach predicts increasing slowness (i.e., decreasing Δ-values of firing rates) in the processing hierarchy between retina and hippocampus. Additionally, place cell and head-direction cell output should be significantly sparser than their inputs. Our main prediction is that changing movement statistics directly influences the invariance properties of oriospatial cells. For instance, an experiment in a linear track where the rat more often turns on mid-track should yield less head-direction–dependent place cells.</p><p>Our model is not limited to processing visual stimuli, as presented here, but can integrate other modalities as well. The integration of olfactory cues, for example, might lead to even more accurate representations and possibly to an independence of the model of visual stimuli (simulated darkness).</p><p>Experimentally, the joint positional and orientational dependence of oriospatial cells is hard to measure due to the size of the three-dimensional parameter space, and even more so if the development over time is to be measured. Furthermore, precise data on movement trajectories is rare in the existing literature on oriospatial cells. Accordingly, little data is available to verify or falsify our prediction of how the brain's oriospatial codes depend on the movement statistics. As an alternative to determining the movement statistics in behavioral tasks, some work has been done on passive movement of rats, where the movement statistics is completely controlled by the experimenter (e.g. [<xref ref-type="bibr" rid="pcbi-0030166-b049">49</xref>]), but these results might not be representative for voluntary motion [<xref ref-type="bibr" rid="pcbi-0030166-b050">50</xref>]. Markus et al. find directional place fields in the center of a plus maze, although more rotations occur in the center of the maze than in the arms [<xref ref-type="bibr" rid="pcbi-0030166-b011">11</xref>]. This could be a contradiction to our model, although the relative speed (which was not measured in [<xref ref-type="bibr" rid="pcbi-0030166-b011">11</xref>]) not the frequency determines head-direction invariance in our model. Overall, the dependence of oriospatial cells on the animal's movement statistics as proposed here remains to be tested experimentally.</p></sec><sec id="s4c"><title>Conclusion</title><p>We conclude that a purely sensory-driven unsupervised system can reproduce many properties of oriospatial cells in the rodent brain, including place cells, head-direction cells, spatial-view cells, and to some extent even grid cells. These different cell types can be modeled with the same system, and the output characteristics depend solely on the movement statistics of the virtual rat. Furthermore, we showed that the integration of vestibular acceleration information can be used to learn place cells and head-direction cells with the same movement statistics and thus at the same time.</p></sec></sec><sec id="s5"><title>Supporting Information</title><supplementary-material id="pcbi-0030166-sd001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.0030166.sd001" xlink:type="simple"><label>Protocol S1</label><caption><title>Proofs of Theorems for Optimization Problem 2</title><p>(98 KB PDF)</p></caption></supplementary-material></sec></body><back><ack><p>We thank Konrad Körding for discussions about the connection between slowness and place fields. This research was funded by the Volkswagen Foundation through a grant to LW for a junior research group.</p></ack><glossary><title>Abbreviations</title><def-list><def-item><term>CL</term><def><p>competitive learning</p></def></def-item><def-item><term>EC</term><def><p>entorhinal cortex</p></def></def-item><def-item><term>FOV</term><def><p>field of view</p></def></def-item><def-item><term>ICA</term><def><p>Independent Component Analysis</p></def></def-item><def-item><term>LRA</term><def><p>learning rate adaption</p></def></def-item><def-item><term>SFA</term><def><p>Slow Feature Analysis</p></def></def-item></def-list></glossary><ref-list><title>References</title><ref id="pcbi-0030166-b001"><label>1</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Berkes</surname><given-names>P</given-names></name><name name-style="western"><surname>Wiskott</surname><given-names>L</given-names></name></person-group>
					<year>2005</year>
					<article-title>Slow feature analysis yields a rich repertoire of complex cell properties.</article-title>
					<source>J Vision</source>
					<volume>5</volume>
					<fpage>579</fpage>
					<lpage>602</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b002"><label>2</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>O'Keefe</surname><given-names>J</given-names></name><name name-style="western"><surname>Dostrovsky</surname><given-names>J</given-names></name></person-group>
					<year>1971</year>
					<article-title>The hippocampus as a spatial map: Preliminary evidence from unit activity in the freely moving rat.</article-title>
					<source>Brain Res</source>
					<volume>34</volume>
					<fpage>171</fpage>
					<lpage>175</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b003"><label>3</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Taube</surname><given-names>JS</given-names></name><name name-style="western"><surname>Muller</surname><given-names>RU</given-names></name><name name-style="western"><surname>Ranck</surname><given-names>JB</given-names></name></person-group>
					<year>1990</year>
					<article-title>Head direction cells recorded from the postsubiculum in freely moving rats. I. Description and quantitative analysis.</article-title>
					<source>J Neurosci</source>
					<volume>2</volume>
					<fpage>420</fpage>
					<lpage>435</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b004"><label>4</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hafting</surname><given-names>T</given-names></name><name name-style="western"><surname>Fyhn</surname><given-names>M</given-names></name><name name-style="western"><surname>Molden</surname><given-names>S</given-names></name><name name-style="western"><surname>Moser</surname><given-names>M</given-names></name><name name-style="western"><surname>Moser</surname><given-names>EI</given-names></name></person-group>
					<year>2005</year>
					<article-title>Microstructure of a spatial map in the entorhinal cortex.</article-title>
					<source>Nature</source>
					<volume>436</volume>
					<fpage>801</fpage>
					<lpage>806</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b005"><label>5</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rolls</surname><given-names>ET</given-names></name></person-group>
					<year>1999</year>
					<article-title>Spatial view cells and the representation of place in the primate hippocampus.</article-title>
					<source>Hippocampus</source>
					<volume>9</volume>
					<fpage>467</fpage>
					<lpage>480</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b006"><label>6</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rolls</surname><given-names>ET</given-names></name></person-group>
					<year>2006</year>
					<article-title>Neurophysiological and computational analyses of the primate presubiculum, subiculum and related areas.</article-title>
					<source>Behav Brain Res</source>
					<volume>174</volume>
					<fpage>289</fpage>
					<lpage>303</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b007"><label>7</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hori</surname><given-names>E</given-names></name><name name-style="western"><surname>Nishio</surname><given-names>Y</given-names></name><name name-style="western"><surname>Kazui</surname><given-names>K</given-names></name><name name-style="western"><surname>Umeno</surname><given-names>K</given-names></name><name name-style="western"><surname>Tabuchi</surname><given-names>E</given-names></name><etal/></person-group>
					<year>2005</year>
					<article-title>Place-related neural responses in the monkey hippocampal formation in a virtual space.</article-title>
					<source>Hippocampus</source>
					<volume>15</volume>
					<fpage>991</fpage>
					<lpage>996</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b008"><label>8</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>O'Keefe</surname><given-names>J</given-names></name></person-group>
					<year>2007</year>
					<source>Hippocampal neurophysiology in the behaving animal</source>
					<publisher-loc>Oxford</publisher-loc>
					<publisher-name>Oxford University Press</publisher-name>
					<fpage>475</fpage>
					<lpage>548</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b009"><label>9</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sharp</surname><given-names>EP</given-names></name><name name-style="western"><surname>Blair</surname><given-names>HT</given-names></name><name name-style="western"><surname>Cho</surname><given-names>J</given-names></name></person-group>
					<year>2001</year>
					<article-title>The anatomical and computational basis of the rat head-direction cell signal.</article-title>
					<source>Trends Neurosci</source>
					<volume>24</volume>
					<fpage>289</fpage>
					<lpage>294</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b010"><label>10</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Taube</surname><given-names>JS</given-names></name><name name-style="western"><surname>Bassett</surname><given-names>JP</given-names></name></person-group>
					<year>2003</year>
					<article-title>Persistent neural activity in head direction cells.</article-title>
					<source>Cereb Cortex</source>
					<volume>13</volume>
					<fpage>1162</fpage>
					<lpage>1172</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b011"><label>11</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Markus</surname><given-names>EJ</given-names></name><name name-style="western"><surname>Qin</surname><given-names>YL</given-names></name><name name-style="western"><surname>Leonard</surname><given-names>B</given-names></name><name name-style="western"><surname>Skaggs</surname><given-names>WE</given-names></name><name name-style="western"><surname>McNaughton</surname><given-names>BL</given-names></name><etal/></person-group>
					<year>1995</year>
					<article-title>Interactions between location and task affect the spatial and directional firing of hippocampal neurons.</article-title>
					<source>J Neurosci</source>
					<volume>15</volume>
					<fpage>7079</fpage>
					<lpage>7094</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b012"><label>12</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sargolini</surname><given-names>F</given-names></name><name name-style="western"><surname>Fyhn</surname><given-names>M</given-names></name><name name-style="western"><surname>Hafting</surname><given-names>T</given-names></name><name name-style="western"><surname>McNaughton</surname><given-names>BL</given-names></name><name name-style="western"><surname>Witter</surname><given-names>MP</given-names></name><etal/></person-group>
					<year>2006</year>
					<article-title>Conjunctive representation of position, direction, and velocity in entorhinal cortex.</article-title>
					<source>Science</source>
					<volume>312</volume>
					<fpage>758</fpage>
					<lpage>762</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b013"><label>13</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Knierim</surname><given-names>JJ</given-names></name><name name-style="western"><surname>Kudrimoti</surname><given-names>HS</given-names></name><name name-style="western"><surname>McNaughton</surname><given-names>BL</given-names></name></person-group>
					<year>1995</year>
					<article-title>Place cells, head direction cells, and the learning of landmark stability.</article-title>
					<source>J Neurosci</source>
					<volume>15</volume>
					<fpage>1648</fpage>
					<lpage>1659</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b014"><label>14</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Jeffery</surname><given-names>KJ</given-names></name><name name-style="western"><surname>O'Keefe</surname><given-names>JM</given-names></name></person-group>
					<year>1999</year>
					<article-title>Learned interaction of visual and idiothetic cues in the control of place field orientation.</article-title>
					<source>Exp Brain Res</source>
					<volume>127</volume>
					<fpage>151</fpage>
					<lpage>161</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b015"><label>15</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Save</surname><given-names>E</given-names></name><name name-style="western"><surname>Nerad</surname><given-names>L</given-names></name><name name-style="western"><surname>Poucet</surname><given-names>B</given-names></name></person-group>
					<year>2000</year>
					<article-title>Contribution of multiple sensory information to place field stability in hippocampal place cells.</article-title>
					<source>Hippocampus</source>
					<volume>10</volume>
					<fpage>64</fpage>
					<lpage>76</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b016"><label>16</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Földiak</surname><given-names>P</given-names></name></person-group>
					<year>1991</year>
					<article-title>Learning invariance from transformation sequences.</article-title>
					<source>Neural Comput</source>
					<volume>3</volume>
					<fpage>194</fpage>
					<lpage>200</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b017"><label>17</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Mitchison</surname><given-names>G</given-names></name></person-group>
					<year>1991</year>
					<article-title>Removing time variation with the anti-hebbian differential synapse.</article-title>
					<source>Neural Comput</source>
					<volume>3</volume>
					<fpage>312</fpage>
					<lpage>320</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b018"><label>18</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Stone</surname><given-names>JV</given-names></name><name name-style="western"><surname>Bray</surname><given-names>A</given-names></name></person-group>
					<year>1995</year>
					<article-title>A learning rule for extracting spatio-temporal invariances.</article-title>
					<source>Network-Comp Neural</source>
					<volume>6</volume>
					<fpage>429</fpage>
					<lpage>436</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b019"><label>19</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Wiskott</surname><given-names>L</given-names></name></person-group>
					<year>1998</year>
					<article-title>Learning invariance manifolds. In: Niklasson L, Bodén M, Ziemke T, editors. London: Springer. pp. 555–560.</article-title>
				</element-citation></ref><ref id="pcbi-0030166-b020"><label>20</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Wiskott</surname><given-names>L</given-names></name><name name-style="western"><surname>Sejnowski</surname><given-names>T</given-names></name></person-group>
					<year>2002</year>
					<article-title>Slow feature analysis: Unsupervised learning of invariances.</article-title>
					<source>Neural Comput</source>
					<volume>14</volume>
					<fpage>715</fpage>
					<lpage>770</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b021"><label>21</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Olshausen</surname><given-names>BA</given-names></name><name name-style="western"><surname>Field</surname><given-names>DJ</given-names></name></person-group>
					<year>2004</year>
					<article-title>Sparse coding of sensory inputs.</article-title>
					<source>Curr Opin Neurobiol</source>
					<fpage>481</fpage>
					<lpage>487</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b022"><label>22</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hashimoto</surname><given-names>W</given-names></name></person-group>
					<year>2003</year>
					<article-title>Quadratic forms in natural images.</article-title>
					<source>Network-Comp Neural</source>
					<volume>14</volume>
					<fpage>765</fpage>
					<lpage>788</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b023"><label>23</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sprekeler</surname><given-names>H</given-names></name><name name-style="western"><surname>Michaelis</surname><given-names>C</given-names></name><name name-style="western"><surname>Wiskott</surname><given-names>L</given-names></name></person-group>
					<year>2007</year>
					<article-title>Slowness: An objective for spike-timing-plasticity?</article-title>
					<source>PLoS Comput Biol</source>
					<volume>3</volume>
					<elocation-id>112.</elocation-id>
				</element-citation></ref><ref id="pcbi-0030166-b024"><label>24</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Picard</surname><given-names>R</given-names></name><name name-style="western"><surname>Graczyk</surname><given-names>C</given-names></name><name name-style="western"><surname>Mann</surname><given-names>S</given-names></name><name name-style="western"><surname>Wachman</surname><given-names>J</given-names></name><name name-style="western"><surname>Picard</surname><given-names>L</given-names></name><etal/></person-group>
					<year>2002</year>
					<source>Vision texture</source>
					<comment>Available: <ext-link ext-link-type="uri" xlink:href="http://vismod.media.mit.edu/vismod/imagery/VisionTexture/vistex.html" xlink:type="simple">http://vismod.media.mit.edu/vismod/imagery/VisionTexture/vistex.html</ext-link>. Accessed 25 July 2007.</comment>
				</element-citation></ref><ref id="pcbi-0030166-b025"><label>25</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Hughes</surname><given-names>A</given-names></name></person-group>
					<year>1978</year>
					<article-title>A schematic eye for the rat.</article-title>
					<source>Vision Res</source>
					<volume>19</volume>
					<fpage>569</fpage>
					<lpage>588</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b026"><label>26</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Blaschke</surname><given-names>T</given-names></name><name name-style="western"><surname>Wiskott</surname><given-names>L</given-names></name></person-group>
					<year>2004</year>
					<article-title>Cubica: Independent component analysis by simultaneous third- and fourth-order cumulant diagonalization.</article-title>
					<source>IEEE T Signal Process</source>
					<volume>52</volume>
					<fpage>1250</fpage>
					<lpage>1256</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b027"><label>27</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Franzius</surname><given-names>M</given-names></name><name name-style="western"><surname>Vollgraf</surname><given-names>R</given-names></name><name name-style="western"><surname>Wiskott</surname><given-names>L</given-names></name></person-group>
					<year>2007</year>
					<article-title>From grids to places.</article-title>
					<source>J Comput Neurosci</source>
					<volume>22</volume>
					<fpage>297</fpage>
					<lpage>299</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b028"><label>28</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Berkes</surname><given-names>P</given-names></name><name name-style="western"><surname>Zito</surname><given-names>T</given-names></name></person-group>
					<year>2005</year>
					<source>Modular toolkit for data processing (version 2.0)</source>
					<comment>Available: <ext-link ext-link-type="uri" xlink:href="http://mdp-toolkit.sourceforge.net" xlink:type="simple">http://mdp-toolkit.sourceforge.net</ext-link>. Accessed 25 July 2007.</comment>
				</element-citation></ref><ref id="pcbi-0030166-b029"><label>29</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Wiskott</surname><given-names>L</given-names></name></person-group>
					<year>2003</year>
					<article-title>Slow feature analysis: A theoretical analysis of optimal free responses.</article-title>
					<source>Neural Comput</source>
					<volume>15</volume>
					<fpage>2147</fpage>
					<lpage>2177</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b030"><label>30</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Muller</surname><given-names>RU</given-names></name><name name-style="western"><surname>Kubie</surname><given-names>JL</given-names></name><name name-style="western"><surname>Ranck</surname><given-names>JB</given-names></name></person-group>
					<year>1987</year>
					<article-title>Spatial firing patterns of hippocampal complex-spike cells in a fixed environment.</article-title>
					<source>J Neurosci</source>
					<volume>7</volume>
					<fpage>1935</fpage>
					<lpage>1950</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b031"><label>31</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Muller</surname><given-names>R</given-names></name></person-group>
					<year>1996</year>
					<article-title>A quarter of a century of place cells.</article-title>
					<source>Neuron</source>
					<volume>17</volume>
					<fpage>813</fpage>
					<lpage>822</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b032"><label>32</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Rolls</surname><given-names>ET</given-names></name><name name-style="western"><surname>Xiang</surname><given-names>J</given-names></name><name name-style="western"><surname>Franco</surname><given-names>L</given-names></name></person-group>
					<year>2005</year>
					<article-title>Object, space, and object-space representations in the primate hippocampus.</article-title>
					<source>J Neurophysiol</source>
					<volume>94</volume>
					<fpage>833</fpage>
					<lpage>844</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b033"><label>33</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Muller</surname><given-names>RU</given-names></name><name name-style="western"><surname>Bostock</surname><given-names>E</given-names></name><name name-style="western"><surname>Taube</surname><given-names>JS</given-names></name><name name-style="western"><surname>Kubie</surname><given-names>JL</given-names></name></person-group>
					<year>1994</year>
					<article-title>On the directional firing properties of hippocampal place cells.</article-title>
					<source>J Neurosci</source>
					<volume>14</volume>
					<fpage>7235</fpage>
					<lpage>7251</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b034"><label>34</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Cacucci</surname><given-names>F</given-names></name><name name-style="western"><surname>Lever</surname><given-names>C</given-names></name><name name-style="western"><surname>Wills</surname><given-names>TJ</given-names></name><name name-style="western"><surname>Burgess</surname><given-names>N</given-names></name><name name-style="western"><surname>Keefe</surname><given-names>JO</given-names></name></person-group>
					<year>2004</year>
					<article-title>Theta-modulated place-by-direction cells in the hippocampal formation in the rat.</article-title>
					<source>J Neurosci</source>
					<volume>24</volume>
					<fpage>8265</fpage>
					<lpage>8277</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b035"><label>35</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sharp</surname><given-names>PE</given-names></name></person-group>
					<year>1996</year>
					<article-title>Multiple spatial/behavioral correlates for cells in the rat postsubiculum: Multiple regression analysis and comparison to other hippocampal areas.</article-title>
					<source>Cereb Cortex</source>
					<volume>6</volume>
					<fpage>238</fpage>
					<lpage>259</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b036"><label>36</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Stackman</surname><given-names>RW</given-names></name><name name-style="western"><surname>Zugaro</surname><given-names>MB</given-names></name></person-group>
					<year>2005</year>
					<article-title>Self-motion cues and resolving intermodality conflicts: Head direction cells, place cells, and behavior.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Wiener</surname><given-names>SI</given-names></name><name name-style="western"><surname>Taube</surname><given-names>JS</given-names></name></person-group>
					<source>Head direction cells and the neural mechanisms of spatial orientation</source>
					<publisher-loc>Cambridge (Massachusetts)</publisher-loc>
					<publisher-name>MIT Press</publisher-name>
					<fpage>137</fpage>
					<lpage>162</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b037"><label>37</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Skaggs</surname><given-names>WE</given-names></name><name name-style="western"><surname>Knierim</surname><given-names>JJ</given-names></name><name name-style="western"><surname>Kudrimoti</surname><given-names>HS</given-names></name><name name-style="western"><surname>McNaughton</surname><given-names>BL</given-names></name></person-group>
					<year>1995</year>
					<article-title>A model of the neural basis of the rat's sense of direction.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Tesauro</surname><given-names>G</given-names></name><name name-style="western"><surname>Touretzky</surname><given-names>DS</given-names></name><name name-style="western"><surname>Leen</surname><given-names>TK</given-names></name></person-group>
					<source>Advances in neural information processing systems 7</source>
					<publisher-loc>Cambridge (Massachusetts)</publisher-loc>
					<publisher-name>MIT Press</publisher-name>
					<fpage>173</fpage>
					<lpage>180</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b038"><label>38</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Kayser</surname><given-names>C</given-names></name><name name-style="western"><surname>Einhäuser</surname><given-names>W</given-names></name><name name-style="western"><surname>Dümmer</surname><given-names>O</given-names></name><name name-style="western"><surname>König</surname><given-names>P</given-names></name><name name-style="western"><surname>Körding</surname><given-names>K</given-names></name></person-group>
					<year>2001</year>
					<article-title>Extracting slow subspaces from natural videos leads to complex cells.</article-title>
					<source>Lect Notes Comput Sci</source>
					<fpage>1075</fpage>
					<lpage>1080</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b039"><label>39</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Lörincz</surname><given-names>A</given-names></name><name name-style="western"><surname>Buzsáki</surname><given-names>G</given-names></name></person-group>
					<year>2000</year>
					<article-title>Two-phase computational model training long-term memories in the entorhinal-hippocampal region.</article-title>
					<source>Ann N Y Acad Sci</source>
					<volume>911</volume>
					<fpage>83</fpage>
					<lpage>111</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b040"><label>40</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Oja</surname><given-names>E</given-names></name><name name-style="western"><surname>Karhunen</surname><given-names>J</given-names></name></person-group>
					<year>1995</year>
					<article-title>Signal separation by nonlinear hebbian learning.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Palaniswami</surname><given-names>M</given-names></name><name name-style="western"><surname>Attikiouzel</surname><given-names>Y</given-names></name><name name-style="western"><surname>Marks</surname><given-names>RJ</given-names><suffix>II</suffix></name><name name-style="western"><surname>Fogel</surname><given-names>D</given-names></name><name name-style="western"><surname>Fukuda</surname><given-names>T</given-names></name></person-group>
					<source>Computational intelligence: A dynamic system perspective</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>IEEE Press</publisher-name>
					<fpage>83</fpage>
					<lpage>97</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b041"><label>41</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Redish</surname><given-names>AD</given-names></name></person-group>
					<year>1999</year>
					<source>Beyond the cognitive map—From place cells to episodic memory</source>
					<publisher-loc>Cambridge (Massachusetts)</publisher-loc>
					<publisher-name>MIT Press</publisher-name>
				</element-citation></ref><ref id="pcbi-0030166-b042"><label>42</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>McNaughton</surname><given-names>BL</given-names></name><name name-style="western"><surname>Battaglia</surname><given-names>FP</given-names></name><name name-style="western"><surname>Jensen</surname><given-names>O</given-names></name><name name-style="western"><surname>Moser</surname><given-names>EI</given-names></name><name name-style="western"><surname>Moser</surname><given-names>MB</given-names></name></person-group>
					<year>2006</year>
					<article-title>Path integration and the neural basis of the “cognitive map.”.</article-title>
					<source>Nat Rev Neurosci</source>
					<volume>7</volume>
					<fpage>663</fpage>
					<lpage>678</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b043"><label>43</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Wyss</surname><given-names>R</given-names></name><name name-style="western"><surname>König</surname><given-names>P</given-names></name><name name-style="western"><surname>Verschure</surname><given-names>P</given-names></name></person-group>
					<year>2006</year>
					<article-title>A model of the ventral visual system based on temporal stability and local memory.</article-title>
					<source>PLoS Biology</source>
					<volume>4</volume>
					<elocation-id>120.</elocation-id>
				</element-citation></ref><ref id="pcbi-0030166-b044"><label>44</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Sharp</surname><given-names>EP</given-names></name></person-group>
					<year>1991</year>
					<article-title>Computer simulation of hippocampal place cells.</article-title>
					<source>Psychobiology</source>
					<volume>19</volume>
					<fpage>103</fpage>
					<lpage>115</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b045"><label>45</label><element-citation publication-type="other" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Fuhs</surname><given-names>MC</given-names></name><name name-style="western"><surname>Redish</surname><given-names>AD</given-names></name><name name-style="western"><surname>Touretzky</surname><given-names>DS</given-names></name></person-group>
					<year>1998</year>
					<article-title>A visually driven hippocampal place cell model.</article-title>
					<comment>In:</comment>
					<person-group person-group-type="editor"><name name-style="western"><surname>Bower</surname><given-names>J</given-names></name></person-group>
					<source>Computational neuroscience: Trends in research</source>
					<publisher-loc>New York</publisher-loc>
					<publisher-name>Plenum Publishing</publisher-name>
					<fpage>101</fpage>
					<lpage>106</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b046"><label>46</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Brunel</surname><given-names>N</given-names></name><name name-style="western"><surname>Trullier</surname><given-names>O</given-names></name></person-group>
					<year>1998</year>
					<article-title>Plasticity of directional place fields in a model of rodent CA3.</article-title>
					<source>Hippocampus</source>
					<volume>8</volume>
					<fpage>651</fpage>
					<lpage>665</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b047"><label>47</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>de Araujo</surname><given-names>IET</given-names></name><name name-style="western"><surname>Rolls</surname><given-names>ET</given-names></name><name name-style="western"><surname>Stringer</surname><given-names>SM</given-names></name></person-group>
					<year>2001</year>
					<article-title>A view model which accounts for the spatial fields of hippocampal primate spatial view cells and rat place cells.</article-title>
					<source>Hippocampus</source>
					<volume>11</volume>
					<fpage>699</fpage>
					<lpage>706</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b048"><label>48</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Muller</surname><given-names>RU</given-names></name><name name-style="western"><surname>Kubie</surname><given-names>JL</given-names></name></person-group>
					<year>1987</year>
					<article-title>The effects of changes in the environment on the spatial firing of hippocampal complex-spike cells.</article-title>
					<source>J Neurosci</source>
					<volume>7</volume>
					<fpage>1951</fpage>
					<lpage>1968</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b049"><label>49</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Gavrilov</surname><given-names>VV</given-names></name><name name-style="western"><surname>Wiener</surname><given-names>SI</given-names></name><name name-style="western"><surname>Berthoz</surname><given-names>A</given-names></name></person-group>
					<year>1998</year>
					<article-title>Discharge correlates of hippocampal complex spike neurons in behaving rats passively displaced on a mobile robot.</article-title>
					<source>Hippocampus</source>
					<volume>8</volume>
					<fpage>475</fpage>
					<lpage>490</lpage>
				</element-citation></ref><ref id="pcbi-0030166-b050"><label>50</label><element-citation publication-type="journal" xlink:type="simple">
					<person-group person-group-type="author"><name name-style="western"><surname>Song</surname><given-names>EY</given-names></name><name name-style="western"><surname>Kim</surname><given-names>YB</given-names></name><name name-style="western"><surname>Kim</surname><given-names>YH</given-names></name><name name-style="western"><surname>Jung</surname><given-names>MW</given-names></name></person-group>
					<year>2005</year>
					<article-title>Role of active movement in place-specific firing of hippocampal neurons.</article-title>
					<source>Hippocampus</source>
					<volume>15</volume>
					<fpage>8</fpage>
					<lpage>17</lpage>
				</element-citation></ref></ref-list></back></article>