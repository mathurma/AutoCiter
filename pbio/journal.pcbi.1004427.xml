<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research-article">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-14-02221</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1004427</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>A Theory of Cheap Control in Embodied Systems</article-title>
<alt-title alt-title-type="running-head">A Theory of Cheap Control in Embodied Systems</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<name name-style="western">
<surname>Montúfar</surname> <given-names>Guido</given-names></name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Ghazi-Zahedi</surname> <given-names>Keyan</given-names></name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Ay</surname> <given-names>Nihat</given-names></name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
<xref ref-type="aff" rid="aff003"><sup>3</sup></xref>
</contrib>
</contrib-group>
<aff id="aff001">
<label>1</label>
<addr-line>Max Planck Institute for Mathematics in the Sciences, 04103 Leipzig, Germany</addr-line>
</aff>
<aff id="aff002">
<label>2</label>
<addr-line>Department of Mathematics and Computer Science, Leipzig University, 04009 Leipzig, Germany</addr-line>
</aff>
<aff id="aff003">
<label>3</label>
<addr-line>Santa Fe Institute, Santa Fe, New Mexico, United States of America</addr-line>
</aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Bongard</surname> <given-names>Josh C.</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1">
<addr-line>University of Vermont, UNITED STATES</addr-line>
</aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<fn fn-type="con" id="contrib001">
<p>Conceived and designed the experiments: GM KGZ NA. Performed the experiments: GM KGZ. Analyzed the data: GM KGZ NA. Wrote the paper: GM KGZ NA.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">montufar@mis.mpg.de</email></corresp>
</author-notes>
<pub-date pub-type="collection">
<month>9</month>
<year>2015</year>
</pub-date>
<pub-date pub-type="epub">
<day>1</day>
<month>9</month>
<year>2015</year>
</pub-date>
<volume>11</volume>
<issue>9</issue>
<elocation-id>e1004427</elocation-id>
<history>
<date date-type="received">
<day>10</day>
<month>12</month>
<year>2014</year>
</date>
<date date-type="accepted">
<day>6</day>
<month>7</month>
<year>2015</year>
</date>
</history>
<permissions>
<copyright-year>2015</copyright-year>
<copyright-holder>Montúfar et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1004427" xlink:type="simple"/>
<abstract>
<p>We present a framework for designing cheap control architectures of embodied agents. Our derivation is guided by the classical problem of universal approximation, whereby we explore the possibility of exploiting the agent’s embodiment for a new and more efficient universal approximation of behaviors generated by sensorimotor control. This embodied universal approximation is compared with the classical non-embodied universal approximation. To exemplify our approach, we present a detailed quantitative case study for policy models defined in terms of conditional restricted Boltzmann machines. In contrast to non-embodied universal approximation, which requires an exponential number of parameters, in the embodied setting we are able to generate all possible behaviors with a drastically smaller model, thus obtaining cheap universal approximation. We test and corroborate the theory experimentally with a six-legged walking machine. The experiments indicate that the controller complexity predicted by our theory is close to the minimal sufficient value, which means that the theory has direct practical implications.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author Summary</title>
<p>Given a body and an environment, what is the brain complexity needed in order to generate a desired set of behaviors? The general understanding is that the physical properties of the body and the environment correlate with the required brain complexity. More precisely, it has been pointed that naturally evolved intelligent systems tend to exploit their embodiment constraints and that this allows them to express complex behaviors with relatively concise brains. Although this principle of parsimonious control has been formulated quite some time ago, only recently one has begun to develop the formalism that is required for making quantitative statements on the sufficient brain complexity given embodiment constraints. In this work we propose a precise mathematical approach that links the physical and behavioral constraints of an agent to the required controller complexity. As controller architecture we choose a well-known artificial neural network, the conditional restricted Boltzmann machine, and define its complexity as the number of hidden units. We conduct experiments with a virtual six-legged walking creature, which provide evidence for the accuracy of the theoretical predictions.</p>
</abstract>
<funding-group>
<funding-statement>This research was supported in part by DFG Priority Program Autonomous Learning (DFG- SPP 1527). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="9"/>
<table-count count="0"/>
<page-count count="22"/>
</counts>
<custom-meta-group>
<custom-meta id="data-availability" xlink:type="simple">
<meta-name>Data Availability</meta-name>
<meta-value>All relevant data are within the paper and its Supporting Information files.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>The goal of this article is to provide a framework that allows us to determine the complexity of a control architecture in accordance with the <italic>cheap design</italic> principle from embodied artificial intelligence [<xref ref-type="bibr" rid="pcbi.1004427.ref001">1</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref002">2</xref>]. Cheap design in this context refers to the relatively low complexity of the brain or controller in comparison with the complexity of an observed behavior. A classical example is given by the Braitenberg vehicles [<xref ref-type="bibr" rid="pcbi.1004427.ref003">3</xref>], which are <italic>Gedankenexperiments</italic> designed to show how a seemingly complex behavior can result from very simple control structures. Braitenberg discusses several artificial creatures with simple wirings between sensors and actuators. He then describes how these systems produce a behavior that an external observer would classify as complex if the internal wirings were not revealed. Most interestingly, he then relates the wiring of his vehicles to various neural structures in the human brain. The idea of a simple wiring that leads to complex behaviors is also discussed in [<xref ref-type="bibr" rid="pcbi.1004427.ref001">1</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref002">2</xref>], who present the walking behavior of an ant as an example. Without taking the embodiment and, in particular, the sensorimotor loop into account, the complex behavior (of a complex morphology) seems to require a complex control structure [<xref ref-type="bibr" rid="pcbi.1004427.ref002">2</xref>]. A strong indication that cheap design is a common principle in biological systems is given by the fact that the human brain accounts for only 2% of the body mass but is responsible for 20% of the entire energy consumption [<xref ref-type="bibr" rid="pcbi.1004427.ref004">4</xref>], which is also remarkably constant [<xref ref-type="bibr" rid="pcbi.1004427.ref005">5</xref>]. Further support for cheap design as a common principle is given by a recent study on the brain sizes of migrating birds. It is known that migrating birds have a reduced brain size compared with their resident relatives. Sol et al. [<xref ref-type="bibr" rid="pcbi.1004427.ref006">6</xref>] have studied various species and the affected brain regions and point out that the reduced brain sizes could be a direct result from the need to reduce energetic, metabolic and cognitive costs for migrating birds.</p>
<p>It is generally believed that cheap design of control architectures is possible whenever the morphology of the system can contribute to the control of behaviors, which is referred to as <italic>morphological computation</italic> [<xref ref-type="bibr" rid="pcbi.1004427.ref007">7</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref008">8</xref>]. This kind of computation can be illustrated in the context of the human walking behavior, which only needs to be actively controlled during the stance phase. The swing phase results mainly from the interaction of the physical properties of the leg with the environment (gravity). This is demonstrated by the Passive Dynamic Walker [<xref ref-type="bibr" rid="pcbi.1004427.ref009">9</xref>], which is a purely mechanical system that resembles the physical properties of human legs. The human walking behavior is emulated as a result of the interaction of the mechanical system with its environment (gravity and a slope). It is an extreme example of cheap design that requires no active control at all.</p>
<p>Morphological computation has been identified as a prime concept within the field of embodied cognition about two decades ago [<xref ref-type="bibr" rid="pcbi.1004427.ref007">7</xref>]. However, only recently one has begun to develop a theoretical understanding of this concept [<xref ref-type="bibr" rid="pcbi.1004427.ref010">10</xref>–<xref ref-type="bibr" rid="pcbi.1004427.ref015">15</xref>]. Currently, the field does not provide sufficiently conclusive definitions that would allow us to analytically reveal the design principles of cheap control based on high values of morphological computation. Experimental evidence of such a coupling has been provided in evolutionary settings. For instance, the work of Auerbach and Bongard [<xref ref-type="bibr" rid="pcbi.1004427.ref016">16</xref>] shows that complex environments increase the selection pressure for complex morphologies, given a low-complexity controller. This suggests an evolutionary coupling between morphological computation and cheap design.</p>
<p>We are interested in quantifying to what extent a control structure can be reduced if the physical constraints are taken into account. Above, we referred to a system as cheaply designed, if it has a control structure of low complexity that produces behaviors which an external observer would classify as complex. In this work, we are not concerned with the complexity of the behavior. Instead, we present an approach to determine the minimal complexity of a control structure that is able to produce a given set of desired behaviors with a given morphology in a given environment. In other words, rather than comparing the complexities of the control structure and the behavior, we ask: what is the minimal brain complexity (or size) that can control all (desired) behaviors that are possible with the body in a given environment?</p>
<p>We follow a bottom-up–understanding by building–approach to cognitive science [<xref ref-type="bibr" rid="pcbi.1004427.ref017">17</xref>], which is also known as behavior-based robotics [<xref ref-type="bibr" rid="pcbi.1004427.ref018">18</xref>] and embodied artificial intelligence [<xref ref-type="bibr" rid="pcbi.1004427.ref001">1</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref002">2</xref>]. The core concept is that cognitive systems are considered as embedded and situated agents which cannot be understood if they are detached from the sensorimotor loop. This implicitly means that we assume sensor state sparsity and continuity of physical constraints. Consider the human retina as an example. We do not see random images but structured patterns and, moreover, the sequence of these patterns is also highly dependent on our behavior. This behavior-dependent structuring of information is also known as <italic>information self-structuring</italic> and has been identified as one of the key principles of learning and development [<xref ref-type="bibr" rid="pcbi.1004427.ref019">19</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref020">20</xref>]. The second implication from the sensorimotor loop is continuity, e.g. natural systems are unable to teleport themselves from one place to another. Therefore, we can safely assume that the world around us will not be too different from the recent past and the recent future.</p>
<p>The sensorimotor loop (SML) [<xref ref-type="bibr" rid="pcbi.1004427.ref021">21</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref022">22</xref>] is described by a type of partially observable Markov decision process (POMDP) where an embodied agent chooses actions based on noisy partial observations of its environment. An illustration of this causal structure is given in <xref ref-type="fig" rid="pcbi.1004427.g001">Fig 1</xref>. We aim at optimizing the design of policy models for controlling these processes. One aspect of the optimal design problem is addressed by working out the optimal complexity of the policy model. In particular, we are interested in the minimal number of units or parameters needed in order to obtain an artificial neural network that can represent or approximate a desired set of behaviors. A first step towards resolving this problem is to address the minimal size of a universal approximator of policies. In realistic scenarios, universal approximation is out of question, since it demands an enormous number of parameters, many more than actually needed. In this paper we reconsider the universal approximation problem by exploiting embodiment constraints and restrictions in the desired behavioral patterns.</p>
<fig id="pcbi.1004427.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g001</object-id>
<label>Fig 1</label>
<caption>
<title>Sensorimotor loop.</title>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g001"/>
</fig>
<p>We introduce the notions of <italic>embodied behavior dimension</italic> and <italic>embodied universal approximation</italic>, which quantify the effective dimension of a system that is subject to sensorimotor constraints (embodiment) and formalize the minimal control paradigm of cheap design in the context of the sensorimotor loop. We substantiate these ideas with theoretical results on the representational capabilities of conditional restricted Boltzmann machines (CRBMs) as policy models for embodied systems. CRBMs are artificial stochastic neural networks where the input and output units are connected in a bipartite and undirected manner to a set of hidden units. Given the embodied behavior dimension, we derive bounds on the number of hidden units of CRBMs that is sufficient to generate a set of behaviors by appropriate tuning of interaction weights and biases. In order to test our theory, we present an experimental study with a six-legged walking robot and find a clear corroboration. The experiments indicate that the sufficient controller complexity bounds predicted by our theory are tight, which means that the theory has direct practical implications.</p>
<p>CRBMs are defined by clamping an <italic>input</italic> subset of the visible units of a restricted Boltzmann machine (RBM) [<xref ref-type="bibr" rid="pcbi.1004427.ref023">23</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref024">24</xref>]. Conditional models of this kind have found a wide range of applications, e.g., in classification, collaborative filtering, and motion modeling [<xref ref-type="bibr" rid="pcbi.1004427.ref025">25</xref>–<xref ref-type="bibr" rid="pcbi.1004427.ref028">28</xref>], and have proven useful as policy models in reinforcement learning settings [<xref ref-type="bibr" rid="pcbi.1004427.ref029">29</xref>]. These networks can be trained efficiently [<xref ref-type="bibr" rid="pcbi.1004427.ref030">30</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref031">31</xref>] and are well known in the context of learning representations and deep learning [<xref ref-type="bibr" rid="pcbi.1004427.ref032">32</xref>]. Although estimating the probability distributions represented by RBMs is hard [<xref ref-type="bibr" rid="pcbi.1004427.ref033">33</xref>], approximate samples can be generated easily from a finite Gibbs sampling procedure. The theory and in particular the expressive power of RBM probability models has been studied in numerous papers [<xref ref-type="bibr" rid="pcbi.1004427.ref034">34</xref>–<xref ref-type="bibr" rid="pcbi.1004427.ref037">37</xref>]. Recently also the representational power of CRBMs has been studied in detail [<xref ref-type="bibr" rid="pcbi.1004427.ref038">38</xref>]. CRBMs can model non-trivial conditional distributions on high-dimensional input-output spaces using relatively few parameters, and their complexity can be adjusted by simply increasing or decreasing the number of hidden units. Hence we chose this model class for illustrating our discussion about the complexity of SML control problems.</p>
<p>This paper is organized as follows. Section “The Causal Structure of the Sensorimotor Loop” contains a description of the sensorimotor loop. Section “From Policies to Behaviors” presents the notions of embodied behavior dimension and embodied universal approximation. In section “Cheap Representation of Embodied Behaviors” we use these two notions in order quantify and enforce dimensionality reduction. Section “A Case Study with Conditional Restricted Boltzmann Machines” contains our theoretical discussion on the representational power of CRBM models, comparing the non-embodied and the embodied settings. Section “Experiments with a Hexapod” validates the theory experimentally. In “Discussion” we offer our conclusions and outlook. In the Supporting Information <xref ref-type="supplementary-material" rid="pcbi.1004427.s007">S1</xref>–<xref ref-type="supplementary-material" rid="pcbi.1004427.s010">S4</xref> Videos show the walking hexapod controlled by four CRBMs of different complexity, <xref ref-type="supplementary-material" rid="pcbi.1004427.s001">S1 Text</xref> contains technical proofs, <xref ref-type="supplementary-material" rid="pcbi.1004427.s002">S2 Text</xref> contains details about the estimation of the embodied behavior dimension, and <xref ref-type="supplementary-material" rid="pcbi.1004427.s003">S3 Text</xref> discusses possible generalizations of the ideas presented in the main part of the paper.</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Methods</title>
<sec id="sec003">
<title>The Causal Structure of the Sensorimotor Loop</title>
<p>What is an embodied agent? In order to develop a theory of embodied agents that allows us to cast the core principles of the field of embodied intelligence into rigorous theoretical and quantitative statements, we need an appropriate formal model. Such a model should be general enough to be applicable to all kinds of embodied agents, including natural as well as artificial ones, and specific enough to capture the essential aspects of embodiment. How should such a model look like? First of all, obviously, an embodied agent has a body. This body is situated in an environment with which the agent can interact, thereby generating some behavior. In order to be useful, this behavior has to be guided or controlled by the agent’s brain or controller. Drawing the boundary between the brain on one side and the body, together with the environment, on the other side suggests a black box perspective of the brain. The brain receives sensor signals from and sends effector or actuator signals to the outside world. All it knows from the world is based on this closed loop of signal transmission. In other words, the world is a black box for the brain with which it interacts through sensing and acting. In particular, the boundary between the body and the environment is not directly “visible” for the brain. Both are parts of that black box and interact with the brain in an entangled way. Therefore, we consider them as being one entity, the outside world or simply the world. The brain is causally independent of the world, given the sensor signals, and the world is causally independent of the brain, given the actuator signals. This is the black box perspective.</p>
<p>Let us now develop a formal description of this sensorimotor loop. We denote the set of world states by 𝒲. This set can be, for instance, the position of a robot in a static 3D environment. Information from the world is transmitted to the brain through sensors. Denoting the set of sensor states by 𝒮, we can consider the sensor to be an information transmission channel from 𝒲 to 𝒮 as it is defined within information theory [<xref ref-type="bibr" rid="pcbi.1004427.ref039">39</xref>]. Given a world state <italic>w</italic> ∈ 𝒲, the response of the sensor can be characterized by a probability distribution <italic>β</italic>(<italic>w</italic>; <italic>ds</italic>) of possible sensor states <italic>s</italic> ∈ 𝒮 as result of <italic>w</italic>. For instance, if the sensor is noisy, then its response will not be uniquely determined. If the sensor is noiseless, that is, deterministic, then there will be only one sensor state as possible response to the world state <italic>w</italic>. In any case, the response of the sensor given <italic>w</italic> can be described in terms of a Markov kernel
<disp-formula id="pcbi.1004427.e001"><alternatives><graphic id="pcbi.1004427.e001g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e001"/><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mi>β</mml:mi> <mml:mspace width="1pt"/> <mml:mo>:</mml:mo> <mml:mspace width="0.277778em"/><mml:mo>𝒲</mml:mo> <mml:mspace width="0.277778em"/><mml:mo>⟶</mml:mo> <mml:mspace width="0.277778em"/><mml:msub><mml:mo>Δ</mml:mo> <mml:mo>𝒮</mml:mo></mml:msub> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
where Δ<sub>𝒮</sub> denotes the set of probability distributions on the set 𝒮 of sensor states. The set of all such sensor channels is denoted by <inline-formula id="pcbi.1004427.e002"><alternatives><graphic id="pcbi.1004427.e002g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e002"/><mml:math id="M2" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒮</mml:mo> <mml:mo>𝒲</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>. Whenever the base set 𝒮 is discrete, we simply write <italic>s</italic> instead of <italic>ds</italic> and <italic>β</italic>(<italic>w</italic>; <italic>s</italic>) instead of <italic>β</italic>(<italic>w</italic>; <italic>ds</italic>). Note that, as a Markov kernel, <italic>β</italic> satisfies various measure-theoretic conditions (positivity, normalization, measurability; for the technical definitions of Markov kernels see, e.g., [<xref ref-type="bibr" rid="pcbi.1004427.ref040">40</xref>]). Markov kernels are closely related to conditional probabilities, which would justify the notation <italic>p</italic>(<italic>s</italic>∣<italic>w</italic>) instead of <italic>β</italic>(<italic>w</italic>; <italic>s</italic>). However, we prefer the latter notation. Following Pearl’s concept of causal networks [<xref ref-type="bibr" rid="pcbi.1004427.ref041">41</xref>], the Markov kernels formalize the mechanisms of the sensorimotor loop. This means that the Markov kernels play the more fundamental role, and we want to distinguish this role also by the notation. Once the mechanisms are defined, they generate distributions so that we can also compute the conditional distributions from them. For instance, one could compute the conditional distribution <italic>p</italic>(<italic>s</italic>∣<italic>w</italic>) and compare this with the mechanism <italic>β</italic>(<italic>w</italic>; <italic>s</italic>). Clearly, they coincide whenever <italic>p</italic>(<italic>w</italic>) &gt; 0, which we consider as a consistency property. However, there is an important difference, reflecting the fact that <italic>β</italic> is a mechanism: it is defined for <italic>all</italic> <italic>w</italic>. If the behavior of an agent is restricted to only a few world states, then the conditional distribution <italic>p</italic>(<italic>s</italic>∣<italic>w</italic>) will be defined only for these world states.</p>
<p>After having described the mathematical model of a sensor in detail, it is now straightforward to consider a corresponding formalization of the other components of the sensorimotor loop. We continue with the notion of a policy. The agent can generate an effect in the world in terms of its actuators. Since we consider the body as part of the world, this can lead, for instance, to some body movement of the agent. In order to guide this movement, it is beneficial for the agent to choose its actuator state based on the information about the world received through its sensors. Denoting the state set of the actuators by 𝒜, we can again consider a channel from 𝒮 to 𝒜 as formal model of a policy, represented by a Markov kernel
<disp-formula id="pcbi.1004427.e003"><alternatives><graphic id="pcbi.1004427.e003g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e003"/><mml:math id="M3" display="block" overflow="scroll"><mml:mrow><mml:mi>π</mml:mi> <mml:mspace width="1pt"/> <mml:mo>:</mml:mo> <mml:mspace width="0.277778em"/><mml:mo>𝒮</mml:mo> <mml:mspace width="0.277778em"/><mml:mo>⟶</mml:mo> <mml:mspace width="0.277778em"/><mml:msub><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo></mml:msub> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
where Δ<sub><italic>𝒜</italic></sub> denotes the set of probability distributions on 𝒜. Note that this definition of a policy also allows us to consider a random choice of actions, leading to so-called non-deterministic policies. The set of policies is denoted by <inline-formula id="pcbi.1004427.e004"><alternatives><graphic id="pcbi.1004427.e004g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e004"/><mml:math id="M4" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo><mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>. Finally, we consider the change of the world state from <italic>w</italic> to <italic>w</italic>′ in the context of an actuator state 𝒶 as a channel, denoted by <italic>α</italic>, which assigns a distribution <italic>α</italic>(<italic>w</italic>, <italic>a</italic>; <italic>dw</italic>′) to <italic>w</italic>, <italic>a</italic>. With the set Δ<sub>𝒲</sub> of probability distributions on 𝒲, we have
<disp-formula id="pcbi.1004427.e005"><alternatives><graphic id="pcbi.1004427.e005g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e005"/><mml:math id="M5" display="block" overflow="scroll"><mml:mrow><mml:mi>α</mml:mi> <mml:mspace width="1pt"/> <mml:mo>:</mml:mo> <mml:mspace width="0.277778em"/><mml:mo>𝒲</mml:mo> <mml:mo>×</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mspace width="0.277778em"/><mml:mo>⟶</mml:mo> <mml:mspace width="0.277778em"/><mml:msub><mml:mo>Δ</mml:mo> <mml:mo>𝒲</mml:mo></mml:msub> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
We refer to <italic>α</italic> as <italic>world channel</italic> and denote the set of all world channels by <inline-formula id="pcbi.1004427.e006"><alternatives><graphic id="pcbi.1004427.e006g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e006"/><mml:math id="M6" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒲</mml:mo> <mml:mrow><mml:mo>𝒲</mml:mo> <mml:mo>×</mml:mo> <mml:mo>𝒜</mml:mo></mml:mrow> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>. Similar causal structures, involving Markov kernels, have been considered in the general context of control and systems theory [<xref ref-type="bibr" rid="pcbi.1004427.ref042">42</xref>] as well as in the context of population dynamics [<xref ref-type="bibr" rid="pcbi.1004427.ref043">43</xref>].</p>
</sec>
<sec id="sec004">
<title>From Policies to Behaviors</title>
<p>We have defined three mechanisms that are involved in a (reactive) sensorimotor loop of an embodied agent. Clearly, the agent’s embodiment poses constraints to this loop, which we attribute to the mechanisms <italic>β</italic> and <italic>α</italic>. The agent is equipped with these mechanisms, but they are both considered to be determined and not modifiable by the agent. On the other hand, the policy <italic>π</italic> can be modified by the agent in terms of learning processes. In order to describe the process of interaction of the agent with the world, we have to sequentially apply the individual mechanisms in the right order. Starting with an initial world state <italic>w</italic><sup><italic>t</italic></sup> at time <italic>t</italic>, first the sensor state <italic>s</italic><sup><italic>t</italic></sup> is generated in terms of the channel <italic>β</italic>. Then, based on the state of the sensor, an actuator state <italic>a</italic><sup><italic>t</italic></sup> is chosen according to the policy <italic>π</italic>. Finally, the world makes a transition, governed by <italic>α</italic>, from the state <italic>w</italic><sup><italic>t</italic></sup> to a new state <italic>w</italic><sup><italic>t</italic>+1</sup>, which is influenced by the actuator state <italic>a</italic><sup><italic>t</italic></sup> of the agent. Altogether, this defines the combined mechanism
<disp-formula id="pcbi.1004427.e007"><alternatives><graphic id="pcbi.1004427.e007g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e007"/><mml:math id="M7" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>s</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>a</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mrow><mml:mi>t</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>≔</mml:mo> <mml:mspace width="0.166667em"/><mml:mi>β</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>s</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mi>π</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>s</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>a</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mi>α</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>a</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mrow><mml:mi>t</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(1)</label></disp-formula>
Note that we consider <italic>β</italic> and <italic>α</italic> fixed and therefore emphasize only the dependence on <italic>π</italic>. Now, with the new state <italic>w</italic><sup><italic>t</italic>+1</sup> of the world, the three steps are iterated. This generates a process which is shown in <xref ref-type="fig" rid="pcbi.1004427.g002">Fig 2</xref>. Formally, the process is a probability distribution over trajectories that start with <italic>w</italic><sup>0</sup>:
<disp-formula id="pcbi.1004427.e008"><alternatives><graphic id="pcbi.1004427.e008g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e008"/><mml:math id="M8" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mi>w</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:msup><mml:mi>s</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>a</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mn>1</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:msup><mml:mi>s</mml:mi> <mml:mn>1</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>a</mml:mi> <mml:mn>1</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:msup><mml:mi>s</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>a</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mn>3</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:mo>…</mml:mo> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:msup><mml:mi>s</mml:mi> <mml:mrow><mml:mi>T</mml:mi> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>a</mml:mi> <mml:mrow><mml:mi>T</mml:mi> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msup> <mml:mo>,</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mi>T</mml:mi></mml:msup> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(2)</label></disp-formula>
In order to describe this probability distribution, we have to iterate the mechanism <xref ref-type="disp-formula" rid="pcbi.1004427.e007">Eq (1)</xref> by multiplication:
<disp-formula id="pcbi.1004427.e009"><alternatives><graphic id="pcbi.1004427.e009g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e009"/><mml:math id="M9" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>s</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>a</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mn>1</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mo>…</mml:mo> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>s</mml:mi> <mml:mrow><mml:mi>T</mml:mi> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>a</mml:mi> <mml:mrow><mml:mi>T</mml:mi> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mi>T</mml:mi></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.277778em"/><mml:mo>≔</mml:mo> <mml:mspace width="0.277778em"/><mml:munderover><mml:mo>∏</mml:mo> <mml:mrow><mml:mi>t</mml:mi> <mml:mo>=</mml:mo> <mml:mn>0</mml:mn></mml:mrow> <mml:mrow><mml:mi>T</mml:mi> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:munderover> <mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>s</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>a</mml:mi> <mml:mi>t</mml:mi></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mrow><mml:mi>t</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(3)</label></disp-formula></p>
<fig id="pcbi.1004427.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Causal structure of the reactive SML.</title>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g002"/>
</fig>
<p>Now, what aspects of the sequence <xref ref-type="disp-formula" rid="pcbi.1004427.e008">Eq (2)</xref> represent the behavior of the agent? Let us consider, for instance, a walking behavior. It is given as a movement of the agent’s body in physical space, which is completely determined by the world process. Remember that the body is part of the world. Clearly, the particular sequence of sensor and actuator states does not matter as long as they contribute to the generation of the same body movement. Therefore, we consider the world process <italic>w</italic><sup><italic>t</italic></sup> as the one in which behavior takes place and marginalize out the other processes from <xref ref-type="disp-formula" rid="pcbi.1004427.e009">Eq (3)</xref>, which leads to:
<disp-formula id="pcbi.1004427.e010"><alternatives><graphic id="pcbi.1004427.e010g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e010"/><mml:math id="M10" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mn>1</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mo>…</mml:mo> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mi>T</mml:mi></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(4)</label></disp-formula>
One can show that, with weak assumptions, the limit for <italic>T</italic> → ∞ exists, so that we can write
<disp-formula id="pcbi.1004427.e011"><alternatives><graphic id="pcbi.1004427.e011g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e011"/><mml:math id="M11" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mn>1</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mo>…</mml:mo> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
which is a Markov kernel from an initial world state <italic>w</italic><sup>0</sup> to the set of all infinite future sequences <italic>w</italic><sup>1</sup>, <italic>w</italic><sup>2</sup>, …. Denoting the set of such Markov kernels by <inline-formula id="pcbi.1004427.e012"><alternatives><graphic id="pcbi.1004427.e012g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e012"/><mml:math id="M12" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:msup><mml:mo>𝒲</mml:mo> <mml:mo>∞</mml:mo></mml:msup><mml:mo>𝒲</mml:mo> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, we can formalize the <italic>policy-behavior map</italic>, which assigns to each policy the corresponding behavior:
<disp-formula id="pcbi.1004427.e013"><alternatives><graphic id="pcbi.1004427.e013g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e013"/><mml:math id="M13" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>ψ</mml:mi> <mml:mi>∞</mml:mi></mml:msub> <mml:mspace width="1pt"/> <mml:mo>:</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:mo>⟶</mml:mo> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:msubsup><mml:mo>Δ</mml:mo> <mml:msup><mml:mrow><mml:mo>𝒲</mml:mo></mml:mrow> <mml:mi>∞</mml:mi></mml:msup> <mml:mo>𝒲</mml:mo></mml:msubsup> <mml:mo>,</mml:mo> <mml:mspace width="2.em"/><mml:mi>π</mml:mi> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:mo>↦</mml:mo> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>w</mml:mi> <mml:mn>0</mml:mn></mml:msup> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mn>1</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:mo>,</mml:mo> <mml:mo>…</mml:mo> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(5)</label></disp-formula>
Two policies <italic>π</italic><sub>1</sub> and <italic>π</italic><sub>2</sub> will be considered equivalent, if they generate the same behavior, that is,
<disp-formula id="pcbi.1004427.e014"><alternatives><graphic id="pcbi.1004427.e014g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e014"/><mml:math id="M14" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>ψ</mml:mi> <mml:mi>∞</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>π</mml:mi> <mml:mn>1</mml:mn></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.277778em"/><mml:mo>=</mml:mo> <mml:mspace width="0.277778em"/><mml:msub><mml:mi>ψ</mml:mi> <mml:mi>∞</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>π</mml:mi> <mml:mn>2</mml:mn></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(6)</label></disp-formula>
We argue that embodiment constraints render many policies equivalent. We can exploit this fact in order to design a concise control architecture. This will lead to a quantitative treatment of the notion of cheap design within the field of embodied intelligence. Let us treat this systems design problem in a more rigorous way. As we pointed out, the agent is equipped with the mechanisms <italic>β</italic> and <italic>α</italic> which constitute the embodiment of the agent. In a biological system these mechanisms will change due to developmental processes. However, we want to restrict our attention to the learning processes and disentangle them from developmental processes by assuming that the latter ones have already converged and therefore consider them as fixed. Learning refers to a process in which the policy is changing in time. Clearly, in order to model this change the agent has to be equipped with a family of possible policies, which we denote by 𝓜, and refer to as <italic>policy model</italic>. For instance, we can consider a neural network as a policy model that is parametrized by synaptic weights and threshold values for the individual neurons. Changing the weights and the thresholds will lead to a change of the policy (although there may be degeneracies, in general). In any case, going through all the possible parameter values will generate a set 𝓜 of policies with which the agent is equipped for its behavior.</p>
<p>Intuitively, it is clear that the embodiment constraints cause restrictions in the set of behaviors that an agent can realize. For example, inertia restricts the pace at which an embodied system can change its direction of motion (imagine a train switching the traveling direction instantaneously). In turn, not all world-state transitions may be possible in a single time step, regardless of what the policy specifies as a desirable action to take. These restrictions create a bottleneck between the set of policies on one side and the set of possible behaviors on the other. The consequence is that, generically, infinitely many policies parametrize the same behavior, in the sense of <xref ref-type="disp-formula" rid="pcbi.1004427.e014">Eq (6)</xref>. Therefore, it should be possible to find a concise model 𝓜 that is capable of generating all possible behaviors. In particular, we consider a model 𝓜 that satisfies
<disp-formula id="pcbi.1004427.e015"><alternatives><graphic id="pcbi.1004427.e015g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e015"/><mml:math id="M15" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>ψ</mml:mi> <mml:mi>∞</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mover><mml:mo>𝓜</mml:mo> <mml:mo>¯</mml:mo></mml:mover> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.277778em"/><mml:mo>=</mml:mo> <mml:mspace width="0.277778em"/><mml:msub><mml:mi>ψ</mml:mi> <mml:mi>∞</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
where <inline-formula id="pcbi.1004427.e016"><alternatives><graphic id="pcbi.1004427.e016g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e016"/><mml:math id="M16" display="inline" overflow="scroll"><mml:mrow><mml:mover><mml:mo>𝓜</mml:mo> <mml:mo accent="true">¯</mml:mo></mml:mover></mml:mrow></mml:math></alternatives></inline-formula> denotes the set of limit points of 𝓜. We refer to this property of 𝓜 as being an <italic>embodied universal approximator</italic>. In order to highlight the exploitation of embodiment constraints for cheap design, we compare this kind of universal approximation to the standard notion of universal approximation, <inline-formula id="pcbi.1004427.e017"><alternatives><graphic id="pcbi.1004427.e017g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e017"/><mml:math id="M17" display="inline" overflow="scroll"><mml:mrow><mml:mover><mml:mo>𝓜</mml:mo> <mml:mo accent="true">¯</mml:mo></mml:mover> <mml:mo>=</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo><mml:mo>𝒮</mml:mo> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, which we refer to as <italic>non-embodied universal approximation</italic>.</p>
</sec>
<sec id="sec005">
<title>Cheap Representation of Embodied Behaviors</title>
<p>If we understand the way in which different policies are mapped to the same, or to different, behaviors, then we can parametrize all the behaviors that can possibly emerge in the SML by a low-dimensional (or low-complexity) set of policies. We develop the necessary tools in this section. For clarity we will focus on the reactive SML with <italic>finite</italic> sensor and actuator state spaces but allowing the possibility of a continuous world state. In particular we will use <italic>β</italic>(<italic>w</italic>; <italic>s</italic>) instead of <italic>β</italic>(<italic>w</italic>; <italic>ds</italic>) and <italic>π</italic>(<italic>s</italic>; <italic>a</italic>) instead of <italic>π</italic>(<italic>s</italic>; <italic>da</italic>). Possible generalizations of these settings are discussed in supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s003">S3 Text</xref>. See <xref ref-type="supplementary-material" rid="pcbi.1004427.s006">S3 Fig</xref> for an illustration of a generalization to non-reactive systems.</p>
<p>For a reactive SML, the condition stated in <xref ref-type="disp-formula" rid="pcbi.1004427.e014">Eq (6)</xref> is equivalent to
<disp-formula id="pcbi.1004427.e018"><alternatives><graphic id="pcbi.1004427.e018g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e018"/><mml:math id="M18" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mo>ℙ</mml:mo> <mml:msub><mml:mi>π</mml:mi> <mml:mn>1</mml:mn></mml:msub></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.277778em"/><mml:mo>=</mml:mo> <mml:mspace width="0.277778em"/><mml:msup><mml:mo>ℙ</mml:mo> <mml:msub><mml:mi>π</mml:mi> <mml:mn>2</mml:mn></mml:msub></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
where
<disp-formula id="pcbi.1004427.e019"><alternatives><graphic id="pcbi.1004427.e019g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e019"/><mml:math id="M19" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:munder><mml:mo>∑</mml:mo> <mml:mrow><mml:mi>s</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝒮</mml:mo></mml:mrow></mml:munder> <mml:munder><mml:mo>∑</mml:mo> <mml:mrow><mml:mi>a</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝒜</mml:mo></mml:mrow></mml:munder> <mml:mi>β</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>;</mml:mo> <mml:mi>s</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>π</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>;</mml:mo> <mml:mi>a</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>α</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>,</mml:mo> <mml:mi>a</mml:mi> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives> <label>(7)</label></disp-formula>
is the one-step world state transition kernel. Therefore, the mechanism ℙ<sup><italic>π</italic></sup>(<italic>w</italic>; <italic>dw</italic>′) will play an important role in our analysis and we consider the one-step formulation of the policy-behavior map:
<disp-formula id="pcbi.1004427.e020"><alternatives><graphic id="pcbi.1004427.e020g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e020"/><mml:math id="M20" display="block" overflow="scroll"><mml:mrow><mml:mi>ψ</mml:mi> <mml:mo>:</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:mo>⟶</mml:mo> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒲</mml:mo> <mml:mo>𝒲</mml:mo></mml:msubsup> <mml:mo>,</mml:mo> <mml:mspace width="2.em"/><mml:mi>π</mml:mi> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:mo>↦</mml:mo> <mml:mspace width="0.277778em"/><mml:mspace width="0.277778em"/><mml:msup><mml:mo>ℙ</mml:mo> <mml:mi>π</mml:mi></mml:msup> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(8)</label></disp-formula>
The map <italic>ψ</italic> is an affine map from the convex set <inline-formula id="pcbi.1004427.e021"><alternatives><graphic id="pcbi.1004427.e021g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e021"/><mml:math id="M21" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo><mml:mo>𝒮</mml:mo> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> to the convex set <inline-formula id="pcbi.1004427.e022"><alternatives><graphic id="pcbi.1004427.e022g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e022"/><mml:math id="M22" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒲</mml:mo> <mml:mo>𝒲</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>. Its image
<disp-formula id="pcbi.1004427.e023"><alternatives><graphic id="pcbi.1004427.e023g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e023"/><mml:math id="M23" display="block" overflow="scroll"><mml:mrow><mml:mo>𝔅</mml:mo> <mml:mo>≔</mml:mo> <mml:mi>ψ</mml:mi> <mml:mo>(</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup> <mml:mo>)</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
represents the set of all possible behaviors that the SML can generate. We refer to the dimension of 𝔅 as the <italic>embodied behavior dimension</italic>
<disp-formula id="pcbi.1004427.e024"><alternatives><graphic id="pcbi.1004427.e024g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e024"/><mml:math id="M24" display="block" overflow="scroll"><mml:mrow><mml:mi>d</mml:mi> <mml:mo>≔</mml:mo> <mml:mo form="prefix">dim</mml:mo> <mml:mo>(</mml:mo> <mml:mo>𝔅</mml:mo> <mml:mo>)</mml:mo> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
The embodied behavior dimension <italic>d</italic> is equal to the maximal number of affinely independent vectors in the set 𝔅. This is given by the number of linearly independent vectors in the set
<disp-formula id="pcbi.1004427.e025"><alternatives><graphic id="pcbi.1004427.e025g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e025"/><mml:math id="M25" display="block" overflow="scroll"><mml:mrow><mml:mi>β</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>;</mml:mo> <mml:mi>s</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>(</mml:mo> <mml:mi>α</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>,</mml:mo> <mml:msub><mml:mi>a</mml:mi> <mml:mn>0</mml:mn></mml:msub> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>-</mml:mo> <mml:mi>α</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>,</mml:mo> <mml:mi>a</mml:mi> <mml:mo>;</mml:mo> <mml:mi>d</mml:mi> <mml:msup><mml:mi>w</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:mrow><mml:mi>s</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝒮</mml:mo></mml:mrow> <mml:mtext>,</mml:mtext> <mml:mspace width="4.pt"/><mml:mrow><mml:mi>a</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>∖</mml:mo> <mml:mo>{</mml:mo> <mml:msub><mml:mi>a</mml:mi> <mml:mn>0</mml:mn></mml:msub> <mml:mo>}</mml:mo></mml:mrow> <mml:mtext>,</mml:mtext></mml:mrow></mml:math></alternatives> <label>(9)</label></disp-formula>
for some arbitrary <italic>a</italic><sub>0</sub> ∈ 𝒜. See supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s001">S1 Text</xref> for more details about this.</p>
<p>In order to illustrate the effect of the embodiment on the embodied behavior dimension <italic>d</italic>, we formulate a simple upper bound in terms of <italic>β</italic> and <italic>α</italic>. In order to do so, we interpret the expression <xref ref-type="disp-formula" rid="pcbi.1004427.e025">Eq (9)</xref> as a product of two vectors. More precisely, for each <italic>s</italic> ∈ 𝒮 consider the vector <italic>β</italic>(⋅; <italic>s</italic>) that assigns to each <italic>w</italic> ∈ 𝒲 the number <italic>β</italic>(<italic>w</italic>; <italic>s</italic>), and denote by rank(<italic>β</italic>) the maximal number of linearly independent vectors <italic>β</italic>(⋅; <italic>s</italic>). If 𝒲 is finite, rank(<italic>β</italic>) is simply the rank of the matrix with entries (<italic>β</italic>(<italic>w</italic>; <italic>s</italic>))<sub><italic>w</italic> ∈ 𝒲, <italic>s</italic> ∈ 𝒮</sub>. Furthermore, for each <italic>a</italic> ∈ 𝒜 ∖ {<italic>a</italic><sub>0</sub>} consider the difference vector <italic>α</italic>(⋅, <italic>a</italic><sub>0</sub>; <italic>dw</italic>′) − <italic>α</italic>(⋅, <italic>a</italic>; <italic>dw</italic>′) that assigns to each <italic>w</italic> the difference <italic>α</italic>(<italic>w</italic>, <italic>a</italic><sub>0</sub>; <italic>dw</italic>′) − <italic>α</italic>(<italic>w</italic>, <italic>a</italic>; <italic>dw</italic>′) of probability distributions. Let rank(<italic>α</italic>) denote the maximal number of linearly independent difference vectors of that form. If 𝒲 is finite, rank(<italic>α</italic>) is simply the rank of the matrix with entries (<italic>α</italic>(<italic>w</italic>, <italic>a</italic><sub>0</sub>; <italic>w</italic>′) − <italic>α</italic>(<italic>w</italic>, <italic>a</italic>; <italic>w</italic>′))<sub><italic>a</italic> ∈ 𝒜∖{<italic>a</italic><sub>0</sub>},(<italic>w</italic>, <italic>w</italic>′) ∈ 𝒲 ×𝒲</sub>.</p>
<p>With these definitions, <xref ref-type="disp-formula" rid="pcbi.1004427.e025">Eq (9)</xref> yields
<disp-formula id="pcbi.1004427.e026"><alternatives><graphic id="pcbi.1004427.e026g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e026"/><mml:math id="M26" display="block" overflow="scroll"><mml:mrow><mml:mi>d</mml:mi> <mml:mo>≤</mml:mo> <mml:mo form="prefix">rank</mml:mo> <mml:mo>(</mml:mo> <mml:mi>β</mml:mi> <mml:mo>)</mml:mo> <mml:mo>·</mml:mo> <mml:mo form="prefix">rank</mml:mo> <mml:mo>(</mml:mo> <mml:mi>α</mml:mi> <mml:mo>)</mml:mo> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(10)</label></disp-formula>
The upper bound <xref ref-type="disp-formula" rid="pcbi.1004427.e026">Eq (10)</xref> may not provide an accurate estimate of the embodied behavior dimension. However, it illustrates how the embodiment constraints, represented by <italic>β</italic> and <italic>α</italic>, can lead to an embodied behavior dimension <italic>d</italic> that is much smaller than the dimension of the set of all policies <inline-formula id="pcbi.1004427.e027"><alternatives><graphic id="pcbi.1004427.e027g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e027"/><mml:math id="M27" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, which is ∣𝒮∣(∣𝒜∣ − 1). In the following, we present simple examples that illustrate why the rank of <italic>β</italic> and <italic>α</italic> is expected to be small in embodied systems.</p>
<p>The sensors are usually insensitive to a large number of variations of the world state <italic>w</italic>. This means that <italic>β</italic> outputs the same distribution for several different <italic>w</italic>. Furthermore, the sensors implement a certain degree of redundancy, meaning that, for each 𝒲 the probability distribution <italic>β</italic>(<italic>w</italic>; ⋅) ∈ Δ<sub>𝒮</sub> has certain types of symmetries. Consider, for example, the 20 × 20 maze shown in <xref ref-type="fig" rid="pcbi.1004427.g003">Fig 3</xref> (left-hand side). The world state includes the location of the agent in the maze, (<italic>i</italic>, <italic>j</italic>) ∈ {1, …, 20}<sup>2</sup>. The agent is endowed with two sensors: a left eye and a right eye. Each eye measures a weighted sum of the light intensity arriving from the walls in the immediate vicinity of the agent. The left eye outputs the value <italic>S</italic><sub>left</sub> = 0.8 <italic>x</italic><sub><italic>w</italic></sub> + 0.2 <italic>x</italic><sub><italic>n</italic></sub> + 0.1 <italic>x</italic><sub><italic>s</italic></sub> + 0 <italic>x</italic><sub><italic>e</italic></sub> (with probability one), where <italic>x</italic><sub><italic>w</italic>,<italic>n</italic>,<italic>s</italic>,<italic>e</italic></sub> = 1 if there is a wall to the immediate west, north, south, east, respectively, and 0 otherwise. Similarly, <italic>S</italic><sub>right</sub> = 0 <italic>x</italic><sub><italic>w</italic></sub> + 0.2 <italic>x</italic><sub><italic>n</italic></sub> + 0.1 <italic>x</italic><sub><italic>s</italic></sub> + 0.8 <italic>x</italic><sub><italic>e</italic></sub>. Each eye can produce a total of 8 states: 0,0.1,0.2,0.3,1,1.1,1.2,1.3. The naive number of joint sensor states (<italic>S</italic><sub>left</sub>, <italic>S</italic><sub>right</sub>) is 8 × 8 = 64. However, both eyes are partially redundant, and the actual total number of possible joint states is 15 (the case of four walls surrounding a location is excluded). In this example, 400 world states are mapped onto 15 sensor states, which implies that the rank of <italic>β</italic> is 15. This example illustrates the two typical properties of the sensor measurement mentioned above: the ambiguity of the measurement, mapping several world states to the same sensor state, and the redundancy, by which several sensors measure partially overlapping information about the world state.</p>
<fig id="pcbi.1004427.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Ambiguity and redundancy of the sensor measurement.</title>
<p>In this example, an agent navigates the 20 × 20 maze shown in the left panel. The agent is endowed with two sensors (eyes), <italic>S</italic><sub>left</sub> and <italic>S</italic><sub>right</sub>. Each sensor measures a weighted average of the walls in the immediate vicinity, illustrated in the central panel, and outputs one of 8 possible numerical values, as shown in the right panel. There are 400 possible locations in the maze but only 8 × 8 = 64 joint sensor states. This implies that the sensor measurement is highly ambiguous about the world state. Furthermore, the outputs of both sensors are not independent; they always have the same value at the decimal place. Due to this redundancy, the factual number of joint sensor states is 15, instead of 64.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g003"/>
</fig>
<p>In the case of <italic>α</italic>, usually several actions <italic>a</italic> produce the same world state transition, such that, for any fixed world state <italic>w</italic>, <italic>α</italic>(<italic>w</italic>, ⋅; ⋅) is piece-wise constant with respect to <italic>a</italic>. Furthermore, for any given <italic>w</italic>, only very few states <italic>w</italic>′ ∈ 𝒲 are possible at the next time step, regardless of <italic>a</italic>, such that <italic>α</italic>(<italic>w</italic>, <italic>a</italic>; ⋅) assigns positive probability only to a very small subset of 𝒲. This means that rank(<italic>α</italic>) is usually much smaller than (∣𝒜∣ − 1) (the maximum theoretically possible rank). An example for this kind of constraints on <italic>α</italic> is a robot’s knee, which in a time step can only be moved to adjacent positions, as the one shown in <xref ref-type="fig" rid="pcbi.1004427.g004">Fig 4</xref>.</p>
<fig id="pcbi.1004427.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Locality of world-state transitions.</title>
<p>At subsequent time steps, the knee of a robot can only move by a small amount. Only very few world state transitions are possible within one time step (e.g., transitions to neighboring positions). This hexapod is used in the experimental evaluation of our theory in “Experiments with a Hexapod”.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g004"/>
</fig>
<p>So far we have discussed the embodied behavior dimension of an embodied system and reasoned why it can be much smaller than the dimension of the policy space. Since the policy-behavior map <italic>ψ</italic> is affine, for any generic behavior that can possibly emerge in the SML, there is a <inline-formula id="pcbi.1004427.e028"><alternatives><graphic id="pcbi.1004427.e028g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e028"/><mml:math id="M28" display="inline" overflow="scroll"><mml:mrow><mml:mover><mml:mi>d</mml:mi> <mml:mo accent="true">˜</mml:mo></mml:mover></mml:mrow></mml:math></alternatives></inline-formula>-dimensional set (in fact a polytope) of equivalent policies generating that same behavior, where <inline-formula id="pcbi.1004427.e029"><alternatives><graphic id="pcbi.1004427.e029g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e029"/><mml:math id="M29" display="inline" overflow="scroll"><mml:mrow><mml:mi>d</mml:mi> <mml:mo>+</mml:mo> <mml:mover><mml:mi>d</mml:mi> <mml:mo accent="true">˜</mml:mo></mml:mover></mml:mrow></mml:math></alternatives></inline-formula> equals the full dimension ∣𝒮∣(∣𝒜∣ − 1). By selecting representatives from each set of equivalent policies, we can define low-dimensional policy models which are just as expressive as the much higher dimensional set <inline-formula id="pcbi.1004427.e030"><alternatives><graphic id="pcbi.1004427.e030g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e030"/><mml:math id="M30" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo><mml:mo>𝒮</mml:mo> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> of all possible policies, in terms of the representable behaviors. The following example shows that it is possible to define a smooth manifold of policies which translate in a one-to-one fashion to the set of all possible behaviors in the SML.</p>
<p><bold>Example. Embodied universal approximator of minimal dimension.</bold> Consider the matrix <italic>E</italic> ∈ ℝ<sup><italic>d</italic>×(𝒮×𝒜)</sup> that represents the policy-behavior map <italic>ψ</italic> with respect to some basis. Then the exponential family <inline-formula id="pcbi.1004427.e031"><alternatives><graphic id="pcbi.1004427.e031g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e031"/><mml:math id="M31" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>𝓔</mml:mo> <mml:mo>𝒜</mml:mo><mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> of policies defined by
<disp-formula id="pcbi.1004427.e032"><alternatives><graphic id="pcbi.1004427.e032g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e032"/><mml:math id="M32" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>π</mml:mi> <mml:mi>θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>;</mml:mo> <mml:mi>a</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:mfrac><mml:mrow><mml:mo form="prefix">exp</mml:mo> <mml:mo>(</mml:mo> <mml:msup><mml:mi>θ</mml:mi> <mml:mi>⊤</mml:mi></mml:msup> <mml:mi>E</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>,</mml:mo> <mml:mi>a</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mrow><mml:msub><mml:mo>∑</mml:mo> <mml:mrow><mml:msup><mml:mi>a</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>∈</mml:mo> <mml:mo>𝒜</mml:mo></mml:mrow></mml:msub> <mml:mo form="prefix">exp</mml:mo> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>θ</mml:mi> <mml:mi>⊤</mml:mi></mml:msup> <mml:mi>E</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>,</mml:mo> <mml:msup><mml:mi>a</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:mi>θ</mml:mi> <mml:mo>∈</mml:mo> <mml:msup><mml:mo>ℝ</mml:mo> <mml:mi>d</mml:mi></mml:msup> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives> <label>(11)</label></disp-formula>
is an embodied universal approximator of dimension <italic>d</italic>. In fact, each behavior from the set 𝔅 is realized by exactly one limit point of the set <inline-formula id="pcbi.1004427.e033"><alternatives><graphic id="pcbi.1004427.e033g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e033"/><mml:math id="M33" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>𝓔</mml:mo> <mml:mo>𝒜</mml:mo><mml:mo>𝒮</mml:mo> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>. See <xref ref-type="fig" rid="pcbi.1004427.g005">Fig 5</xref> for an illustration and supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s001">S1 Text</xref> for technical details.</p>
<fig id="pcbi.1004427.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Illustration of the exponential family <xref ref-type="disp-formula" rid="pcbi.1004427.e032">Eq (11)</xref> of policies.</title>
<p>This figure shows an example with ∣𝒲∣ = 3 and ∣𝒜∣ = 2 and a policy-behavior map <italic>ψ</italic> with embodied behavior dimension <italic>d</italic> = 2. In this case, the polytope <inline-formula id="pcbi.1004427.e034"><alternatives><graphic id="pcbi.1004427.e034g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e034"/><mml:math id="M34" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> is the three-dimensional cube of 3 × 2 row stochastic matrices shown in the middle. The curved surface within is the exponential family <inline-formula id="pcbi.1004427.e035"><alternatives><graphic id="pcbi.1004427.e035g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e035"/><mml:math id="M35" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>𝓔</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, which is parametrized by two parameters. The exponential family is mapped by the policy behavior map <italic>ψ</italic> to the same set of behaviors (the hexagon illustrated in the right) as the set <inline-formula id="pcbi.1004427.e036"><alternatives><graphic id="pcbi.1004427.e036g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e036"/><mml:math id="M36" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> of all policies.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g005"/>
</fig>
<p>The previous discussion shows that the set of behaviors 𝔅 that can possibly emerge in the SML usually has a much lower dimension than the set of all policies. Furthermore, it shows that it is possible to construct low-dimensional embodied universal approximators. Nonetheless, among all behaviors that are possible in the SML, we can expect that only a smaller subset 𝓑 ⊆ 𝔅 is actually relevant to the agent. For instance, among all locomotion gaits that an agent could possibly realize with its body in a given environment, we can expect that it will only utilize those which are most successful (e.g., in terms of maximizing some reward function or the predictive information [<xref ref-type="bibr" rid="pcbi.1004427.ref044">44</xref>–<xref ref-type="bibr" rid="pcbi.1004427.ref046">46</xref>]). The notion of embodied behavior dimension can be directly generalized in order to accurately account for such behavioral restrictions. Given any set of behaviors 𝓑, we are interested in the following problem.</p>
<p><bold>Problem.</bold> For a given set of behaviors <inline-formula id="pcbi.1004427.e037"><alternatives><graphic id="pcbi.1004427.e037g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e037"/><mml:math id="M37" display="inline" overflow="scroll"><mml:mrow><mml:mo>𝓑</mml:mo> <mml:mo>⊆</mml:mo> <mml:mo>𝔅</mml:mo> <mml:mo>=</mml:mo> <mml:mi>ψ</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> and a class 𝔐 of policy models, what is the smallest model 𝓜 ∈ 𝔐 that can generate all these behaviors; that is, <inline-formula id="pcbi.1004427.e038"><alternatives><graphic id="pcbi.1004427.e038g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e038"/><mml:math id="M38" display="inline" overflow="scroll"><mml:mrow><mml:mo>𝓑</mml:mo> <mml:mo>⊆</mml:mo> <mml:mi>ψ</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:mover><mml:mo>𝓜</mml:mo> <mml:mo accent="true">¯</mml:mo></mml:mover> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>?</p>
<p>Later below we will consider a class 𝔐 of policy models defined in terms of CRBMs. In what follows, we focus on sets 𝓑 of behaviors that take place within a subset 𝓦 ⊆ 𝒲 of world states and consider the corresponding subset <inline-formula id="pcbi.1004427.e039"><alternatives><graphic id="pcbi.1004427.e039g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e039"/><mml:math id="M39" display="inline" overflow="scroll"><mml:mrow><mml:mo>𝓢</mml:mo> <mml:mo>≔</mml:mo> <mml:mo>{</mml:mo> <mml:mi>s</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝒮</mml:mo> <mml:mspace width="1pt"/> <mml:mo>:</mml:mo> <mml:mspace width="1pt"/> <mml:mi>s</mml:mi> <mml:mo>∈</mml:mo> <mml:mo form="prefix">supp</mml:mo> <mml:mo>(</mml:mo> <mml:mi>β</mml:mi> <mml:mo>(</mml:mo> <mml:mi>w</mml:mi> <mml:mo>;</mml:mo> <mml:mo>⋅</mml:mo> <mml:mo>)</mml:mo> <mml:mo>)</mml:mo> <mml:mspace width="0.277778em"/><mml:mtext>for</mml:mtext> <mml:mspace width="0.277778em"/><mml:mtext>some</mml:mtext> <mml:mspace width="0.277778em"/><mml:mi>w</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝓦</mml:mo> <mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> of sensor values that can be observed at these world states. When controlling behaviors from the set 𝓑, only states in 𝓢 are relevant for the policy, as the other sensor states are never observed. Furthermore, in order to stay in 𝓦 only a restricted set 𝓐<sub><italic>s</italic></sub> of actuator states is allowed given that the state 𝒲 is observed. This motivates us to study a set of policies that is assigned to a sensor state set and a family of corresponding positive probability actuator state sets. In order to simplify the notation, we denote the family 𝓐<sub><italic>s</italic></sub>, <italic>s</italic> ∈ 𝓢, simply by 𝓐 and consider the set <inline-formula id="pcbi.1004427.e040"><alternatives><graphic id="pcbi.1004427.e040g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e040"/><mml:math id="M40" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝓐</mml:mo><mml:mo>𝓢</mml:mo> </mml:msubsup> <mml:mo>⊆</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> of policies <italic>π</italic> that satisfy
<disp-formula id="pcbi.1004427.e041"><alternatives><graphic id="pcbi.1004427.e041g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e041"/><mml:math id="M41" display="block" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝓢</mml:mo> <mml:mo>,</mml:mo> <mml:mspace width="0.277778em"/><mml:mi>π</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>;</mml:mo> <mml:mi>a</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>&gt;</mml:mo> <mml:mn>0</mml:mn> <mml:mspace width="1.em"/><mml:mo>→</mml:mo> <mml:mspace width="1.em"/><mml:mi>a</mml:mi> <mml:mo>∈</mml:mo> <mml:msub><mml:mo>𝓐</mml:mo> <mml:mi>s</mml:mi></mml:msub> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
Next we consider the set <inline-formula id="pcbi.1004427.e042"><alternatives><graphic id="pcbi.1004427.e042g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e042"/><mml:math id="M42" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mo>𝓑</mml:mo> <mml:mrow><mml:mo>𝓢</mml:mo> <mml:mo>,</mml:mo> <mml:mo>𝓐</mml:mo></mml:mrow></mml:msup> <mml:mo>≔</mml:mo> <mml:mi>ψ</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝓐</mml:mo><mml:mo>𝓢</mml:mo> </mml:msubsup> <mml:mo stretchy="false">)</mml:mo> <mml:msub><mml:mo stretchy="false">∣</mml:mo> <mml:mo>𝓦</mml:mo></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> of behaviors on 𝓦 that are generated by policies with the given sensor and actuator restrictions. With its dimension <italic>d</italic><sup>𝓢,𝓐</sup>: = dim(𝓑<sup>𝓢,𝓐</sup>), we have the following result, which gives us a simple and powerful combinatorial tool for addressing the above problem of representing specific behavior sets.</p>
<p><bold>Lemma 1.</bold> <italic>Any model</italic> <inline-formula id="pcbi.1004427.e043"><alternatives><graphic id="pcbi.1004427.e043g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e043"/><mml:math id="M43" display="inline" overflow="scroll"><mml:mrow><mml:mo>𝓜</mml:mo> <mml:mo>⊆</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> <italic>with the following property can approximate any behavior from the set</italic> 𝓑<sup>𝓢,𝓐</sup> <italic>arbitrarily well: for every policy</italic> <inline-formula id="pcbi.1004427.e044"><alternatives><graphic id="pcbi.1004427.e044g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e044"/><mml:math id="M44" display="inline" overflow="scroll"><mml:mrow><mml:mi>π</mml:mi> <mml:mo>∈</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> <italic>whose</italic> 𝓢-<italic>rows have a total of</italic> ∣𝓢∣ + <italic>d</italic><sup>𝓢,𝓐</sup> <italic>or less non-zero entries, there exists a policy</italic> <inline-formula id="pcbi.1004427.e045"><alternatives><graphic id="pcbi.1004427.e045g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e045"/><mml:math id="M45" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mi>π</mml:mi> <mml:mo>*</mml:mo></mml:msup> <mml:mo>∈</mml:mo> <mml:mover><mml:mo>𝓜</mml:mo> <mml:mo accent="true">¯</mml:mo></mml:mover></mml:mrow></mml:math></alternatives></inline-formula> <italic>with</italic> <italic>π</italic>(<italic>s</italic>; ⋅) = <italic>π</italic>*(<italic>s</italic>; ⋅) <italic>for all</italic> <italic>s</italic> ∈ 𝓢.</p>
<p>See supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s001">S1 Text</xref> for technical details and <xref ref-type="supplementary-material" rid="pcbi.1004427.s004">S1 Fig</xref> for an illustration of this result. This lemma states that for universal approximation of embodied behaviors it suffices to approximate the policies that assign positive probability only to a limited number of actions (for a relevant set of sensor values). The number of actions is determined by the embodied behavior dimension. Keep in mind that the relevant set 𝓢 of sensor values may be much smaller than 𝒲 not only due to behavioral constraints but also due to the redundancy of the sensors. Recall the maze example from <xref ref-type="fig" rid="pcbi.1004427.g003">Fig 3</xref>, where there are 64 theoretically possible sensor values but only 15 that are actually measured. This kind of redundancy is typical for embodied systems and generally leads to a strong reduction of the sensor states. Furthermore, redundancy in the sensor process results not only from the nature of the sensory apparatus, as in the maze example, but also from the agent’s behavior. This important mechanism, which is exploited by embodied agents, is known as information self-structuring [<xref ref-type="bibr" rid="pcbi.1004427.ref020">20</xref>].</p>
<p>It is worthwhile mentioning that the exponential family from <xref ref-type="disp-formula" rid="pcbi.1004427.e032">Eq (11)</xref> and Lemma 1 describe two complementary types of universal approximators of embodied behaviors. The first type, described in the example, is composed of maximum entropy policies, whereas the second type, described in the lemma, is composed of minimum entropy policies. If we consider the set of equivalent policies that map to a given behavior, the exponential family selects the one with the most random state-action assignments that are possible for generating that behavior. On the other hand, Lemma 1 selects the ones with the most deterministic state-action assignments that are possible for generating that behavior. Geometrically, the set of equivalent policies of a given behavior is the convex hull of the minimum entropy policies, with the maximum entropy policy lying in the center. The exponential family has nice geometric properties, but it is very specific to the kernels <italic>β</italic> and <italic>α</italic>, which define the sufficient statistics <italic>E</italic>. The set described in Lemma 1 can also be considered as a policy model. It offers several advantages that we will exploit later on. First, it has a very simple combinatorial description. Second, it only depends on the embodied behavior dimension <italic>d</italic>, irrespective of the specific kernels <italic>β</italic> and <italic>α</italic> (which are not directly accessible to the agent). Third, it selects policies with the minimum possible number of positive probability actions.</p>
</sec>
</sec>
<sec id="sec006" sec-type="results">
<title>Results</title>
<sec id="sec007">
<title>A Case Study with Conditional Restricted Boltzmann Machines</title>
<sec id="sec008">
<title>Definitions</title>
<p>A Boltzmann machine (BM) is an undirected network of stochastic binary units, some of which may be hidden. Such a network defines probabilities for the joint states of the visible units, given by the relative frequencies at which these states are observed, asymptotically, depending on the network parameters (interaction weights and biases). The probability of each joint state <italic>x</italic> = (<italic>x</italic><sub><italic>V</italic></sub>, <italic>x</italic><sub><italic>H</italic></sub>) of the visible and hidden units is given by the Gibbs-Boltzmann distribution <inline-formula id="pcbi.1004427.e046"><alternatives><graphic id="pcbi.1004427.e046g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e046"/><mml:math id="M46" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:mi>x</mml:mi> <mml:mo stretchy="false">)</mml:mo> <mml:mo>=</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mi>Z</mml:mi></mml:mfrac> <mml:mtext>exp</mml:mtext> <mml:mo stretchy="false">(</mml:mo> <mml:mo>−</mml:mo> <mml:mo>𝓗</mml:mo> <mml:mo stretchy="false">(</mml:mo> <mml:mi>x</mml:mi> <mml:mo stretchy="false">)</mml:mo> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> with energy function 𝓗(<italic>x</italic>) = ∑<sub><italic>i</italic>,<italic>j</italic></sub> <italic>x</italic><sub><italic>i</italic></sub><italic>W</italic><sub><italic>ij</italic></sub> <italic>x</italic><sub><italic>j</italic></sub> + ∑<sub><italic>i</italic></sub> <italic>b</italic><sub><italic>i</italic></sub> <italic>x</italic><sub><italic>i</italic></sub> and normalization partition function <italic>Z</italic>(<italic>W</italic>, <italic>b</italic>) = ∑<sub><italic>x</italic>′</sub> exp(−𝓗(<italic>x</italic>′)). The probabilities of the visible states are given by marginalizing out the states of the hidden units, <italic>p</italic>(<italic>x</italic><sub><italic>V</italic></sub>) = ∑<sub><italic>x</italic><sub><italic>H</italic></sub></sub> <italic>p</italic>(<italic>x</italic><sub><italic>V</italic></sub>, <italic>x</italic><sub><italic>H</italic></sub>).</p>
<p>An RBM is a BM with the restriction that there are interactions only between the visible and the hidden units; that is, <italic>W</italic><sub><italic>ij</italic></sub> ≠ 0 only when unit <italic>i</italic> is visible and <italic>j</italic> hidden. An RBM defines a model of conditional probability distributions, given by clamping the states of some of the visible units:</p>
<p><bold>Definition 2.</bold> The conditional restricted Boltzmann machine model with <italic>k</italic> input, <italic>n</italic> output, and <italic>m</italic> hidden units, denoted <inline-formula id="pcbi.1004427.e047"><alternatives><graphic id="pcbi.1004427.e047g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e047"/><mml:math id="M47" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mtext mathvariant="normal">CRBM</mml:mtext> <mml:mrow><mml:mi>n</mml:mi> <mml:mo>,</mml:mo> <mml:mi>m</mml:mi></mml:mrow> <mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, is the set of all conditional distributions in <inline-formula id="pcbi.1004427.e048"><alternatives><graphic id="pcbi.1004427.e048g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e048"/><mml:math id="M48" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, 𝒮 = {0,1}<sup><italic>k</italic></sup>, 𝒜 = {0,1}<sup><italic>n</italic></sup>, that can be written as
<disp-formula id="pcbi.1004427.e049"><alternatives><graphic id="pcbi.1004427.e049g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e049"/><mml:math id="M49" display="block" overflow="scroll"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>π</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>;</mml:mo> <mml:mi>a</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mrow><mml:mi>Z</mml:mi> <mml:mo>(</mml:mo> <mml:mi>W</mml:mi> <mml:mo>,</mml:mo> <mml:mi>b</mml:mi> <mml:mo>,</mml:mo> <mml:mi>V</mml:mi> <mml:mi>s</mml:mi> <mml:mo>+</mml:mo> <mml:mi>c</mml:mi> <mml:mo>)</mml:mo></mml:mrow></mml:mfrac> <mml:munder><mml:mo>∑</mml:mo> <mml:mrow><mml:mi>z</mml:mi> <mml:mo>∈</mml:mo> <mml:msup><mml:mrow><mml:mo>{</mml:mo> <mml:mn>0</mml:mn> <mml:mo>,</mml:mo> <mml:mn>1</mml:mn> <mml:mo>}</mml:mo></mml:mrow> <mml:mi>m</mml:mi></mml:msup></mml:mrow></mml:munder> <mml:mo form="prefix">exp</mml:mo> <mml:mrow><mml:mo>(</mml:mo> <mml:msup><mml:mi>z</mml:mi> <mml:mi>⊤</mml:mi></mml:msup> <mml:mi>W</mml:mi> <mml:mi>a</mml:mi> <mml:mo>+</mml:mo> <mml:msup><mml:mi>z</mml:mi> <mml:mi>⊤</mml:mi></mml:msup> <mml:mi>V</mml:mi> <mml:mi>s</mml:mi> <mml:mo>+</mml:mo> <mml:msup><mml:mi>b</mml:mi> <mml:mi>⊤</mml:mi></mml:msup> <mml:mi>a</mml:mi> <mml:mo>+</mml:mo> <mml:msup><mml:mi>c</mml:mi> <mml:mi>⊤</mml:mi></mml:msup> <mml:mi>z</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:mo>∀</mml:mo> <mml:mi>a</mml:mi> <mml:mo>∈</mml:mo> <mml:msup><mml:mrow><mml:mo>{</mml:mo> <mml:mn>0</mml:mn> <mml:mo>,</mml:mo> <mml:mn>1</mml:mn> <mml:mo>}</mml:mo></mml:mrow> <mml:mi>n</mml:mi></mml:msup> <mml:mo>,</mml:mo> <mml:mi>s</mml:mi> <mml:mo>∈</mml:mo> <mml:msup><mml:mrow><mml:mo>{</mml:mo> <mml:mn>0</mml:mn> <mml:mo>,</mml:mo> <mml:mn>1</mml:mn> <mml:mo>}</mml:mo></mml:mrow> <mml:mi>k</mml:mi></mml:msup> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
where ⊤ denotes vector transposition and <italic>Z</italic>(<italic>W</italic>, <italic>b</italic>, <italic>Vs</italic> + <italic>c</italic>) is a normalization factor for each <italic>s</italic> ∈ {0,1}<sup><italic>k</italic></sup>. Here, <italic>s</italic>, <italic>a</italic>, and <italic>z</italic> are state vectors of the input, output, and hidden units, respectively. Furthermore, <italic>V</italic> ∈ ℝ<sup><italic>m</italic>×<italic>k</italic></sup> is a matrix of interaction weights between hidden and input units, <italic>W</italic> ∈ ℝ<sup><italic>m</italic>×<italic>n</italic></sup> is a matrix of interaction weights between hidden and output units, <italic>c</italic> ∈ ℝ<sup><italic>m</italic></sup> is a vector of biases for the hidden units, and <italic>b</italic> ∈ ℝ<sup><italic>n</italic></sup> is a vector of biases for the output units.</p>
<p>The model <inline-formula id="pcbi.1004427.e050"><alternatives><graphic id="pcbi.1004427.e050g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e050"/><mml:math id="M50" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mtext mathvariant="normal">CRBM</mml:mtext> <mml:mrow><mml:mi>n</mml:mi> <mml:mo>,</mml:mo> <mml:mi>m</mml:mi></mml:mrow> <mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> has <italic>mk</italic> + <italic>mn</italic> + <italic>m</italic> + <italic>n</italic> parameters (the interaction weights and biases). When there are no input units, i.e., <italic>k</italic> = 0, the conditional probability model reduces to the restricted Boltzmann machine probability model with <italic>n</italic> visible and <italic>m</italic> hidden units, which we denote by RBM<sub><italic>n</italic>,<italic>m</italic></sub>. <xref ref-type="fig" rid="pcbi.1004427.g006">Fig 6</xref> illustrates a CRBM in the sensorimotor loop.</p>
<fig id="pcbi.1004427.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Illustration of a CRBM policy in the sensorimotor loop.</title>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g006"/>
</fig>
</sec>
<sec id="sec009">
<title>Non-embodied vs. embodied universal approximation</title>
<p>In this section we present results about the representational power of CRBMs contrasting the minimal number of hidden units that suffices for non-embodied universal approximation with the minimal number of hidden units that suffices for universal approximation of embodied behaviors. In the first case we ask for the minimal <italic>m</italic> for which the model <inline-formula id="pcbi.1004427.e051"><alternatives><graphic id="pcbi.1004427.e051g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e051"/><mml:math id="M51" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mtext mathvariant="normal">CRBM</mml:mtext> <mml:mrow><mml:mi>n</mml:mi> <mml:mo>,</mml:mo> <mml:mi>m</mml:mi></mml:mrow> <mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> can approximate every conditional distribution from the set <inline-formula id="pcbi.1004427.e052"><alternatives><graphic id="pcbi.1004427.e052g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e052"/><mml:math id="M52" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> with 𝒮 = {0,1}<sup><italic>k</italic></sup> and 𝒜 = {0,1}<sup><italic>n</italic></sup>, denoted by <inline-formula id="pcbi.1004427.e053"><alternatives><graphic id="pcbi.1004427.e053g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e053"/><mml:math id="M53" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mi>n</mml:mi><mml:mi>k</mml:mi> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, arbitrarily well. We have the following result:</p>
<p><bold>Theorem 3.</bold> <bold>Non-embodied universal approximation.</bold> <italic>The model</italic> <inline-formula id="pcbi.1004427.e054"><alternatives><graphic id="pcbi.1004427.e054g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e054"/><mml:math id="M54" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mtext mathvariant="normal">CRBM</mml:mtext> <mml:mrow><mml:mi>n</mml:mi> <mml:mo>,</mml:mo> <mml:mi>m</mml:mi></mml:mrow> <mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> <italic>can approximate every conditional distribution from</italic> <inline-formula id="pcbi.1004427.e055"><alternatives><graphic id="pcbi.1004427.e055g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e055"/><mml:math id="M55" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mi>n</mml:mi> <mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> <italic>arbitrarily well if</italic> <inline-formula id="pcbi.1004427.e056"><alternatives><graphic id="pcbi.1004427.e056g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e056"/><mml:math id="M56" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi> <mml:mo>≥</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mn>2</mml:mn></mml:mfrac> <mml:msup><mml:mn>2</mml:mn> <mml:mi>k</mml:mi></mml:msup> <mml:mo stretchy="false">(</mml:mo> <mml:msup><mml:mn>2</mml:mn> <mml:mi>n</mml:mi></mml:msup> <mml:mo>−</mml:mo> <mml:mn>1</mml:mn> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> <italic>and only if</italic> <inline-formula id="pcbi.1004427.e057"><alternatives><graphic id="pcbi.1004427.e057g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e057"/><mml:math id="M57" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi> <mml:mo>≥</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mrow><mml:mo stretchy="false">(</mml:mo> <mml:mi>n</mml:mi> <mml:mo>+</mml:mo> <mml:mi>k</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac> <mml:mo stretchy="false">(</mml:mo> <mml:msup><mml:mn>2</mml:mn> <mml:mi>k</mml:mi></mml:msup> <mml:mo stretchy="false">(</mml:mo> <mml:msup><mml:mn>2</mml:mn> <mml:mi>n</mml:mi></mml:msup> <mml:mo>−</mml:mo> <mml:mn>1</mml:mn> <mml:mo stretchy="false">)</mml:mo> <mml:mo>−</mml:mo> <mml:mi>n</mml:mi> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>.</p>
<p>The full statement of the theorem is quite technical, and thus we refer the interested reader to [<xref ref-type="bibr" rid="pcbi.1004427.ref038">38</xref>]. The necessary bound (the second inequality), however, follows from simple parameter counting arguments. The result shows that the number of hidden units required for non-embodied universal approximation is exponential in the number of input and output units.</p>
<p>Now we take a look at the embodied setting. By Lemma 1, we can achieve embodied universal approximation by considering only policies with a limited number of non-zero entries. Using each hidden unit of a CRBM to model each relevant non-zero entry of the policy, we obtain the following result:</p>
<p><bold>Theorem 4.</bold> <bold>Embodied universal approximation.</bold> <italic>The model</italic> <inline-formula id="pcbi.1004427.e058"><alternatives><graphic id="pcbi.1004427.e058g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e058"/><mml:math id="M58" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mtext mathvariant="normal">CRBM</mml:mtext> <mml:mrow><mml:mi>n</mml:mi> <mml:mo>,</mml:mo> <mml:mi>m</mml:mi></mml:mrow> <mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> <italic>can approximate any behavior from</italic> 𝓑<sup>𝓢,𝓐</sup> <italic>arbitrarily well whenever</italic> <italic>m</italic> ≥ ∣𝓢∣ + <italic>d</italic><sup>𝓢,𝓐</sup> − 1. <italic>In particular, the model is an embodied universal approximator whenever</italic> <italic>m</italic> ≥ ∣𝒮∣ + <italic>d</italic> − 1.</p>
<p><italic>Proof</italic>. We use Lemma 1. The joint probability model RBM<sub><italic>k</italic>+<italic>n</italic>,<italic>m</italic></sub> can approximate any probability distribution with support of cardinality <italic>m</italic> + 1 arbitrarily well [<xref ref-type="bibr" rid="pcbi.1004427.ref034">34</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref035">35</xref>]. Hence, with <italic>m</italic> ≥ ∣𝒮∣ + <italic>d</italic> − 1, RBM<sub><italic>k</italic>+<italic>n</italic>,<italic>m</italic></sub> can approximate any joint distribution with ∣𝒮∣ + <italic>d</italic> non-zero entries arbitrarily well. The result for conditional distributions is a direct implication of this.</p>
<p>This theorem gives an upper bound for the minimal number of hidden units that suffices to obtain embodied universal approximation. The bound depends on the embodiment constraints of the system, captured in the embodied behavior dimension. In general, this bound will be much smaller than the exponential bound from Theorem 3.</p>
</sec>
</sec>
<sec id="sec010">
<title>Experiments with a Hexapod</title>
<p>In the previous sections we have derived a theoretical bound for the complexity of a CRBM based policy. In this section, we want to evaluate that bound experimentally. For this purpose, we chose a six-legged walking machine (hexapod) as our experimental platform (see <xref ref-type="fig" rid="pcbi.1004427.g007">Fig 7</xref> left panel), because it has a well-studied morphology in the context of artificial intelligence, with one of its first appearances as Ghengis [<xref ref-type="bibr" rid="pcbi.1004427.ref047">47</xref>]. The purpose of this section is <italic>not</italic> to develop an optimal walking strategy for this system. Contrary, this morphology was chosen, because the tripod gait (see <xref ref-type="fig" rid="pcbi.1004427.g007">Fig 7</xref> right panel) is known to be one of the optimal locomotion behaviors, which can be implemented efficiently in various ways. This said, learning a control for this gait is not trivial, and hence it is a good testbed to evaluate our complexity bound for CRBM based policies.</p>
<fig id="pcbi.1004427.g007" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g007</object-id>
<label>Fig 7</label>
<caption>
<title>Hexapod set-up.</title>
<p>Left-hand side: The simulated hexapod with a display of the joint configurations. Right-hand side: Visualization of the target walking pattern. The plot shows which leg touched the ground at which point in time. Blue areas refer to a contact with a the ground, while orange areas refer to points in time during which the correspond leg did not touch the ground. The different legs are plotted over the <italic>y</italic>-axis, while each point on the <italic>x</italic>-axis refers to a single point in time.</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g007"/>
</fig>
<p>This section is organized in three parts. The first part presents the experimental set-up as far as it is required to understand the results. The second part describes how the CRBM complexity parameter <italic>m</italic> was estimated form the data. The third part presents the results of the experiment and compares them with the theoretical bound.</p>
<sec id="sec011">
<title>Simulation</title>
<p>The hexapod was simulated with <sans-serif>YARS</sans-serif> [<xref ref-type="bibr" rid="pcbi.1004427.ref048">48</xref>], which is a mobile robot simulator based on the bullet physics engine [<xref ref-type="bibr" rid="pcbi.1004427.ref049">49</xref>]. Each segment of the hexapod is defined by its physical properties (dimension, weight, etc.). In the case of the hexapod shown in <xref ref-type="fig" rid="pcbi.1004427.g007">Fig 7</xref> (left-hand side), the main body’s dimension (bounding box) is 4.4m length, 0.7m width, 0.5m height, and the weight is 2kg. For the tripod walking gait, inertia does not play a significant role, which means that the effect of the specific weight of the hexapod is negligible. Each leg consists of three segments (femur, tarsus, tibia). However, the two lower segments (tarus, tibia) are connected by a fixed joint. The leg segments were freely modeled with respect to the dimensions of an insect leg. The motors that connect a femur and tarsus (knee) only allow rotations around the local <italic>y</italic>-axis of the femur segment (see <xref ref-type="fig" rid="pcbi.1004427.g007">Fig 7</xref>). The deviation of the knee joints is limited to <italic>ω</italic><sub>knee</sub> ∈ [−15°,25°]. For joints which connect the main body with a femur (shoulder), the deviation is limited to <italic>ω</italic><sub>shoulder</sub> ∈ [−35°,35°]. The rotation axes of the shoulder joints are limited to the local <italic>z</italic>-axis of the main body. The angular positions of the joints define the sensor (<inline-formula id="pcbi.1004427.e059"><alternatives><graphic id="pcbi.1004427.e059g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e059"/><mml:math id="M59" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mover><mml:mi>S</mml:mi> <mml:mo accent="true">˜</mml:mo></mml:mover> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>) and actuator (<inline-formula id="pcbi.1004427.e060"><alternatives><graphic id="pcbi.1004427.e060g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e060"/><mml:math id="M60" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mover><mml:mi>A</mml:mi> <mml:mo accent="true">˜</mml:mo></mml:mover> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>) values. The actuator values (output of the CRBM) are translated into forces, which are controlled by bullet and <sans-serif>YARS</sans-serif> to reach the desired angular position (for details see [<xref ref-type="bibr" rid="pcbi.1004427.ref048">48</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref049">49</xref>]). The maximal joint forces are large enough, such that each leg is able to lift the entire body on its own. This is done to mimic the leg strength of insects.</p>
<p>The policy update frequency was set to 10Hz, i.e., every 100ms the controller received a sensor value per sensor and generated an actuator value per actuator. The target behavior of the hexapod (a tripod walking gait, see <xref ref-type="fig" rid="pcbi.1004427.g007">Fig 7</xref>) was generated by an open-loop controller which applied phase shifted sine oscillations to the actuators. For each actuator, one period of the corresponding sine oscillation was discretized into 50 values (a single locomotion step requires 5 seconds). A faster walking behavior would not have given the legs enough time to reach the maximal angular positions. For evaluating the bound, exploiting the maximal range of the sensors and actuators is more important than optimizing the walking speed of the hexapod.</p>
<p>For the training and analysis, the sensor and actuator data was discretized into 16 uniform bins for each sensor and actuator. This corresponds to four binary input units for each sensor and four binary output units for each actuator. Combined into two random variables <italic>S</italic> = (<italic>S</italic><sub>1</sub>, <italic>S</italic><sub>2</sub>, …, <italic>S</italic><sub>12</sub>), <italic>A</italic> = (<italic>A</italic><sub>1</sub>, <italic>A</italic><sub>2</sub>, …, <italic>A</italic><sub>12</sub>), this leads to a total of 16<sup>12</sup> possible values (∣𝒮∣ = ∣𝒜∣ = 16<sup>12</sup>) corresponding to a total of 48 binary input and 48 binary output units. In the following sections, we only refer to this preprocessed data, which means that calculations and the training of the CRBMs described in the remainder of this section refer to the two random variables <italic>S</italic>, <italic>A</italic>.</p>
<p>In the next section we estimate the controller complexity that is sufficient to reproduce the desired tripod walking gait.</p>
</sec>
<sec id="sec012">
<title>Estimation of the sufficient complexity</title>
<p>Before the estimation procedure and results are presented, we restate the inequality given in Theorem 4, which is given by
<disp-formula id="pcbi.1004427.e061"><alternatives><graphic id="pcbi.1004427.e061g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e061"/><mml:math id="M61" display="block" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi> <mml:mo>≥</mml:mo> <mml:mrow><mml:mo>|</mml:mo> <mml:mo>𝓢</mml:mo> <mml:mo>|</mml:mo></mml:mrow> <mml:mo>+</mml:mo> <mml:msup><mml:mi>d</mml:mi> <mml:mrow><mml:mo>𝓢</mml:mo> <mml:mo>,</mml:mo> <mml:mo>𝓐</mml:mo></mml:mrow></mml:msup> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(12)</label></disp-formula>
This means that a CRBM should not require more hidden units (<italic>m</italic>) than the sum of the support set cardinality ∣𝓢∣ and embodied behavior dimension <italic>d</italic><sup>𝓢,𝓐</sup> minus 1. The following paragraphs explain how these two values were calculated from the recorded data.</p>
<p>The first step in estimating the sufficient controller complexity of the CRBM policy model is the estimation of the support’s cardinality ∣𝓢∣. It was mentioned above that there are 16<sup>12</sup> possible sensor values. The necessary complexity of a CRBM policy for a specific behavior depends on the actually used number of sensor values, which we call the sensor support set. By estimating the cardinality of the support set, we know how many sensor values the CRBM needs to take into account in order to reproduce the behavior of interest.</p>
<p>The estimation of the support set cardinality depends on the quality of the sample. Therefore, we sampled the sensor and actuator values of the target behavior over 10<sup>5</sup> time steps to ensure a sufficient convergence of the relative frequencies. <xref ref-type="fig" rid="pcbi.1004427.g008">Fig 8</xref> (left-hand side) shows the histogram for all recorded sensor values. The orange vertical line shows where we have pruned the data so that 80% of the recorded data was kept. <xref ref-type="fig" rid="pcbi.1004427.g008">Fig 8</xref> (right-hand side) shows the remaining data. With this procedure (recording, estimating relative frequencies, pruning the data to 80%), we estimated the cardinality of the sensor support set at ∣𝓢∣ = 63. The pruning threshold of 80% might appear arbitrary here. To clarify, estimating the support from data is an interesting research topic by itself, which, however, goes beyond the scope of this work. Our underlying assumption for the pruning is that the sampling is noisy. We decided for a pruning threshold at approximately twice the inflection point of the histogram. We want to point out that the threshold was chosen before the results of the experiments (see next section) were available.</p>
<fig id="pcbi.1004427.g008" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g008</object-id>
<label>Fig 8</label>
<caption>
<title>Estimation of the support’s cardinality.</title>
<p>Estimation of the support set cardinality (before and after pruning).</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g008"/>
</fig>
<p>The next step is to estimate the embodied behavior dimension, which is done here based on the affine rank of the empirically estimated internal world model <italic>γ</italic>(<italic>s</italic>, <italic>a</italic>; <italic>s</italic>′). For the sake of readability, we defer the justification for the replacement of the embodiment-behavior dimension by the affine rank of the internal world model to the supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s002">S2 Text</xref>. See <xref ref-type="supplementary-material" rid="pcbi.1004427.s005">S2 Fig</xref> for an illustration of the underlying causal structure.</p>
<p>Given the internal world model <inline-formula id="pcbi.1004427.e062"><alternatives><graphic id="pcbi.1004427.e062g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e062"/><mml:math id="M62" display="inline" overflow="scroll"><mml:mrow><mml:mover><mml:mi>γ</mml:mi> <mml:mo accent="true">˜</mml:mo></mml:mover></mml:mrow></mml:math></alternatives></inline-formula> sampled from the target behavior, we obtain the relevant quantity <italic>d</italic><sup>𝓢,𝓐</sup> as follows (see supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s002">S2 Text</xref>):
<disp-formula id="pcbi.1004427.e063"><alternatives><graphic id="pcbi.1004427.e063g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e063"/><mml:math id="M63" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mi>d</mml:mi> <mml:mrow><mml:mo>𝓢</mml:mo> <mml:mo>,</mml:mo> <mml:mo>𝓐</mml:mo></mml:mrow></mml:msup> <mml:mo>=</mml:mo> <mml:munder><mml:mo>∑</mml:mo> <mml:mrow><mml:mi>s</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝓢</mml:mo></mml:mrow></mml:munder> <mml:mo form="prefix">rank</mml:mo> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mrow><mml:mo>(</mml:mo> <mml:mover accent="true"><mml:mi>γ</mml:mi> <mml:mo>˜</mml:mo></mml:mover> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>,</mml:mo> <mml:msub><mml:mi>a</mml:mi> <mml:mn>0</mml:mn></mml:msub> <mml:mo>;</mml:mo> <mml:msup><mml:mi>s</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>-</mml:mo> <mml:mover accent="true"><mml:mi>γ</mml:mi> <mml:mo>˜</mml:mo></mml:mover> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>,</mml:mo> <mml:mi>a</mml:mi> <mml:mo>;</mml:mo> <mml:msup><mml:mi>s</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mrow><mml:msup><mml:mi>s</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo>∈</mml:mo> <mml:mo>𝓢</mml:mo> <mml:mo>,</mml:mo> <mml:mi>a</mml:mi> <mml:mo>∈</mml:mo> <mml:mo>𝒜</mml:mo></mml:mrow></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(13)</label></disp-formula>
The sampled internal world model <inline-formula id="pcbi.1004427.e064"><alternatives><graphic id="pcbi.1004427.e064g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e064"/><mml:math id="M64" display="inline" overflow="scroll"><mml:mrow><mml:mover><mml:mi>γ</mml:mi> <mml:mo accent="true">˜</mml:mo></mml:mover> <mml:mo stretchy="false">(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>,</mml:mo> <mml:mi>a</mml:mi> <mml:mo>;</mml:mo> <mml:msup><mml:mi>s</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> is pruned in accordance with the estimated support set 𝓢. For the remaining data, we counted the joint occurrences of <italic>s</italic>, <italic>a</italic>, <italic>s</italic>′ and filled the matrix <inline-formula id="pcbi.1004427.e065"><alternatives><graphic id="pcbi.1004427.e065g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e065"/><mml:math id="M65" display="inline" overflow="scroll"><mml:mrow><mml:mover><mml:mi>γ</mml:mi> <mml:mo accent="true">˜</mml:mo></mml:mover> <mml:mo stretchy="false">(</mml:mo> <mml:mi>s</mml:mi> <mml:mo>,</mml:mo> <mml:mi>a</mml:mi> <mml:mo>;</mml:mo> <mml:msup><mml:mi>s</mml:mi> <mml:mo>′</mml:mo></mml:msup> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> (pairs (<italic>s</italic>, <italic>a</italic>) index the rows and <italic>s</italic>′ indexes the column). Each non-zero row is normalized to produce a probability distribution and the other rows are discarded. The resulting estimated value for the embodied behavior dimension is <italic>d</italic><sup>𝓢,𝓐</sup> = 3. This means that there is a 3-dimensional face of the polytope <inline-formula id="pcbi.1004427.e066"><alternatives><graphic id="pcbi.1004427.e066g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e066"/><mml:math id="M66" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo><mml:mo>𝓢</mml:mo> </mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> of policies on 𝓢, which contains a policy that generates the target behavior. This implies that the target behavior can be generated by a mixture of 4 deterministic policies. The mixture reflects the stochasticity of the system, which results mainly from the discretization of sensor values.</p>
<p>Resulting estimation of the model complexity: It follows that the CRBM is able to represent the target behavior whenever the number of hidden units satisfies
<disp-formula id="pcbi.1004427.e067"><alternatives><graphic id="pcbi.1004427.e067g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e067"/><mml:math id="M67" display="block" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi> <mml:mo>≥</mml:mo> <mml:mrow><mml:mo>|</mml:mo> <mml:mo>𝓢</mml:mo> <mml:mo>|</mml:mo></mml:mrow> <mml:mo>+</mml:mo> <mml:msup><mml:mi>d</mml:mi> <mml:mrow><mml:mo>𝓢</mml:mo> <mml:mo>,</mml:mo> <mml:mo>𝓐</mml:mo></mml:mrow></mml:msup> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn> <mml:mo>=</mml:mo> <mml:mn>63</mml:mn> <mml:mo>+</mml:mo> <mml:mn>3</mml:mn> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn> <mml:mo>=</mml:mo> <mml:mn>65</mml:mn> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(14)</label></disp-formula></p>
<p>To evaluate the tightness of this bound, we conducted a series of experiments, which are explained in the following section.</p>
</sec>
<sec id="sec014">
<title>Experiments to evaluate the tightness of the complexity estimation</title>
<p>Before the experiments can be described, there is an important note to make. This work is concerned with the minimal complexity that is sufficient for controlling a set of desirable behaviors (this set may consist of all possible behaviors or of just one specific behavior). Here, we are <italic>not</italic> concerned with the question how these CRBMs should be trained optimally. This is why we used a standard training algorithm for RBMs [<xref ref-type="bibr" rid="pcbi.1004427.ref030">30</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref031">31</xref>] and conducted a large scan over different complexity parameters <italic>m</italic>. For each <italic>m</italic> = 1, 2, 3, …, 100 we trained 100 CRBMs with the following learning parameters: epochs = 20000, batch size = 50, learning rate <italic>α</italic> = 1.0, momentum = 0.1, Gaussian distributed noise on sensor data = 0.01, weight cost = 0.001, CRBM Gibbs updates for sampling = 10, on a data set of 10<sup>4</sup> pairs of sensor and actuator values. Each trained CRBM was evaluated ten times, by applying it to the hexapod and recording the distance covered in 30 seconds. The performance of the CRBMs is measured against the target tripod walking gait, which achieves 20.6 meters during the same time. As we are concerned with the performance that is in principle possible for a given <italic>m</italic>, we choose the policy that covered the most distance at one of the 10 trials (out of the 100 trained policies, for each <italic>m</italic>). The plot in <xref ref-type="fig" rid="pcbi.1004427.g009">Fig 9</xref> (left-hand side) shows the best performance of the best policy for all scanned values of <italic>m</italic>. The plot in <xref ref-type="fig" rid="pcbi.1004427.g009">Fig 9</xref> (right-hand side) shows the average performance of the best policy and the standard deviation, over 10 different evaluations, for all values of <italic>m</italic>. The results show that our estimation is fairly tight, which means the performance of the CRBMs converges to the optimal behavior close to the estimated value of <italic>m</italic> = 65. The supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s007">S1</xref>–<xref ref-type="supplementary-material" rid="pcbi.1004427.s010">S4</xref> Videos show the performance of the best CRBM for <italic>m</italic> = 5, 15, 65, 75.</p>
<fig id="pcbi.1004427.g009" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004427.g009</object-id>
<label>Fig 9</label>
<caption>
<title>Experimental results.</title>
<p>Performance of the best CRBM for different complexity parameters <italic>m</italic> in comparison to the performance of the target behavior (horizontal orange line). The vertical blue line indicates the <italic>m</italic> estimated from the data (see supporting information <xref ref-type="supplementary-material" rid="pcbi.1004427.s002">S2 Text</xref>).</p>
</caption>
<graphic mimetype="image" xlink:type="simple" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.g009"/>
</fig>
</sec>
</sec>
</sec>
<sec id="sec015" sec-type="conclusions">
<title>Discussion</title>
<p>We presented an approach for studying and implementing cheap design in the context of embodied artificial intelligence. In this context, we referred to cheap design as the reduction of the controller complexity that is possible through an exploitation of the agent’s body and environment. We developed a theory to determine the minimal controller complexity that is sufficient to generate a given set of desired behaviors. Being more precise, we studied the way in which embodiment constraints induce equivalent policies in the sense that they generate the same observable behaviors. This led to the definition of the effective dimension of an embodied system, the <italic>embodied behavior dimension</italic>. In this way, we were able to define low-dimensional policy models that can generate all possible behaviors. Such policy models are related to the classical notion of universal approximation.	</p>
<p>We used CRBMs as a platform of study, for which we presented non-trivial universal approximation results in both the non-embodied and the embodied settings. While the non-embodied universal approximation requires an enormous number of hidden units (exponentially many in the number of input and output units), embodied universal approximation can be achieved using a much smaller number, depending on the effective dimension of the system. Experiments conducted on a walking machine demonstrate the tightness of the estimated number of hidden units for a CRBM controller. This shows the practical utility of our theoretical analysis for embodied artificial intelligence. To the best of our knowledge, the presented formalism and results are amongst the first quantitative contributions to cheap design.</p>
<p>In artificial intelligence, learning is one of the central fields of interest. Crucial for the success of any learning method is the complexity of the underlying model, e.g. a neural network. If the model is chosen too complex, the learning algorithm will likely require too much time and get stuck in a suboptimal solution. If it is chosen too simple, it might not be able to solve the problem at all. This paper deals with the design of concise controller structures with main focus on the model class of conditional restricted Boltzmann machines. In this context, we find that the number <italic>m</italic> of hidden nodes naturally reflects the idea of a cheap or concise control. On the other hand, the total number <italic>m</italic>(<italic>k</italic> + <italic>n</italic> + 1) + <italic>n</italic> of parameters of the conditional restricted Boltzmann machine, increases linearly in <italic>m</italic>, which suggests that a concise control is not only beneficial in terms of mass and energy consumption but also in terms of the quality of learning. It is well known from statistical learning theory [<xref ref-type="bibr" rid="pcbi.1004427.ref050">50</xref>] that the number of parameters is not always the right measure for controlling the quality of learning. However, for the purpose of this discussion it is sufficient to take an intuitive perspective and interpret low-dimensional models as being beneficial for learning. A central problem within learning theory is the problem of finding the right model complexity for optimal generalization properties. Regularization theory and statistical learning theory provide the right theoretical settings for optimizing the generalization ability of a learning system [<xref ref-type="bibr" rid="pcbi.1004427.ref050">50</xref>, <xref ref-type="bibr" rid="pcbi.1004427.ref051">51</xref>]. Here, an increasing sequence of model complexities is considered, depending on the available data at each time, so that universal approximation is achieved only in the limit of infinite data. The choice of the right model is dynamically adjusted to the available data. In our context, however, the choice of the model is fixed and based on the embodiment of the system. More precisely, we can choose a low-dimensional model, depending on the embodiment dimension, which is our main observation. Whether or not the replacement of a universal approximator by an embodied universal approximator solves the problem of generalization remains an open problem. In any case, the generalization abilities of embodied systems have to be further studied, where concepts from regularization theory and statistical learning theory, such as the structural risk minimization principle [<xref ref-type="bibr" rid="pcbi.1004427.ref050">50</xref>], will be helpful. In this regard, the freezing-freeing concept [<xref ref-type="bibr" rid="pcbi.1004427.ref052">52</xref>] seems to point in a similar direction.</p>
<p>Finally, we would like to comment on the applicability of our work to biological systems. The general field of embodied intelligence emerged from the observation that natural intelligent systems tend to incorporate and exploit their morphological properties for the generation of behavior. This suggests the hypothesis that brains of naturally evolved systems are optimized towards concise architectures, referred to as cheap design. Given a fully developed theory of embodied intelligence, this hypothesis should be testable for various biological systems. Although our approach is guided by this long-term vision, in its current form it is not directly applicable to biological systems. In order to approach applicability, it is important to develop methods for efficiently estimating <italic>β</italic> and <italic>α</italic> from biological data. Furthermore, conditional restricted Boltzmann machines represent very simple and unrealistic brain models. Therefore, our results have to be extended to more realistic brain models. Our work may be seen as a guideline for extensions towards understanding cheap design in biological systems.</p>
</sec>
<sec id="sec016">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1004427.s001" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s001" mimetype="application/pdf" xlink:type="simple">
<label>S1 Text</label>
<caption>
<title>Technical proofs.</title>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s002" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s002" mimetype="application/pdf" xlink:type="simple">
<label>S2 Text</label>
<caption>
<title>Estimation of the Embodied Behavior Dimension based on the Internal World Model.</title>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s003" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s003" mimetype="application/pdf" xlink:type="simple">
<label>S3 Text</label>
<caption>
<title>Generalizations.</title>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s004" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s004" mimetype="image/tiff" xlink:type="simple">
<label>S1 Fig</label>
<caption>
<title>Illustration of the policy-behavior map.</title>
<p>This figure shows an example with ∣𝒮∣ = 3, ∣𝒜∣ = 2, ∣𝒲∣ = 3, and a sensor kernel <italic>β</italic> of affine rank two. Both the policy polytope <inline-formula id="pcbi.1004427.e068"><alternatives><graphic id="pcbi.1004427.e068g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e068"/><mml:math id="M68" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> and the set <inline-formula id="pcbi.1004427.e069"><alternatives><graphic id="pcbi.1004427.e069g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e069"/><mml:math id="M69" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒲</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> are three-dimensional cubes. The set <inline-formula id="pcbi.1004427.e070"><alternatives><graphic id="pcbi.1004427.e070g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e070"/><mml:math id="M70" display="inline" overflow="scroll"><mml:mrow><mml:mi>β</mml:mi> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> of kernels <italic>p</italic>(<italic>w</italic>; <italic>a</italic>) = ∑<sub><italic>s</italic></sub> <italic>β</italic>(<italic>w</italic>; <italic>s</italic>)<italic>π</italic>(<italic>s</italic>; <italic>a</italic>), <inline-formula id="pcbi.1004427.e071"><alternatives><graphic id="pcbi.1004427.e071g" mimetype="image" xlink:type="simple" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004427.e071"/><mml:math id="M71" display="inline" overflow="scroll"><mml:mrow><mml:mi>π</mml:mi> <mml:mo>∈</mml:mo> <mml:msubsup><mml:mo>Δ</mml:mo> <mml:mo>𝒜</mml:mo> <mml:mo>𝒮</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>, is a two-dimensional polygon (the blue hexagon). This projection by <italic>β</italic> represents one part of the policy-behavior map. The union of all two-dimensional faces of the policy polytope (one of them highlighted in dashed yellow) has the same image as the entire policy polytope.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s005" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s005" mimetype="image/tiff" xlink:type="simple">
<label>S2 Fig</label>
<caption>
<title>Special causal structure of the sensorimotor loop.</title>
<p>The dashed arrows are the ones that we omit within our assumptions.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s006" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s006" mimetype="image/tiff" xlink:type="simple">
<label>S3 Fig</label>
<caption>
<title>Causal structure of a SML with internal state.</title>
<p>Here <italic>W</italic><sup><italic>t</italic></sup>, <italic>S</italic><sup><italic>t</italic></sup>, <italic>C</italic><sup><italic>t</italic></sup>, <italic>A</italic><sup><italic>t</italic></sup> are the states of the world, sensors, internal variable, and actuators at the discrete time <italic>t</italic>.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s007" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s007" mimetype="video/quicktime" xlink:type="simple">
<label>S1 Video</label>
<caption>
<title>Walking hexapod with <italic>m</italic> = 5.</title>
<p>For the indicated value of <italic>m</italic>, 100 CRBMs were trained and the best one was chosen for presentation here. The right-hand side shows the walking behavior of two hexapods, of which one is opaque, while the second one is transparent. The transparent hexapod is controlled by the open-loop sinusoidal controller and displays the target behavior that was used to train the CRBMs. The behavior of the trained CRBM is shown in form of the opaque hexapod. We chose to include both behaviors in the video so that performance of the trained CRBM can be directly compared with the target behavior. The left-hand side in each video shows the internals of the CRBM. From top to bottom: The six squares with the moving blue lines show the raw sensor values for each leg, i.e., the angular values for the knee and shoulder joint over a period of 10 time steps (one second). Below, the activations of the CRBM neurons are shown in the following order (from top to bottom): input layer, hidden layer, output layer. A white box refers to an activation value of 1, while black refers to an activation of 0. The left-hand side is complete with the lower six squares which show how the binary output units translate to motor commands. The orange lines in each square on to the bottom show the motor commands for the knee and shoulder joint of one leg for 10 time steps (1 second).</p>
<p>(MOV)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s008" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s008" mimetype="video/quicktime" xlink:type="simple">
<label>S2 Video</label>
<caption>
<title>Walking hexapod with <italic>m</italic> = 15.</title>
<p>This video has the same layout as <xref ref-type="supplementary-material" rid="pcbi.1004427.s007">S1 Video</xref>.</p>
<p>(MOV)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s009" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s009" mimetype="video/quicktime" xlink:type="simple">
<label>S3 Video</label>
<caption>
<title>Walking hexapod with <italic>m</italic> = 65.</title>
<p>This video has the same layout as <xref ref-type="supplementary-material" rid="pcbi.1004427.s007">S1 Video</xref>.</p>
<p>(MOV)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004427.s010" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004427.s010" mimetype="video/quicktime" xlink:type="simple">
<label>S4 Video</label>
<caption>
<title>Walking hexapod with <italic>m</italic> = 75.</title>
<p>This video has the same layout as <xref ref-type="supplementary-material" rid="pcbi.1004427.s007">S1 Video</xref>.</p>
<p>(MOV)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ack>
<p>This work has been conducted in part at the Santa Fe Institute. The authors would like to thank Chris Adami and three anonymous referees for their helpful comments.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1004427.ref001">
<label>1</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Pfeifer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Scheier</surname> <given-names>C</given-names></name> (<year>2001</year>) <source>Understanding Intelligence</source>. <publisher-loc>Cambridge, MA, USA</publisher-loc>: <publisher-name>MIT Press</publisher-name>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref002">
<label>2</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Pfeifer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Bongard</surname> <given-names>JC</given-names></name> (<year>2006</year>) <source>How the Body Shapes the Way We Think: A New View of Intelligence</source>. <publisher-loc>Cambridge, MA</publisher-loc>: <publisher-name>The MIT Press (Bradford Books)</publisher-name>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref003">
<label>3</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Braitenberg</surname> <given-names>V</given-names></name> (<year>1984</year>) <source>Vehicles</source>. <publisher-loc>Cambridge MA</publisher-loc>: <publisher-name>MIT Press</publisher-name>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref004">
<label>4</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Clark</surname> <given-names>DD</given-names></name>, <name name-style="western"><surname>Sokoloff</surname> <given-names>L</given-names></name> (<year>1999</year>) <chapter-title>Circulation and energy metabolism of the brain</chapter-title>. In: <name name-style="western"><surname>Siegel</surname> <given-names>GJ</given-names></name>, <name name-style="western"><surname>Agranoff</surname> <given-names>BW</given-names></name>, <name name-style="western"><surname>Albers</surname> <given-names>RW</given-names></name>, <name name-style="western"><surname>Fisher</surname> <given-names>SK</given-names></name>, <name name-style="western"><surname>Uhler</surname> <given-names>MD</given-names></name>, editors, <source>Basic Neurochemistry: Molecular, Cellular and Medical Aspects</source>, <publisher-loc>Philadelphia</publisher-loc>: <publisher-name>Lippincott-Raven</publisher-name>, <volume>chapter 31</volume>. <edition>6th edition</edition>, pp. <fpage>637</fpage>–<lpage>669</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref005">
<label>5</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Sokoloff</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Mangold</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Wechsler</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Kennedy</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Kety</surname> <given-names>S</given-names></name> (<year>1955</year>) <article-title>Effect of mental arithmetic on cerebral circulation and metabolism</article-title>. <source>J Clin Invest</source> <volume>34</volume>: <fpage>1101</fpage>–<lpage>1108</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1172/JCI103159" xlink:type="simple">10.1172/JCI103159</ext-link></comment> <object-id pub-id-type="pmid">14392225</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref006">
<label>6</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Sol</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Garcia</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Iwaniuk</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Davis</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Meade</surname> <given-names>A</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>Evolutionary divergence in brain size between migratory and resident birds</article-title>. <source>PLoS ONE</source> <volume>5</volume>: <fpage>e9617</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1371/journal.pone.0009617" xlink:type="simple">10.1371/journal.pone.0009617</ext-link></comment> <object-id pub-id-type="pmid">20224776</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref007">
<label>7</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Pfeifer</surname> <given-names>R</given-names></name> (<year>1995</year>) <chapter-title>Cognition perspectives from autonomous agents</chapter-title>. In: <name name-style="western"><surname>Steels</surname> <given-names>L</given-names></name>, editor, <source>The Biology and Technology of Intelligent Autonomous Agents</source>, <publisher-name>Springer</publisher-name> <publisher-loc>Berlin Heidelberg</publisher-loc>, volume 144 of <italic>NATO ASI Series</italic>. pp. <fpage>128</fpage>–<lpage>164</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref008">
<label>8</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Paul</surname> <given-names>C</given-names></name> (<year>2006</year>) <article-title>Morphological computation: A basis for the analysis of morphology and control requirements</article-title>. <source>Robotics and Autonomous Systems</source> <volume>54</volume>: <fpage>619</fpage>–<lpage>630</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref009">
<label>9</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>McGeer</surname> <given-names>T</given-names></name> (<year>1990</year>) <article-title>Passive dynamic walking</article-title>. <source>International Journal of Robotic Research</source> <volume>9</volume>: <fpage>62</fpage>–<lpage>82</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1177/027836499000900206" xlink:type="simple">10.1177/027836499000900206</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref010">
<label>10</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Hauser</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Ijspeert</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Fchslin</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Pfeifer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Maass</surname> <given-names>W</given-names></name> (<year>2011</year>) <article-title>Towards a theoretical foundation for morphological computation with compliant bodies</article-title>. <source>Biological Cybernetics</source> <volume>105</volume>: <fpage>355</fpage>–<lpage>370</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/s00422-012-0471-0" xlink:type="simple">10.1007/s00422-012-0471-0</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref011">
<label>11</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Rückert</surname> <given-names>EA</given-names></name>, <name name-style="western"><surname>Neumann</surname> <given-names>G</given-names></name> (<year>2012</year>) <article-title>Stochastic optimal control methods for investigating the power of morphological computation</article-title>. <source>Artificial Life</source> <volume>19</volume>: <fpage>115</fpage>–<lpage>131</lpage>. <object-id pub-id-type="pmid">23186345</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref012">
<label>12</label>
<mixed-citation xlink:type="simple" publication-type="other">Polani D (2011) An informational perspective on how the embodiment can relieve cognitive burden. In: Proc. IEEE Symposium Series in Computational Intelligence 2011—Symposium on Artificial Life. IEEE, pp. 78–85.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref013">
<label>13</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Zahedi</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Ay</surname> <given-names>N</given-names></name> (<year>2013</year>) <article-title>Quantifying morphological computation</article-title>. <source>Entropy</source> <volume>15</volume>: <fpage>1887</fpage>–<lpage>1915</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.3390/e15051887" xlink:type="simple">10.3390/e15051887</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref014">
<label>14</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Haeufle</surname> <given-names>DFB</given-names></name>, <name name-style="western"><surname>Günther</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Wunner</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Schmitt</surname> <given-names>S</given-names></name> (<year>2014</year>) <article-title>Quantifying control effort of biological and technical movements: An information-entropy-based approach</article-title>. <source>Phys Rev E</source> <volume>89</volume>: <fpage>012716</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1103/PhysRevE.89.012716" xlink:type="simple">10.1103/PhysRevE.89.012716</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref015">
<label>15</label>
<mixed-citation xlink:type="simple" publication-type="other">Ghazi-Zahedi K, Rauh J (2015) Quantifying morphological computation based on an information decomposition of the sensorimotor loop. In: Proceedings of the 13th European Conference on Artificial Life (ECAL 2015), pp. 70–77.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref016">
<label>16</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Auerbach</surname> <given-names>JE</given-names></name>, <name name-style="western"><surname>Bongard</surname> <given-names>JC</given-names></name> (<year>2014</year>) <article-title>Environmental influence on the evolution of morphological complexity in machines</article-title>. <source>PLoS Comput Biol</source> <volume>10</volume>: <fpage>e1003399</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1371/journal.pcbi.1003399" xlink:type="simple">10.1371/journal.pcbi.1003399</ext-link></comment> <object-id pub-id-type="pmid">24391483</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref017">
<label>17</label>
<mixed-citation xlink:type="simple" publication-type="other">Brooks RA (1991) Intelligence without reason. In: Myopoulos J, Reiter R, editors, Proceedings of the 12th International Joint Conference on Artificial Intelligence (IJCAI-91). Sydney, Australia: Morgan Kaufmann publishers Inc.: San Mateo, CA, USA, pp. 569–595.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref018">
<label>18</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Brooks</surname> <given-names>RA</given-names></name> (<year>1991</year>) <article-title>Intelligence without representation</article-title>. <source>Artificial Intelligence</source> <volume>47</volume>: <fpage>139</fpage>–<lpage>159</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/0004-3702(91)90053-M" xlink:type="simple">10.1016/0004-3702(91)90053-M</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref019">
<label>19</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Lungarella</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Sporns</surname> <given-names>O</given-names></name> (<year>2006</year>) <article-title>Mapping information flow in sensorimotor networks</article-title>. <source>PLoS Comput Biol</source> <volume>10</volume>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref020">
<label>20</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Pfeifer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Lungarella</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Iida</surname> <given-names>F</given-names></name> (<year>2007</year>) <article-title>Self-organization, embodiment, and biologically inspired robotics</article-title>. <source>Science</source> <volume>318</volume>: <fpage>1088</fpage>–<lpage>1093</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1126/science.1145803" xlink:type="simple">10.1126/science.1145803</ext-link></comment> <object-id pub-id-type="pmid">18006736</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref021">
<label>21</label>
<mixed-citation xlink:type="simple" publication-type="other">Klyubin AS, Polani D, Nehaniv CL (2004) Tracking information flow through the environment: Simple cases of stigmerg. In: Pollack J, editor, Artificial Life IX: Proceedings of the Ninth International Conference on the Simulation and Synthesis of Living Systems. MIT Press, pp. 563–568.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref022">
<label>22</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Ay</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Zahedi</surname> <given-names>K</given-names></name> (<year>2014</year>) <chapter-title>On the causal structure of the sensorimotor loop</chapter-title>. In: <name name-style="western"><surname>Prokopenko</surname> <given-names>M</given-names></name>, editor, <source>Guided Self-Organization: Inception</source>, <publisher-name>Springer</publisher-name>. pp. <fpage>261</fpage>–<lpage>294</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref023">
<label>23</label>
<mixed-citation xlink:type="simple" publication-type="other">Smolensky P (1986) Information processing in dynamical systems: foundations of harmony theory. In: Symposium on Parallel and Distributed Processing. pp. 194–281.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref024">
<label>24</label>
<mixed-citation xlink:type="simple" publication-type="other">Freund Y, Haussler D (1994) Unsupervised Learning of Distributions of Binary Vectors Using Two Layer Networks. Technical report. Computer Research Laboratory, University of California, Santa Cruz.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref025">
<label>25</label>
<mixed-citation xlink:type="simple" publication-type="other">Larochelle H, Bengio Y (2008) Classification using discriminative restricted Boltzmann machines. In: Cohen WW, McCallum A, Roweis ST, editors, Proceedings of the 25th International Conference on Machine Learning (ICML 2008). volume 307, pp. 536–543.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref026">
<label>26</label>
<mixed-citation xlink:type="simple" publication-type="other">Salakhutdinov R, Mnih A, Hinton GE (2007) Restricted Boltzmann machines for collaborative filtering. In: Proceedings of the 24th International Conference on Machine Learning (ICML 2007). pp. 791–798.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref027">
<label>27</label>
<mixed-citation xlink:type="simple" publication-type="other">Sutskever I, Hinton GE (2007) Learning multilevel distributed representations for high-dimensional sequences. Proceeding of the 11th International Conference on Artificial Intelligence and Statistics: 548–555.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref028">
<label>28</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Taylor</surname> <given-names>GW</given-names></name>, <name name-style="western"><surname>Hinton</surname> <given-names>GE</given-names></name>, <name name-style="western"><surname>Roweis</surname> <given-names>S</given-names></name> (<year>2007</year>) <chapter-title>Modeling human motion using binary latent variables</chapter-title>. In: <source>NIPS</source> <volume>19</volume>. <publisher-name>MIT Press</publisher-name>, pp. <fpage>1345</fpage>–<lpage>1352</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref029">
<label>29</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Sallans</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Hinton</surname> <given-names>GE</given-names></name> (<year>2004</year>) <article-title>Reinforcement learning with factored states and actions</article-title>. <source>J Mach Learn Res</source> <volume>5</volume>: <fpage>1063</fpage>–<lpage>1088</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref030">
<label>30</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Hinton</surname> <given-names>GE</given-names></name> (<year>2002</year>) <article-title>Training products of experts by minimizing contrastive divergence</article-title>. <source>Neural Computation</source> <volume>14</volume>: <fpage>1771</fpage>–<lpage>1800</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1162/089976602760128018" xlink:type="simple">10.1162/089976602760128018</ext-link></comment> <object-id pub-id-type="pmid">12180402</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref031">
<label>31</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Hinton</surname> <given-names>GE</given-names></name> (<year>2012</year>) <chapter-title>A practical guide to training restricted Boltzmann machines</chapter-title>. In: <name name-style="western"><surname>Montavon</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Orr</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Müller</surname> <given-names>KR</given-names></name>, editors, <source>Neural Networks: Tricks of the Trade</source>, <publisher-name>Springer</publisher-name> <publisher-loc>Berlin Heidelberg</publisher-loc>, volume 7700 of <italic>Lecture Notes in Computer Science</italic>. pp. <fpage>599</fpage>–<lpage>619</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref032">
<label>32</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Bengio</surname> <given-names>Y</given-names></name> (<year>2009</year>) <article-title>Learning deep architectures for AI</article-title>. <source>Foundations and Trends in Machine Learning</source> <volume>2</volume>: <fpage>1</fpage>–<lpage>127</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1561/2200000006" xlink:type="simple">10.1561/2200000006</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref033">
<label>33</label>
<mixed-citation xlink:type="simple" publication-type="other">Long PM, Servedio RA (2010) Restricted Boltzmann machines are hard to approximately evaluate or simulate. In: Fürnkranz J, Joachims T, editors, Proceedings of the 27th International Conference on Machine Learning (ICML 2010). Omnipress, pp. 703–710.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref034">
<label>34</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Le Roux</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Bengio</surname> <given-names>Y</given-names></name> (<year>2008</year>) <article-title>Representational power of restricted Boltzmann machines and deep belief networks</article-title>. <source>Neural Computation</source> <volume>20</volume>: <fpage>1631</fpage>–<lpage>1649</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1162/neco.2008.04-07-510" xlink:type="simple">10.1162/neco.2008.04-07-510</ext-link></comment> <object-id pub-id-type="pmid">18254699</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref035">
<label>35</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Montúfar</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Ay</surname> <given-names>N</given-names></name> (<year>2011</year>) <article-title>Refinements of universal approximation results for deep belief networks and restricted Boltzmann machines</article-title>. <source>Neural Computation</source> <volume>23</volume>: <fpage>1306</fpage>–<lpage>1319</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1162/NECO_a_00113" xlink:type="simple">10.1162/NECO_a_00113</ext-link></comment> <object-id pub-id-type="pmid">21299421</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref036">
<label>36</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Montúfar</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Rauh</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Ay</surname> <given-names>N</given-names></name> (<year>2011</year>) <chapter-title>Expressive power and approximation errors of restricted Boltzmann machines</chapter-title>. In: <name name-style="western"><surname>Shawe-Taylor</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Zemel</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Bartlett</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Pereira</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Weinberger</surname> <given-names>K</given-names></name>, editors, <source>NIPS</source> <volume>24</volume>. pp. <fpage>415</fpage>–<lpage>423</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref037">
<label>37</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Martens</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Chattopadhya</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Pitassi</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Zemel</surname> <given-names>R</given-names></name> (<year>2013</year>) <chapter-title>On the expressive power of restricted Boltzmann machines</chapter-title>. In: <name name-style="western"><surname>Burges</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Bottou</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Welling</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Ghahramani</surname> <given-names>Z</given-names></name>, <name name-style="western"><surname>Weinberger</surname> <given-names>K</given-names></name>, editors, <source>NIPS</source> <volume>26</volume>. pp. <fpage>2877</fpage>–<lpage>2885</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref038">
<label>38</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Montúfar</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Ay</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Ghazi-Zahedi</surname> <given-names>K</given-names></name> (<year>2014</year>) <article-title>Expressive power of conditional restricted Boltzmann machines</article-title>. <source>To appear in J Mach Learn Res. arXiv preprint</source> <volume>arXiv</volume>:<fpage>14023346</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref039">
<label>39</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Shannon</surname> <given-names>CE</given-names></name> (<year>2001</year>) <article-title>A mathematical theory of communication</article-title>. <source>SIGMOBILE Mob Comput Commun Rev</source> <volume>5</volume>: <fpage>3</fpage>–<lpage>55</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1145/584091.584093" xlink:type="simple">10.1145/584091.584093</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref040">
<label>40</label>
<mixed-citation xlink:type="simple" publication-type="other">Bauer H (1996) Probability Theory. De Gruyter studies in mathematics. Bod Third Party Titles.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref041">
<label>41</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Pearl</surname> <given-names>J</given-names></name> (<year>2009</year>) <source>Causality: Models, Reasoning and Inference</source>. <publisher-loc>New York, NY, USA</publisher-loc>: <publisher-name>Cambridge University Press</publisher-name>, <edition>2nd edition</edition>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref042">
<label>42</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Aström</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Murray</surname> <given-names>R</given-names></name> (<year>2010</year>) <source>Feedback Systems: An Introduction for Scientists and Engineers</source>. <publisher-name>Princeton University Press</publisher-name>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref043">
<label>43</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Rivoire</surname> <given-names>O</given-names></name>, <name name-style="western"><surname>Leibler</surname> <given-names>S</given-names></name> (<year>2011</year>) <article-title>The value of information for populations in varying environments</article-title>. <source>Journal of Statistical Physics</source> <volume>142</volume>: <fpage>1124</fpage>–<lpage>1166</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/s10955-011-0166-2" xlink:type="simple">10.1007/s10955-011-0166-2</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref044">
<label>44</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Bialek</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>Nemenman</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Tishby</surname> <given-names>N</given-names></name> (<year>2001</year>) <article-title>Predictability, complexity, and learning</article-title>. <source>Neural Computation</source> <volume>13</volume>: <fpage>2409</fpage>–<lpage>2463</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1162/089976601753195969" xlink:type="simple">10.1162/089976601753195969</ext-link></comment> <object-id pub-id-type="pmid">11674845</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref045">
<label>45</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Zahedi</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Ay</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Der</surname> <given-names>R</given-names></name> (<year>2010</year>) <article-title>Higher coordination with less control—a result of informaion maximiation in the sensorimotor loop</article-title>. <source>Adaptive Behaviour</source> <volume>18</volume>: <fpage>338</fpage>–<lpage>355</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1177/1059712310375314" xlink:type="simple">10.1177/1059712310375314</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref046">
<label>46</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Ay</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Montúfar</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Rauh</surname> <given-names>J</given-names></name> (<year>2013</year>) <chapter-title>Selection criteria for neuromanifolds of stochastic dynamics</chapter-title>. In: <name name-style="western"><surname>Yamaguchi</surname> <given-names>Y</given-names></name>, editor, <source>Advances in Cognitive Neurodynamics (III)</source>, <publisher-name>Springer</publisher-name>. pp. <fpage>147</fpage>–<lpage>154</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref047">
<label>47</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Brooks</surname> <given-names>RA</given-names></name> (<year>1989</year>) <article-title>A robot that walks; emergent behaviors from a carefully evolved network</article-title>. <source>Neural Comput</source> <volume>1</volume>: <fpage>253</fpage>–<lpage>262</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1162/neco.1989.1.2.253" xlink:type="simple">10.1162/neco.1989.1.2.253</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004427.ref048">
<label>48</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Zahedi</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>von Twickel</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Pasemann</surname> <given-names>F</given-names></name> (<year>2008</year>) <chapter-title>Yars: A physical 3d simulator for evolving controllers for real robots</chapter-title>. In: <name name-style="western"><surname>Carpin</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Noda</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Pagello</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Reggiani</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>von Stryk</surname> <given-names>O</given-names></name>, editors, <source>SIMPAR 2008</source>. <publisher-name>Springer</publisher-name>, <publisher-loc>LNAI</publisher-loc> <volume>5325</volume>, pp. <fpage>71</fpage>–<lpage>82</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref049">
<label>49</label>
<mixed-citation xlink:type="simple" publication-type="other">Coumans E (2012). Bullet physic sdk manual. <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://www.bulletphysics.org">www.bulletphysics.org</ext-link>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref050">
<label>50</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Vapnik</surname> <given-names>VN</given-names></name> (<year>1998</year>) <source>Statistical Learning Theory</source>. <publisher-name>Wiley-Interscience</publisher-name>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref051">
<label>51</label>
<mixed-citation xlink:type="simple" publication-type="book">
<name name-style="western"><surname>Bishop</surname> <given-names>CM</given-names></name> (<year>2006</year>) <source>Pattern Recognition and Machine Learning (Information Science and Statistics)</source>. <publisher-loc>Secaucus, NJ, USA</publisher-loc>: <publisher-name>Springer-Verlag New York, Inc</publisher-name>.</mixed-citation>
</ref>
<ref id="pcbi.1004427.ref052">
<label>52</label>
<mixed-citation xlink:type="simple" publication-type="journal">
<name name-style="western"><surname>Berthouze</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Lungarella</surname> <given-names>M</given-names></name> (<year>2004</year>) <article-title>Motor skill acquisition under environmental perturbations: On the necessity of alternate freezing and freeing of degrees of freedom</article-title>. <source>Adaptive behavior</source> <volume>12</volume>: <fpage>47</fpage>–<lpage>64</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1177/105971230401200104" xlink:type="simple">10.1177/105971230401200104</ext-link></comment></mixed-citation>
</ref>
</ref-list>
</back>
</article>