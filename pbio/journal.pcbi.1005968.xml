<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN" "http://jats.nlm.nih.gov/publishing/1.1d3/JATS-journalpublishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.1d3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1005968</article-id>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-17-01185</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Information technology</subject><subj-group><subject>Databases</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Information technology</subject><subj-group><subject>Databases</subject><subj-group><subject>Relational databases</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Biological databases</subject><subj-group><subject>Genomic databases</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Computational biology</subject><subj-group><subject>Genome analysis</subject><subj-group><subject>Genomic databases</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Genetics</subject><subj-group><subject>Genomics</subject><subj-group><subject>Genome analysis</subject><subj-group><subject>Genomic databases</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Data management</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Database and informatics methods</subject><subj-group><subject>Database searching</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Neuroscience</subject><subj-group><subject>Cognitive science</subject><subj-group><subject>Cognitive psychology</subject><subj-group><subject>Language</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Psychology</subject><subj-group><subject>Cognitive psychology</subject><subj-group><subject>Language</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Social sciences</subject><subj-group><subject>Psychology</subject><subj-group><subject>Cognitive psychology</subject><subj-group><subject>Language</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Computer applications</subject><subj-group><subject>Web-based applications</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Ecology</subject><subj-group><subject>Ecosystems</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Ecology and environmental sciences</subject><subj-group><subject>Ecology</subject><subj-group><subject>Ecosystems</subject></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>Reactome graph database: Efficient access to complex pathway data</article-title>
<alt-title alt-title-type="running-head">Reactome graph database: Efficient access to complex pathway data</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-3288-8599</contrib-id>
<name name-style="western">
<surname>Fabregat</surname>
<given-names>Antonio</given-names>
</name>
<role content-type="http://credit.casrai.org/">Investigation</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Software</role>
<role content-type="http://credit.casrai.org/">Supervision</role>
<role content-type="http://credit.casrai.org/">Validation</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Korninger</surname>
<given-names>Florian</given-names>
</name>
<role content-type="http://credit.casrai.org/">Software</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Viteri</surname>
<given-names>Guilherme</given-names>
</name>
<role content-type="http://credit.casrai.org/">Software</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0003-1014-967X</contrib-id>
<name name-style="western">
<surname>Sidiropoulos</surname>
<given-names>Konstantinos</given-names>
</name>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Marin-Garcia</surname>
<given-names>Pablo</given-names>
</name>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff003"><sup>3</sup></xref>
<xref ref-type="aff" rid="aff004"><sup>4</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Ping</surname>
<given-names>Peipei</given-names>
</name>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff005"><sup>5</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Wu</surname>
<given-names>Guanming</given-names>
</name>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff006"><sup>6</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Stein</surname>
<given-names>Lincoln</given-names>
</name>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff007"><sup>7</sup></xref>
<xref ref-type="aff" rid="aff008"><sup>8</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>D’Eustachio</surname>
<given-names>Peter</given-names>
</name>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff009"><sup>9</sup></xref>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0001-8479-0262</contrib-id>
<name name-style="western">
<surname>Hermjakob</surname>
<given-names>Henning</given-names>
</name>
<role content-type="http://credit.casrai.org/">Funding acquisition</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="aff" rid="aff010"><sup>10</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
</contrib-group>
<aff id="aff001"><label>1</label> <addr-line>European Molecular Biology Laboratory, European Bioinformatics Institute (EMBL-EBI), Wellcome Genome Campus, Hinxton, United Kingdom</addr-line></aff>
<aff id="aff002"><label>2</label> <addr-line>Open Targets, Wellcome Genome Campus, Hinxton, United Kingdom</addr-line></aff>
<aff id="aff003"><label>3</label> <addr-line>Fundación Investigación INCLIVA, Universitat de València, Valencia, Spain</addr-line></aff>
<aff id="aff004"><label>4</label> <addr-line>Instituto de Medicina Genomica, Valencia, Spain</addr-line></aff>
<aff id="aff005"><label>5</label> <addr-line>NIH BD2K Center of Excellence and Department of Physiology, Medicine and Bioinformatics, University of California, Los Angeles, California, United States of America</addr-line></aff>
<aff id="aff006"><label>6</label> <addr-line>Oregon Health and Science University, Portland, Oregon, United States of America</addr-line></aff>
<aff id="aff007"><label>7</label> <addr-line>Ontario Institute for Cancer Research, Toronto, Canada</addr-line></aff>
<aff id="aff008"><label>8</label> <addr-line>Department of Molecular Genetics, University of Toronto, Toronto, (Canada)</addr-line></aff>
<aff id="aff009"><label>9</label> <addr-line>NYU Langone Medical Center, New York, New York, United States of America</addr-line></aff>
<aff id="aff010"><label>10</label> <addr-line>State Key Laboratory of Proteomics, Beijing Proteome Research Center, Beijing Institute of Radiation Medicine, National Center for Protein Sciences, Beijing, China</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Poisot</surname>
<given-names>Timothée</given-names>
</name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1"><addr-line>Universite de Montreal, CANADA</addr-line></aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">fabregat@ebi.ac.uk</email> (AF); <email xlink:type="simple">hhe@ebi.ac.uk</email> (HH)</corresp>
</author-notes>
<pub-date pub-type="epub">
<day>29</day>
<month>1</month>
<year>2018</year>
</pub-date>
<pub-date pub-type="collection">
<month>1</month>
<year>2018</year>
</pub-date>
<volume>14</volume>
<issue>1</issue>
<elocation-id>e1005968</elocation-id>
<history>
<date date-type="received">
<day>19</day>
<month>7</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>10</day>
<month>1</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-year>2018</copyright-year>
<copyright-holder>Fabregat et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1005968"/>
<abstract>
<p>Reactome is a free, open-source, open-data, curated and peer-reviewed knowledgebase of biomolecular pathways. One of its main priorities is to provide easy and efficient access to its high quality curated data. At present, biological pathway databases typically store their contents in relational databases. This limits access efficiency because there are performance issues associated with queries traversing highly interconnected data. The same data in a graph database can be queried more efficiently. Here we present the rationale behind the adoption of a graph database (Neo4j) as well as the new ContentService (REST API) that provides access to these data. The Neo4j graph database and its query language, Cypher, provide efficient access to the complex Reactome data model, facilitating easy traversal and knowledge discovery. The adoption of this technology greatly improved query efficiency, reducing the average query time by 93%. The web service built on top of the graph database provides programmatic access to Reactome data by object oriented queries, but also supports more complex queries that take advantage of the new underlying graph-based data storage. By adopting graph database technology we are providing a high performance pathway data resource to the community. The Reactome graph database use case shows the power of NoSQL database engines for complex biological data types.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author summary</title>
<p>To better support genome analysis, modeling, systems biology and education, we now offer our knowledgebase of biomolecular pathways as a graph database. We have developed a tool to migrate the Reactome content from the relational database used in curation to a graph database during each quarterly release process. The new graph database has two main advantages; higher performance and simpler ways to perform complex queries. Reactome has already adapted its software infrastructure to benefit from this growing in popularity storage technology, significantly improving query efficiency, by reducing the average query time by 93%. We strongly believe that the successful adoption of a graph database by Reactome demonstrates the positive impact this new technology could potentially have in the field and could provide a practical example for other community projects with similar complex data models to move their storage to a graph database while retaining their data models.</p>
</abstract>
<funding-group>
<award-group id="award001">
<funding-source>
<institution>National Institutes of Health (US)</institution>
</funding-source>
<award-id>P41HG003751</award-id>
</award-group>
<award-group id="award002">
<funding-source>
<institution>National Institutes of Health (US)</institution>
</funding-source>
<award-id>U54GM114833</award-id>
<principal-award-recipient>
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-3288-8599</contrib-id>
<name name-style="western">
<surname>Fabregat Mundo</surname>
<given-names>Antonio</given-names>
</name>
</principal-award-recipient>
</award-group>
<award-group id="award003">
<funding-source>
<institution>EMBL-EBI</institution>
</funding-source>
<principal-award-recipient>
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-3288-8599</contrib-id>
<name name-style="western">
<surname>Fabregat Mundo</surname>
<given-names>Antonio</given-names>
</name>
</principal-award-recipient>
</award-group>
<award-group id="award004">
<funding-source>
<institution>Open Targets</institution>
</funding-source>
<principal-award-recipient>Antonio Fabregat Mundo</principal-award-recipient>
</award-group>
<award-group id="award005">
<funding-source>
<institution-wrap>
<institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/501100003579</institution-id>
<institution>University of Toronto</institution>
</institution-wrap>
</funding-source>
<award-id>Medicine by Design</award-id>
<principal-award-recipient>Antonio Fabregat Mundo</principal-award-recipient>
</award-group>
<funding-statement>The development of Reactome is supported by grants from the National Institutes of Health (P41HG003751 and U54GM114833) (<ext-link ext-link-type="uri" xlink:href="https://nih.gov/" xlink:type="simple">https://nih.gov/</ext-link>), European Bioinformatics Institute (EMBL-EBI) (<ext-link ext-link-type="uri" xlink:href="https://ebi.ac.uk/" xlink:type="simple">https://ebi.ac.uk/</ext-link>), Open Targets (The Target Validation Platform) (<ext-link ext-link-type="uri" xlink:href="https://www.opentargets.org/" xlink:type="simple">https://www.opentargets.org/</ext-link>), and Medicine by Design (University of Toronto)(<ext-link ext-link-type="uri" xlink:href="http://mbd.utoronto.ca/" xlink:type="simple">http://mbd.utoronto.ca/</ext-link>). Funding for open access charge: National Institutes of Health [U54GM114833]. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="8"/>
<table-count count="0"/>
<page-count count="13"/>
</counts>
<custom-meta-group>
<custom-meta>
<meta-name>PLOS Publication Stage</meta-name>
<meta-value>vor-update-to-uncorrected-proof</meta-value>
</custom-meta>
<custom-meta>
<meta-name>Publication Update</meta-name>
<meta-value>2018-02-08</meta-value>
</custom-meta>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>All relevant data are within the paper and its Supporting Information files.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<disp-quote>
<p>This is a <italic>PLOS Computational Biology</italic> Software paper.</p>
</disp-quote>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>Reactome (<ext-link ext-link-type="uri" xlink:href="https://reactome.org/" xlink:type="simple"><underline>https://reactome.org</underline></ext-link>) is a free, open-source, open-data, curated and peer-reviewed knowledgebase of biomolecular pathways. Reactome annotates processes in a consistent pathway model to create an online resource for researchers as a core reusable pathway dataset for systems biology approaches. Reactome provides infrastructure and intuitive bioinformatics tools for search, visualisation, interpretation and analysis of pathways [<xref ref-type="bibr" rid="pcbi.1005968.ref001">1</xref>].</p>
<p>Reactome contains a detailed representation of cellular processes, as an ordered network of molecular reactions, interconnecting terms to form a graph of biological knowledge. Like most biomolecular pathway knowledgebases, Reactome has relied on a relational database to store its content. Although widely used among pathway knowledgebases for data management, relational databases are not always the best fit to deal with today’s performance requirements and increasing data complexity [<xref ref-type="bibr" rid="pcbi.1005968.ref002">2</xref>, <xref ref-type="bibr" rid="pcbi.1005968.ref003">3</xref>]. Relational databases cope well with modeling and storing complex pathway information, but the final product is very likely to contain many intermediate tables to represent many-to-many relationships. As a result, database queries across a network of highly interconnected pathway data are often difficult to formulate and require a high number of join operations, ultimately resulting in degradation of performance and excessive response times.</p>
<p>The Reactome data model naturally forms a large interconnected network that can be seen as a directed graph, which consists of a set of nodes and a collection of directed edges connecting ordered pairs of nodes [<xref ref-type="bibr" rid="pcbi.1005968.ref004">4</xref>]. Storing Reactome pathway data in its natural form has multiple benefits. Most significantly, it does not require any transformation of data into a flat or denormalised table format. As a result, data can be persisted as originally designed, reducing the complexity of the database and thus allowing a more straightforward access to the Reactome knowledgebase [<xref ref-type="bibr" rid="pcbi.1005968.ref003">3</xref>].</p>
<p>Here we describe the motivation behind our adoption of a graph database and show how Reactome benefits from this change in the underlying storage technology to overcome the previously mentioned limitations imposed by relational databases. The main target audiences for this manuscript are bioinformatics developers, who might be inspired to apply a graph database in a similar domain, and bioinformaticians involved in pathway analysis, who might benefit from using our graph database directly. While users of the Reactome web interface take advantage of the described gains in performance, features, and stability, the Reactome web interface is described in detail in [<xref ref-type="bibr" rid="pcbi.1005968.ref001">1</xref>].</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Design and implementation</title>
<sec id="sec003">
<title>The Reactome data model</title>
<p>Reactome uses a frame-based knowledge representation [<xref ref-type="bibr" rid="pcbi.1005968.ref005">5</xref>]. The data model (<ext-link ext-link-type="uri" xlink:href="https://reactome.org/content/schema" xlink:type="simple"><underline>https://reactome.org/content/schema</underline></ext-link>) consists of classes (frames) that describe different concepts like reaction or entity. Classes have attributes (slots) that hold properties of the represented class instances, like names or identifiers. The value types contained in the slots can be primitive (string, numbers, or boolean) or references to other class instances. Therefore, knowledge in Reactome is captured as instances of these classes with their associated attributes.</p>
<p>While implementing its relational database, Reactome opted for a physical design that favoured flexibility over performance. Simply put, the relational database incorporated an increased level of abstraction in its physical design resulting in easier adoption of new concepts but at the same time heavily impacting the complexity and execution time of its queries. However, since the graph database natively stores Reactome content in a graph following its model, this trade-off between flexibility and performance is no longer needed.</p>
<p>The Event and PhysicalEntity (PE) classes hold prominent positions in the Reactome model. Events are the building blocks used in Reactome to represent biological processes and are further subclassed into Pathways and ReactionLikeEvents (RLE). RLEs are single-step molecular transformations. RLE includes Reaction among other types like FailedReaction, Polymerisation, Depolymerisation, and BlackBoxEvent. Examples discussed here all involve transformations of the “Reaction” type but all types are handled in the same way with the same results. Pathways are ordered groups of RLEs that together carry out a biological process. PEs are the participants in these events. PE types include SimpleEntity for chemicals, EntityWithAccessionedSequence for proteins, Complex for multi-molecular structures and EntitySet for PEs grouped together on the basis of their shared function.</p>
</sec>
<sec id="sec004">
<title>Moving from a relational to a graph database</title>
<p>Persistence of a model, like the one described above, can be achieved with flat files, a relational database, or a non-relational database (e.g. a graph database). The selected underlying storage mechanism determines how data are physically stored and accessed. Consequently, each of these options comes with both advantages and disadvantages in terms of performance and scalability. Until recently, Reactome relied on a relational database (MySQL) for both storing its content during curation and accessing it in its production phase. Among the factors that contributed to this decision were that (1) Protégé (<ext-link ext-link-type="uri" xlink:href="http://protege.stanford.edu/" xlink:type="simple"><underline>http://protege.stanford.edu</underline></ext-link>) was used as the curator tool during Reactome's nascent years with a Perl script processing the Protégé files to store content into a MySQL database, which was modeled according to the Protégé schema, (2) at the time a relational database met Reactome’s needs for data integrity and consistency, and (3) relational databases were well established for biological data whereas graph based solutions were hardly used in the field [<xref ref-type="bibr" rid="pcbi.1005968.ref006">6</xref>, <xref ref-type="bibr" rid="pcbi.1005968.ref007">7</xref>].</p>
<p>It was not until recently that graph databases became a popular technology in different areas of computational biology. Henkel et al. proposed the concept of graph databases for storage and retrieval of computational models of biological systems [<xref ref-type="bibr" rid="pcbi.1005968.ref007">7</xref>]. Summer et al. developed a Cytoscape application that takes advantage of the Neo4j database to perform server-side analysis of large and complex biological networks [<xref ref-type="bibr" rid="pcbi.1005968.ref008">8</xref>]. In [<xref ref-type="bibr" rid="pcbi.1005968.ref009">9</xref>] the authors explored the potential of using a graph database to facilitate data management and analysis to provide biological context to disease-related genes and proteins. Toure et al. developed a Java-based framework that transforms biological pathways represented in SBGN format into the Neo4j graph database, enabling more powerful management and querying of complex biological networks [<xref ref-type="bibr" rid="pcbi.1005968.ref010">10</xref>]. Balaur et al. demonstrated that advanced exploration of highly connected and comprehensive genome-scale metabolic reconstructions can benefit from an integrated graph representation of the model and associated data [<xref ref-type="bibr" rid="pcbi.1005968.ref011">11</xref>]. Swainston et al. described biochem4j that enables complex queries by linking a number of widely used chemical, biochemical and biology resources within a graph database [<xref ref-type="bibr" rid="pcbi.1005968.ref012">12</xref>].</p>
<p>Reactome has gradually introduced a Neo4j graph database (<ext-link ext-link-type="uri" xlink:href="https://neo4j.com/" xlink:type="simple"><underline>https://neo4j.com/</underline></ext-link>) to store and query its content in the production phase since July 2016 (version 57). Neo4j is an open source, transactional and ACID (Atomicity, Consistency, Isolation, and Durability) compliant graph database [<xref ref-type="bibr" rid="pcbi.1005968.ref013">13</xref>]. Native graph databases, such as Neo4j, naturally store, manage, analyze, and use data within the context of connections to improve performance and flexibility when handling highly interconnected data compared to that in SQL. Neo4j’s greatest advantage and probably its most defining feature is Cypher: a declarative, pattern matching query language, specifically designed for dealing with graph data structures [<xref ref-type="bibr" rid="pcbi.1005968.ref014">14</xref>, <xref ref-type="bibr" rid="pcbi.1005968.ref015">15</xref>].</p>
<p>The Reactome knowledgebase has many use cases, like the one in <xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1</xref>, where the use of a graph model together with a query language like Cypher can greatly improve response times and simplify the code necessary to access the data. For instance, recursively retrieving all reactions of a pathway, retrieving the participants of a reaction or a pathway, deconstructing a complex or a set into its participating molecules, or enumerating the chain of consecutive reactions that lead to the formation of a signalling complex are typical use cases that benefit greatly from traversing the graph version of the Reactome knowledgebase.</p>
<fig id="pcbi.1005968.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g001</object-id>
<label>Fig 1</label>
<caption>
<title>A simplified example where reactions only contain reactants and products represented by the class PhysicalEntity.</title>
<p>(a) In the relational use case, two junction tables are required to model these many-to-many relationships (b) SQL query used to retrieve input and output entities of a given reaction where two join operations are needed per junction table. (c) The same reaction modelled as a graph. The reaction (green node) contains named outgoing relationships to corresponding input and output entities (purple nodes). (d) The same query written in Cypher, in a shorter but more intuitive manner.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g001" xlink:type="simple"/>
</fig>
<p><xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1</xref> provides a simplified example where reactions only contain lists of reactants and products, instances of the PE class. In the relational use case, two junction tables, Reaction-input and Reaction-output, are required to model these many-to-many relationships (<xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1A</xref>). Each junction table contains foreign keys of the Reactions and the associated PEs. The SQL query to retrieve input and output entities of a given reaction requires two join operations per junction table (<xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1B</xref>). In the first stage of its execution, each join operation forms the cartesian product between the tables and, during the filtering process, all rows of the result set that are not of interest are discarded.</p>
<p>The same structure of a reaction with inputs and outputs can be modelled in a simpler way with Neo4j as exemplified by the reaction presented in <xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1C</xref>. The reaction (green node), contains named outgoing relationships to corresponding input and output entities (purple nodes). Taking advantage of Cypher, the same query, can be written in a shorter but more intuitive manner thanks to its ASCII-Art syntax [<xref ref-type="bibr" rid="pcbi.1005968.ref003">3</xref>] to represent patterns (<xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1D</xref>). The query describes a pattern that includes a Reaction, again identified by its identifier, with its outgoing input and output relationships. Finally, all nodes matching the specified pattern are returned.</p>
<p>Since their introduction in the 1970’s, relational database engines have been optimised to provide efficient execution of SQL queries. This is particularly the case with global queries that aggregate large amounts of data without the need to perform any traversal operations. However, Reactome data contain many relationships, like those illustrated in <xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1</xref>, and thus many join tables, so queries generally require traversal operations, a computational intensive task that tends to result in poor performance compared to graph databases [<xref ref-type="bibr" rid="pcbi.1005968.ref016">16</xref>]. To address this issue and improve query performance, some resources have created redundant denormalised copies of their relational database [<xref ref-type="bibr" rid="pcbi.1005968.ref017">17</xref>, <xref ref-type="bibr" rid="pcbi.1005968.ref018">18</xref>, <xref ref-type="bibr" rid="pcbi.1005968.ref019">19</xref>]. Nowadays, graph databases, such as Neo4j, offer a more appropriate alternative for cases of highly interconnected data.</p>
</sec>
<sec id="sec005">
<title>The new graph database ecosystem</title>
<p>The graph database batch importer (<ext-link ext-link-type="uri" xlink:href="https://github.com/reactome/graph-importer" xlink:type="simple"><underline>https://github.com/reactome/graph-importer</underline></ext-link>) was developed to migrate the content from the relational database used in curation, to a graph database during each quarterly release process. Although the underlying data storage was changed, the original data model used by MySQL was kept the same. The conversion was done following a depth-first approach starting from the top level pathways and traversing all the content, ensuring that each object is processed only once during the conversion. Every object constitutes a node in the graph and the edges that connect the nodes correspond to the names of the slots as defined in the domain model (<xref ref-type="fig" rid="pcbi.1005968.g002">Fig 2</xref>). As a result, a Neo4j graph database is generated and contains all the Reactome data. It can be directly used for third parties in order to use Cypher to retrieve the target data.</p>
<fig id="pcbi.1005968.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Representation of the content migration.</title>
<p>The example shows a Reaction class reduced to its inputs, outputs, catalyst and regulators. A model class instance is converted to a graph database node where (1) slots with primitive value types become node properties and (2) slots allocating instances of another class become relationships.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g002" xlink:type="simple"/>
</fig>
<p>A number of integrity tests have been put in place to ensure that both the graph and relational database have the same content after conversion. These tests are part of the graph-core and they are executed after migrating the relational database to the graph database to ensure that the data has been properly stored. The tests include checks to verify: that the number of top level pathways present in the graph database corresponds to the number of those present in the relational database; that a given pathway in the graph database has the same ancestors as its counterpart in the relational database; that the content of a given complex is the same in both databases.</p>
<p><xref ref-type="fig" rid="pcbi.1005968.g003">Fig 3</xref> presents a schematic illustration of the new Reactome graph database ecosystem. A library called graph-core (<ext-link ext-link-type="uri" xlink:href="https://github.com/reactome/graph-core" xlink:type="simple"><underline>https://github.com/reactome/graph-core</underline></ext-link>) was developed on top of the graph database to serve as a data access layer. The aim of the library is to provide easy access and data persistence as well as to reduce the boilerplate code in third party projects that require accessing and traversing Reactome content. The graph-core uses Spring Data Neo4j (SDN) [<xref ref-type="bibr" rid="pcbi.1005968.ref020">20</xref>] to access the graph content and AspectJ to enable lazy loading [<xref ref-type="bibr" rid="pcbi.1005968.ref021">21</xref>]. Lazy loading commonly refers to a design pattern, that postpones the retrieval of object attributes until the point at which they are needed. In our case, AspectJ weaver is used to intercept the getter methods and run specific code to silently retrieve more data when needed.</p>
<fig id="pcbi.1005968.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g003</object-id>
<label>Fig 3</label>
<caption>
<title>A schematic diagram of the new ecosystem.</title>
<p>The relational database is converted to a graph database via the batch importer that relies on the Domain Model. Spring Data Neo4j and AspectJ are two main pillars for the graph-core, which also rests on the Domain Model. Users access services or use tools that make direct use of the graph-core as a library that eliminates the code boilerplate for data retrieval and offers a data persistency mechanism. Finally, export tools take advantage of Cypher to generate flat mapping files.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g003" xlink:type="simple"/>
</fig>
<p>The ContentService (<ext-link ext-link-type="uri" xlink:href="https://reactome.org/ContentService" xlink:type="simple"><underline>https://reactome.org/ContentService</underline></ext-link>) is a REST based web service [<xref ref-type="bibr" rid="pcbi.1005968.ref022">22</xref>], built on top of the graph-core, to provide programmatic access to the Graph Database for third party developers (<ext-link ext-link-type="uri" xlink:href="https://github.com/reactome/content-service" xlink:type="simple"><underline>https://github.com/reactome/content-service</underline></ext-link>). Implemented on top of Spring MVC (<ext-link ext-link-type="uri" xlink:href="https://spring.io/" xlink:type="simple"><underline>https://spring.io/</underline></ext-link>), the ContentService utilises the graph-core library and is fully documented with Open API (<ext-link ext-link-type="uri" xlink:href="https://www.openapis.org/" xlink:type="simple"><underline>https://www.openapis.org/</underline></ext-link>).</p>
</sec>
</sec>
<sec id="sec006" sec-type="conclusions">
<title>Results and discussion</title>
<p>Among its main advantages, this new solution is faster and less computationally intensive than the previous one based on the relational database. Performing queries against the graph database constitutes a more scalable approach, resulting in higher throughput and, ultimately, to a more robust ContentService able to cope with an always increasing number of requests. Additionally, the resulting product is easier to maintain as most new methods can be added by simply writing the respective Cypher queries, avoiding writing complex algorithms in a given programming language (<xref ref-type="fig" rid="pcbi.1005968.g001">Fig 1B</xref>).</p>
<p>The use cases above are available as methods in the ContentService API (<ext-link ext-link-type="uri" xlink:href="https://reactome.org/ContentService/" xlink:type="simple">https://reactome.org/ContentService/</ext-link>). <xref ref-type="fig" rid="pcbi.1005968.g004">Fig 4</xref> emphasises how queries of Reactome data have been simplified by the adoption of the graph database. The query in <xref ref-type="fig" rid="pcbi.1005968.g004">Fig 4A</xref> shows how to retrieve the participating molecules for a pathway. The reverse query, identifying pathways where a molecule participates, is shown in <xref ref-type="fig" rid="pcbi.1005968.g004">Fig 4B</xref>, which follows a similar pattern to <xref ref-type="fig" rid="pcbi.1005968.g004">Fig 4A</xref>, but fixes the end-bound and leaves the upper-side open for traversing results. Based on feedback provided by people contacting our help desk (<email xlink:type="simple">help@reactome.org</email>) and attending our training sessions, the new way of querying Reactome is easy and intuitive to learn, and researchers, who are interested in performing queries against Reactome data, can learn to write them in Cypher in a relatively short amount of time.</p>
<fig id="pcbi.1005968.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Examples of frequent use cases that can be answered using Cypher queries.</title>
<p>a) Retrieving the participating molecules for “Interleukin-4 and 13 signalling” pathway. b) Retrieving the pathways in which CCR5 participates.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g004" xlink:type="simple"/>
</fig>
<p>To assess the improvement we designed a set of stress tests to measure the impact of adopting the graph database in Reactome. All stress tests were executed on a standard laptop featuring an Intel Core i7 at 2.6 GHz, 16 GB of DDR3 memory at 1,600 MHz, and 256 GB of flash storage. The tests do not aim to compare the two storage technologies (MySQL and Neo4j) but instead their usage by Reactome. The stress tests were run against the web services build on top of each storage technology and included two scenarios: (1) simulation of one user sequentially querying 5,000 reactions for <italic>Homo sapiens</italic> and (2) simulating an increasing set of users simultaneously performing the previous task. In each case the resulting data for every reaction had to be marshalled as an instance of the correspondent model class. The test comprised four executions; two against the previous web service running on top of the relational database and the other two accessing the new web service running on top of the graph database through the newly created graph-core library (<ext-link ext-link-type="uri" xlink:href="https://github.com/reactome/graph-core" xlink:type="simple"><underline>https://github.com/reactome/graph-core</underline></ext-link>). The reactions were accessed in a sequential fashion to ensure that caching did not provide any sort of advantage for any of the approaches, because a queried object would never be retrieved again in the same test. It should be mentioned that prior to any stress test’s execution, both Neo4j and MySQL databases were configured to allocate 50% of the available physical memory (8GB).</p>
<p>As illustrated in <xref ref-type="fig" rid="pcbi.1005968.g005">Fig 5</xref>, querying the data stored in the relational database resulted in significantly longer response times. In particular, in the case of the relational implementation of the Reactome knowledgebase the average query time was 173.11 ms (±25.81) while in the case of the graph implementation, the average response time dropped to 12.56 ms (±2.94),a 93% reduction in the average query time. The new implementation supported higher throughput, in terms of transactions per second (TPS), reaching 79.5 TPS compared to 5.8 TPS. As a result of this boost in performance, all 5,000 queries to the graph database were performed in 63 seconds while the relational implementation required more than 14 minutes for the same task.</p>
<fig id="pcbi.1005968.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Comparison of the response and elapsed time for one user sequentially retrieving 5,000 reaction instances from the graph and relational databases (blue and orange respectively).</title>
<p>The graph database software ecosystem achieved a 93% average improvement in performance compared to that of the relational database.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g005" xlink:type="simple"/>
</fig>
<p>A second stress test simulated a more realistic scenario where multiple users perform concurrent database queries (<xref ref-type="fig" rid="pcbi.1005968.g006">Fig 6</xref>). Once again, querying the Reactome knowledgebase in its relational implementation resulted in significantly longer response times. For instance, in case of 10 concurrent threads performing queries to the relational implementation of the Reactome knowledgebase the average response time was 1,516 ms while in the case of the graph implementation, the average response time dropped to 49.05 ms. In addition, the new implementation achieved higher throughput reaching 203.6 TPS compared to 6.6 TPS. Consequently, the graph implementation of Reactome provides higher scalability enabling Reactome to handle larger volumes of user requests.</p>
<fig id="pcbi.1005968.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Response time versus an increasing set of users simultaneously performing queries for 5,000 reaction instances.</title>
<p>Starting with one and scaling up to 20 concurrent users, the relational database performance drops while the graph database keeps a low response time and a good throughput as the number of active threads increases.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g006" xlink:type="simple"/>
</fig>
<p><xref ref-type="fig" rid="pcbi.1005968.g007">Fig 7</xref> presents a comparison between the throughputs achieved by both systems against the number of users performing concurrent queries. The graph implementation achieved a higher number of transactions per second that reached a plateau after the point where the number of active threads becomes equal to the available processor cores; in this case 4. On the other hand, the measured throughput in case of the relational implementation is stable and does not seem to take advantage of any concurrency.</p>
<fig id="pcbi.1005968.g007" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g007</object-id>
<label>Fig 7</label>
<caption>
<title>Throughput measured in transactions per second, versus the number of users concurrently performing queries for 5,000 reaction instances in <italic>Homo sapiens</italic>.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g007" xlink:type="simple"/>
</fig>
<p>Many users choose to download the Reactome graph database and access the data through Cypher queries directly in their computers. Our usage statistics show that a growing number of users have downloaded the Reactome graph database and, based on the questions gathered by our help desk service, we believe that they have used it to perform local queries against the complete Reactome knowledgebase. In particular, during the first year that Reactome provided the graph database, there were 2,385 downloads by 912 unique users. 118 of those users downloaded the graph database after each data release. It is worth mentioning that during writing of this manuscript, the size of the Reactome relational database in its current data release (v62) is around 2.0GB while the size of the graph database is approximately 1.8GB. <xref ref-type="fig" rid="pcbi.1005968.g008">Fig 8</xref> provides a summary of the graph database.</p>
<fig id="pcbi.1005968.g008" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1005968.g008</object-id>
<label>Fig 8</label>
<caption>
<title>The Reactome graph database in numbers.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1005968.g008" xlink:type="simple"/>
</fig>
<p>With a tool so powerful at managing highly connected data sets and complex queries at our disposal, Reactome is providing faster and more stable services to researchers around the world. In the near future, Reactome plans to upgrade its services and leverage the full potential of Cypher in order to provide answers to questions that require diving deeper into our data. In particular, the integration of a graph database lowers the complexity of problems that require traversing of our knowledgebase, such as identifying causal interactions or revealing all possible paths between two molecules.</p>
<p>Future development in Reactome is not likely to be affected by the fact that Neo4j is by nature schema-less, mainly because the rigid schema of our relational database with all the applied constraints is used to ensure data consistency during the curation phase. Currently, data are migrated to Neo4j during each quarterly release process and are used to speed up queries in production.</p>
<p>In conclusion, through the adoption of the Neo4j graph database, and by harnessing the power of its query language, Reactome provides efficient access to its pathway knowledgebase. As a result of this shift in the underlying data storage technology, the average query time has been reduced up to 93%. In addition, the graph-core library and the ContentService leverage these benefits of this shift and can be used by third party applications to efficiently access Reactome.</p>
<p>Reactome’s successful use case constitutes a strong argument in favour of the positive impact this new technology can have in the field. By following Reactome’s use case, other community projects with similar complex models could benefit from moving their storage to a graph database while keeping their data model. While we have demonstrated the major impact of moving the Reactome public database to a graph database in terms of usability, stability, and response time, we think this is only a milestone in the growing ecosystem of network-oriented biomolecular data resources that will enable entirely new functionalities through moving to modern database technology that better reflects the graph-like structure of their source data. While we will work directly with internal and external resources to move along that path, we would also like to invite the community to use the open data Reactome graph database to develop their own novel uses of Reactome data.</p>
</sec>
<sec id="sec007">
<title>Availability and future directions</title>
<p>The Reactome graph database is freely available at: <ext-link ext-link-type="uri" xlink:href="https://reactome.org/dev/graph-database" xlink:type="simple"><underline>https://reactome.org/dev/graph-database</underline></ext-link>. The API for the ContentService is available at <ext-link ext-link-type="uri" xlink:href="https://reactome.org/ContentService" xlink:type="simple"><underline>https://reactome.org/ContentService</underline></ext-link> with documentation and tutorials available at: <ext-link ext-link-type="uri" xlink:href="https://reactome.org/dev/content-service" xlink:type="simple"><underline>https://reactome.org/dev/content-service</underline></ext-link>. The source code, in Java, is freely available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/reactome" xlink:type="simple"><underline>https://github.com/reactome</underline></ext-link> (See the graph-core, graph-importer and content-service repositories).</p>
<p>Future development will focus on updating the version of SDN and integrating interaction data from IntAct (<ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/intact/" xlink:type="simple"><underline>http://www.ebi.ac.uk/intact/</underline></ext-link>) directly to the Reactome graph database.</p>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="pcbi.1005968.ref001"><label>1</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Fabregat</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Sidiropoulos</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Garapati</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Gillespie</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Hausmann</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Haw</surname> <given-names>R</given-names></name>, <etal>et al</etal>. <article-title>The Reactome pathway Knowledgebase</article-title>. <source>Nucleic Acids Res</source>. <year>2016</year>; <volume>44</volume>:<fpage>D481</fpage>–<lpage>7</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gkv1351" xlink:type="simple">10.1093/nar/gkv1351</ext-link></comment> <object-id pub-id-type="pmid">26656494</object-id></mixed-citation></ref>
<ref id="pcbi.1005968.ref002"><label>2</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Van Bruggen</surname> <given-names>R</given-names></name>. <source>Learning Neo4j</source>. <publisher-loc>Birmingham</publisher-loc>: <publisher-name>Packt Publishing Ltd.</publisher-name>; <year>2014</year></mixed-citation></ref>
<ref id="pcbi.1005968.ref003"><label>3</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Vukotic</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Watt</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Abedrabbo</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Fox</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Partner</surname> <given-names>J</given-names></name>. <source>Neo4j in Action</source>. <edition>1st ed.</edition> <publisher-loc>Shelter Island, NY</publisher-loc>: <publisher-name>Manning Publications</publisher-name>; <year>2014</year>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref004"><label>4</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Sedgewick</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Wayne</surname> <given-names>K</given-names></name>. <source>Algorithms</source>. <edition>4th ed.</edition> <publisher-name>Addison-Wesley</publisher-name>; <year>2011</year>. pp. <fpage>566</fpage>–<lpage>596</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref005"><label>5</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Vastrik</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>D'Eustachio</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Schmidt</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Joshi-Tope</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Gopinath</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Croft</surname> <given-names>D</given-names></name>, <etal>et al</etal>. <article-title>Reactome: a knowledge base of biologic pathways and processes</article-title>. <source>Genome Biol</source>. <year>2007</year>; <volume>8</volume>: <fpage>R39</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/gb-2007-8-3-r39" xlink:type="simple">10.1186/gb-2007-8-3-r39</ext-link></comment> <object-id pub-id-type="pmid">17367534</object-id></mixed-citation></ref>
<ref id="pcbi.1005968.ref006"><label>6</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Have</surname> <given-names>CT</given-names></name>, <name name-style="western"><surname>Jensen</surname> <given-names>LJ</given-names></name>. <article-title>Are graph databases ready for bioinformatics?</article-title> <source>Bioinformatics</source>. <year>2013</year>; <volume>29</volume>(<issue>24</issue>):<fpage>3107</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btt549" xlink:type="simple">10.1093/bioinformatics/btt549</ext-link></comment> <object-id pub-id-type="pmid">24135261</object-id></mixed-citation></ref>
<ref id="pcbi.1005968.ref007"><label>7</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Henkel</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Wolkenhauer</surname> <given-names>O</given-names></name>, <name name-style="western"><surname>Waltemath</surname> <given-names>D</given-names></name>. <article-title>Combining computational models, semantic annotations and simulation experiments in a graph database</article-title>. <source>Database (Oxford)</source>. <year>2015</year>; <volume>8</volume>: <fpage>2015</fpage>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref008"><label>8</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Summer</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Kelder</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Ono</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Radonjic</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Heymans</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Demchak</surname> <given-names>B</given-names></name>. <article-title>cyNeo4j: connecting Neo4j and Cytoscape</article-title>. <source>Bioinformatics</source>. <year>2015</year>; <volume>31</volume>(<issue>23</issue>):<fpage>3868</fpage>–<lpage>9</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btv460" xlink:type="simple">10.1093/bioinformatics/btv460</ext-link></comment> <object-id pub-id-type="pmid">26272981</object-id></mixed-citation></ref>
<ref id="pcbi.1005968.ref009"><label>9</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lysenko</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Roznovăţ</surname> <given-names>IA</given-names></name>, <name name-style="western"><surname>Saqi</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Mazein</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Rawlings</surname> <given-names>CJ</given-names></name>, <name name-style="western"><surname>Auffray</surname> <given-names>C</given-names></name>. <article-title>Representing and querying disease networks using graph databases</article-title>. <source>BioData Min</source>. <year>2016</year>; <volume>9</volume>(<issue>1</issue>):<fpage>23</fpage>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref010"><label>10</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Touré</surname> <given-names>V</given-names></name>, <name name-style="western"><surname>Mazein</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Waltemath</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Balaur</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Saqi</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Henkel</surname> <given-names>R</given-names></name>, <etal>et al</etal>. <article-title>STON: exploring biological pathways using the SBGN standard and graph databases</article-title>. <source>BMC Bioinformatics</source>. <year>2016</year>; <volume>17</volume>: <fpage>494</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/s12859-016-1394-x" xlink:type="simple">10.1186/s12859-016-1394-x</ext-link></comment> <object-id pub-id-type="pmid">27919219</object-id></mixed-citation></ref>
<ref id="pcbi.1005968.ref011"><label>11</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Balaur</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Mazein</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Saqi</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Lysenko</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Rawlings</surname> <given-names>CJ</given-names></name>, <name name-style="western"><surname>Auffray</surname> <given-names>C</given-names></name>. <article-title>Recon2Neo4j: applying graph database technologies for managing comprehensive genome-scale networks</article-title>. <source>Bioinformatics</source>. <year>2016</year>;</mixed-citation></ref>
<ref id="pcbi.1005968.ref012"><label>12</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Swainston</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Batista-Navarro</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Carbonell</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Dobson</surname> <given-names>PD</given-names></name>, <name name-style="western"><surname>Dunstan</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Jervis</surname> <given-names>AJ</given-names></name>, <etal>et al</etal>. <article-title>biochem4j: Integrated and extensible biochemical knowledge through graph databases</article-title>. <source>PLoS ONE</source>. <year>2017</year>; <volume>12</volume>(<issue>7</issue>): <fpage>e0179130</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pone.0179130" xlink:type="simple">10.1371/journal.pone.0179130</ext-link></comment> <object-id pub-id-type="pmid">28708831</object-id></mixed-citation></ref>
<ref id="pcbi.1005968.ref013"><label>13</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Robinson</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Webber</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Eifrem</surname> <given-names>E</given-names></name>. <source>Graph Databases</source>. <publisher-name>O’Reilly Media, Incorporated</publisher-name>; <year>2013</year>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref014"><label>14</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Lal</surname> <given-names>M</given-names></name>. <chapter-title>Neo4j graph data modeling</chapter-title>. <publisher-loc>Birmingham</publisher-loc>: <publisher-name>Packt Publishing Ltd.</publisher-name>; <year>2015</year>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref015"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Neubauer P. (2010) Graph Databases, NOSQL and Neo4j. InfoQ. 12 May 2010. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.infoq.com/articles/graph-nosql-neo4j" xlink:type="simple">https://www.infoq.com/articles/graph-nosql-neo4j</ext-link>. Cited 20 June 2017.</mixed-citation></ref>
<ref id="pcbi.1005968.ref016"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Vicknair C, Macias M, Zhao Z, Nan X, Chen Y, Wilkins D. A comparison of a graph database and a relational database: a data provenance perspective. Proceedings of the 48th Annual Southeast Regional Conference; 2010 Apr 15–17; New York, NY; 2010.</mixed-citation></ref>
<ref id="pcbi.1005968.ref017"><label>17</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Birney</surname> <given-names>E</given-names></name>, <name name-style="western"><surname>Andrews</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Bevan</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Caccamo</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Cameron</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Chen</surname> <given-names>Y</given-names></name>, <etal>et al</etal>. <article-title>Ensembl 2004</article-title>. <source>Nucleic Acids Res</source>. <year>2014</year>; <volume>32</volume>:<fpage>D468</fpage>–<lpage>D470</lpage>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref018"><label>18</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Eppig</surname> <given-names>JT</given-names></name>, <name name-style="western"><surname>Blake</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Bult</surname> <given-names>CJ</given-names></name>, <name name-style="western"><surname>Kadin</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Richardson</surname> <given-names>JE</given-names></name>, <collab>Mouse Genome Database Group</collab>. <article-title>The Mouse Genome Database (MGD): facilitating mouse as a model for human biology and disease</article-title>. <source>Nucleic Acids Res</source>. <year>2015</year>; <volume>43</volume>:<fpage>D726</fpage>–<lpage>D736</lpage> <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/nar/gku967" xlink:type="simple">10.1093/nar/gku967</ext-link></comment> <object-id pub-id-type="pmid">25348401</object-id></mixed-citation></ref>
<ref id="pcbi.1005968.ref019"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Štefanič S, Lexa M. A Flexible Denormalization Technique for Data Analysis above a Deeply-Structured Relational Database: Biomedical Applications. In: Ortuño F, Rojas I, editor. Bioinformatics and Biomedical Engineering. IWBBIO 2015. Lecture Notes in Computer Science. Springer, Cham; 2015. vol 9043.</mixed-citation></ref>
<ref id="pcbi.1005968.ref020"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">Hunger M. Good Relationships: The Spring Data Neo4j Guide Book. InfoQ enterprise software development, C4Media; 2012.</mixed-citation></ref>
<ref id="pcbi.1005968.ref021"><label>21</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Laddad</surname> <given-names>R</given-names></name>. <source>AspectJ in Action</source>. <edition>2nd ed.</edition> <publisher-name>Manning</publisher-name>; <year>2010</year>.</mixed-citation></ref>
<ref id="pcbi.1005968.ref022"><label>22</label><mixed-citation publication-type="other" xlink:type="simple">World Wide Web Consortium (W3C) Web Services Architecture, W3C Working Group Note. 11 February 2004. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.w3.org/TR/ws-arch/" xlink:type="simple">https://www.w3.org/TR/ws-arch/</ext-link>. Cited 20 June 2017.</mixed-citation></ref>
</ref-list>
</back>
</article>