<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
<front>
<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="publisher-id">08-PLCB-RA-0183R3</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1000156</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology/Transcriptional Regulation</subject></subj-group></article-categories><title-group><article-title>PhyloGibbs-MP: Module Prediction and Discriminative Motif-Finding by Gibbs Sampling</article-title><alt-title alt-title-type="running-head">PhyloGibbs-MP</alt-title></title-group><contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Siddharthan</surname><given-names>Rahul</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group><aff id="aff1">          <addr-line>The Institute of Mathematical Sciences, Chennai, India</addr-line>       </aff><contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Stormo</surname><given-names>Gary</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group><aff id="edit1">Washington University, United States of America</aff><author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">rsidd@imsc.res.in</email></corresp>
<fn fn-type="con"><p>Conceived and designed the experiments: RS. Analyzed the data: RS. Wrote the paper: RS. Algorithm, programming, and benchmarks: RS.</p></fn>
<fn fn-type="conflict"><p>The author has declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="collection"><month>8</month><year>2008</year></pub-date><pub-date pub-type="epub"><day>29</day><month>8</month><year>2008</year></pub-date><volume>4</volume><issue>8</issue><elocation-id>e1000156</elocation-id><history>
<date date-type="received"><day>14</day><month>3</month><year>2008</year></date>
<date date-type="accepted"><day>11</day><month>7</month><year>2008</year></date>
</history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2008</copyright-year><copyright-holder>Rahul Siddharthan</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><related-article page="e167" related-article-type="companion" vol="1" xlink:href="info:doi/10.1371/journal.pcbi.0010067" xlink:type="simple"><article-title>PhyloGibbs: A Gibbs Sampling Motif Finder That Incorporates Phylogeny</article-title></related-article><abstract>
<p>PhyloGibbs, our recent Gibbs-sampling motif-finder, takes phylogeny into account in detecting binding sites for transcription factors in DNA and assigns posterior probabilities to its predictions obtained by sampling the entire configuration space. Here, in an extension called PhyloGibbs-MP, we widen the scope of the program, addressing two major problems in computational regulatory genomics. First, PhyloGibbs-MP can localise predictions to small, undetermined regions of a large input sequence, thus effectively predicting <italic>cis</italic>-regulatory modules (CRMs) ab initio while simultaneously predicting binding sites in those modules—tasks that are usually done by two separate programs. PhyloGibbs-MP's performance at such ab initio CRM prediction is comparable with or superior to dedicated module-prediction software that use prior knowledge of previously characterised transcription factors. Second, PhyloGibbs-MP can predict motifs that differentiate between two (or more) different groups of regulatory regions, that is, motifs that occur preferentially in one group over the others. While other “discriminative motif-finders” have been published in the literature, PhyloGibbs-MP's implementation has some unique features and flexibility. Benchmarks on synthetic and actual genomic data show that this algorithm is successful at enhancing predictions of differentiating sites and suppressing predictions of common sites and compares with or outperforms other discriminative motif-finders on actual genomic data. Additional enhancements include significant performance and speed improvements, the ability to use “informative priors” on known transcription factors, and the ability to output annotations in a format that can be visualised with the Generic Genome Browser. In stand-alone motif-finding, PhyloGibbs-MP remains competitive, outperforming PhyloGibbs-1.0 and other programs on benchmark data.</p>
</abstract><abstract abstract-type="summary"><title>Author Summary</title>
<p>Proteins in a living cell are not expressed all the time: instead, genes are turned on or off on demand. Indeed, though nearly every cell in a multicellular organism has a complete copy of the genome, each cell expresses only a fraction of the encoded proteins. Regulation of gene expression occurs in various ways. One of the most important (especially in simpler organisms) is “transcriptional regulation,” where specialised DNA-binding proteins, “transcription factors,” attach to the DNA to recruit the gene-transcriptional machinery. Detecting binding sites in DNA for these factors has long been a problem of interest in computational biology. Here, a program, PhyloGibbs-MP, is presented that extends our previously published motif-finder PhyloGibbs to handle some important related problems, in particular, detecting “discriminative” sites that distinguish differently regulated groups of genes and finding “<italic>cis</italic>-regulatory modules,” regions of DNA that contain large clusters of regulatory-protein-binding sites. PhyloGibbs-MP compares well on benchmarks with the best specialised programs for all these tasks, while being the first to integrate them in one consistent formalism. Regulatory regions in higher eukaryotes can be highly complex, and PhyloGibbs-MP is expected to be a very useful tool in identifying and analysing regulatory DNA.</p>
</abstract><funding-group><funding-statement>Financial support was from The Institute of Mathematical Sciences. The work was partly motivated by the requirements of an ongoing project funded by the Department of Biotechnology, Government of India, as mentioned in the acknowledgements, but was not directly funded by that project.</funding-statement></funding-group><counts><page-count count="15"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>Complex, carefully orchestrated cascades of gene regulatory events control various biological phenomena, from the cell cycle to stress response to the development of an organism and differentiation of its tissues. Gene regulation can be pre-transcriptional (such as by epigenetic silencing of genes), transcriptional (controlling the recruitment of the RNA polymerase), or post-transcriptional (by degrading messenger RNA before it is translated). Transcriptional regulation is mediated, in prokaryotes and eukaryotes, by specialised proteins called “transcription factors” (TFs) that bind to the DNA near a gene and recruit the RNA polymerase (or inhibit its recruitment). This regulatory control is often combinatorial, with many TFs controlling a gene, and highly complex. A gene that encodes a TF, when turned on, may cause many more genes to be turned on. To understand gene regulation, therefore, it is important to identify potentially regulatory DNA and to understand how and where individual TFs may bind there.</p>
<p>Typically TFs recognise short patterns or “motifs” in DNA that they bind to. For this reason, “motif-finding”, or detection of short patterns that are over-represented in a generic “background”, is an important computational problem in studying gene regulation. These motifs are generally not exact strings, but indicate weaker site-specific nucleotide preferences. Though several highly efficient substring-finding algorithms exist in computer science, they are of limited utility here. Instead, a common approach is to assume that the background is either random, or contains short-ranged correlations that can be described by a Markov model, while binding sites for transcription factors can be represented as samples from “position weight matrices” (PWMs) <xref ref-type="bibr" rid="pcbi.1000156-Stormo1">[1]</xref>. For a motif of length <italic>ℓ</italic>, a PWM is a 4×<italic>ℓ</italic> matrix giving the probability, at each position, of seeing each of the four bases (A, C, G, T) at that position. Two standard ways of detecting conserved regulatory sites amidst “background sequence” are Gibbs sampling, first described in this context by Lawrence et al. <xref ref-type="bibr" rid="pcbi.1000156-Lawrence1">[2]</xref>, and expectation maximisation over mixture models, implemented in the MEME algorithm of Bailey and Elkan <xref ref-type="bibr" rid="pcbi.1000156-Bailey1">[3]</xref>.</p>
<p>Recently we presented a new implementation of the Gibbs sampler, PhyloGibbs <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref>. The primary goal was to deal systematically with the case of orthologous sequence from closely-related species, where naive scoring of overrepresentation will fail because much sequence has not diverged sufficiently. This is handled using a user-specified phylogenetic tree and a modified scoring scheme for phylogenetically related sequence. Additionally, PhyloGibbs evaluates its own site predictions via statistical sampling of the entire state space, so that it can report the posterior probability, given all prior assumptions, that a given site is indeed a binding site. We showed that this self-assessment is an improvement on previous programs, which either do not assess their predictions, or use other statistical significance measures that do not evaluate to posterior probabilities.</p>
<p>A related point is that, in addition to individual site predictions, PhyloGibbs outputs weight matrices that are constructed from the predicted binding sites <italic>weighted by their significance</italic>, and are not merely counts of nucleotides. A problem with experimentally determined weight matrices is that they are often constructed from a small number of annotated binding sites, all of which are weighted equally, even though they may not all be of equal affinity in practice. Indeed, not all experimentally-determined sites may be known with equal confidence: binding assays often localise a much larger region of DNA, within which the putative binding sites are found bioinformatically. PhyloGibbs can be used to construct weight matrices from such data, weighted by confidence, as discussed below (<xref ref-type="sec" rid="s4">Materials and Methods</xref>, “CRM Prediction”), a point that was not fully explored in the previous paper.</p>
<p>Here we present PhyloGibbs-MP, an extension of PhyloGibbs in several directions that go well beyond standard motif-finding. MP stands at the moment for “module prediction” (and possibly also “multiprocessor”: it has preliminary support for shared-memory multiprocessor systems, using OpenMP, and future support for distributed-memory clusters, via MPI, is planned).</p>
<list list-type="bullet"><list-item>
<p>First and not least, the speed has been significantly improved (by a factor of 5 to 10) by using an “importance sampling” scheme. Further speed increases have come from improved code and more efficient data structures.</p>
</list-item><list-item>
<p>PhyloGibbs-MP now takes account of “prior information” in the form of weight matrices for already-characterised transcription factors. This biases the search towards these known weight matrices by specifying a Bayesian prior for each site to be a binding site for each weight matrix. (A different approach to this feature, due to Erik van Nimwegen, was in the PhyloGibbs-1.0 code, though not discussed in the accompanying paper.)</p>
</list-item><list-item>
<p>While in simple organisms like bacteria and yeast, one may safely assume that most intergenic sequence is regulatory, this ceases to be true in higher organisms. Here, one can have several tens of kilobases of potentially regulatory sequence, upstream or downstream of the gene or in introns. But binding sites for TFs are not uniformly scattered over all this sequence: they are usually localised in “<italic>cis</italic>-regulatory modules” (CRMs) which may be only about a kilobase or two in length. Prediction of CRMs is a long-standing research topic. Most approaches (such as Cis-Analyst <xref ref-type="bibr" rid="pcbi.1000156-Berman1">[5]</xref>,<xref ref-type="bibr" rid="pcbi.1000156-Berman2">[6]</xref>, Cluster-Buster <xref ref-type="bibr" rid="pcbi.1000156-Frith1">[7]</xref>, and Stubb <xref ref-type="bibr" rid="pcbi.1000156-Sinha1">[8]</xref>–<xref ref-type="bibr" rid="pcbi.1000156-Sinha3">[10]</xref>) use already-characterised PWMs to predict binding sites and then look for local “clusters” of such sites. In studying gene regulation in higher eukaryotes, predicting CRMs is a necessary first step before running a motif-finder. PhyloGibbs-MP can localise predictions to small modules, not known a priori, in large quantities of input sequence. We demonstrate that PhyloGibbs-MP in this form is a remarkably effective module predictor, which, unlike previous module-finding programs, can work a priori (without information about already characterised WMs); when fed such prior information, its effectiveness increases further. (A drawback is that Gibbs sampling is much slower than a straightforward site search for known factors.)</p>
</list-item><list-item>
<p>PhyloGibbs-MP can also restrict the number of motifs detected <italic>per module</italic> to a subset of the total. For example, while it may be reasonable to assume that 20 factors regulate a set of genes totally, each CRM may have inputs from no more than 4 or 5 factors.</p>
</list-item><list-item>
<p>Motif-finding is often improved by identifying groups of co-regulated genes, for example from microarray data, and it is common to give regulatory sequence from several genes to a motif-finder. However, one may also want to study groups of genes that are believed to be <italic>differently</italic> regulated (for example, microarray data analysis puts them in different clusters), and it is of enormous interest to find motifs that appear <italic>preferentially</italic> in one group rather than in the other. PhyloGibbs-MP now implements a “discrimniative motif-finding” option to find such motifs that distinguish each group from the others. We are unaware of any other published program that implements this feature, despite its obvious practical importance.</p>
</list-item><list-item>
<p>Finally, for easier visualisation, PhyloGibbs-MP now outputs annotations in the Generic Genome Browser (GBrowse) format, which may be uploaded to any GBrowse server. (We are also writing a stand-alone visualisation tool to handle such data: S. Acharya and RS, in preparation).</p>
</list-item></list>
<p>In the <xref ref-type="sec" rid="s2">Results</xref> section, we benchmark PhyloGibbs-MP in motif-finding, module prediction and discriminative motif-finding. In the <xref ref-type="sec" rid="s4">Methods</xref> section, we describe the implementation of these features.</p>
<p>In addition, several smaller changes in the algorithm have been made, discussion of which occurs towards the end of the <xref ref-type="sec" rid="s4">Methods</xref> section. Also, many command-line options are no longer compatible with the earlier program. To avoid confusion, we have renamed the program “PhyloGibbs-MP”.</p>
<p>In this paper, “PhyloGibbs-1.0” and “PhyloGibbs-MP” are used for statements specific to those versions of the program, and “PhyloGibbs” is used for remarks common to both programs.</p>
</sec><sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>Binding Site Prediction in Yeast and Fruitfly</title>
<p>Before discussing new features, we first test the straightforward motif-finding capability of PhyloGibbs-MP, on test datasets of known binding sites in yeast (<italic>Saccharomyces cerevisiae</italic>) and fruitfly (<italic>Drosophila melanogaster</italic>).</p>
</sec><sec id="s2b">
<title>Yeast Benchmark</title>
<p>This is essentially a repeat of tests reported for PhyloGibbs-1.0 <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref>, using the SCPD database <xref ref-type="bibr" rid="pcbi.1000156-Zhu1">[11]</xref> of experimentally-determined transcription-factor binding sites in <italic>S. cerevisiae</italic>. A filtered list of these binding sites, rejecting very large and very small sites, was used; this contains 466 binding sites upstream of 200 genes. The advantage here is that every site in this database is experimentally validated; it thus provides a very good measure of real-world performance of various algorithms. The disadvantage is that there may be many sites that are not known. We previously argued <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref> that we expect roughly one in three sites to be known (and present in this database), and showed that PhyloGibbs' self-assessment of its predictions is consistent with this expectation.</p>
<p>For each of these 200 genes, we select up to 1000 bp upstream sequence (not overlapping coding sequence) from <italic>S. cerevisiae</italic>, orthologous sequence from <italic>S. paradoxus</italic> <xref ref-type="bibr" rid="pcbi.1000156-Kellis1">[12]</xref>, <italic>S. mikatae</italic>, <italic>S. kudriavzveii</italic>, <italic>S. bayanus</italic> <xref ref-type="bibr" rid="pcbi.1000156-Cliften1">[13]</xref>, and run various motif-finders on them. The orthologous sequences were determined <italic>ab initio</italic> using BLAST and synteny as criteria.</p>
<p>The motif-finders tested were AlignACE <xref ref-type="bibr" rid="pcbi.1000156-Roth1">[14]</xref>,<xref ref-type="bibr" rid="pcbi.1000156-Hughes1">[15]</xref>, MEME <xref ref-type="bibr" rid="pcbi.1000156-Bailey1">[3]</xref>, PhyME <xref ref-type="bibr" rid="pcbi.1000156-Sinha4">[16]</xref>, EMnEM <xref ref-type="bibr" rid="pcbi.1000156-Moses1">[17]</xref>, and the Gibbs sampler from the Wadsworth Institute <xref ref-type="bibr" rid="pcbi.1000156-Lawrence1">[2]</xref>. Other than AlignACE, the other programs had been previously tested against PhyloGibbs-1.0 <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref>. Here, however, we use an updated Wadsworth Gibbs sampler, which has recently acquired <xref ref-type="bibr" rid="pcbi.1000156-Newberg1">[18]</xref> the ability to do “phylogenetic” sampling. We tested this program both in non-phylogenetic mode and in the phylogenetic mode.</p>
<p>The results are shown in <xref ref-type="fig" rid="pcbi-1000156-g001">Figure 1</xref>, in the form of specificity (fraction of binding sites predicted that are known) as a function of sensitivity (fraction of known binding sites that are predicted).</p>
<fig id="pcbi-1000156-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g001</object-id><label>Figure 1</label><caption>
<title>The performance of various motif-finders on predicting yeast binding-site data taken from SCPD.</title>
<p>Specificity (the fraction of predicted sites that are present in SCPD) is plotted as a function of sensitivity (the fraction of SCPD sites that are found by the motif-finder); sensitivity is varied by cutting off predictions below a varying significance threshold as reported by the individual program. Three runs of PhyloGibbs-MP are reported: phylogibbs-mp-n8 is a run that specifies a maximum of 8 colours (types of motif); phylogibbs-mp-n8-I is the same, but with “importance sampling” turned off; and phylogibbs-mp-n3 is a run that specifies a maximum of 3 colours.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g001" xlink:type="simple"/></fig>
<p>The sensitivity and specificity are varied by choosing different “cutoff scores” for the significance scores assigned by various programs; only sites with a significance above the “cutoff score” are considered. The higher the cutoff, typically, the lower the sensitivity but the higher the specificity. In the case of AlignAce, which does not assign significance scores to individual site predictions, we used the different predicted motifs as cutoffs. (That is, the different points on the sensitivity/specificity curve correspond to the sensitivity/specificity calculated from all sites predicted in the first <italic>n</italic> motifs, from <italic>n</italic> = 1 onwards.) PhyloGibbs-1.0, PhyloGibbs-MP and EMnEM used multi-fasta sequences aligned with Sigma <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan2">[19]</xref> version 1.1.3, PhyME used sequences aligned with a bundled version of L<sc>agan</sc> <xref ref-type="bibr" rid="pcbi.1000156-Brudno1">[20]</xref>, and the phylogenetic Gibbs sampler used sequences aligned with ClustalW <xref ref-type="bibr" rid="pcbi.1000156-Thompson1">[21]</xref>. All other programs used unaligned sequences.</p>
<p>PhyloGibbs-1.0, MEME, PhyME and EMnEM perform similarly to previously reported. AlignACE performs rather poorly on this dataset. This is probably a result of the lack of site-specific significance information in its output. The Wadsworth Gibbs sampler, run in the normal (non-phylogenetic, non-centroid) mode shows a much improved performance from the version we previously reported. However, when run in phylogenetic mode, the Wadsworth Gibbs sampler makes very few predictions indeed.</p>
<p>The Wadsworth Gibbs sampler in phylogenetic mode was run with a commandline suggested by W. Thompson (personal communication). Commandlines in other cases were chosen based on available documentation. Details are in <xref ref-type="sec" rid="s4">Materials and Methods</xref>.</p>
<p>PhyloGibbs-MP is run in two modes: searching for a maximum of 3 or a maximum of 8 simultaneous motifs; and in the latter case, with or without “importance sampling”. All choices show good performance but performance is clearly superior when searching for 8 motifs, with or without importance sampling. This is in contrast to most other programs (not shown), including PhyloGibbs-1.0, where searching for too many simultaneous motifs hurts performance. Importance sampling (the default) gives a speed increase of a factor of about 10, and these data show that the effect on the quality of predictions is minor. This is further discussed in “<xref ref-type="sec" rid="s4">Materials and Methods</xref>” (subsection “Importance sampling”).</p>
<p>PhyloGibbs-MP performs well when searching for multiple simultaneous motifs (“colours”) because it allows each colour to contain only as many windows as actually belong (that is, it enables toleration of overestimates of the number of binding sites). For example, suppose one assumes that there are 3 regulatory motifs, and 1% of a 1000 bp sequence is functional: that would yield 10 sites overall, or 3 to 4 sites per motif. In fact, however, there may be only two sites per motif. Providing more allowed colours lets the “good” motifs be grouped together, and irrelevant motifs are placed into other colours (and, since they are not selected often, do not accumulate high tracking scores). To some extent this applied to PhyloGibbs-1.0 too; but PhyloGibbs-1.0 insisted, for technical reasons, on having at least one selected site for every colour, which hurt performance when the number of colours was large.</p>
</sec><sec id="s2c">
<title>Fruitfly Benchmark</title>
<p>We used the REDfly 2.0 <xref ref-type="bibr" rid="pcbi.1000156-Halfon1">[22]</xref> transcription factor binding site database. Since many of these reported binding sequences are much longer than the expected length of an individual binding site, we chose a subset for which we could bioinformatically determine the likely binding site with reasonable confidence using independent data, as described in <xref ref-type="sec" rid="s4">Materials and Methods</xref>. Moreover, we wanted to include PhyloCon <xref ref-type="bibr" rid="pcbi.1000156-Wang1">[23]</xref>, a motif-finder that makes somewhat different assumptions about the nature of input sequences (in particular, it expects multiple sets of orthologous sequences, with at least one binding site in each set). Therefore, we chose only factors for which, after our processing, multiple binding sequences were available.</p>
<p>Other than the addition of PhyloCon, all programs used in the yeast benchmark were run on this data, except PhyME, which we could not successfully run on this data (it crashed), and Phylogenetic Gibbs, which showed poor performance on the yeast data even after its commandline parameters were extensively adjusted on the advice of one of its authors. Also, in the PhyloGibbs family, only PhyloGibbs-MP with eight input sites was run, since this showed the best results in the yeast benchmark.</p>
<p>In addition to <italic>D. melanogaster</italic> sequence, orthologous sequence was used from the recently sequenced genomes of <italic>D. yakuba</italic>, <italic>D. erecta</italic>, and <italic>D. simulans</italic> <xref ref-type="bibr" rid="pcbi.1000156-Consortium1">[24]</xref>. (Though many papers have used <italic>D. pseudoobscura</italic>, the second fly genome to be sequenced, we rejected it because its distance from <italic>melanogaster</italic> suggests that gene evolution may have evolved significantly.)</p>
<p>The results are shown in <xref ref-type="fig" rid="pcbi-1000156-g002">Figure 2</xref>. They are largely similar to the yeast results, but overall the sensitivity is poorer than in the yeast data: that is, all programs perform with poor specificity for a sensitivity greater than about 0.12, and their performance is probably no better than random at this level. If one focuses on high-quality predictions (which means poor sensitivity), PhyloGibbs-MP sharply outperforms all other programs. PhyloCon performs particularly poorly: a detailed look at the output shows that it predicts sites only for two factors, ftz and bcd, and most of these predictions don't correspond with the annotated sites.</p>
<fig id="pcbi-1000156-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g002</object-id><label>Figure 2</label><caption>
<title>The performance of various motif-finders on predicting binding sites in <italic>D. melanogaster</italic> taken from REDfly 2.0.</title>
<p>The interpretation is similar to that in <xref ref-type="fig" rid="pcbi-1000156-g001">Figure 1</xref>.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g002" xlink:type="simple"/></fig>
<p>It should be noted that binding motifs in fly (and other higher eukaryotes) are much fuzzier and less specific than in yeast, and (especially with the homeotic factors) tend to be rich in A's and T's; similar motifs may well occur by chance, to lead the motif-finders astray. Moreover, all the input sequences probably contained several binding sites for several factors other than the ones annotated by REDfly. Many of these unknown binding sites may have been successfully detected but not measured in the benchmark. Nonetheless, PhyloGibbs-MP performs clearly better at the high-confidence end, suggesting that it is indeed better at distinguishing conserved binding sites from background. Indeed, the top few sites predicted by PhyloGibbs-MP are all known sites (specificity 1.0) and account for about 2% of the total number of sites in this benchmark.</p>
</sec><sec id="s2d">
<title>Discriminative Motif-Finding</title>
<p>Discriminative motif-finding has been discussed in the literature previously. We choose three previously published programs, ALSE <xref ref-type="bibr" rid="pcbi.1000156-Leung1">[25]</xref>, Dips <xref ref-type="bibr" rid="pcbi.1000156-Sinha5">[26]</xref>, and DEME <xref ref-type="bibr" rid="pcbi.1000156-Redhead1">[27]</xref>, which are available for downloading and running locally, to benchmark against PhyloGibbs-MP. Other published programs, not available for download, include LearnPSSM <xref ref-type="bibr" rid="pcbi.1000156-Barash1">[28]</xref>, DME <xref ref-type="bibr" rid="pcbi.1000156-Smith1">[29]</xref>, and dPattern <xref ref-type="bibr" rid="pcbi.1000156-Bae1">[30]</xref>.</p>
<p>Unlike previous programs, PhyloGibbs-MP handles multiple input data sets, and treats them symmetrically: rather than requiring a “positive” and a “negative” set, it seeks sites in any one “discriminative group” that are over-represented in that group but under-represented in the other groups. (A set of genes A may be up-regulated relative to another set B, not only because genes in A are being activated by a common factor, but because genes in B are being repressed by a common factor. Moreover, one is often interested in the regulation of multiple sets of genes, that are differently expressed over a set of conditions, even if no one set of genes is preferentially expressed overall.) Moreover, the degree of differential discrimination may be controlled by a command-line parameter (-d). If this parameter is provided but is zero, sites are found in a single group without regard to how much they may be represented in other groups. Very high values of the parameter strongly repress prediction of sites that have counterparts in other groups (this is similar to how other discriminative motif-finders work). In addition, PhyloGibbs-MP takes systematic account of phylogenetic relationship between species.</p>
<p>We performed four tests: on synthetic data; on yeast data using the same SCPD database as in the previous section; on fruitfly data using REDfly binding site data, again as in the previous section; and on groups of putative co-regulated yeast genes obtained from genome-wide binding data from Harbison et al. <xref ref-type="bibr" rid="pcbi.1000156-Harbison1">[31]</xref>. Results from these tests suggest that making the discrimination too aggressive is counterproductive, which may account for why discriminative motif-finders have not achieved as much popularity as conventional motif-finders. On actual genomic data, the performance of PhyloGibbs-MP compares well with, or exceeds, the performance of DEME and ALSE.</p>
</sec><sec id="s2e">
<title>Synthetic Data Benchmark</title>
<p>For synthetic data, we generated two sets of phylogenetically-related sequence as follows: first, three random motifs A, B, C of 10 bp each were selected, drawn position weight matrices where the consensus base had 85% weight, with the remainder uniformly distributed. Two “ancestral” sequences were generated, each containing five copies of motif A; one of these also contained five copies of motif B, while the other had five copies of motif C. These ancestral sequences were then evolved, according to our evolutionary model with an expected mutation rate of 0.5 per nucleotide, to five descendants; mutated background bases are re-sampled from the background model, and mutated bases in binding sites are re-sampled from the PWM. Thus we have two sets of five phylogenetically related sequences, each containing 5 copies of a “common” motif and 5 copies of a “discriminative” motif. 200 such pairs of sequence sets were generated, and PhyloGibbs-MP, ALSE, DEME and Dips were benchmarked on them, for sensitivity and specificity in detecting the common motifs and the discriminative motifs.</p>
<p>The results, with different choices of the discriminative parameter for PhyloGibbs-MP, are shown in <xref ref-type="fig" rid="pcbi-1000156-g003">Figures 3</xref> and <xref ref-type="fig" rid="pcbi-1000156-g004">4</xref>. When we are not seeking discriminatively occurring motifs, PhyloGibbs-MP finds the common motifs (which are abundant) with high sensitivity and high specificity, while the discriminative motifs are found with poor sensitivity and specificity. As we turn up the discriminative parameter, the significance of common motifs is reduced, and discriminative motifs are found more significantly. At “ -d 0.4”, discriminative motifs are found with moderate sensitivity but very high specificity; common motifs are significantly suppressed. Further increasing the parameter yields smaller gains.</p>
<fig id="pcbi-1000156-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g003</object-id><label>Figure 3</label><caption>
<title>The performance of PhyloGibbs-MP in discriminative and non-discriminative mode, on synthetic data, compared with other programs.</title>
<p>Each data set consists of two sets of sequences, with one “common” motif embedded in both sets and two “discriminative” motifs embedded one in each set, with five copies per sequence per motif per set. Specificity as a function of sensitivity is shown. For PhyloGibbs-MP, “nodiff” indicates non-discriminative mode, while the other labels indicate the value of the discriminative parameter ( -d): 0.1, 0.4 or 0.99. This figure shows performance in detecting common motifs on these data; <xref ref-type="fig" rid="pcbi-1000156-g004">Figure 4</xref> shows performance in detecting discriminative motifs.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g003" xlink:type="simple"/></fig><fig id="pcbi-1000156-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g004</object-id><label>Figure 4</label><caption>
<title>Performance of various programs in detecting discriminative motifs, on the same data as in <xref ref-type="fig" rid="pcbi-1000156-g003">Figure 3</xref>.</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g004" xlink:type="simple"/></fig>
<p>DEME picks up hardly any common motifs, and ALSE also picks up very few. Dips picks up common motifs, but with a specificity of about 0.1 (independent of sensitivity) that indicates random performance. (Each 1000 bp sequence contains 5 embedded common motifs each 10 bp long, but overlaps of up to 5 bp in predictions would be considered “hits”; therefore about 10% of each sequence would be “hit” randomly.)</p>
<p>On the other hand, ALSE and DEME both perform very well in picking up differential motifs; PhyloGibbs-MP, with differential parameters -d 0.4 and -d 0.99 performs reasonably well, outperforming Dips.</p>
</sec><sec id="s2f">
<title>Yeast Binding-Site Data Benchmark</title>
<p>With yeast data, we selected pairs of genes for which differing regulatory factors are listed in SCPD, and picked 1000 bp upstream sequence (excluding overlapping coding sequence) with orthologous sequence from other <italic>sensu stricto</italic> species, as for the motif-finding benchmark. Having generated 571 such pairs, we ran PhyloGibbs-MP (with discriminative setting 0.4), ALSE, DEME and Dips on each pair and measured their performances. (PhyloGibbs-MP treats the members of a pair symmetrically; the other programs were run twice on each pair, alternately choosing one member as the “positive” set and the other as the “negative” set.) The results are in <xref ref-type="fig" rid="pcbi-1000156-g005">Figure 5</xref>. DEME is the best performing program on this set, except for high-significance (low sensitivity) predictions, where PhyloGibbs-MP is competitive with it.</p>
<fig id="pcbi-1000156-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g005</object-id><label>Figure 5</label><caption>
<title>Performance of discriminative motif-finders on pairs of regulatory regions from yeast.</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g005" xlink:type="simple"/></fig>
<p>In interpreting this data (and the data in the following fruitfly benchmark), one should note that, first, there could well be unknown common factors regulating many of these pairs of genes, and second, different factors may nevertheless bind to somewhat similar binding sites (since proteins have a limited number of DNA-binding domains). The second point is even more important in the fruitfly case.</p>
</sec><sec id="s2g">
<title>Fruitfly Data Benchmark</title>
<p>We used the same sequences and binding-site data as in the fruitfly motif-finding benchmark, but also included factors for which only one sequence was available. Similarly to the discriminative yeast benchmark, we chose pairs of sequence sets that contained binding sites for different <italic>known</italic> factors. It should be emphasised that it is very likely—even more so than in the yeast case—that these pairs of sequence sets contained unknown common binding sites, and also that many different factors in this case contain rather similar motifs.</p>
<p>The results are in <xref ref-type="fig" rid="pcbi-1000156-g006">Figure 6</xref>. In this case, the gap between PhyloGibbs-MP and ALSE is quite low; DEME, surprisingly, performs significantly worse.</p>
<fig id="pcbi-1000156-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g006</object-id><label>Figure 6</label><caption>
<title>Performance of discriminative motif-finders on pairs of regulatory sequence from fly.</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g006" xlink:type="simple"/></fig></sec><sec id="s2h">
<title>Yeast Genomewide Binding Data Benchmark</title>
<p>Finally, as a test on realistic data of the sort where a discriminative motif-finder would be useful, we considered DNA-binding data from genome-wide location microarray experiments (“ChIP-chip”) reported by Harbison et al. <xref ref-type="bibr" rid="pcbi.1000156-Harbison1">[31]</xref> in <italic>S. cerevisiae</italic>. We chose 15 factors with “known” motifs (as reported by them) that bind between 4 and 9 probes, under at least two conditions including rich medium, with a <italic>p</italic>-value below 0.001; reported binding sequences (and orthologues) were in the “positive” set and an equal number of randomly chosen non-binding sequences were in the “negative” set. The factors thus chosen were AFT2 (YPL202C), BAS1 (YKR099W), CBF1 (YJR060W), DAL81 (YIR023W), GAL4 (YPL248C), HAP2 (YGL237C), MET4 (YNL103W), MSN4 (YKL062W), PUT3 (YKL015W), RCS1 (YGL071W), RDS1 (YCR106W), ROX1 (YPR065W), RTG3 (YBL103C), STP1 (YDR463W), YAP1 (YML007W). Details are in <xref ref-type="sec" rid="s4">Materials and Methods</xref>.</p>
<p><xref ref-type="fig" rid="pcbi-1000156-g007">Figure 7</xref> summarises the results. Unlike other benchmarks, the comparison here is qualitative, and at the motif-level not the site-prediction level. On the whole, most predicted motifs bear little resemblance to the “known” motifs. The various programs perform as follows:</p>
<list list-type="bullet"><list-item>
<p>In 9 out of 15 predictions of PhyloGibbs-MP, there is at least a core element of the predicted motif that resembles the known motif. These are for AFT2 (GGG[T/C]GC), DAL81 (CCGC[C/G]G or CCGCC[C/G])), GAL4 (CGG), MET4 (T[G/T]GCGC), PUT3 (CCG), RCS1 (G[G/T]GTG), RTG3 (G[G/C]TCAC), STP1 (CGGC), YAP1 (TTAGT). Of these, the full GAL4, PUT3, and STP1 motifs are homodimers with weak spacers, and PhyloGibbs-MP predicts one half of these dimers. The GAL4 motif, in particular, contains a very long (11 bp) spacer which is hard to find with motif-finders, especially as the expected length of the motifs was specified as 10 in all these programs.</p>
</list-item><list-item>
<p>ALSE predicts extremely indistinct motifs with low information content, except in the case of RTG3, where its prediction bears little resemblance to the known motif.</p>
</list-item><list-item>
<p>DEME predicts core sequences for 8 out of 15 factors: AFT2 (GGT, much shorter than PhyloGibbs-MP's prediction), BAS1 (AGTCA, a strong prediction missed entirely by PhyloGibbs-MP), DAL81 (CTTTT), HAP2 (CCA[A/T]T), MET4 (TTTT[T/C]), RCS1 (GCACCC, a sharper prediction than made by PhyloGibbs-MP), STP1 (CGGC), YAP1 (CTGACTA, partially overlapping with PhyloGibbs-MP's prediction).</p>
</list-item><list-item>
<p>Dips makes (comparatively weak) predictions for five factors: BAS1 (GAGT), DAL81 (TTTT), HAP2 (CCANT), MET4 (TTTTT), MSN4 (CCCT), ROX1 (AACAA).</p>
</list-item></list>
<fig id="pcbi-1000156-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g007</object-id><label>Figure 7</label><caption>
<title>For fifteen transcription factors bound by between 4 and 9 sequences with <italic>p</italic>&lt;0.001 in ChIP-chip experiments reported by Harbison et al. <xref ref-type="bibr" rid="pcbi.1000156-Harbison1">[31]</xref>, weight matrices reported by those authors, in both orientations, compared with predictions of four discriminative motif-finders on binding sequences discriminated against randomly chosen non-binding sequences.</title>
<p>No other prior information was used. PhyloGibbs-MP does not internally characterise discriminative sets as “positive” or “negative” but only predictions from the positive set (including, in some cases, multiple predictions) are reported. Other programs make at most one prediction per set. All programs report position weight matrices, which were used directly to generate sequence logos (using WebLogo <xref ref-type="bibr" rid="pcbi.1000156-Crooks1">[41]</xref> and some helper scripts). The predictions are discussed, qualitatively, in the text.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g007" xlink:type="simple"/></fig>
<p>This is a qualitative comparison and many of the above comparisons are rather nebulous. In particular, if one omits poly-A or poly-T predictions (which are plentiful in the yeast genome), the number of “predictions” for DEME and Dips falls sharply.</p>
<p>Though DEME makes only eight predictions that match (or somewhat match) the known motifs in these data, its authors report benchmarks that predict 13 of 15 motifs in sequences drawn from the same ChIP-chip data <xref ref-type="bibr" rid="pcbi.1000156-Redhead1">[27]</xref>. However, both their selection of sequences (which is not described in detail) and their methodology differ from ours. In particular, where we assume no prior knowledge of the motif width and use a width of 10 in all cases, they use the actual width of the motif as prior information. In realistic situations, one is unlikely to know the width of an uncharacterised transcription factor's binding site.</p>
</sec><sec id="s2i">
<title>Interpretation of Discriminative Benchmarks</title>
<p>When one takes the four benchmarks together—one on synthetic data and three on actual genomic data of the type likely to arise in realistic research situations—it is clear that, in this particular problem, synthetic data captures very poorly the complexities of an actual situation. There are various issues at work in actual genomic sequence: motifs for different transcription factors may resemble each other strongly, especially if they come from the same family; weak, non-specific motifs may have close matches by “chance”; there could be many relevant factors regulating a gene or set of genes, only some of which are discriminative; and, in data arising from high-throughput experiments, there could be “noise” in that not all sequences reported to bind a protein may actually do so. Over-aggressiveness in discriminative motif-finding leads to excellent synthetic-data performance but poor sensitivity and/or specificity with real genomic data. All the programs tested suffer from this issue, but PhyloGibbs-MP mitigates the problem with the tunability of its discriminative parameter.</p>
<p>The benchmarks do indicate that, over a somewhat broad range of data, DEME and ALSE are excellent discriminative motif-finders, performing far better than PhyloGibbs-MP on synthetic data and very well on real data. However, with real data, PhyloGibbs-MP is competitive with or superior to both those programs (in particular, it appears markedly superior on the ChIP-chip benchmark), while including the flexibility of a general-purpose motif-finder.</p>
</sec><sec id="s2j">
<title>CRM Prediction</title>
<p>An example of PhyloGibbs-MP's ability to predict <italic>cis</italic>-regulatory modules is shown in <xref ref-type="fig" rid="pcbi-1000156-g008">Figure 8</xref>, which depicts the region upstream of the <italic>eve</italic> gene. Without prior information, PhyloGibbs-MP successfully predicts all four annotated upstream CRMs from the REDfly database: the proximal promoter, the stripe 2 enhancer, the stripes 3+7 enhancer, and the mas enhancer. (In the case of mas, the predictions are not exactly overlapping the annotated enhancer, but are nearby and over a broader region. In the case of stripe 2, the annotated 500 bp enhancer in REDfly is somewhat shorter than other reports (e.g., Ludwig et al. <xref ref-type="bibr" rid="pcbi.1000156-Ludwig1">[32]</xref>) that suggest an enhancer close to 800 bp in length; most of the predicted sites fall in this larger region. With prior information in the form of nine weight matrices corresponding to gap factors, PhyloGibbs-MP fails to pick up the proximal promoter, but finds the remaining CRMs with greater confidence than before.</p>
<fig id="pcbi-1000156-g008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g008</object-id><label>Figure 8</label><caption>
<title>Results of running PhyloGibbs-MP, in module-prediction mode, on the 8 kb sequence upstream of the <italic>eve</italic> gene in Drosophila.</title>
<p>When run without priors, predictions lie on or close to all four annotated modules in this region from the REDfly database. When weight matrices for the gap transcription factors are used as priors, PhyloGibbs-MP fails to find the proximal promoter, but the stripe 2 and stripes 3+7 enhancers are detected with increased confidence. Predicted sites for individual motifs, as well as cumulative predictions over all motifs, are shown.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g008" xlink:type="simple"/></fig>
<p>For a more thorough and quantitative benchmark, we used the REDfly database <xref ref-type="bibr" rid="pcbi.1000156-Halfon1">[22]</xref>,<xref ref-type="bibr" rid="pcbi.1000156-Gallo1">[33]</xref> of <italic>cis</italic>-regulatory modules in <italic>D. melanogaster</italic>. We filtered the REDfly CRM list for CRMs of suitable length (&lt;3000 bp), fused nearby CRMs, and selected sufficient neighbouring sequence (details are in <xref ref-type="sec" rid="s4">Materials and Methods</xref>) that we were left with 234 stretches of DNA that were at least 10000 bp long and contained at least one annotated CRM.</p>
<p>PhyloGibbs-MP, and four other downloadable programs—Stubb <xref ref-type="bibr" rid="pcbi.1000156-Sinha1">[8]</xref>,<xref ref-type="bibr" rid="pcbi.1000156-Sinha2">[9]</xref>, Cluster-Buster <xref ref-type="bibr" rid="pcbi.1000156-Frith1">[7]</xref>, EMCMODULE <xref ref-type="bibr" rid="pcbi.1000156-Gupta1">[34]</xref>, and CisModule <xref ref-type="bibr" rid="pcbi.1000156-Zhou1">[35]</xref>—were run on these segments. (Details and exact command-line parameters are in <xref ref-type="sec" rid="s4">Materials and Methods</xref>.) Cis-Analyst <xref ref-type="bibr" rid="pcbi.1000156-Berman3">[36]</xref>,<xref ref-type="bibr" rid="pcbi.1000156-Berman4">[37]</xref>, and other programs that are not downloadable or can only be run via a web-server, were not tested. For priors we used a set of 73 weight matrices, that we created from DNAse I footprints in the FlyReg database <xref ref-type="bibr" rid="pcbi.1000156-Bergman1">[38]</xref> and orthologous sequence in five other species (details of how these matrices were generated are in <xref ref-type="sec" rid="s4">Materials and Methods</xref>, and the matrices themselves are available at <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs-mp/supporting-data/" xlink:type="simple">http://www.imsc.res.in/∼rsidd/phylogibbs-mp/supporting-data/</ext-link>.</p>
<p>As in the motif-finding case, sensitivity was varied by varying the significance cut-off of individual site predictions (or, in the case of Stubb, of individual free-energy “windows” of 100 bp each). The sensitivity of the output was measured, for predictions above various cutoff thresholds, by what fraction of CRMs (weighted by length), of the total known, were successfully predicted by the programs. A predicted site that lay within the boundaries of a module was counted as a “prediction” of that module. The specificity was measured by what fraction of site predictions, for each program, occurred within known CRMs.</p>
<p>To test the effect of prior information and orthologous sequence availablity on the performance of PhyloGibbs-MP, it was run with and without priors, and with one (<italic>D. melanogaster</italic> only), two <italic>D. melanogaster</italic> and <italic>D. yakuba</italic>) or four (<italic>D. melanogaster</italic>, <italic>D. yakuba</italic>, <italic>D. simulans</italic> and <italic>D. erecta</italic>) aligned species. The results are in <xref ref-type="fig" rid="pcbi-1000156-g009">Figure 9</xref>. The best performance came when prior information was supplied, but (somewhat surprisingly) when only two input species, not four, were used. This suggests that spurious conservation across multiple species may lead PhyloGibbs-MP astray.</p>
<fig id="pcbi-1000156-g009" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g009</object-id><label>Figure 9</label><caption>
<title>Performance of PhyloGibbs-MP with various parameter settings (with flyreg priors or without priors, and with 1, 2 or 4 orthologous aligned sequences), on detecting known <italic>cis</italic>-regulatory modules in regulatory regions of fly.</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g009" xlink:type="simple"/></fig>
<p>Next, PhyloGibbs-MP (best-performing parameters) was compared with the output of the other programs. The results are in <xref ref-type="fig" rid="pcbi-1000156-g010">Figure 10</xref>.</p>
<fig id="pcbi-1000156-g010" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000156.g010</object-id><label>Figure 10</label><caption>
<title>Performance of PhyloGibbs-MP (with flyreg priors, and 2 species) in detecting known CRMs in fly, compared with four other module finders.</title>
<p>Dotted lines indicate the performance expected if programs made predictions at random (that is, if, for each input sequence, the same number of site predictions were made but at random locations). Note that, in this data, 816457 bp out of 2448515 bp is in annotated CRMs; so a completely random program would exhibit roughly a specificity of 0.33, in agreement with the dotted lines at high sensitivity.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.g010" xlink:type="simple"/></fig>
<p>In terms of speed, PhyloGibbs-MP is much slower than the other programs: being a Gibbs-sampling ab initio motif-finder, it runs roughly quadratically in sequence length (given typical parameters), whereas a search and clustering for motifs can be done in linear time. Its utility becomes apparent when used as a combined CRM predictor and ab initio motif-finder, and it performs competitively with dedicated programs at both these tasks. In recent work, we have used a subset of the above FlyReg-derived matrices, and a few additional literature-derived weight matrices, to make detailed studies of a myoblast-related enhancer that exhibits a complex modular expression pattern (K. G. Guruharsha et al., in preparation).</p>
</sec></sec><sec id="s3">
<title>Discussion</title>
<p>While transcriptional regulation, especially in most eukaryotes, is only one component of a complex machinery controlling gene expression, it is an important and the best understood component today. According to benchmarks on two different species reported here, PhyloGibbs-MP appears to be superior to all other tested programs (including its predecessor PhyloGibbs-1.0) in its core task of ab initio motif finding. In addition, it shows excellent performance, comparable or superior to that of dedicated programs, at prediction of <italic>cis</italic>-regulatory modules (CRMs) and discriminative motif-finding. All these are of importance in the computational study of transcriptional gene regulation. While comparably good or faster tools may exist for module prediction and discriminative motif prediction, the ability to integrate all these tasks, while taking systematic account of phylogenetic relationships between species and performing a careful self-assessment of its own predictions via extended sampling, are unique to PhyloGibbs-MP.</p>
<p>There are some subtleties and many unaddressed problems that we intend to address in future; we discuss some of these below.</p>
<p>While PhyloGibbs-MP predicts multiple CRMs upstream of a single gene, and regulatory sites that occur differentially upstream of different genes (as well as CRMs known a priori for the same gene), it is incapable of predicting discriminative sites for different CRMs that it itself predicts for a given gene. Yet the reason that a gene may have multiple CRMs is precisely that it is differently regulated by different CRMs in different contexts. At the moment, we approach this situation by first predicting CRMs, using either PhyloGibbs-MP or another program, and then predicting discriminative motifs in those CRMs. Also, PhyloGibbs-MP can restrict the number of different factors (colours) per CRM: for example, we can stipulate that there may be up to 40 factors regulating the gene, but only 10 at most per CRM. A more satisfactory solution will be implemented in the future.</p>
<p>Co-regulated and differentially-regulated clusters of genes are often predicted from high-throughput (microarray) expression data, which is itself noisy. Feedback between motif-finding and clustering of microarray data would benefit both tasks, and this is a future goal.</p>
<p>PhyloGibbs-MP, like its predecessor and like other phylogenetic motif finders, requires pre-aligned input data; we have written a program, Sigma, specifically for aligning non-coding DNA, and use it in the benchmarks above and elsewhere. But no alignment program is perfect, so it is a goal to include the capability of aligning sequence (using an algorithm similar to that implemented by Sigma) in PhyloGibbs-MP directly. The alignment can then be refined in tandem with the predictions being made by PhyloGibbs-MP.</p>
<sec id="s3a">
<title>Availability</title>
<p>PhyloGibbs-MP is available at <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs-mp/" xlink:type="simple">http://www.imsc.res.in/∼rsidd/phylogibbs-mp/</ext-link>. It is open source, licensed under the GNU General Public License. Supporting data is available at <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs-mp/supporting-data/" xlink:type="simple">http://www.imsc.res.in/∼rsidd/phylogibbs-mp/supporting-data/</ext-link>.</p>
</sec></sec><sec id="s4">
<title>Materials and Methods</title>
<sec id="s4a">
<title>Overview of the PhyloGibbs Algorithm</title>
<p>The PhyloGibbs algorithm was described in detail earlier <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref>, so a brief summary will suffice here. (Some changes in PhyloGibbs-MP from PhyloGibbs-1.0 are described in <xref ref-type="sec" rid="s4">Materials and Methods</xref>, “Changes to Algorithm”.)</p>
<p>PhyloGibbs models “generic” non-coding DNA sequence by a Markov model of order <italic>k</italic> (where typically <italic>k</italic> is 1, 2, or 3) whose parameters are estimated (preferably) from an auxiliary file of background sequence, or (less reliably) from the input sequence itself. It assumes that some locations in the input sequence are binding sites for transcription factors, and are not described by the background model but by “position weight matrices” (PWMs): matrices of order 4×<italic>ℓ</italic> that give the probabilities of seeing each of the four nucleotides at positions 1 through <italic>ℓ</italic> in the site. All binding sites belonging to a common transcription factor are given by the same (often unknown) PWM. A “parse” of the sequence consists of a selection of particular sites as putative binding sites. For each such parse, <italic>C</italic> the likelihood of seeing the given sequence <italic>P</italic>(<italic>S</italic>|<italic>C</italic>) can be calculated (as described in <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref>), and then the posterior probability of <italic>C</italic> follows by Bayes' theorem:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e001" xlink:type="simple"/><label>(1)</label></disp-formula>Here, <italic>P</italic>(<italic>S</italic>) (loosely, the “prior probability” of the sequence <italic>S</italic>) is a constant, equal to Σ<italic><sub>C</sub>P</italic>(<italic>S</italic>|<italic>C</italic>′)<italic>P</italic>(<italic>C</italic>′), while <italic>P</italic>(<italic>C</italic>) is the prior probability of the parse, which is chosen to incorporate as much prior information as possible. For example, it can be chosen to be constant for a given number of colours and a given number of sites, and zero otherwise. One can also use a “chemical potential” to allow flexibility in the number of allowed sites. PhyloGibbs-MP fixes a <italic>maximum</italic> number of colours, and an expected number of binding <italic>sites</italic> (in contrast, PhyloGibbs-1.0 fixes the number of windows, that could encompass many sites). PhyloGibbs-MP also adjusts <italic>P</italic>(<italic>C</italic>) when dealing with informative priors, module prediction, and discriminative motif-finding.</p>
<p>PhyloGibbs uses a moveset that preserves detailed balance (some caveats apply to PhyloGibbs-MP: see the appendix). It samples the space of parses, first finding the parse with maximum a posteriori probability <italic>P</italic>(<italic>C</italic>|<italic>S</italic>), then evaluating the significance of each predicted site by further sampling. It can simultaneously detect binding sites for multiple different TFs by labelling each with a different “colour”; the posterior probability is a product over all colours.</p>
<p>In addition, PhyloGibbs can deal with phylogenetically related sequence that has been pre-processed by a multiple sequence alignment program. It does this by treating sites in an aligned block not as independent, but as descendants of a common ancestor, and modifying the scoring appropriately (whether as “binding sites” or as “background”). The scoring is governed by the transition probability<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e002" xlink:type="simple"/></disp-formula>where <italic>α</italic> is the (unknown) ancestral base, <italic>a</italic> is the descendant base, <italic>q</italic> is the rate of conservation (“proximity”) between the ancestor and the descendant, and <italic>w<sub>a</sub></italic> is the probability of seeing <italic>a</italic> at that position in the descendant under the assumption that this is a binding site for a weight matrix (or a background site, as the case may be). In other words, the ancestral site is conserved with probability <italic>q</italic> and mutated with probability 1−<italic>q</italic>; if mutated, it has undergone fixation that preserves the functionality, or the background statistics. This transition probability is transitive and has the correct limits at extreme <italic>q</italic>. The above applies directly to “star phylogenies” (where all species are independently descended from a common ancestor), but arbitrary phylogenetic trees are handled by converting them into sums of products of “subtrees” that individually have “star phylogenies”. (This is exact, but approximations are made in dealing with the subtrees.) Internally, PhyloGibbs represents such related sites by “windows”, aligned blocks of sequence that are either all functional, or all non-functional. Details, again, are in the earlier PhyloGibbs paper <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref> and are unchanged in PhyloGibbs-MP.</p>
</sec><sec id="s4b">
<title><italic>Cis-</italic>Regulatory Module Prediction</title>
<p>PhyloGibbs-MP takes as optional parameters the maximum length <italic>l</italic> of a <italic>cis</italic>-regulatory module, and the average spacing <italic>d</italic> between two CRMs. Then, on each input sequence, it requires that not more than max(1,(<italic>L</italic>+<italic>d</italic>)/(<italic>l</italic>+<italic>d</italic>) modules exist, where <italic>L</italic> is the length of the sequence.</p>
<p>Each site, or multispecies “window”, that is selected now must satisfy existing module constraints on all sequences that it is a part of. In other words, only windows that can satisfy the current constraints are sampled for. For example, if two modules are allowed on a sequence, but all windows that currently occupy that sequence fit within the width of one module (any two windows are within a distance <italic>l</italic> of each other), a new window can be sampled anywhere on that sequence (provided it satisfies constraints on other sequences that it is a part of), and will define a new module. However, if the currently selected windows must be spread across two modules, newly selected windows must fit within the constraints of those two modules—that is, they must be no more than <italic>l</italic> nucleotides away from any window in their module.</p>
<p>Thus, the allowable window placements, and the modules defined by the selected windows, are dynamically updated and need not stay localised as sampling proceeds. At the end of the run, the tracking scores, visualisable via the GBrowse annotation (see <xref ref-type="fig" rid="pcbi-1000156-g008">Figure 8</xref>) for an example), reveal the positions of the predicted modules, which may be sharply localised or may be spread all over the sequence.</p>
</sec><sec id="s4c">
<title>Discriminative Motif-Finding</title>
<p>When given sets of regulatory regions for genes that are believed to be regulated differently, it is of interest to find motifs that occur preferentially in one set rather than in the other. When run in discriminative mode, PhyloGibbs-MP accomplishes this by, for each “colour”, selecting sites only in one regulatory set. However, it also selects “mirror” sites in other groups. The total number of mirror sites, across all groups and all types of motifs (“colours”), is the same as the total number of actual binding sites expected.</p>
<p>The mirror windows are sampled for in the same way as the “real” windows, by scoring them together with the real windows. Thus, if a colour has <italic>n</italic> real windows and <italic>m</italic> mirror windows selected, a new window is sampled with the posterior probability <italic>P<sub>n</sub></italic><sub>,<italic>m</italic></sub> of being drawn from the same weight matrix as these <italic>n</italic>+<italic>m</italic> sites. It is possible for a colour to contain no mirror windows. If a colour gets emptied of real windows, the mirror windows are also emptied and re-sampled into other colours.</p>
<p>These “posterior probabilities” are calculated as described in our earlier paper <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref>. However, it is convenient below to use the language of thermodynamics. By analogy with the Boltzmann probability of finding a thermodynamic system in a state of free energy <italic>F</italic>, which is equal to exp(−<italic>βF</italic>) where <italic>β</italic> is the inverse temperature, we define a “free energy” <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e003" xlink:type="simple"/></inline-formula> corresponding to a posterior probability <italic>P</italic>. In our case the temperature is fictitious: <italic>β</italic> = 1 during the initial equilibriation and tracking phases, and is slowly increased during the simulated anneal.</p>
<p>In the usual (non-discriminative) Gibbs sampler, we start from a state with <italic>n</italic>+1 windows, remove a window (to leave <italic>n</italic> windows selected), and sample replacements according to the “free energies” <italic>F<sub>n</sub></italic><sub>+1</sub>, which correspond to the posterior probabilities that the <italic>n</italic> selected windows plus the one new window are all sampled from the same position weight matrix. (More accurately, the new window may be placed into any existing “colour”, not necessarily the one from which a window was removed. Below we write a “colour index” explicitly for clarity.)</p>
<p>For the discriminative motif-finder, in any given configuration, each colour has “real” windows as well as “mirror” windows selected. A move starts with removing a real window, and a mirror move by removing a mirror window; these are then resampled. Let's say, after the removal, one is left with <italic>n</italic> real windows and <italic>m</italic> mirror windows. The “mirror” sites are sampled as above, but treating real and mirror sites as the “same”. That is, they are sampled using the free energies <italic>F<sub>n</sub></italic><sub>+<italic>m</italic>+1,<italic>c</italic></sub>, which correspond to the posterior probability of all <italic>n</italic> real windows, all <italic>m</italic> mirror windows, and the newly selected mirror window all being sampled from the same PWM (that corresponds to colour <italic>c</italic>). The goal here is to maintain a mirror list that is as faithful as possible to the real list.</p>
<p>The “real” sites are instead sampled according to<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e004" xlink:type="simple"/><label>(2)</label></disp-formula>where <italic>c</italic> stands for the colour (motif type) into which the window is being sampled <italic>F<sub>n</sub></italic><sub>+1</sub> has the same meaning as in the non-discriminative case, <italic>F<sub>m</sub></italic> is the free energy for the case that the <italic>m mirror</italic> windows are sampled from a common PWM (not necessarily the same as the “real” windows), and <italic>F<sub>n</sub></italic><sub>+<italic>m</italic>+1</sub> is the free energy for all <italic>n</italic> selected windows, all <italic>m</italic> mirror windows and the one newly selected window are <italic>all</italic> sampled from the same PWM. A window may be sampled into any colour, and each colour has a different set of mirror windows associated with it (thus <italic>n</italic> and <italic>m</italic> both depend on <italic>c</italic>); so this free energy is calculated for each candidate window and for each colour into wich it may be sampled. The bracketed term has the effect of penalising cases where the mirror windows strongly resemble the real windows. Here, <italic>α</italic> is a parameter, greater than 0, that determines how strongly to penalise motifs that are well represented outside the current discriminative group. For very small <italic>α</italic>, sites for a given colour are selected only from one discriminative group but little consideration is made to whether similar sites occur elsewhere. For larger <italic>α</italic>, similar sites in other discriminative groups will penalise the score more severely. Typically we find that <italic>α</italic> = 0.4 suffices to predict genuinely discriminative motifs, while excessively large values of <italic>α</italic> will cause chance occurrences of the motif in other groups to excessively penalise the “good” motifs—which is also noticed in the benchmarks for discriminative motif-finders (cf. section “<xref ref-type="sec" rid="s2">Results</xref>”, subsection “Discriminative motif-finding”).</p>
</sec><sec id="s4d">
<title>Informative Priors</title>
<p>Optionally, PhyloGibbs-MP can take a file containing prior position weight matrices corresponding to possibly relevant transcription factors, and bias its search to sites corresponding to those prior PWMs. This is done as follows: Input sequence is pre-parsed in PhyloGibbs-MP (as in PhyloGibbs-1.0), into “windows” of specified length. When prior PWMs are given, each prior PWM is associated with a unique “colour”. Then each window is given a prior probability of being a binding site for each of the given prior PWMs, as well as of being background. This probability is calculated as follows: Let <italic>P</italic><sub>bg</sub> be the probability that the window is background (estimated from a background model), and <italic>P<sub>δ</sub></italic>(<italic>W</italic>) be the probability that the window contains a binding site for PWM <italic>W</italic> with offset <italic>δ</italic> from the start of the window. Then the probability that the window is a binding site for <italic>W</italic> is given by<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e005" xlink:type="simple"/><label>(3)</label></disp-formula>where only offsets where at least 50% of the PWM is in the window, or at least 50% of the window is covered by the PWM, are considered in the sums over <italic>δ</italic>. (PWMs that are too large or too small to satisfy these criteria are filtered out.) Then, during the window-shift moves, when a new window and colour are being sampled, the posterior probability calculated for the new configuration is multiplied by the prior probability of that window being in that colour.</p>
</sec><sec id="s4e">
<title>Annotations</title>
<p>Optionally, PhyloGibbs-MP can output annotation files for its predictions that are readable by the Generic Genome Browser <xref ref-type="bibr" rid="pcbi.1000156-Stein1">[39]</xref> as well as by a visualisation tool that we are developing and have used to generate <xref ref-type="fig" rid="pcbi-1000156-g008">Figure 8</xref> in this paper (S Acharya and RS, in preparation). Annotations are for one species only, the “anchor species” that must be the first specified in the phylogenetic tree. The headers for sequences from that species must be formatted appropriately; details are in the PhyloGibbs-MP manual, distributed with the software.</p>
</sec><sec id="s4f">
<title>Changes to Algorithm in PhyloGibbs-MP</title>
<p>While PhyloGibbs-MP can be used as a conventional motif-finder, for the most part in the same way that PhyloGibbs-1.0 can, several changes have been made to the details of the algorithm, with an aim at improving performance.</p>
</sec><sec id="s4g">
<title>Detailed Balance</title>
<p>PhyloGibbs-1.0 strictly maintained detailed balance in all movesets; PhyloGibbs-MP is not quite so rigid. We discuss the deviations below. While we would prefer to maintain detailed balance strictly, we note that detailed balance, combined with ergodicity, ensures a sampling of state space with the appropriate posterior probability distribution only in the infinite time limit. But a useful program must run in limited time, and therefore good convergence of the moveset is equally important in practice. (For example, in PhyloGibbs-1.0, the “colour-change move” <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan1">[4]</xref> is by itself ergodic and satisfies detailed balance, and therefore should suffice in the infinite time limit. But in any realistic running time it does nothing useful by itself. Similarly, in the infinite-time limit the “global shift moves” would not be necessary.)</p>
<p>We argue that our breaking of detailed balance is sufficiently rare to be harmless, and sufficiently useful to be justifiable. Rare detailed-balance-breaking moves correspond to having several Markov chains through state space, where links within a chain satisfy detailed balance, but the moves connecting different chains do not. If the number of links within a chain is much greater than the number of chains, (in particular, if each chain is allowed to grow infinitely long while the number of different chains remains finite), the desired posterior probability distribution will be reached (since it is reached separately by each of the chains).</p>
</sec><sec id="s4h">
<title>Window-Shift Moves</title>
<p>In PhyloGibbs-1.0, these moves maintained a constant number of <italic>windows</italic> (which may contain multiple orthologous sites), by replacing one window with another. In PhyloGibbs-MP, the window-shift move maintains a constant number of <italic>sites</italic>.</p>
<p>This is done as follows: First, an initial input parameter is <italic>p</italic> (by default 0.01), which is the expected “density” of sites in the input sequence. For example, if the input sequences have lengths <italic>L<sub>i</sub></italic>, the total expected number of sites in these sequences is <italic>N<sub>E</sub></italic> = Σ<italic><sub>i</sub>p</italic>(<italic>L<sub>i</sub></italic>−<italic>w</italic>+1) where <italic>w</italic> is the width of a window.</p>
<p>Each window-shift move removes an existing coloured window (randomly chosen, of any colour), and replaces it with a new coloured window. However, the weight (posterior probability) of the move is multiplied by the heuristic exp(−<italic>β</italic>((<italic>N<sub>s</sub></italic>−<italic>N<sub>E</sub></italic>)/<italic>N<sub>m</sub></italic>)<sup>8</sup>). Here, <italic>N<sub>s</sub></italic> is the number of sites that would be selected if that window were picked, and <italic>N<sub>m</sub></italic> is the maximum number of sequences in any window in the set, and serves as a “margin” for the amount that <italic>N<sub>s</sub></italic> can deviate from <italic>N<sub>E</sub></italic>. The inverse temperature <italic>β</italic> is unity except during the simulated anneal, where it is increased gradually. We use the eighth power to allow deviation with little penalty within the margin <italic>N<sub>m</sub></italic>, but rapidly growing penalties for any larger deviation.</p>
<p>This satisfies detailed balance. However, we make two exceptions: if, before the move, <italic>N<sub>s</sub></italic> (the number of selected sites) is smaller than <italic>N<sub>E</sub></italic>−<italic>N<sub>m</sub></italic>, we do not remove any window, but directly pick a new window. And if, after removing a window, <italic>N<sub>s</sub></italic> is larger than <italic>N<sub>E</sub></italic>+<italic>N<sub>m</sub></italic>, we do not pick a new window. These exceptions occur sufficiently rarely that the breaking of detailed balance is not serious. The ability to specify a “density of sites”, independent of the input sequence length or the degree of homology, is a large advantage, which contributes to PhyloGibbs-MP's superior performance over PhyloGibbs-1.0.</p>
<p>Another breakage in detailed balance occurs when module prediction is enabled: adding or removing windows may change module boundaries, with the result that the set of available states is different before and after the move. Again, this is relatively rare and in a useful cause.</p>
</sec><sec id="s4i">
<title>Global-Shift Moves</title>
<p>In this move, an attempt is made to shift all windows of a given colour by a fixed distance, left on one strand or right on the other. This is to move out of “local minima” where the sampler has found a non-optimal solution that is offset by a fixed amount, and moving one window at a time would take a long time to happen. To maintain detailed balance, PhyloGibbs-1.0 sampled all possible shifts, up until such distance as no shift was possible (for instance, because it was blocked by other windows, or because it would run off the edge of the sequence). While this does maintain detailed balance, it fails to sample some legitimate shifts: in particular, if a window was at the edge of an aligned block, PhyloGibbs-1.0 could not shift it beyond, because the number of sequences in the window would change, and therefore would not shift any window in that colour.</p>
<p>Instead, PhyloGibbs-MP samples shifts of only one space left or right, and allows shifts beyond window boundaries (such windows may either “gain” sequences from other species, or be broken into smaller windows with fewer sequences).</p>
<p>In this case, general balance is significantly broken for a given global shift move, because the set of available states is not the same before and after the move. (A window at position <italic>i</italic> could be shifted, with other windows of that colour, to <italic>i</italic>+1 or <italic>i</italic>−1 or could stay at <italic>i</italic>; if it shifts to <italic>i</italic>+1, the available states are now <italic>i</italic>, <italic>i</italic>+1, <italic>i</italic>+2. Also, in case of blocked windows that are “thrown away” after the shift, new windows are resampled, and again the set of possible states is not the same.) Again, the rareness of the moves compared to the window-shift moves, and their utility in practice, justifies the breakage.</p>
</sec><sec id="s4j">
<title>Colour-Change Moves</title>
<p>The colour-change move in PhyloGibbs-1.0 has been removed. Instead, a maximum number <italic>N<sub>c</sub></italic> of colours is specified, but (unlike in PhyloGibbs-1.0) fewer than <italic>N<sub>c</sub></italic> colours may actually be selected at any time.</p>
</sec><sec id="s4k">
<title>Mask Bits</title>
<p>PhyloGibbs-1.0 had an optional “maskbit flip” move, where certain columns are optionally not scored; these columns are sampled for using Metropolis moves. In practice, however, motifs tend to be strong at the centre and weak at the edge, except for symmetric dimer motifs (mainly in bacteria), where they can be weak in the middle. Therefore PhyloGibbs-MP allows such unscored columns only at the edge of the window (and, in the case of symmetric motifs, in a contiguous symmetric block at the centre). The advantage of this is that, when a length <italic>w</italic> is specified, smaller motifs (for example, of length <italic>w</italic>−1 and <italic>w</italic>−2) may also be found.</p>
</sec><sec id="s4l">
<title>Simulated Anneal</title>
<p>PhyloGibbs-1.0 used an annealing schedule where <italic>β</italic> (the inverse temperature) was increased linearly from 1.0 to a final lower value, followed by a short “deep quench” with <italic>β</italic> = 20.</p>
<p>Instead, PhyloGibbs-MP uses the “free energy” <italic>E</italic> (the logarithm of the posterior probability), averaged over a cycle, to determine the start and stop of the simulated anneal. The starting temperature is chosen to be a value where the fluctuations in energy, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e006" xlink:type="simple"/></inline-formula> (averaged over one cycle of moves), are at least 0.3 times the average energy <italic>E</italic><sub>avg</sub>. Then <italic>β</italic> is increased exponentially, by a factor of 1.2 at each step. At least two cycles are run at each <italic>β</italic>, and <italic>β</italic> is increased only when the difference in average energy in the last two cycles at that <italic>β</italic> is less than the fluctuation Δ<italic>E</italic> in the last cycle. The anneal is stopped when the relative difference in average energy at the last two values of <italic>β</italic> is less than 0.005. There is no “deep quench”.</p>
<p>The number of moves used in the tracking phase is, by default, the same as the number (excluding the equilibriation moves to find the initial temperature) in the simulated anneal. This can be overruled.</p>
</sec><sec id="s4m">
<title>Importance Sampling</title>
<p>A significant improvement in running time (typically a factor of 10 or so) is obtained by using a form of “importance sampling” on top of the Gibbs sampling scheme implemented in the “window shift moves”. When sampling a replacement window, PhyloGibbs-1.0 would consider <italic>every</italic> available window, with every possible new colour for that window; this requires <italic>N<sub>w</sub>N<sub>c</sub></italic> calculations, where <italic>N<sub>w</sub></italic> is the number of windows and <italic>N<sub>c</sub></italic> is the number of colours available. Typically <italic>N<sub>w</sub></italic> is large, several thousands or tens of thousands; but only a small fraction of available windows tends to get selected. This is not an unusual situation in sampling problems. When one has an estimate of the bias, one often uses an “importance function” <italic>F</italic>(<italic>C</italic>) to indicate which configurations <italic>C</italic> are more frequently visited. This is chosen (often heuristically) to be large where <italic>P</italic>(<italic>C</italic>) (the posterior probability of <italic>C</italic>) is likely to be large large, and small where <italic>P</italic>(<italic>C</italic>) is small. Then states are sampled not according to <italic>P</italic>(<italic>C</italic>) but according to <italic>P</italic>(<italic>C</italic>)<italic>F</italic>(<italic>C</italic>); but their contribution to running averages of the form 〈<italic>E</italic>(<italic>C</italic>)〉<italic><sub>C</sub></italic> are taken to be not <italic>E</italic>(<italic>C</italic>) but <italic>E</italic>(<italic>C</italic>)/<italic>F</italic>(<italic>C</italic>). This makes the average come out right, while causing the sampler to spend most of its time in “important” parts of configuration space.</p>
<p>In our case, we have a related situation: some windows tend to be selected much more often than others, and therefore, during a particular Gibbs move, although we need to select from <italic>N<sub>w</sub></italic> windows, only a few of these are actually likely to be selected. Therefore we maintain an “importance” for each window, a number between 0 and 1, which is the fraction of time that that window has actually been selected (in any colour and either orientation) up until that time. During the setting of the initial temperature, all windows are treated as important (their importance counter is incremented whether or not they are selected). Thus, at the start of the anneal, all windows have importance 1, but as the running time proceeds, the importance of many windows decreases rapidly.</p>
<p>Let the importance of a window at any time be <italic>I</italic>(<italic>w</italic>). Normally, if <italic>N<sub>w</sub></italic> windows may possibly be selected, we need to calculate the posterior probability <italic>P</italic>(<italic>w<sub>i</sub></italic>,<italic>c</italic>) for each available window <italic>w<sub>i</sub></italic> into each available colour <italic>c</italic>. The time-consuming step is the calculation of <italic>P</italic>(<italic>w<sub>i</sub></italic>,<italic>c</italic>) which is a wasted calculation for most available windows, which are in fact never selected. Therefore, we pre-select a subset of the <italic>N<sub>w</sub></italic> windows: Each available window <italic>w<sub>i</sub></italic> is selected to be sampled with a probability proportional to <italic>I</italic>(<italic>w<sub>i</sub></italic>). (<italic>I</italic> is normalised in such a way that the importance of the most important available window is 1, i.e. it will always be pre-selected, so the pre-selected subset is never null.) However, it will then be selected with a probability proportional, not to <italic>P</italic>(<italic>w<sub>i</sub></italic>,<italic>c</italic>), but to <italic>P</italic>(<italic>w<sub>i</sub></italic>,<italic>c</italic>)/<italic>I</italic>(<italic>w<sub>i</sub></italic>). In other words, if a subset {<italic>W</italic>} of windows is preselected by importance, windows in that subset are sampled according to<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e007" xlink:type="simple"/></disp-formula>(the importance cancels because the <italic>P</italic>'s have been preselected with probability <italic>i</italic>, but then been multiplied by 1/<italic>I</italic>).</p>
<p>When the reverse transition is considered, in individual cases a <italic>different</italic> subset of windows {<italic>W</italic>′} will be used in the denominator, and therefore the sum in the denominator will not be the same. However, <italic>on average</italic> (for times not too far apart) it will be the same: there is no systematic bias and detailed balance should apply. In the long time limit, <italic>I</italic>(<italic>w<sub>i</sub></italic>) will tend to<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000156.e008" xlink:type="simple"/><label>(4)</label></disp-formula>This is a non-rigorous argument, for which the justification is as earlier: statements about detailed balance are rigorous only in the infinite-time limit, while running-time efficiency is important in real life. For those who are unconvinced, importance sampling may be turned off by a command-line parameter. Results do not seem greatly affected by this. An example is in <xref ref-type="fig" rid="pcbi-1000156-g001">Figure 1</xref>, where PhyloGibbs-MP with 8 possible motifs is run with (black line) and without (blue line) importance sampling. The effect of importance sampling seems, as one would expect, to somewhat inflate the reported significance of high-confidence predictions and somewhat deflate the significance of lower-confidence predictions.</p>
</sec><sec id="s4n">
<title>Benchmarks</title>
<p>For all benchmarks, detailed commandlines for individual programs and all input and output files are available at <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs-mp/supporting-data/" xlink:type="simple">http://www.imsc.res.in/∼rsidd/phylogibbs-mp/supporting-data/</ext-link>. Several scripts used to process the data are also included.</p>
</sec><sec id="s4o">
<title>Motif-Finding</title>
<p>For the yeast benchmark, the SCPD database <xref ref-type="bibr" rid="pcbi.1000156-Zhu1">[11]</xref> was used, but edited to remove very long and very short sites. The edited database contained 466 binding sites upstream of 200 genes. For each gene, sequence upstream of that gene in <italic>S. cerevisiae</italic> up until the next coding sequence was used, to a maximum of 1000 bp. Orthologous sequence was found in other <italic>sensu stricto</italic> species (<italic>S. bayanus</italic>, <italic>S. mikatae</italic>, <italic>S. kudriavzveii</italic>, <italic>S. paradoxus</italic>) using BLAST.</p>
<p>For PhyloGibbs-1.0, PhyloGibbs-MP, and EMnEM, these sequences were aligned with Sigma <xref ref-type="bibr" rid="pcbi.1000156-Siddharthan2">[19]</xref>, version 1.1.3. For the phylogenetic Gibbs sampler <xref ref-type="bibr" rid="pcbi.1000156-Newberg1">[18]</xref>, the sequences were aligned with ClustalW <xref ref-type="bibr" rid="pcbi.1000156-Thompson1">[21]</xref>, and for PhyME <xref ref-type="bibr" rid="pcbi.1000156-Sinha4">[16]</xref>, they were aligned with the bundled version of L<sc>agan</sc> <xref ref-type="bibr" rid="pcbi.1000156-Brudno1">[20]</xref>.</p>
<p>Command-line options were chosen to be roughly comparable for all programs; for the phylogenetic Gibbs sampler, they were suggested by one of the authors (W. Thompson, private correspondence).</p>
<p>For the fly benchmark, we used the REDfly 2.0 <xref ref-type="bibr" rid="pcbi.1000156-Halfon1">[22]</xref> database of transcription factor binding sites. The “sites” in this database are often many times longer than the expected length of an individual binding site, so the most probable binding site needed to be found bioinformatically. Therefore, we selected a subset of these binding sequences corresponding to factors for which high-quality position weight matrices were available from the TRANSFAC 7.0 public database <xref ref-type="bibr" rid="pcbi.1000156-Matys1">[40]</xref>, and used these matrices to find the most probable (highest log-odds) binding sites within the binding sequences in the database. (As noted in “Module prediction”, we have independently constructed position weight matrices for a much larger set of factors from the Flyreg <xref ref-type="bibr" rid="pcbi.1000156-Bergman1">[38]</xref> database, which formed the basis for REDfly's binding site database, using PhyloGibbs-MP. But for the purposes of this benchmark, we prefer to use matrices of a “neutral” origin.)</p>
<p>The specific factors chosen from the TRANSFAC database were Abd-B, Adf1, Cf2, Dfd, Eip74EF, Stat92E, Su(H), Ubx, bcd, dl, ftz, hb, ovo, pan, sna, z. Binding sites located less than 200 bp apart were clubbed together; then surrounding sequence was selected, such that the total length of the sequence was 250 bp per binding site, to a maximum of 2000 bp.</p>
<p>In addition to the programs benchmarked on the yeast data, we wanted to include PhyloCon <xref ref-type="bibr" rid="pcbi.1000156-Wang1">[23]</xref>, a somewhat different category of motif-finder that requires multiple input sequences, each with its own orthologous sequences, and expects one site per input sequence. We therefore chose only a subset of the above factors for which, after the above process, multiple binding sequences were available for each factor. These were Adf1, Cf2, Stat92E, Su(H), Ubx, bcd, dl, ftz, hb, ovo, and sna.</p>
<p>Orthologous sequence was identified in <italic>D. yakuba</italic>, <italic>D. erecta</italic> and <italic>D. simulans</italic> using multiple sequence alignments from VN Iyer, DA Pollard and MB Eisen (personal communication), but were re-aligned using Sigma.</p>
</sec><sec id="s4p">
<title>Discriminative Motif-Finding</title>
<p>For the synthetic-sequence benchmark, 200 sets of input files were generated. Each set consisted of two files; each file contained five sequences. These sequences were generated from a single ancestor, containing five copies each of two embedded motifs, and evolved according to the evolutionary model assumed by PhyloGibbs, with <italic>q</italic> = 0.5 and no indels. (As in the evolutionary model, embedded sites, when mutated, were re-sampled from the weight matrix that described them.) Three motifs were used for each set, where one was common to both files in the set and one each was unique to each file in the set. The motifs were random weight matrices with a “polarisation” (maximum element in each column) of 0.85 (with the remaining weights 0.05 each). The performance of PhyloGibbs-MP (with different settings of the “discriminative parameter” -d), ALSE, DEME and Dips in detecting the common, and the discriminative, motifs was measured.</p>
<p>For the yeast motif-finding benchmarks, 571 pairs of genes were chosen such that the pairs had no documented binding sites in SCPD from a common transcription factor. As in the motif-finding case, orthologous sequence from the four other <italic>sensu stricto</italic> species was used. PhyloGibbs-MP was run in discriminative mode (-d 0.4), and performance in detecting known sites was compared with ALSE, DEME and Dips.</p>
<p>For the fly benchmarks, we used the REDfly data used in the motif-finding example, but removed the PhyloCon-imposed requirement of multiple sequence sets per transcription factor (allowing both single and multiple sequences per set). We ended with 1404 pairs of sequence sets in which each member of a pair was associated with a different factor. As in the motif-finding benchmark, orthologous sequence from <italic>D. yakuba</italic>, <italic>D. erecta</italic>, and <italic>D. simulans</italic> was used. Similarly to the yeast case, the four discriminative programs were run.</p>
<p>For the yeast ChIP-chip benchmarks, we used the spreadsheet Harbison_Gordon_yeast_v9.11.csv from the supplementary data of Harbison et al. <xref ref-type="bibr" rid="pcbi.1000156-Harbison1">[31]</xref> to extract transcription factors that bind to between 4 and 9 regulatory sequences, both in rich medium and in at least one other environmental condition, with a <italic>p</italic>-value better than 0.001; and for each factor we retrieved the sequences it bound to. We used intergenic sequence upstream of the regulated gene, to a maximum of 1000 bp, as in the SCPD benchmarks. 17 such factors were found, of which 15 included motifs reported in their supplementary data file Final_InTableS2_v24.motifs. <xref ref-type="fig" rid="pcbi-1000156-g007">Figure 7</xref> lists these factors, and sequence logos constructed from the motifs listed in that file.</p>
<p>For each factor, also, if it was reported to bind to <italic>n</italic> sequences (4≤<italic>n</italic>≤9), we selected <italic>n</italic> sequences at random to which it was <italic>not</italic> reported to bind, to a <italic>p</italic>-value of 0.01 or less. These were used as the “negative” set. Orthologous sequence from <italic>sensu stricto</italic> species were included, aligned for PhyloGibbs-MP with Sigma version 1.1.3 (as in other benchmarks). In the case of PhyloGibbs-MP, predictions in the negative set were discarded (PhyloGibbs-MP does not distinguish between positive and negative sets), and only predictions from the positive set that arose from multiple tracked windows, at least one of which had a tracking score better than 0.2, were considered. The other programs reported at most one motif each for the positive set, and each such prediction was considered.</p>
<p>All input and output files, and detailed commandlines, are available at <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs-mp/supporting-data/" xlink:type="simple">http://www.imsc.res.in/∼rsidd/phylogibbs-mp/supporting-data/</ext-link>.</p>
</sec><sec id="s4q">
<title>CRM Prediction</title>
<p>CRMs documented in the REDfly <xref ref-type="bibr" rid="pcbi.1000156-Gallo1">[33]</xref> database were chosen, that were under 3000 bp long. Surrounding sequence was included to bring the total length of the sequence to 10000 bp. If two CRMs lay within 15000 bp of each other, the associated sequence was fused into a single sequence. In this way, 234 CRM-containing sequences were identified in <italic>D. melanogaster</italic>. Orthologous sequence was selected from <italic>D. pseudoobscura</italic>, <italic>D. yakuba</italic>, and <italic>D. simulans</italic>. Orthology identification was made using multiple sequence alignments from VN Iyer, DA Pollard and MB Eisen (personal communication). The sequences were re-aligned with Sigma 1.1.3. PhyloGibbs-MP was run without priors and with priors constructed from the FlyReg database <xref ref-type="bibr" rid="pcbi.1000156-Bergman1">[38]</xref> (see below). Stubb (version 2.1) and Cluster-Buster were run using the FlyReg priors. Cis-Module requires no priors. EMC-Module requires a prior set of known binding sites, so the FlyReg priors were used to predict these sites (sites with a log-odds larger than 7 were included, and the specified width of sites was 8). PhyloGibbs-MP was run with 1, 2 (<italic>melanogaster</italic> and <italic>yakuba</italic>) or all 4 input sequences, aligned with Sigma 1.1.3; Stubb was run with 2 input sequences, <italic>melanogaster</italic> and <italic>yakuba</italic>. Other programs were run on melanogaster alone.</p>
<p>All input and output files, and detailed commandlines, are available at <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs-mp/supporting-data/" xlink:type="simple">http://www.imsc.res.in/∼rsidd/phylogibbs-mp/supporting-data/</ext-link>.</p>
</sec><sec id="s4r">
<title>Construction of Prior Weight Matrices</title>
<p>The FlyReg <xref ref-type="bibr" rid="pcbi.1000156-Bergman1">[38]</xref> database of DNAse I footprints in <italic>D. melanogaster</italic> was used. Only those TFs were considered for which two or more footprints were available. For each footprint, orthologous sequence was extracted for <italic>D. pseudoobscura</italic>, <italic>D. yakuba</italic>, <italic>D. simulans</italic>, <italic>D. erecta</italic>, and <italic>D. ananassae</italic> using multiple sequence alignments from VN Iyer, DA Pollard and MB Eisen (personal communication). Thus, where <italic>N</italic> footprints may have been available in FlyReg, up to 6<italic>N</italic> sequences were used including orthologous sequences. The command-line for PhyloGibbs-MP was chosen via a heuristic depending on the number and lengths of footprints. The detailed commandlines and output files, and the generated weight matrices, are available at <ext-link ext-link-type="uri" xlink:href="http://www.imsc.res.in/~rsidd/phylogibbs-mp/supporting-data/" xlink:type="simple">http://www.imsc.res.in/∼rsidd/phylogibbs-mp/supporting-data/</ext-link>.</p>
</sec></sec></body>
<back>
<ack>
<p>Many features of PhyloGibbs-MP evolved from requirements of a project on Drosophila mesoderm development (Guruharsha et al., in preparation). I thank K. G. Guruharsha and K. VijayRaghavan for valuable discussions. Another motivation was an ongoing project (BT/PR7521/BRB/10/482/2006, Department of Biotechnology, Government of India) with Bhaskar Saha, Parag Sadhale, Sitabhra Sinha, and Gautam Menon, whom I thank for useful discussions. Constructive feedback from several users of PhyloGibbs-1.0, and a few early users of PhyloGibbs-MP, has also been very welcome.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1000156-Stormo1"><label>1</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Stormo</surname><given-names>GD</given-names></name>
<name name-style="western"><surname>Hartzell</surname><given-names>GW</given-names></name>
</person-group>             <year>1989</year>             <article-title>Identifying protein-binding sites from unaligned DNA fragments.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>86</volume>             <fpage>1183</fpage>             <lpage>1187</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Lawrence1"><label>2</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Lawrence</surname><given-names>CE</given-names></name>
<name name-style="western"><surname>Altschul</surname><given-names>SF</given-names></name>
<name name-style="western"><surname>Boguski</surname><given-names>MS</given-names></name>
<name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name>
<name name-style="western"><surname>Neuwald</surname><given-names>AF</given-names></name>
<etal/></person-group>             <year>1993</year>             <article-title>Detecting subtle sequence signals: a Gibbs sampling strategy for multiple alignment.</article-title>             <source>Science</source>             <volume>262</volume>             <fpage>208</fpage>             <lpage>214</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Bailey1"><label>3</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bailey</surname><given-names>TL</given-names></name>
<name name-style="western"><surname>Elkan</surname><given-names>C</given-names></name>
</person-group>             <year>1994</year>             <article-title>Fitting a mixture model by expectation maximization to discover motifs in biopolymers.</article-title>             <source>Proc Int Conf Intell Syst Mol Biol</source>             <volume>2</volume>             <fpage>28</fpage>             <lpage>36</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Siddharthan1"><label>4</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Siddharthan</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name>
<name name-style="western"><surname>van Nimwegen</surname><given-names>E</given-names></name>
</person-group>             <year>2005</year>             <article-title>PhyloGibbs: a Gibbs sampling motif finder that incorporates phylogeny.</article-title>             <source>PLoS Comput Biol</source>             <volume>1</volume>             <fpage>e67</fpage><comment>doi:10.1371/journal.pcbi.0010067</comment>          </element-citation></ref>
<ref id="pcbi.1000156-Berman1"><label>5</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Berman</surname><given-names>B</given-names></name>
<name name-style="western"><surname>Pfeiffer</surname><given-names>B</given-names></name>
<name name-style="western"><surname>Laverty</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Salzberg</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Rubin</surname><given-names>G</given-names></name>
<etal/></person-group>             <year>2004</year>             <article-title>Computational identification of developmental enhancers: conservation and function of transcription factor binding-site clusters in Drosophila melanogaster and Drosophila pseudoobscura.</article-title>             <source>Genome Biol</source>             <volume>5</volume>             <fpage>R61</fpage>          </element-citation></ref>
<ref id="pcbi.1000156-Berman2"><label>6</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Berman</surname><given-names>BP</given-names></name>
<name name-style="western"><surname>Nibu</surname><given-names>Y</given-names></name>
<name name-style="western"><surname>Pfeiffer</surname><given-names>BD</given-names></name>
<name name-style="western"><surname>Tomancak</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Celniker</surname><given-names>SE</given-names></name>
<etal/></person-group>             <year>2002</year>             <article-title>Exploiting transcription factor binding site clustering to identify cis-regulatory modules involved in pattern formation in the Drosophila genome.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>99</volume>             <fpage>757</fpage>             <lpage>762</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Frith1"><label>7</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Frith</surname><given-names>MC</given-names></name>
<name name-style="western"><surname>Li</surname><given-names>MC</given-names></name>
<name name-style="western"><surname>Weng</surname><given-names>Z</given-names></name>
</person-group>             <year>2003</year>             <article-title>Cluster-Buster: Finding dense clusters of motifs in DNA sequences.</article-title>             <source>Nucleic Acids Res</source>             <volume>31</volume>             <fpage>3666</fpage>             <lpage>3668</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Sinha1"><label>8</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name>
<name name-style="western"><surname>van Nimwegen</surname><given-names>E</given-names></name>
<name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name>
</person-group>             <year>2003</year>             <article-title>A probabilistic method to detect regulatory modules.</article-title>             <source>Bioinformatics</source>             <volume>19</volume>             <fpage>i292</fpage>             <lpage>i301</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Sinha2"><label>9</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Schroeder</surname><given-names>MD</given-names></name>
<name name-style="western"><surname>Unnerstall</surname><given-names>U</given-names></name>
<name name-style="western"><surname>Gaul</surname><given-names>U</given-names></name>
<name name-style="western"><surname>Siggia</surname><given-names>ED</given-names></name>
</person-group>             <year>2004</year>             <article-title>Cross-species comparison significantly improves genome-wide prediction of cis-regulatory modules in Drosophila.</article-title>             <source>BMC Bioinformatics</source>             <volume>5</volume>             <fpage>129</fpage>          </element-citation></ref>
<ref id="pcbi.1000156-Sinha3"><label>10</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Liang</surname><given-names>Y</given-names></name>
<name name-style="western"><surname>Siggia</surname><given-names>E</given-names></name>
</person-group>             <year>2006</year>             <article-title>Stubb: a program for discovery and analysis of cis-regulatory modules.</article-title>             <source>Nucleic Acids Res</source>             <volume>34</volume>             <fpage>555</fpage>             <lpage>559</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Zhu1"><label>11</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Zhu</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Zhang</surname><given-names>MQ</given-names></name>
</person-group>             <year>1999</year>             <article-title>SCPD: a promoter database of the yeast Saccharomyces cerevisiae.</article-title>             <source>Bioinformatics</source>             <volume>15</volume>             <fpage>607</fpage>             <lpage>611</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Kellis1"><label>12</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kellis</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Patterson</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Endrizzi</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Birren</surname><given-names>B</given-names></name>
<name name-style="western"><surname>Lander</surname><given-names>ES</given-names></name>
</person-group>             <year>2003</year>             <article-title>Sequencing and comparison of yeast species to identify genes and regulatory elements.</article-title>             <source>Nature</source>             <volume>423</volume>             <fpage>241</fpage>             <lpage>254</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Cliften1"><label>13</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Cliften</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Sudarsanam</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Desikan</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Fulton</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Fulton</surname><given-names>B</given-names></name>
<etal/></person-group>             <year>2003</year>             <article-title>Finding functional features in Saccharomyces genomes by phylogenetic footprinting.</article-title>             <source>Science</source>             <volume>301</volume>             <fpage>71</fpage>             <lpage>76</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Roth1"><label>14</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Roth</surname><given-names>FP</given-names></name>
<name name-style="western"><surname>Hughes</surname><given-names>JD</given-names></name>
<name name-style="western"><surname>Estep</surname><given-names>PW</given-names></name>
<name name-style="western"><surname>Church</surname><given-names>GM</given-names></name>
</person-group>             <year>1998</year>             <article-title>Finding DNA regulatory motifs within unaligned noncoding sequences clustered by whole-genome mRNA quantitation.</article-title>             <source>Nat Biotechnol</source>             <volume>16</volume>             <fpage>939</fpage>             <lpage>945</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Hughes1"><label>15</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hughes</surname><given-names>JD</given-names></name>
<name name-style="western"><surname>Estep</surname><given-names>PW</given-names></name>
<name name-style="western"><surname>Tavazoie</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Church</surname><given-names>GM</given-names></name>
</person-group>             <year>2000</year>             <article-title>Computational identification of cis-regulatory elements associated with groups of functionally related genes in Saccharomyces cerevisiae.</article-title>             <source>J Mol Biol</source>             <volume>296</volume>             <fpage>1205</fpage>             <lpage>1214</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Sinha4"><label>16</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Blanchette</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Tompa</surname><given-names>M</given-names></name>
</person-group>             <year>2004</year>             <article-title>PhyME: a probabilistic algorithm for finding motifs in sets of orthologous sequences.</article-title>             <source>BMC Bioinformatics</source>             <volume>5</volume>             <fpage>170</fpage>          </element-citation></ref>
<ref id="pcbi.1000156-Moses1"><label>17</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Moses</surname><given-names>AM</given-names></name>
<name name-style="western"><surname>Chiang</surname><given-names>DY</given-names></name>
<name name-style="western"><surname>Eisen</surname><given-names>MB</given-names></name>
</person-group>             <year>2004</year>             <article-title>Phylogenetic motif detection by expectation-maximization on evolutionary mixtures.</article-title>             <source>Pac Symp Biocomput</source>             <fpage>324</fpage>             <lpage>335</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Newberg1"><label>18</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Newberg</surname><given-names>LA</given-names></name>
<name name-style="western"><surname>Thompson</surname><given-names>WA</given-names></name>
<name name-style="western"><surname>Conlan</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Smith</surname><given-names>TM</given-names></name>
<name name-style="western"><surname>McCue</surname><given-names>LA</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>A phylogenetic Gibbs sampler that yields centroid solutions for cis-regulatory site prediction.</article-title>             <source>Bioinformatics</source>             <volume>23</volume>             <fpage>1718</fpage>             <lpage>1727</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Siddharthan2"><label>19</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Siddharthan</surname><given-names>R</given-names></name>
</person-group>             <year>2006</year>             <article-title>Sigma: multiple alignment of weakly-conserved non-coding DNA sequence.</article-title>             <source>BMC Bioinformatics</source>             <volume>7</volume>             <fpage>143</fpage>          </element-citation></ref>
<ref id="pcbi.1000156-Brudno1"><label>20</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Brudno</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Do</surname><given-names>CB</given-names></name>
<name name-style="western"><surname>Cooper</surname><given-names>GM</given-names></name>
<name name-style="western"><surname>Kim</surname><given-names>MF</given-names></name>
<name name-style="western"><surname>Davydov</surname><given-names>E</given-names></name>
<etal/></person-group>             <year>2003</year>             <article-title>LAGAN and Multi-LAGAN: efficient tools for large-scale multiple alignment of genomic DNA.</article-title>             <source>Genome Res</source>             <volume>13</volume>             <fpage>721</fpage>             <lpage>731</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Thompson1"><label>21</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Thompson</surname><given-names>JD</given-names></name>
<name name-style="western"><surname>Higgins</surname><given-names>DG</given-names></name>
<name name-style="western"><surname>Gibson</surname><given-names>TJ</given-names></name>
</person-group>             <year>1994</year>             <article-title>CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice.</article-title>             <source>Nucleic Acids Res</source>             <volume>22</volume>             <fpage>4673</fpage>             <lpage>4680</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Halfon1"><label>22</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Halfon</surname><given-names>MS</given-names></name>
<name name-style="western"><surname>Gallo</surname><given-names>SM</given-names></name>
<name name-style="western"><surname>Bergman</surname><given-names>CM</given-names></name>
</person-group>             <year>2008</year>             <article-title>REDy 2.0: an integrated database of cis-regulatory modules and transcription factor binding sites in Drosophila.</article-title>             <source>Nucleic Acids Res</source>             <volume>36</volume>             <fpage>594</fpage>             <lpage>598</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Wang1"><label>23</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Wang</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Stormo</surname><given-names>GD</given-names></name>
</person-group>             <year>2003</year>             <article-title>Combining phylogenetic data with co-regulated genes to identify regulatory motifs.</article-title>             <source>Bioinformatics</source>             <volume>19</volume>             <fpage>2369</fpage>             <lpage>2380</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Consortium1"><label>24</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Consortium</surname><given-names>DG</given-names></name>
</person-group>             <year>2007</year>             <article-title>Evolution of genes and genomes on the Drosophila phylogeny.</article-title>             <source>Nature</source>             <volume>450</volume>             <fpage>203</fpage>             <lpage>218</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Leung1"><label>25</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Leung</surname><given-names>HC</given-names></name>
<name name-style="western"><surname>Chin</surname><given-names>FY</given-names></name>
</person-group>             <year>2006</year>             <article-title>Finding motifs from all sequences with and without binding sites.</article-title>             <source>Bioinformatics</source>             <volume>22</volume>             <fpage>2217</fpage>             <lpage>2223</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Sinha5"><label>26</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sinha</surname><given-names>S</given-names></name>
</person-group>             <year>2006</year>             <article-title>On counting position weight matrix matches in a sequence, with application to discriminative motif finding.</article-title>             <source>Bioinformatics</source>             <volume>22</volume>             <fpage>454</fpage>             <lpage>463</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Redhead1"><label>27</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Redhead</surname><given-names>E</given-names></name>
<name name-style="western"><surname>Bailey</surname><given-names>TL</given-names></name>
</person-group>             <year>2007</year>             <article-title>Discriminative motif discovery in DNA and protein sequences using the DEME algorithm.</article-title>             <source>BMC Bioinformatics</source>             <volume>8</volume>             <fpage>385</fpage>          </element-citation></ref>
<ref id="pcbi.1000156-Barash1"><label>28</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Barash</surname><given-names>Y</given-names></name>
<name name-style="western"><surname>Bejerano</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Friedman</surname><given-names>N</given-names></name>
</person-group>             <year>2001</year>             <article-title>A simple hyper-geometric approach for discovering putative transcription factor binding sites.</article-title>             <source>Algorithms in Bioinformatics, Lecture Notes in Computer Science 2149</source>             <publisher-loc>Berlin</publisher-loc>             <publisher-name>Springer</publisher-name>             <fpage>278</fpage>             <lpage>293</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Smith1"><label>29</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Smith</surname><given-names>AD</given-names></name>
<name name-style="western"><surname>Sumazin</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Das</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Zhang</surname><given-names>MQ</given-names></name>
</person-group>             <year>2005</year>             <article-title>Mining ChIP-chip data for transcription factor and cofactor binding sites.</article-title>             <source>Bioinformatics</source>             <volume>21</volume>             <fpage>i403</fpage>             <lpage>i412</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Bae1"><label>30</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bae</surname><given-names>SH</given-names></name>
<name name-style="western"><surname>Tang</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Wu</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Xie</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Kim</surname><given-names>S</given-names></name>
</person-group>             <year>2007</year>             <article-title>dPattern: transcription factor binding site (TFBS) discovery in human genome using a discriminative pattern analysis.</article-title>             <source>Bioinformatics</source>             <volume>23</volume>             <fpage>2619</fpage>             <lpage>2621</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Harbison1"><label>31</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Harbison</surname><given-names>CT</given-names></name>
<name name-style="western"><surname>Gordon</surname><given-names>DB</given-names></name>
<name name-style="western"><surname>Lee</surname><given-names>TI</given-names></name>
<name name-style="western"><surname>Rinaldi</surname><given-names>NJ</given-names></name>
<name name-style="western"><surname>Macisaac</surname><given-names>KD</given-names></name>
<etal/></person-group>             <year>2004</year>             <article-title>Transcriptional regulatory code of a eukaryotic genome.</article-title>             <source>Nature</source>             <volume>431</volume>             <fpage>99</fpage>             <lpage>104</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Ludwig1"><label>32</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Ludwig</surname><given-names>MZ</given-names></name>
<name name-style="western"><surname>Patel</surname><given-names>NH</given-names></name>
<name name-style="western"><surname>Kreitman</surname><given-names>M</given-names></name>
</person-group>             <year>1998</year>             <article-title>Functional analysis of eve stripe 2 enhancer evolution in Drosophila: rules governing conservation and change.</article-title>             <source>Development</source>             <volume>125</volume>             <fpage>949</fpage>             <lpage>958</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Gallo1"><label>33</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Gallo</surname><given-names>SM</given-names></name>
<name name-style="western"><surname>Li</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Hu</surname><given-names>Z</given-names></name>
<name name-style="western"><surname>Halfon</surname><given-names>MS</given-names></name>
</person-group>             <year>2006</year>             <article-title>REDy: a regulatory element database for Drosophila.</article-title>             <source>Bioinformatics</source>             <volume>22</volume>             <fpage>381</fpage>             <lpage>383</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Gupta1"><label>34</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Gupta</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Liu</surname><given-names>JS</given-names></name>
</person-group>             <year>2005</year>             <article-title>De novo cis-regulatory module elicitation for eukaryotic genomes.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>102</volume>             <fpage>7079</fpage>             <lpage>7084</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Zhou1"><label>35</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Zhou</surname><given-names>Q</given-names></name>
<name name-style="western"><surname>Wong</surname><given-names>WH</given-names></name>
</person-group>             <year>2004</year>             <article-title>CisModule: de novo discovery of cis-regulatory modules by hierarchical mixture modeling.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>101</volume>             <fpage>12114</fpage>             <lpage>12119</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Berman3"><label>36</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Berman</surname><given-names>BP</given-names></name>
<name name-style="western"><surname>Nibu</surname><given-names>Y</given-names></name>
<name name-style="western"><surname>Pfeiffer</surname><given-names>BD</given-names></name>
<name name-style="western"><surname>Tomancak</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Celniker</surname><given-names>SE</given-names></name>
<etal/></person-group>             <year>2002</year>             <article-title>Exploiting transcription factor binding site clustering to identify cis-regulatory modules involved in pattern formation in the Drosophila genome.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>99</volume>             <fpage>757</fpage>             <lpage>762</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Berman4"><label>37</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Berman</surname><given-names>BP</given-names></name>
<name name-style="western"><surname>Pfeiffer</surname><given-names>BD</given-names></name>
<name name-style="western"><surname>Laverty</surname><given-names>TR</given-names></name>
<name name-style="western"><surname>Salzberg</surname><given-names>SL</given-names></name>
<name name-style="western"><surname>Rubin</surname><given-names>GM</given-names></name>
<etal/></person-group>             <year>2004</year>             <article-title>Computational identification of developmental enhancers: conservation and function of transcription factor binding-site clusters in Drosophila melanogaster and Drosophila pseudoobscura.</article-title>             <source>Genome Biol</source>             <volume>5</volume>             <fpage>R61</fpage>          </element-citation></ref>
<ref id="pcbi.1000156-Bergman1"><label>38</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bergman</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Carlson</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Celniker</surname><given-names>S</given-names></name>
</person-group>             <year>2005</year>             <article-title>Drosophila DNase I footprint database: a systematic genome annotation of transcription factor binding sites in the fruity, Drosophila melanogaster.</article-title>             <source>Bioinformatics</source>             <volume>21</volume>             <fpage>1747</fpage>             <lpage>1749</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Stein1"><label>39</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Stein</surname><given-names>LD</given-names></name>
<name name-style="western"><surname>Mungall</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Shu</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Caudy</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Mangone</surname><given-names>M</given-names></name>
<etal/></person-group>             <year>2002</year>             <article-title>The generic genome browser: a building block for a model organism system database.</article-title>             <source>Genome Res</source>             <volume>12</volume>             <fpage>1599</fpage>             <lpage>1610</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Matys1"><label>40</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Matys</surname><given-names>V</given-names></name>
<name name-style="western"><surname>Kel-Margoulis</surname><given-names>OV</given-names></name>
<name name-style="western"><surname>Fricke</surname><given-names>E</given-names></name>
<name name-style="western"><surname>Liebich</surname><given-names>I</given-names></name>
<name name-style="western"><surname>Land</surname><given-names>S</given-names></name>
<etal/></person-group>             <year>2006</year>             <article-title>TRANSFAC and its module TRANSCompel: transcriptional gene regulation in eukaryotes.</article-title>             <source>Nucleic Acids Res</source>             <volume>34</volume>             <fpage>108</fpage>             <lpage>110</lpage>          </element-citation></ref>
<ref id="pcbi.1000156-Crooks1"><label>41</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Crooks</surname><given-names>GE</given-names></name>
<name name-style="western"><surname>Hon</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Chandonia</surname><given-names>JM</given-names></name>
<name name-style="western"><surname>Brenner</surname><given-names>SE</given-names></name>
</person-group>             <year>2004</year>             <article-title>WebLogo: a sequence logo generator.</article-title>             <source>Genome Res</source>             <volume>14</volume>             <fpage>1188</fpage>             <lpage>1190</lpage>          </element-citation></ref>
</ref-list>

</back>
</article>