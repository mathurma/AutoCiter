<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN" "http://jats.nlm.nih.gov/publishing/1.1d3/JATS-journalpublishing1.dtd">
<article article-type="research-article" dtd-version="1.1d3" xml:lang="en" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-15-01975</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1004978</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied mathematics</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>People and places</subject><subj-group><subject>Demography</subject><subj-group><subject>Death rates</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Population biology</subject><subj-group><subject>Population metrics</subject><subj-group><subject>Death rates</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Optimization</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Research design</subject><subj-group><subject>Clinical research design</subject><subj-group><subject>Survival analysis</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Mathematical and statistical techniques</subject><subj-group><subject>Statistical methods</subject><subj-group><subject>Survival analysis</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Statistics (mathematics)</subject><subj-group><subject>Statistical methods</subject><subj-group><subject>Survival analysis</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Software engineering</subject><subj-group><subject>Software design</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Engineering and technology</subject><subj-group><subject>Software engineering</subject><subj-group><subject>Software design</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Engineering and technology</subject><subj-group><subject>Mechanical engineering</subject><subj-group><subject>Engines</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Mathematical and statistical techniques</subject><subj-group><subject>Mathematical models</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Computational biology</subject></subj-group></subj-group></article-categories>
<title-group>
<article-title>Computationally Efficient Implementation of a Novel Algorithm for the General Unified Threshold Model of Survival (GUTS)</article-title>
<alt-title alt-title-type="running-head">Fast Software Package for GUTS</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Albert</surname> <given-names>Carlo</given-names></name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<name name-style="western">
<surname>Vogel</surname> <given-names>Sören</given-names></name>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-9579-8793</contrib-id>
<name name-style="western">
<surname>Ashauer</surname> <given-names>Roman</given-names></name>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
</contrib>
</contrib-group>
<aff id="aff001">
<label>1</label>
<addr-line>Eawag: Swiss Federal Institute of Aquatic Science and Technology, Dübendorf, Switzerland</addr-line>
</aff>
<aff id="aff002">
<label>2</label>
<addr-line>Environment Department, University of York, Heslington, York, United Kingdom</addr-line>
</aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Poisot</surname> <given-names>Timothée</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1">
<addr-line>Universite de Montreal, CANADA</addr-line>
</aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<fn fn-type="con" id="contrib001">
<p>Conceived and designed the experiments: CA SV RA. Performed the experiments: CA SV RA. Analyzed the data: CA SV RA. Contributed reagents/materials/analysis tools: CA SV RA. Wrote the paper: CA SV RA. Developed the R package GUTS: CA SV.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">soeren.vogel@posteo.ch</email></corresp>
</author-notes>
<pub-date pub-type="collection">
<month>6</month>
<year>2016</year>
</pub-date>
<pub-date pub-type="epub">
<day>24</day>
<month>6</month>
<year>2016</year>
</pub-date>
<volume>12</volume>
<issue>6</issue>
<elocation-id>e1004978</elocation-id>
<history>
<date date-type="received">
<day>24</day>
<month>11</month>
<year>2015</year>
</date>
<date date-type="accepted">
<day>12</day>
<month>5</month>
<year>2016</year>
</date>
</history>
<permissions>
<copyright-year>2016</copyright-year>
<copyright-holder>Albert et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1004978"/>
<abstract>
<p>The General Unified Threshold model of Survival (GUTS) provides a consistent mathematical framework for survival analysis. However, the calibration of GUTS models is computationally challenging. We present a novel algorithm and its fast implementation in our R package, GUTS, that help to overcome these challenges. We show a step-by-step application example consisting of model calibration and uncertainty estimation as well as making probabilistic predictions and validating the model with new data. Using self-defined wrapper functions, we show how to produce informative text printouts and plots without effort, for the inexperienced as well as the advanced user. The complete ready-to-run script is available as supplemental material. We expect that our software facilitates novel re-analysis of existing survival data as well as asking new research questions in a wide range of sciences. In particular the ability to quickly quantify stressor thresholds in conjunction with dynamic compensating processes, and their uncertainty, is an improvement that complements current survival analysis methods.</p>
</abstract>
<funding-group>
<funding-statement>The authors received no specific funding for this work.</funding-statement>
</funding-group>
<counts>
<fig-count count="5"/>
<table-count count="0"/>
<page-count count="19"/>
</counts>
<custom-meta-group>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>All relevant data are within the paper, its Supporting Information files, and the software R package.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<p>This is a <italic>PLOS Computational Biology</italic> Software paper.</p>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>Survival analysis is an important tool in a wide range of scientific fields, including toxicology [<xref ref-type="bibr" rid="pcbi.1004978.ref001">1</xref>–<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>], epidemiology [<xref ref-type="bibr" rid="pcbi.1004978.ref005">5</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref006">6</xref>], pharmacology [<xref ref-type="bibr" rid="pcbi.1004978.ref007">7</xref>], medical research [<xref ref-type="bibr" rid="pcbi.1004978.ref006">6</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref008">8</xref>–<xref ref-type="bibr" rid="pcbi.1004978.ref010">10</xref>], and biology [<xref ref-type="bibr" rid="pcbi.1004978.ref011">11</xref>–<xref ref-type="bibr" rid="pcbi.1004978.ref013">13</xref>]. In the engineering world survival analysis is known as reliability theory [<xref ref-type="bibr" rid="pcbi.1004978.ref014">14</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref015">15</xref>] whereas in the social sciences it is termed event history analysis [<xref ref-type="bibr" rid="pcbi.1004978.ref016">16</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref017">17</xref>].</p>
<p>Common to these applications is the interest in the survival of individuals in response to a stressor. The assumptions underlying survival models have been reviewed recently and the General Unified Threshold model of Survival (GUTS) has been proposed as a consistent mathematical framework [<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>]. The GUTS framework has been developed primarily with environmental toxicology questions in mind and consequently it allows to model different dose metrics [<xref ref-type="bibr" rid="pcbi.1004978.ref018">18</xref>] and is a dynamic framework where toxicokinetic processes modify the dose metric and toxicodynamic processes result in the organisms’ response [<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref019">19</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref020">20</xref>]. Typically, GUTS is used to model survival under chemical stress, for example under time-varying exposure [<xref ref-type="bibr" rid="pcbi.1004978.ref021">21</xref>] or to compare different organisms [<xref ref-type="bibr" rid="pcbi.1004978.ref022">22</xref>] and life-stages [<xref ref-type="bibr" rid="pcbi.1004978.ref023">23</xref>], however, stressors other than chemicals (e. g. starvation [<xref ref-type="bibr" rid="pcbi.1004978.ref024">24</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref025">25</xref>]) can also be modelled. Often the parameters of GUTS are interpreted as reflecting the mechanisms affecting survival [<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref026">26</xref>].</p>
<p>One important consideration when modelling survival is the nature of death. Death can be viewed as deterministic on the level of the individual but stochastic on the level of the population: an individual dies immediately when its stressor tolerance threshold is exceeded, but all individuals of the population have different thresholds. This special case of GUTS is termed individual tolerance (GUTS-IT). In the other extreme case, death is stochastic on the level of the individual only: all individuals are supposed to have the same stressor tolerance threshold, and once the stressor exceeds this threshold all individuals respond with the same increased probability to die (GUTS-SD) [<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>]. The GUTS proper model provides a unification of both assumptions, however, it requires the calibration of four toxicodynamic parameters: the dominant (recovery) rate constant, the killing rate and two parameters describing the threshold distribution. As it can be difficult to estimate the four toxicodynamic parameters from biological data [<xref ref-type="bibr" rid="pcbi.1004978.ref022">22</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref027">27</xref>], GUTS proper is often simplified to its two special cases, GUTS-IT and GUTS-SD [<xref ref-type="bibr" rid="pcbi.1004978.ref018">18</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref021">21</xref>]. The special case models require the estimation of fewer toxicodynamic parameters and are therefore easier to apply, although the necessity to always use two models is rather unwieldy.</p>
<p>Furthermore, the evaluation of the likelihood function, for GUTS proper, requires two nested numerical integrations. As Bayesian inference requires many thousand likelihood evaluations, we have designed a very efficient algorithm for this evaluation.</p>
<p>Thus to enable the wider application of GUTS we present the first software package that allows this computationally non-trivial uncertainty quantification to be completed within a matter of minutes. The software is computationally efficient because we developed a novel algorithm, for the likelihood evaluation, and coded the underlying engine in C++. Further, our R package can be used for all three flavours of GUTS: GUTS proper, GUTS-SD and GUTS-IT.</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Design and Implementation</title>
<sec id="sec003">
<title>The Algorithm</title>
<p>Before we present the algorithm, we give a brief review of the GUTS model (see [<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>], for more explanation). The time-dependent stressor, <italic>C</italic>(<italic>t</italic>), is assumed to cause a time-dependent damage, <italic>D</italic>(<italic>t</italic>), which is described by the linear differential equation
<disp-formula id="pcbi.1004978.e001"><alternatives><graphic id="pcbi.1004978.e001g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e001" xlink:type="simple"/><mml:math display="block" id="M1"><mml:mrow><mml:mover accent="true"><mml:mi>D</mml:mi> <mml:mo>˙</mml:mo></mml:mover> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>e</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>C</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>-</mml:mo> <mml:mi>D</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(1)</label></disp-formula>
Parameter <italic>k</italic><sub><italic>e</italic></sub> quantifies the slowest process that leads to the recovery of the organism, and we will henceforth refer to it as the <italic>dominant rate constant</italic>. The damage <italic>D</italic>(<italic>t</italic>) is the same, for all individuals. However, the individuals are assumed to have different thresholds, beyond which the damage increases their probability to die. Thus, the model combines two sources of stochasticity, at the individual and at the population level. At the individual level, death is considered a stochastic event, whose probability increases linearly with the damage, once it exceeds a certain threshold. At the population level, this threshold is assumed to vary stochastically over the whole population.</p>
<p>The <italic>hazard rate</italic>, <italic>h</italic><sub><italic>z</italic></sub>(<italic>t</italic>), of an individual with threshold <italic>z</italic> is determined by the formula
<disp-formula id="pcbi.1004978.e002"><alternatives><graphic id="pcbi.1004978.e002g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e002" xlink:type="simple"/><mml:math display="block" id="M2"><mml:mrow><mml:msub><mml:mi>h</mml:mi> <mml:mi>z</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mtext>max</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>D</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>-</mml:mo> <mml:mi>z</mml:mi> <mml:mo>,</mml:mo> <mml:mn>0</mml:mn> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>+</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives> <label>(2)</label></disp-formula>
where <italic>k</italic><sub><italic>k</italic></sub> is called <italic>killing rate</italic> and <italic>h</italic><sub><italic>b</italic></sub> is the <italic>background mortality rate</italic>. The <italic>hazard rate</italic>, in turn, determines the individual’s probability to survive until time <italic>t</italic>, <italic>S</italic><sub><italic>z</italic></sub>(<italic>t</italic>), via the linear differential equation
<disp-formula id="pcbi.1004978.e003"><alternatives><graphic id="pcbi.1004978.e003g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e003" xlink:type="simple"/><mml:math display="block" id="M3"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi> <mml:mo>˙</mml:mo></mml:mover> <mml:mi>z</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:mo>-</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>z</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:msub><mml:mi>S</mml:mi> <mml:mi>z</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(3)</label></disp-formula>
Finally, each individual is assumed to draw its <italic>z</italic> from a distribution, <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>), on the positive real axis. Hence, the parameter vector of the model reads as <bold><italic>θ</italic></bold> = (<italic>h</italic><sub><italic>b</italic></sub>, <italic>k</italic><sub><italic>e</italic></sub>, <italic>k</italic><sub><italic>k</italic></sub>, …), where the additional arguments are supposed to determine the distribution <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>).</p>
<p>Typically, <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>) is a member of a two-parameter family of distributions, such as the lognormal family. In these cases, GUTS has four toxicodynamic parameters, <italic>k</italic><sub><italic>e</italic></sub>, <italic>k</italic><sub><italic>k</italic></sub>, as well as the mean and the standard deviation determining the lognormal distribution. These are GUTS proper models. GUTS-SD and GUTS-IT are limiting cases of GUTS proper. In the first case, the standard deviation is zero, which means that all individuals have the same threshold given by the mean of the distribution. In the latter case, <italic>k</italic><sub><italic>k</italic></sub> is infinite, which means that individuals die immediately once their individual threshold is exceeded. Note that <xref ref-type="disp-formula" rid="pcbi.1004978.e002">eq (2)</xref> may be viewed as a special case of Aalens additive model [<xref ref-type="bibr" rid="pcbi.1004978.ref028">28</xref>].</p>
<p>Combining eqs <xref ref-type="disp-formula" rid="pcbi.1004978.e002">(2)</xref> and <xref ref-type="disp-formula" rid="pcbi.1004978.e003">(3)</xref>, we find that the probability, for an arbitrarily chosen member of the population, to survive until time <italic>t</italic> is given by the formula
<disp-formula id="pcbi.1004978.e004"><alternatives><graphic id="pcbi.1004978.e004g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e004" xlink:type="simple"/><mml:math display="block" id="M4"><mml:mrow><mml:msub><mml:mi>S</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>t</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:mo>∫</mml:mo> <mml:mtext>exp</mml:mtext> <mml:mfenced close=")" open="(" separators=""><mml:mo>-</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:msubsup><mml:mo>∫</mml:mo> <mml:mn>0</mml:mn> <mml:mi>t</mml:mi></mml:msubsup> <mml:mtext>max</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>D</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>τ</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>-</mml:mo> <mml:mi>z</mml:mi> <mml:mo>,</mml:mo> <mml:mn>0</mml:mn> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>d</mml:mi> <mml:mi>τ</mml:mi> <mml:mo>-</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:mi>t</mml:mi></mml:mfenced> <mml:msub><mml:mi>f</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>z</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>d</mml:mi> <mml:mi>z</mml:mi> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(4)</label></disp-formula></p>
<p>Let <bold>y</bold> = (<italic>y</italic><sub>0</sub>, <italic>y</italic><sub>1</sub>, …, <italic>y</italic><sub><italic>n</italic></sub>) denote a time series of survivors, counted at times (<italic>t</italic><sub>0</sub> = 0, <italic>t</italic><sub>1</sub>, …, <italic>t</italic><sub><italic>n</italic></sub>), and set <italic>y</italic><sub><italic>n</italic>+1</sub> = 0. Then, the logarithm of the likelihood, <italic>f</italic>(<bold>y</bold> <bold>|</bold> <bold><italic>θ</italic></bold>), of the model output <bold>y</bold> given the parameters <bold><italic>θ</italic></bold> is, up to <bold><italic>θ</italic></bold>-independent terms, given by the formula
<disp-formula id="pcbi.1004978.e005"><alternatives><graphic id="pcbi.1004978.e005g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e005" xlink:type="simple"/><mml:math display="block" id="M5"><mml:mrow><mml:mtext>ln</mml:mtext> <mml:mi>f</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi mathvariant="bold">y</mml:mi> <mml:mo>|</mml:mo> <mml:mi mathvariant="bold-italic">θ</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:munderover><mml:mo>∑</mml:mo> <mml:mrow><mml:mi>i</mml:mi> <mml:mo>=</mml:mo> <mml:mn>1</mml:mn></mml:mrow> <mml:mrow><mml:mi>n</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:munderover> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>y</mml:mi> <mml:mrow><mml:mi>i</mml:mi> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>-</mml:mo> <mml:msub><mml:mi>y</mml:mi> <mml:mi>i</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mtext>ln</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>S</mml:mi> <mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi> <mml:mo>,</mml:mo> <mml:mi>i</mml:mi> <mml:mo>-</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>-</mml:mo> <mml:msub><mml:mi>S</mml:mi> <mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi> <mml:mo>,</mml:mo> <mml:mi>i</mml:mi></mml:mrow></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives> <label>(5)</label></disp-formula>
where we have set <italic>S</italic><sub><bold><italic>θ</italic></bold>, <italic>i</italic></sub> = <italic>S</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>t</italic><sub><italic>i</italic></sub>) and <italic>S</italic><sub><bold><italic>θ</italic></bold>, <italic>n</italic>+1</sub> = 0. The index <italic>n</italic>+1 refers to the time-point at infinity, where the survival probability is zero.</p>
<p>The calculation of the log-likelihood requires two nested numerical integrations (see <xref ref-type="disp-formula" rid="pcbi.1004978.e004">eq (4)</xref>), and, therefore, requires introducing two large numbers, <italic>N</italic> and <italic>M</italic>. The former counts the number of sample or discretisation points on the threshold axis and the latter counts the number of discretisation points on the time axis. Our algorithm is of the order <inline-formula id="pcbi.1004978.e006"><alternatives><graphic id="pcbi.1004978.e006g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e006" xlink:type="simple"/><mml:math display="inline" id="M6"><mml:mrow><mml:mi mathvariant="script">O</mml:mi> <mml:mo>(</mml:mo> <mml:mi>N</mml:mi> <mml:mo>)</mml:mo> <mml:mo>+</mml:mo> <mml:mi mathvariant="script">O</mml:mi> <mml:mo>(</mml:mo> <mml:mi>M</mml:mi> <mml:mo>)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>. It is based on the approximation
<disp-formula id="pcbi.1004978.e007"><alternatives><graphic id="pcbi.1004978.e007g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e007" xlink:type="simple"/><mml:math display="block" id="M7"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>S</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo> <mml:mtext> </mml:mtext> <mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo> <mml:mrow><mml:mtext>exp</mml:mtext></mml:mrow></mml:mrow></mml:mstyle> <mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mstyle displaystyle="true"><mml:mrow><mml:msubsup><mml:mo>∫</mml:mo> <mml:mn>0</mml:mn> <mml:mrow><mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msubsup> <mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:mrow></mml:mstyle> <mml:mo stretchy="false">(</mml:mo> <mml:mn>0</mml:mn> <mml:mo>,</mml:mo> <mml:mi>D</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:mi>τ</mml:mi> <mml:mo stretchy="false">)</mml:mo> <mml:mo>−</mml:mo> <mml:mi>z</mml:mi> <mml:mo stretchy="false">)</mml:mo> <mml:mi>d</mml:mi> <mml:mi>τ</mml:mi> <mml:mo>−</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow> <mml:mo>]</mml:mo></mml:mrow> <mml:msub><mml:mi>f</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mo stretchy="false">(</mml:mo> <mml:mi>z</mml:mi> <mml:mo stretchy="false">)</mml:mo> <mml:mi>d</mml:mi> <mml:mi>z</mml:mi></mml:mrow></mml:mtd></mml:mtr> <mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow/></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>≈</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mi>N</mml:mi></mml:mfrac> <mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo> <mml:mrow><mml:mi>j</mml:mi> <mml:mo>=</mml:mo> <mml:mn>1</mml:mn></mml:mrow> <mml:mi>N</mml:mi></mml:munderover> <mml:mrow><mml:mtext>exp</mml:mtext></mml:mrow></mml:mstyle> <mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mo>Δ</mml:mo> <mml:mi>τ</mml:mi> <mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo> <mml:mrow><mml:msub><mml:mi>D</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>&gt;</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:munder> <mml:mrow><mml:mo stretchy="false">(</mml:mo> <mml:msub><mml:mi>D</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle> <mml:mo>−</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow> <mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr> <mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow/></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mi>N</mml:mi></mml:mfrac> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup> <mml:mo stretchy="false">(</mml:mo> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mo>Δ</mml:mo> <mml:mi>τ</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:msub><mml:mi>e</mml:mi> <mml:mi>N</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>N</mml:mi></mml:msub> <mml:msub><mml:mi>f</mml:mi> <mml:mi>N</mml:mi></mml:msub> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup> <mml:mo>+</mml:mo> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mo>Δ</mml:mo> <mml:mi>τ</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:msub><mml:mi>e</mml:mi> <mml:mi>N</mml:mi></mml:msub> <mml:mo>+</mml:mo> <mml:msub><mml:mi>e</mml:mi> <mml:mrow><mml:mi>N</mml:mi> <mml:mo>−</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mrow><mml:mi>N</mml:mi> <mml:mo>−</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo stretchy="false">(</mml:mo> <mml:msub><mml:mi>f</mml:mi> <mml:mi>N</mml:mi></mml:msub> <mml:mo>+</mml:mo> <mml:msub><mml:mi>f</mml:mi> <mml:mrow><mml:mi>N</mml:mi> <mml:mo>−</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo stretchy="false">)</mml:mo> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup> <mml:mo>+</mml:mo> <mml:mo>…</mml:mo></mml:mrow></mml:mtd></mml:mtr> <mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow/></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>Δ</mml:mo> <mml:mi>τ</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:msub><mml:mi>e</mml:mi> <mml:mi>N</mml:mi></mml:msub> <mml:mo>+</mml:mo> <mml:mo>…</mml:mo> <mml:mo>+</mml:mo> <mml:msub><mml:mi>e</mml:mi> <mml:mn>1</mml:mn></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mn>1</mml:mn></mml:msub> <mml:mo stretchy="false">(</mml:mo> <mml:msub><mml:mi>f</mml:mi> <mml:mi>N</mml:mi></mml:msub> <mml:mo>+</mml:mo> <mml:mo>…</mml:mo> <mml:mo>+</mml:mo> <mml:msub><mml:mi>f</mml:mi> <mml:mn>1</mml:mn></mml:msub> <mml:mo stretchy="false">)</mml:mo> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup> <mml:mo stretchy="false">)</mml:mo> <mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(6)</label></disp-formula>
for an ordered sample <italic>z</italic><sub>1</sub> &lt; … &lt; <italic>z</italic><sub><italic>N</italic></sub> from <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>), and with <italic>D</italic><sub><italic>l</italic></sub> = <italic>D</italic>(<italic>τ</italic><sub><italic>l</italic></sub>) on a grid <italic>τ</italic><sub>0</sub> &lt; … &lt; <italic>τ</italic><sub><italic>M</italic>−1</sub>. The inner sum in the second line is restricted to all <italic>D</italic><sub><italic>l</italic></sub>, for which <italic>τ</italic><sub><italic>l</italic></sub> &lt; <italic>t</italic><sub><italic>i</italic></sub>, and we have set Δ<italic>τ</italic> = <italic>t</italic><sub><italic>n</italic></sub>/<italic>M</italic>. Furthermore,
<disp-formula id="pcbi.1004978.e008"><alternatives><graphic id="pcbi.1004978.e008g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e008" xlink:type="simple"/><mml:math display="block" id="M8"><mml:mrow><mml:msub><mml:mi>e</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>=</mml:mo> <mml:munder><mml:mo>∑</mml:mo> <mml:mrow><mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>&lt;</mml:mo> <mml:msub><mml:mi>D</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>&lt;</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mrow><mml:mi>j</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:munder> <mml:msub><mml:mi>D</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives> <label>(7)</label></disp-formula>
and
<disp-formula id="pcbi.1004978.e009"><alternatives><graphic id="pcbi.1004978.e009g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e009" xlink:type="simple"/><mml:math display="block" id="M9"><mml:mrow><mml:msub><mml:mi>f</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>=</mml:mo> <mml:mo>♯</mml:mo> <mml:mrow><mml:mo>{</mml:mo> <mml:msub><mml:mi>D</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>|</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>&lt;</mml:mo> <mml:msub><mml:mi>D</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>&lt;</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mrow><mml:mi>j</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>}</mml:mo></mml:mrow> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives> <label>(8)</label></disp-formula>
where ♯ indicates counting the number of elements in the set, for 1 ≤ <italic>j</italic> ≤ <italic>N</italic> (set <italic>z</italic><sub><italic>N</italic>+1</sub> = ∞).</p>
<p>The algorithm for the calculation of <xref ref-type="disp-formula" rid="pcbi.1004978.e005">eq (5)</xref> reads as follows:</p>
<list list-type="simple">
<list-item>
<p><bold>Step 1:</bold> Draw <italic>N</italic> thresholds from <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>) and order them <italic>z</italic><sub>1</sub> &lt; ⋯ &lt; <italic>z</italic><sub><italic>N</italic></sub>.</p>
</list-item>
<list-item>
<p><bold>Step 2:</bold> Refine the grid <italic>t</italic><sub>0</sub> &lt; … &lt; <italic>t</italic><sub><italic>n</italic></sub> to a fine grid <italic>τ</italic><sub>0</sub> &lt; ⋯ &lt; <italic>τ</italic><sub><italic>M</italic>−1</sub>.</p>
</list-item>
<list-item>
<p><bold>Step 3:</bold> Set <italic>i</italic> = 0.</p>
</list-item>
<list-item>
<p><bold>Step 4:</bold> Solve <xref ref-type="disp-formula" rid="pcbi.1004978.e001">eq (1)</xref>, for <italic>t</italic><sub><italic>i</italic></sub> ≤ <italic>τ</italic><sub><italic>l</italic></sub> ≤ <italic>t</italic><sub><italic>i</italic>+1</sub>, using equation
<disp-formula id="pcbi.1004978.e010"><alternatives><graphic id="pcbi.1004978.e010g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e010" xlink:type="simple"/><mml:math display="block" id="M10"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>D</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>=</mml:mo> <mml:mi>D</mml:mi> <mml:mo>(</mml:mo> <mml:mrow><mml:msub><mml:mi>τ</mml:mi> <mml:mi>l</mml:mi></mml:msub></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo> <mml:mi>D</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:msub><mml:mi>s</mml:mi> <mml:mi>k</mml:mi></mml:msub></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>e</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:msub><mml:mi>τ</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>s</mml:mi> <mml:mi>k</mml:mi></mml:msub></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr> <mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow/></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo> <mml:msub><mml:mi>C</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:mn>1</mml:mn> <mml:mo>−</mml:mo> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>e</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:msub><mml:mi>τ</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>s</mml:mi> <mml:mi>k</mml:mi></mml:msub></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr> <mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow/></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo> <mml:mfrac><mml:mrow><mml:msub><mml:mi>C</mml:mi> <mml:mrow><mml:mi>k</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>C</mml:mi> <mml:mi>k</mml:mi></mml:msub></mml:mrow> <mml:mrow><mml:msub><mml:mi>s</mml:mi> <mml:mrow><mml:mi>k</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>s</mml:mi> <mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mfrac> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:msub><mml:mi>τ</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>s</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msubsup><mml:mi>k</mml:mi> <mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msubsup> <mml:mo>+</mml:mo> <mml:msubsup><mml:mi>k</mml:mi> <mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msubsup> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>e</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:msub><mml:mi>τ</mml:mi> <mml:mi>l</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>s</mml:mi> <mml:mi>k</mml:mi></mml:msub></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(9)</label></disp-formula>
for <italic>s</italic><sub><italic>k</italic></sub> ≤ <italic>τ</italic><sub><italic>l</italic></sub> ≤ <italic>s</italic><sub><italic>k</italic>+1</sub>. Here, we apply a linear interpolation, for <italic>C</italic>(<italic>t</italic>), between concentrations <italic>C</italic><sub><italic>k</italic></sub>, measured at time points <italic>s</italic><sub><italic>k</italic></sub>.</p>
</list-item>
<list-item>
<p><bold>Step 5:</bold> Update eqs <xref ref-type="disp-formula" rid="pcbi.1004978.e008">(7)</xref> and <xref ref-type="disp-formula" rid="pcbi.1004978.e009">(8)</xref>, for 1 ≤ <italic>j</italic> ≤ <italic>N</italic>. (This can be done in time <inline-formula id="pcbi.1004978.e011"><alternatives><graphic id="pcbi.1004978.e011g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e011" xlink:type="simple"/><mml:math display="inline" id="M11"><mml:mrow><mml:mi mathvariant="script">O</mml:mi> <mml:mo>(</mml:mo> <mml:mn>1</mml:mn> <mml:mo>)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, for each <italic>D</italic><sub><italic>l</italic></sub>).</p>
</list-item>
<list-item>
<p><bold>Step 6:</bold> Calculate <italic>S</italic><sub><italic>i</italic></sub> using the recursion:
<disp-formula id="pcbi.1004978.e012"><alternatives><graphic id="pcbi.1004978.e012g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e012" xlink:type="simple"/><mml:math display="block" id="M12"><mml:msub><mml:mi>F</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mspace width="1pt"/> <mml:mo>=</mml:mo> <mml:mspace width="1pt"/> <mml:msub><mml:mi>F</mml:mi> <mml:mrow><mml:mi>j</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>+</mml:mo> <mml:msub><mml:mi>f</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>,</mml:mo></mml:math></alternatives> <label>(10)</label></disp-formula> <disp-formula id="pcbi.1004978.e013"><alternatives><graphic id="pcbi.1004978.e013g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e013" xlink:type="simple"/><mml:math display="block" id="M13"><mml:msub><mml:mi>E</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mspace width="1pt"/> <mml:mo>=</mml:mo> <mml:mspace width="1pt"/> <mml:msub><mml:mi>E</mml:mi> <mml:mrow><mml:mi>j</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>+</mml:mo> <mml:msub><mml:mi>e</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>,</mml:mo></mml:math></alternatives> <label>(11)</label></disp-formula> <disp-formula id="pcbi.1004978.e014"><alternatives><graphic id="pcbi.1004978.e014g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e014" xlink:type="simple"/><mml:math display="block" id="M14"><mml:msub><mml:mi>S</mml:mi> <mml:mrow><mml:mi>i</mml:mi> <mml:mo>,</mml:mo> <mml:mi>j</mml:mi></mml:mrow></mml:msub> <mml:mspace width="1pt"/> <mml:mo>=</mml:mo> <mml:mspace width="1pt"/> <mml:msub><mml:mi>S</mml:mi> <mml:mrow><mml:mi>i</mml:mi> <mml:mo>,</mml:mo> <mml:mi>j</mml:mi> <mml:mo>+</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mo>+</mml:mo> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mo>Δ</mml:mo> <mml:mi>τ</mml:mi> <mml:mo stretchy="false">(</mml:mo> <mml:msub><mml:mi>E</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>−</mml:mo> <mml:msub><mml:mi>F</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup> <mml:mo>,</mml:mo></mml:math></alternatives> <label>(12)</label></disp-formula>
for <italic>j</italic> = <italic>N</italic> − 1, …, 1 and with <italic>S</italic><sub><italic>i</italic>, <italic>N</italic></sub> = <italic>e</italic><sup>−<italic>k</italic><sub><italic>k</italic></sub> Δ<italic>τ</italic>(<italic>E</italic><sub><italic>N</italic></sub> − <italic>F</italic><sub><italic>N</italic></sub> <italic>z</italic><sub><italic>N</italic></sub>)</sup> and <italic>F</italic><sub><italic>N</italic></sub> = <italic>f</italic><sub><italic>N</italic></sub>, <italic>E</italic><sub><italic>N</italic></sub> = <italic>e</italic><sub><italic>N</italic></sub>. Then,
<disp-formula id="pcbi.1004978.e015"><alternatives><graphic id="pcbi.1004978.e015g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e015" xlink:type="simple"/><mml:math display="block" id="M15"><mml:mrow><mml:msub><mml:mi>S</mml:mi> <mml:mi>i</mml:mi></mml:msub> <mml:mo>=</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mi>N</mml:mi></mml:mfrac> <mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>-</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup> <mml:msub><mml:mi>S</mml:mi> <mml:mrow><mml:mi>i</mml:mi> <mml:mo>,</mml:mo> <mml:mn>1</mml:mn></mml:mrow></mml:msub> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(13)</label></disp-formula></p>
</list-item>
<list-item>
<p><bold>Step 7:</bold> Increment <italic>i</italic> and go to step <bold>4</bold>.</p>
</list-item>
<list-item>
<p><bold>Step 8:</bold> Calculate the log-likelihood function according to <xref ref-type="disp-formula" rid="pcbi.1004978.e005">eq (5)</xref>.</p>
</list-item>
</list>
<p>Depending on the threshold distribution, the above algorithm can be made more efficient through importance sampling. That is, instead of sampling from <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>) we sample from distribution <italic>g</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>) and correct with weights:
<disp-formula id="pcbi.1004978.e016"><alternatives><graphic id="pcbi.1004978.e016g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e016" xlink:type="simple"/><mml:math display="block" id="M16"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>S</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo> <mml:msup><mml:mstyle displaystyle="true"><mml:mo>∫</mml:mo></mml:mstyle> <mml:mtext>​</mml:mtext></mml:msup> <mml:mtext>exp</mml:mtext> <mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:msubsup><mml:mstyle displaystyle="true"><mml:mo>∫</mml:mo></mml:mstyle> <mml:mn>0</mml:mn> <mml:mrow><mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msubsup> <mml:mtext>max</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:mn>0</mml:mn> <mml:mo>,</mml:mo> <mml:mi>D</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>τ</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>−</mml:mo> <mml:mi>z</mml:mi></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>d</mml:mi> <mml:mi>τ</mml:mi> <mml:mo>−</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow> <mml:mo>]</mml:mo></mml:mrow> <mml:msub><mml:mi>f</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>z</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>d</mml:mi> <mml:mi>z</mml:mi></mml:mrow></mml:mtd></mml:mtr> <mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow/></mml:mtd> <mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo> <mml:msup><mml:mstyle displaystyle="true"><mml:mo>∫</mml:mo></mml:mstyle> <mml:mtext>​</mml:mtext></mml:msup> <mml:mtext>exp</mml:mtext> <mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:mo>−</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:msubsup><mml:mstyle displaystyle="true"><mml:mo>∫</mml:mo></mml:mstyle> <mml:mn>0</mml:mn> <mml:mrow><mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msubsup> <mml:mtext>max</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:mn>0</mml:mn> <mml:mo>,</mml:mo> <mml:mi>D</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>τ</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>−</mml:mo> <mml:mi>z</mml:mi></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>d</mml:mi> <mml:mi>τ</mml:mi> <mml:mo>−</mml:mo> <mml:msub><mml:mi>h</mml:mi> <mml:mi>b</mml:mi></mml:msub> <mml:msub><mml:mi>t</mml:mi> <mml:mi>i</mml:mi></mml:msub> <mml:mo>+</mml:mo> <mml:mtext>ln</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:mrow><mml:msub><mml:mi>f</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>z</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>/</mml:mo> <mml:msub><mml:mi>g</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>z</mml:mi> <mml:mo>)</mml:mo></mml:mrow></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mrow> <mml:mo>]</mml:mo></mml:mrow> <mml:msub><mml:mi>g</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>z</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mi>d</mml:mi> <mml:mi>z</mml:mi> <mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(14)</label></disp-formula>
The associated algorithm is then the same as above, except that we generate an ordered sample from <italic>g</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>) and replace expression
<disp-formula id="pcbi.1004978.e017"><alternatives><graphic id="pcbi.1004978.e017g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e017" xlink:type="simple"/><mml:math display="block" id="M17"><mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>-</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mo>Δ</mml:mo> <mml:mi>τ</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>E</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>-</mml:mo> <mml:msub><mml:mi>F</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:math></alternatives></disp-formula>
by
<disp-formula id="pcbi.1004978.e018"><alternatives><graphic id="pcbi.1004978.e018g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e018" xlink:type="simple"/><mml:math display="block" id="M18"><mml:mrow><mml:msup><mml:mi>e</mml:mi> <mml:mrow><mml:mo>-</mml:mo> <mml:msub><mml:mi>k</mml:mi> <mml:mi>k</mml:mi></mml:msub> <mml:mo>Δ</mml:mo> <mml:mi>τ</mml:mi> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>E</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>-</mml:mo> <mml:msub><mml:mi>F</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>+</mml:mo> <mml:mtext>ln</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>f</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>/</mml:mo> <mml:msub><mml:mi>g</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
Furthermore, the vector of survival probabilities, <italic>S</italic><sub><italic>i</italic></sub>, has to be normalised through element-wise division by the first unnormalised element of the vector.</p>
<p>If <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>) is the lognormal distribution, we recommend using a log-uniform distribution covering the highest probability region of <italic>f</italic><sub><bold><italic>θ</italic></bold></sub>(<italic>z</italic>), and replacing the sample by a grid. More precisely, we set <inline-formula id="pcbi.1004978.e019"><alternatives><graphic id="pcbi.1004978.e019g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e019" xlink:type="simple"/><mml:math display="inline" id="M19"><mml:mrow><mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>=</mml:mo> <mml:msup><mml:mi>e</mml:mi> <mml:msub><mml:mi>x</mml:mi> <mml:mi>j</mml:mi></mml:msub></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, where {<italic>x</italic><sub><italic>j</italic></sub>} describes an equidistant grid on the interval [<italic>μ</italic> − 4<italic>σ</italic>, <italic>μ</italic>+4<italic>σ</italic>], where
<disp-formula id="pcbi.1004978.e020"><alternatives><graphic id="pcbi.1004978.e020g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e020" xlink:type="simple"/><mml:math display="block" id="M20"><mml:mrow><mml:mi>μ</mml:mi> <mml:mo>=</mml:mo> <mml:mtext>ln</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:mi>m</mml:mi> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>-</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mn>2</mml:mn></mml:mfrac> <mml:msup><mml:mi>σ</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo> <mml:mspace width="1.em"/><mml:msup><mml:mi>σ</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:mo>=</mml:mo> <mml:mtext>ln</mml:mtext> <mml:mfenced close=")" open="(" separators=""><mml:mn>1</mml:mn> <mml:mo>+</mml:mo> <mml:mfrac><mml:msup><mml:mi>s</mml:mi> <mml:mn>2</mml:mn></mml:msup> <mml:msup><mml:mi>m</mml:mi> <mml:mn>2</mml:mn></mml:msup></mml:mfrac></mml:mfenced> <mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives> <label>(15)</label></disp-formula>
with <italic>m</italic> and <italic>s</italic><sup>2</sup>, respectively, the mean and variance of the lognormal distribution. The weights become, up to an irrelevant <bold><italic>θ</italic></bold>-independent term,
<disp-formula id="pcbi.1004978.e021"><alternatives><graphic id="pcbi.1004978.e021g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1004978.e021" xlink:type="simple"/><mml:math display="block" id="M21"><mml:mrow><mml:mtext>ln</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>f</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>/</mml:mo> <mml:msub><mml:mi>g</mml:mi> <mml:mi mathvariant="bold-italic">θ</mml:mi></mml:msub> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>=</mml:mo> <mml:mo>-</mml:mo> <mml:mfrac><mml:mn>1</mml:mn> <mml:mn>2</mml:mn></mml:mfrac> <mml:mfrac><mml:msup><mml:mrow><mml:mo>(</mml:mo> <mml:mi>μ</mml:mi> <mml:mo>-</mml:mo> <mml:mtext>ln</mml:mtext> <mml:mrow><mml:mo>(</mml:mo> <mml:msub><mml:mi>z</mml:mi> <mml:mi>j</mml:mi></mml:msub> <mml:mo>)</mml:mo></mml:mrow> <mml:mo>)</mml:mo></mml:mrow> <mml:mn>2</mml:mn></mml:msup> <mml:msup><mml:mi>σ</mml:mi> <mml:mn>2</mml:mn></mml:msup></mml:mfrac> <mml:mspace width="0.166667em"/><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives> <label>(16)</label></disp-formula></p>
</sec>
<sec id="sec004">
<title>Implementation in the R Package GUTS</title>
<p>The GUTS algorithm is implemented in the R package GUTS [<xref ref-type="bibr" rid="pcbi.1004978.ref029">29</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref030">30</xref>], current version 1.0.0). R [<xref ref-type="bibr" rid="pcbi.1004978.ref031">31</xref>] is an open source software environment for statistical computing that provides a wide range of procedures for data manipulation, data analysis, simulation, modelling and producing graphics. R packages are extensions contributed by members of the R community to add functionality to the R environment.</p>
<p>The R package GUTS is such an extension, and it contains a setup function and functions to calculate the survival probabilities and the associated logarithm of the likelihood, respectively. In order to achieve high speed, the actual engine for the calculation of the survival probabilities and the associated logarithm of the likelihood is written in C++ and exposed to R through the deployment of Rcpp [<xref ref-type="bibr" rid="pcbi.1004978.ref032">32</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref033">33</xref>]. The engine cannot be called directly but through the use of two wrapper functions. The function for the calculation of the log-likelihood is typically used in a parameter estimation routine, while the function for the survival probabilities can be used to make predictions. Both functions update the GUTS object directly, but also return the logarithm of the likelihood or the vector of survival probabilities, respectively. The help file of the package contains a detailed description of the package functions, their arguments and use (R command <monospace>help(“GUTS”)</monospace>).</p>
<p>The R package GUTS allows for the realisation of two models, the full model (GUTS Proper) and the individual tolerance model (GUTS-IT). In addition, the stochastic death model (GUTS-SD) can be achieved through the use of the delta distribution with model GUTS Proper. If the thresholds are sampled from the lognormal distribution (the default) and the full model (GUTS Proper, also default) is applied, 5 parameters are required:</p>
<list list-type="bullet">
<list-item>
<p>
<monospace>hb</monospace>: background mortality rate</p>
</list-item>
<list-item>
<p>
<monospace>ke</monospace>: dominant rate constant</p>
</list-item>
<list-item>
<p>
<monospace>kk</monospace>: killing rate</p>
</list-item>
<list-item>
<p>
<monospace>mn</monospace>: mean of the threshold distribution</p>
</list-item>
<list-item>
<p>
<monospace>sd</monospace>: standard deviation of the threshold distribution</p>
</list-item>
</list>
<p>For the delta distribution, no standard deviation must be provided, and for the model GUTS-IT, the killing rate must be omitted. The number of parameters is checked according to the distribution and model. A wrong number of parameters invokes an error. However, improper parameter values (e.g., negative values) invoke a warning resulting in the vector of parameters and the vector of survival probabilities being set to NA, and the logarithm of the likelihood being set to -Inf.</p>
<p>For testing and demonstration purposes, the package also provides a data set, “diazinon”. Pulsed toxicity tests with the freshwater crustacean <italic>Gammarus pulex</italic> and diazinon, an organophosphate insecticide, were carried out to measure survival through time under repeated pulsed exposure with variable recovery phases between pulses. Exposure concentrations were measured frequently and survival was observed daily. The dataset contains the results from three different experiments (exposure scenarios), where each experiment started off with 70 alive individuals. For more details see [<xref ref-type="bibr" rid="pcbi.1004978.ref034">34</xref>].</p>
<p>The R package GUTS is (like R) licensed under GPL-2 and freely available from CRAN (<ext-link ext-link-type="uri" xlink:href="http://CRAN.R-project.org" xlink:type="simple">http://CRAN.R-project.org</ext-link>, users should employ the package installation routines available in R). The package also includes a manual page with detailed information about the functions and their arguments.</p>
</sec>
</sec>
<sec id="sec005">
<title>Practical Application Example</title>
<p>A typical application scenario of the R package GUTS comprises creating proper GUTS objects from data, performing the parameter estimation, computing the parameter uncertainty, and making probabilistic predictions as well as validations with new data. We present such a scenario using example data to model GUTS Proper with thresholds from the lognormal distribution. During our presentation we make use of self-defined wrapper functions, which serve to keep the actual workflow clear and simple. A complete ready-to-run script containing a detailed explanation of the code and functions can be found in the supplementary information.</p>
<sec id="sec006">
<title>Read Data and Create GUTS Objects</title>
<p>After installing and loading all required packages, we read in data from experiments. For convenience, it is best to prepare a well-formatted text file and then use our wrapper function <monospace>ga_read_list()</monospace>. If, for instance, the data from [<xref ref-type="bibr" rid="pcbi.1004978.ref034">34</xref>] should be read in, the file must be formatted as follows:</p>
<boxed-text id="pcbi.1004978.box001" position="float">
<sec id="sec007">
<title/>
<p>
<monospace># Gammarus pulex exposed to diazinon</monospace>
</p>
<p>
<monospace>C1:102.65,97.59,0,0,103.88,98.19,0,0,0,0</monospace>
</p>
<p>
<monospace>C2:100.78,106.32,0,0,103.56,95.82,0,0,0</monospace>
</p>
<p>
<monospace>C3:100.6,94.61,0,0,100.58,96.51,0,9.85</monospace>
</p>
<p>
<monospace>Ct1:0,1.02,1.03,2.99,3.01,4.01,4.02,11.01,18.01,22.01</monospace>
</p>
<p>
<monospace>Ct2:0,1.02,1.03,8,8.01,9,9.01,15,22.01</monospace>
</p>
<p>
<monospace>Ct3:0,1.02,1.03,16,16.01,17,17.01,22.01</monospace>
</p>
<p>
<monospace>y1:70,66,61,55,31,31,29,26,24,22,21,19,17,14,14,13,11,11,10,9,8,8,8</monospace>
</p>
<p>
<monospace>y2:70,65,59,56,54,50,47,46,46,40,23,22,22,21,18,17,17,13,13,13,11,11,11</monospace>
</p>
<p>
<monospace>y3:70,65,59,55,53,51,48,46,46,46,44,41,40,40,40,39,38,36,33,28,24,23,19</monospace>
</p>
<p>
<monospace>yt1:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22</monospace>
</p>
<p>
<monospace>yt2:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22</monospace>
</p>
<p>
<monospace>yt3:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22</monospace>
</p>
</sec>
</boxed-text>
<p>The first line shows a comment, which is ignored when reading in. Each data line starts with a variable name (e.g., <monospace>C1</monospace> for the first concentration vector) followed by a colon, the actual data separated by commas, and each data vector terminated by a newline. The <monospace>C</monospace> and <monospace>y</monospace> vectors denote, respectively, exposure concentrations [nmol/l] and survival counts. The <monospace>Ct</monospace> and <monospace>yt</monospace> vectors denote the time points at which these vectors are measured [day]. As our algorithm assumes a linear interpolation between concentrations, the values have been chosen such that pulses of approximately rectangular shape are achieved.</p>
<p>Having such a plain text file created in the working directory under the file name, say, <monospace>Data_Gp_Diazinon.txt</monospace>, it can then be read in:</p>
<boxed-text id="pcbi.1004978.box002" position="float">
<sec id="sec008">
<title/>
<p>
<monospace><italic>diazinon &lt;- ga_read_list(“Data_Gp_Diazinon.txt”)</italic></monospace>
</p>
</sec>
</boxed-text>
<p>However, for testing and demonstration purposes, the diazinon data is included in the R package GUTS. We can load this data directly and create a list of 3 GUTS objects:</p>
<boxed-text id="pcbi.1004978.box003" position="float">
<sec id="sec009">
<title/>
<p>
<monospace><italic>data(diazinon)</italic></monospace>
</p>
<p>
<monospace><italic>guts_objects &lt;- list(</italic></monospace>
</p>
<p>
<monospace><italic> guts_setup(C = diazinon[[“C1”]], Ct = diazinon[[“Ct1”]],</italic></monospace>
</p>
<p>
<monospace><italic>  y = diazinon[[“y1”]], yt = diazinon[[“yt1”]]),</italic></monospace>
</p>
<p>
<monospace><italic> guts_setup(C = diazinon[[“C2”]], Ct = diazinon[[“Ct2”]],</italic></monospace>
</p>
<p>
<monospace><italic>  y = diazinon[[“y2”]], yt = diazinon[[“yt2”]]),</italic></monospace>
</p>
<p>
<monospace><italic> guts_setup(C = diazinon[[“C3”]], Ct = diazinon[[“Ct3”]],</italic></monospace>
</p>
<p>
<monospace><italic>  y = diazinon[[“y3”]], yt = diazinon[[“yt3”]])</italic></monospace>
</p>
<p>
<monospace><italic>)</italic></monospace>
</p>
</sec>
</boxed-text>
<p>Note, that all other arguments of the setup function (<monospace>guts_setup()</monospace>) already default to modelling GUTS-Proper (i.e., <monospace>dist</monospace> <monospace>=</monospace> <monospace>“lognormal”</monospace>, <monospace>model</monospace> <monospace>=</monospace> <monospace>“Proper”</monospace>, <monospace>N</monospace> <monospace>=</monospace> <monospace>1000</monospace>, <monospace>M</monospace> <monospace>=</monospace> <monospace>10000</monospace>) and are therefore omitted. However, for modelling GUTS-SD, set <monospace>dist</monospace> <monospace>=</monospace> <monospace>“delta”</monospace> and <monospace>model</monospace> <monospace>=</monospace> <monospace>“Proper”</monospace>, and for modelling GUTS-IT, set <monospace>dist</monospace> <monospace>=</monospace> <monospace>“lognormal”</monospace> and <monospace>model</monospace> <monospace>=</monospace> <monospace>“IT”</monospace>. In order to inspect the content of the first GUTS object in the list, use the print command, <monospace>print(guts_objects[[1]])</monospace>.</p>
</sec>
<sec id="sec010">
<title>Bayesian Parameter Estimation</title>
<p>The parameter estimation is achieved through the use of an optimisation routine to find good starting parameters, and the use of a MCMC routine, for sampling the parameter posterior distribution. We define the evaluation function <monospace>logposterior()</monospace>, which is the sum of the log-likelihood and the log-prior:</p>
<boxed-text id="pcbi.1004978.box004" position="float">
<sec id="sec011">
<title/>
<p>
<monospace><italic>logposterior &lt;- function(pars) {</italic></monospace>
</p>
<p>
<monospace><italic> if (any(is.na(pars), is.infinite(pars),</italic></monospace>
</p>
<p>
<monospace><italic>  (pars&lt;0), (pars[“kk”]&gt;30))) {</italic></monospace>
</p>
<p>
<monospace><italic>  return(-Inf)</italic></monospace>
</p>
<p>
<monospace><italic> }</italic></monospace>
</p>
<p>
<monospace><italic> ret &lt;- sum(sapply(guts_objects,</italic></monospace>
</p>
<p>
<monospace><italic>  function(obj) guts_calc_loglikelihood(obj, pars)))</italic></monospace>
</p>
<p>
<monospace><italic> return(ret)</italic></monospace>
</p>
<p>
<monospace><italic>}</italic></monospace>
</p>
</sec>
</boxed-text>
<p>We have chosen uniform priors, for all parameters, with lower bounds equal to zero. The upper bounds are assumed sufficiently large so that they do not affect the posterior significantly. As the posteriors of all parameters except <italic>k</italic><sub><italic>k</italic></sub> decay sufficiently fast, no upper bounds need to be specified, for those parameters. The posterior of parameter <italic>k</italic><sub><italic>k</italic></sub>, however, seems to exhibit a fat tail, which occasionally leads to divergent Markov chains. For this parameter, we specify a prior upper bound <italic>k</italic><sub><italic>k</italic></sub> &lt; 30<italic>l</italic>/(<italic>day</italic> <italic>nmol</italic>) that is large enough to be practically indistinguishable from the IT regime <italic>k</italic><sub><italic>k</italic></sub> = ∞.</p>
<p>The function <monospace>logposterior()</monospace> takes a vector of parameters as its only argument. If the parameter vector lies outside the prior range, <monospace>logposterior()</monospace> returns <monospace>-Inf</monospace>; otherwise it applies a vector-wise calculation of the logarithm of the likelihood to the GUTS objects (<monospace>sapply()</monospace>) and returns the sum.</p>
<p>To find good starting parameters, we use an R implementation of the “Hooke-Jeeves derivative-free minimisation algorithm”. The optimiser <monospace>hjkb()</monospace> is included in the package dfoptim [<xref ref-type="bibr" rid="pcbi.1004978.ref035">35</xref>]. We then define a start vector as well as its lower and upper bounds needed during the optimisation.</p>
<boxed-text id="pcbi.1004978.box005" position="float">
<sec id="sec012">
<title/>
<p>
<monospace><italic>library(“dfoptim”)</italic></monospace>
</p>
<p>
<monospace><italic>pars_start &lt;- c(0.05, 0.1, 3, 20, 10)</italic></monospace>
</p>
<p>
<monospace><italic>names(pars_start) &lt;- c(‘hb’, ‘ke’, ‘kk’, ‘mn’, ‘sd’)</italic></monospace>
</p>
<p>
<monospace><italic>optim_result &lt;- hjkb(pars_start, logposterior, lower = rep(0, 5),</italic></monospace>
</p>
<p>
<monospace><italic> upper = c(1, 1, 30, 40, 20), control = list(maximize = TRUE))</italic></monospace>
</p>
</sec>
</boxed-text>
<p>Warnings invoked by the GUTS package functions can be inspected using the command <monospace>warnings()</monospace> (for their meaning, see the help file and section Implementation in the R Package GUTS). However, these warnings do not affect the optimisation and can, therefore, be safely ignored.</p>
<p>The result of the optimisation routine is inspected using the print function (for an in-depth description of the output consult the manual page of <monospace>hjkb()</monospace>):</p>
<boxed-text id="pcbi.1004978.box006" position="float">
<sec id="sec013">
<title/>
<p>
<monospace><italic>print(optim_result)</italic></monospace>
</p>
<p>
<monospace>$par</monospace>
</p>
<p>
<monospace>    hb     ke     kk      mn     sd</monospace>
</p>
<p>
<monospace> 0.05473022  0.09215698  1.80652237  15.63446045  6.01160431</monospace>
</p>
<p>
<monospace>$value</monospace>
</p>
<p>
<monospace>[1] -570.6315</monospace>
</p>
<p>
<monospace>$convergence</monospace>
</p>
<p>
<monospace>[1] 0</monospace>
</p>
<p>
<monospace>$feval</monospace>
</p>
<p>
<monospace>[1] 14479</monospace>
</p>
<p>
<monospace>$niter</monospace>
</p>
<p>
<monospace>[1] 19</monospace>
</p>
</sec>
</boxed-text>
<p>Note that choosing reasonable parameter bounds can hardly be automatised and thus relies on the expert knowledge about common parameters, for the respective types of data and experiment. If expert knowledge suggest different parameters and bounds, the vectors above need to be adjusted [<xref ref-type="bibr" rid="pcbi.1004978.ref026">26</xref>].</p>
<p>The posterior parameter distribution is sampled using the robust adaptive Metropolis sampler implemented in the R package adaptMCMC [<xref ref-type="bibr" rid="pcbi.1004978.ref036">36</xref>] with the parameters from the optimisation serving as starting values. The function <monospace>MCMC()</monospace> automatically adapts the covariance of the jump distribution to achieve a user-defined acceptance rate (here: 0.4). As a starting value, for the covariance of the jump distribution, we simply use a diagonal one with 10% of the initial parameter values as standard deviations. In order to prevent degeneracy of the matrix (in case the optimiser returns zero, for certain parameters), the matrix is altered by adding a small positive number to the diagonal. Note that, although the R package GUTS is very fast, the MCMC may take some minutes depending on the number of iterations chosen (argument <monospace>n</monospace> of the function <monospace>MCMC()</monospace>) and the hardware used (on our testing MacBook Pro with a 4 core Intel i7 processor 50,000 iterations took about 3 minutes). Like in the optimisation routine, warnings can occur and can be ignored (see above).</p>
<boxed-text id="pcbi.1004978.box007" position="float">
<sec id="sec014">
<title/>
<p>
<monospace><italic>library(“adaptMCMC”)</italic></monospace>
</p>
<p>
<monospace><italic>mcmc_pars &lt;- optim_result$par</italic></monospace>
</p>
<p>
<monospace><italic>mcmc_sigma &lt;- diag((mcmc_pars/10)^2 + .Machine$double.eps)</italic></monospace>
</p>
<p>
<monospace><italic>mcmc_result &lt;- MCMC(p = logposterior, init = mcmc_pars,</italic></monospace>
</p>
<p>
<monospace><italic> scale = mcmc_sigma, adapt = 20000, acc.rate = 0.4, n = 50000)</italic></monospace>
</p>
</sec>
</boxed-text>
</sec>
<sec id="sec015">
<title>Visualisation of the Posterior Distribution</title>
<p>After the MCMC has finished without errors, it is necessary to inspect the chains and check whether they have converged. Automatised checks are available (e.g., through using CODA [<xref ref-type="bibr" rid="pcbi.1004978.ref037">37</xref>]), however, here we create a plot from the chains of the parameters’ posterior marginals and check the chains visually (see <xref ref-type="fig" rid="pcbi.1004978.g001">Fig 1</xref>).</p>
<fig id="pcbi.1004978.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004978.g001</object-id>
<label>Fig 1</label>
<caption>
<title>Chains of the parameters’ posterior marginals computed by the MCMC.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004978.g001" xlink:type="simple"/>
</fig>
<boxed-text id="pcbi.1004978.box008" position="float">
<sec id="sec016">
<title/>
<p>
<monospace><italic>plot_chains &lt;- ga_plot_chains(data = mcmc_result$samples,</italic></monospace>
</p>
<p>
<monospace><italic> from = 10000, steps = 50)</italic></monospace>
</p>
</sec>
</boxed-text>
<p>After cutting off the first 10,000 sample points, the chains show a reasonable mixing and no signs of burn-in or the adaptation phase of the algorithm. We have chosen the function <monospace>MCMC()</monospace> from package adaptMCMC because it is largely self-tuning and therefore easy to use. An adaptation phase of 20,000 sample points seems to be sufficient in most cases. Nevertheless, it is important to keep in mind that <monospace>MCMC()</monospace> calls a stochastic algorithm, which may fail to adapt, even for the data set we are using. If that happens, running the algorithm a second time usually suffices. If not, the adaptation phase might have to be enlarged and the chain might have to be run for a longer time.</p>
<p>Next, we create a correlation plot, for the posterior parameter sample, computed by the MCMC. The parameters for our example co-vary as shown in <xref ref-type="fig" rid="pcbi.1004978.g002">Fig 2</xref>.</p>
<fig id="pcbi.1004978.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004978.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Correlations between the parameter posterior samples computed by the MCMC.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004978.g002" xlink:type="simple"/>
</fig>
<boxed-text id="pcbi.1004978.box009" position="float">
<sec id="sec017">
<title/>
<p>
<monospace><italic>plot_corrs &lt;- ga_plot_correlations(data = mcmc_result$samples,</italic></monospace>
</p>
<p>
<monospace><italic> from = 10000, steps = 50)</italic></monospace>
</p>
</sec>
</boxed-text>
<p>The strongest correlation is observed between the threshold mean (<italic>mn</italic>) and the dominant rate constant (<italic>k</italic><sub><italic>e</italic></sub>), which can be understood from eqs <xref ref-type="disp-formula" rid="pcbi.1004978.e001">(1)</xref> and <xref ref-type="disp-formula" rid="pcbi.1004978.e002">(2)</xref>. Strong parameter correlations could be viewed as indicators of over-parametrised models, however the equations of GUTS represent our understanding of the processes determining survival under stress. As such the model parameters have a mechanistic interpretation, which would be partially lost if reducing the model. Furthermore, reducing GUTS to fewer parameters would introduce additional strong assumptions and so GUTS would loose its generality. For example, disposing of the threshold parameter would imply the assumption that any infinitely small dose of the stressor will result in an increased hazard rate (see also [<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>]). An important insight from <xref ref-type="fig" rid="pcbi.1004978.g002">Fig 2</xref> is that survival predictions must account for the correlation between parameters to properly account for parametric uncertainty.</p>
</sec>
<sec id="sec018">
<title>Quantification of Parameter Uncertainty</title>
<p>To compute the uncertainty of each of the parameters, we calculate adequate quantiles from the posterior samples. Together with the maximum of the posterior distribution, these quantiles are then tabulated.</p>
<boxed-text id="pcbi.1004978.box010" position="float">
<sec id="sec019">
<title/> <p>
<monospace><italic>tab_quant &lt;- ga_tab_quantiles(data = mcmc_result$samples,</italic></monospace>
</p>
<p>
<monospace><italic> log.p = mcmc_result$log.p, from = 10001)</italic></monospace>
</p>
<p>
<monospace><italic>print(tab_quant)</italic></monospace>
</p>
<p>
<monospace>     maxpost   q0.025      q0.5    q0.975</monospace>
</p>
<p>
<monospace>hb  0.05473022 0.04497855  0.05671463  0.06952769</monospace>
</p>
<p>
<monospace>ke  0.09215698 0.04676900  0.10578718  0.18960682</monospace>
</p>
<p>
<monospace>kk  1.80652237 0.86402773  3.22829131   17.27880308</monospace>
</p>
<p>
<monospace>mn 15.63446045  9.59333778  18.33559994    28.89464348</monospace>
</p>
<p>
<monospace>sd  6.01160431 3.44263752  6.86731117    12.31967439</monospace>
</p>
</sec>
</boxed-text>
<p>To inspect the distribution and the uncertainty visually, we plot the densities of each of the parameters. <xref ref-type="fig" rid="pcbi.1004978.g003">Fig 3</xref> shows the densities, and each plot contains a horizontal line indicating the uncertainty quantiles (the median is always added).</p>
<fig id="pcbi.1004978.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004978.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Densities and uncertainty (quantiles) of the parameter posteriors.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004978.g003" xlink:type="simple"/>
</fig>
<boxed-text id="pcbi.1004978.box011" position="float">
<sec id="sec020">
<title/>
<p>
<monospace><italic>plot_dens &lt;- ga_plot_densities(data = mcmc_result$samples)</italic></monospace>
</p>
</sec>
</boxed-text>
</sec>
<sec id="sec021">
<title>Probabilistic Prediction and Validating the Model With New Data</title>
<p>After calibrating our model with real data, we use it for probabilistic predictions. We demonstrate how to make probabilistic predictions (without survival data) and how to validate these predictions against measured survival data. In both cases we use fictional (“fake”) data, for demonstration purposes.</p>
<p>The data must contain concentrations and concentration time points, but also the time points at which we want to make predictions. Furthermore, we need to specify the initial number of individuals (100, in our example). This number is set in the first element of the vector of survivor counts (<monospace>y</monospace>). Unless we have validation data, the remaining values are not needed and set to an arbitrary value (0, in our example).</p>
<boxed-text id="pcbi.1004978.box012" position="float">
<sec id="sec022">
<title/>
<p>
<monospace><italic>g_obj_new &lt;- list(</italic></monospace>
</p>
<p>
<monospace><italic> guts_setup(C = c(99.97824, 0, 103.88, 0, 0, 103.56, 0, 0,</italic></monospace>
</p>
<p>
<monospace><italic>   100.58, 96.51, 0, 2.35724),</italic></monospace>
</p>
<p>
<monospace><italic>  Ct = c(0, 1.03, 3.01, 4.02, 8, 8.01, 15, 16,</italic></monospace>
</p>
<p>
<monospace><italic>   16.01, 17, 18.01, 22.01),</italic></monospace>
</p>
<p>
<monospace><italic>  y = c(100, rep(0, 22)),</italic></monospace>
</p>
<p>
<monospace><italic>  yt = 0:22),</italic></monospace>
</p>
<p>
<monospace><italic> guts_setup(C = c(101.343, 99.5066, 0, 98.19, 95.82, 0, 0,</italic></monospace>
</p>
<p>
<monospace><italic>   0, 3.283),</italic></monospace>
</p>
<p>
<monospace><italic>  Ct = c(0, 1.02, 2.99, 4.01, 9, 9.01, 11.01,</italic></monospace>
</p>
<p>
<monospace><italic>   17.01, 22.01),</italic></monospace>
</p>
<p>
<monospace><italic>  y = c(100, rep(0, 22)),</italic></monospace>
</p>
<p>
<monospace><italic>  yt = 0:22)</italic></monospace>
</p>
<p>
<monospace><italic>)</italic></monospace>
</p>
</sec>
</boxed-text>
<p>We tabulate the predictions and save the result in the R list object <monospace>tab_pred</monospace>. We use the command <monospace>head()</monospace> to print the first 6 lines of the first table, however, all tables can be printed using <monospace>print(tab_pred)</monospace>.</p>
<boxed-text id="pcbi.1004978.box013" position="float">
<sec id="sec023">
<title/>
<p>
<monospace><italic>tab_pred &lt;- ga_tab_predictions(gobjs = g_obj_new,</italic></monospace>
</p>
<p>
<monospace><italic> data = mcmc_result$samples)</italic></monospace>
</p>
<p>
<monospace><italic>head(tab_pred[[1]])</italic></monospace>
</p>
<p>
<monospace> ytd  q0.025  q0.5  q0.975</monospace>
</p>
<p>
<monospace>1  1     2    5   11</monospace>
</p>
<p>
<monospace>2  2     2    5   10</monospace>
</p>
<p>
<monospace>3  3     9  19   30</monospace>
</p>
<p>
<monospace>4  4     19   31   44</monospace>
</p>
<p>
<monospace>5  5     0    3     8</monospace>
</p>
<p>
<monospace>6  6     0    2     5</monospace>
</p>
</sec>
</boxed-text>
<p>Finally, we create a prediction plot (see <xref ref-type="fig" rid="pcbi.1004978.g004">Fig 4</xref>). The plot shows the medians as well as the quantiles of the predicted survivor counts.</p>
<fig id="pcbi.1004978.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004978.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Predictions for 2 fictional (“fake”) experimental setups.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004978.g004" xlink:type="simple"/>
</fig>
<boxed-text id="pcbi.1004978.box014" position="float">
<sec id="sec024">
<title/>
<p>
<monospace><italic>plot_pred &lt;- ga_plot_predictions(gobjs = g_obj_new,</italic></monospace>
</p>
<p>
<monospace><italic> data = mcmc_result$samples)</italic></monospace>
</p>
</sec>
</boxed-text>
<p>The prediction plots show the 95% probability bands and the medians, for the number of deaths that are predicted to occur in each observation window. If measured survivor data is present, it is also possible to add this information to the tables and plots, for validation. We modify our first fictional data set from above and add some (also fictional) survivor data. The tabulation now contains an additional column (“measured”), and the measured data (fictional data, in our example) is added to the plot as well (see <xref ref-type="fig" rid="pcbi.1004978.g005">Fig 5</xref>). Note that each single table can also be saved to text files using the command <monospace>write.csv()</monospace>.</p>
<fig id="pcbi.1004978.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1004978.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Comparison of a model forecast with fictional (“fake”) data.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004978.g005" xlink:type="simple"/>
</fig>
<boxed-text id="pcbi.1004978.box015" position="float">
<sec id="sec025">
<title/>
<p>
<monospace><italic>g_obj_val &lt;- guts_setup(C = c(99.97824, 0, 103.88, 0, 0, 103.56, 0, 0,</italic></monospace>
</p>
<p>
<monospace><italic>   100.58, 96.51, 0, 2.35724),</italic></monospace>
</p>
<p>
<monospace><italic>  Ct = c(0, 1.03, 3.01, 4.02, 8, 8.01, 15, 16,</italic></monospace>
</p>
<p>
<monospace><italic>   16.01, 17, 18.01, 22.01),</italic></monospace>
</p>
<p>
<monospace><italic>  y = c(66, 62, 57, 42, 24, 19, 19, 18, 18, 11, 5, 5, 4, 4, 3, 3, 2),</italic></monospace>
</p>
<p>
<monospace><italic>  yt = 0:16)</italic></monospace>
</p>
<p>
<monospace><italic>tab_val &lt;- ga_tab_predictions(gobjs = list(g_obj_val),</italic></monospace>
</p>
<p>
<monospace><italic>  data = mcmc_result$samples, measured = TRUE)</italic></monospace>
</p>
<p>
<monospace><italic>print(tab_val[[1]])</italic></monospace>
</p>
<p>
<monospace>  ytd   measured    q0.025  q0.5  q0.975</monospace>
</p>
<p>
<monospace>1   1     4  1.000    4     8</monospace>
</p>
<p>
<monospace>2   2     5  0.975    3     8</monospace>
</p>
<p>
<monospace>3   3      15  5.000  12   21</monospace>
</p>
<p>
<monospace>4   4      18   12.000  20   30</monospace>
</p>
<p>
<monospace>5   5     5  0.000    2     6</monospace>
</p>
<p>
<monospace>6   6     0  0.000    1     4</monospace>
</p>
<p>
<monospace>7   7     1  0.000    1     4</monospace>
</p>
<p>
<monospace>8   8     0  0.000    1     4</monospace>
</p>
<p>
<monospace>9   9     7  0.000    3   10</monospace>
</p>
<p>
<monospace>10  10     6  4.000  10   17</monospace>
</p>
<p>
<monospace>11  11     0  0.000    3     8</monospace>
</p>
<p>
<monospace>12  12     1  0.000    1     4</monospace>
</p>
<p>
<monospace>13  13     0  0.000    0     2</monospace>
</p>
<p>
<monospace>14  14     1  0.000    0     1</monospace>
</p>
<p>
<monospace>15  15     0  0.000    0     1</monospace>
</p>
<p>
<monospace>16  16     1  0.000    0     1</monospace>
</p>
<p>
<monospace><italic>plot_val &lt;- ga_plot_predictions(gobjs = list(g_obj_val),</italic></monospace>
</p>
<p>
<monospace><italic> data = mcmc_result$samples, measured = TRUE)</italic></monospace>
</p>
</sec>
</boxed-text>
</sec>
<sec id="sec026">
<title>Example Code and Further Development</title>
<p>The complete code used throughout the presentation here is available with the paper (see <xref ref-type="supplementary-material" rid="pcbi.1004978.s001">S1 Script</xref> and <xref ref-type="supplementary-material" rid="pcbi.1004978.s002">S1 Data</xref>). We believe that the conciseness of our code and the application of our self-created wrapper functions make the procedures very easy to understand and to reproduce. However, with more expertise in R, users can easily alter our code and produce their own output. For instance, the plotting routines provided by the R package ggplot2 [<xref ref-type="bibr" rid="pcbi.1004978.ref038">38</xref>] are very powerful and allow for rich-featured ready-to-publish graphics. We also encourage users to try out different optimisation and inference routines.</p>
<p>Future development will focus on the implementation of more distributions as well as further performance improvements. Users of our R package GUTS are encouraged to provide ideas, feedback or feature requests to the authors and the R GUTS user community, or to contribute actively to further development as a co-developer. The best way to communicate is via the mailing list of the package (<email xlink:type="simple">guts-users@lists.r-forge.r-project.org</email>). The development home page of our R package GUTS can be found on R-Forge (<ext-link ext-link-type="uri" xlink:href="https://r-forge.r-project.org/projects/guts/" xlink:type="simple">https://r-forge.r-project.org/projects/guts/</ext-link>).</p>
</sec>
</sec>
<sec id="sec027">
<title>Discussion and Future Directions</title>
<p>We discuss the modelling of survival under chemical stress using GUTS [<xref ref-type="bibr" rid="pcbi.1004978.ref004">4</xref>]. GUTS places the assumptions underlying survival modelling in a consistent mathematical framework, but the calibration has been a challenge. In particular the calibration of toxicodynamic parameters, and the estimation of parametric and predictive uncertainty was still a problem as it required much computational power and time.</p>
<p>GUTS is a survival analysis tool specifically designed to account for time-varying stressors. It is also possible to integrate multiple, independently acting stressors by adding hazard rates [<xref ref-type="bibr" rid="pcbi.1004978.ref025">25</xref>, <xref ref-type="bibr" rid="pcbi.1004978.ref026">26</xref>]. However, most intriguing are the possibilities to better understand underlying mechanisms my meaningful interpretation of the GUTS parameters. We expect that our software facilitates re-analyses of existing survival data as well as asking new research questions in a wide range of sciences. In particular the ability to quickly quantify stressor thresholds in conjunction with dynamic compensating processes, and their uncertainty, is an improvement that complements current survival analysis methods.</p>
</sec>
<sec id="sec028">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1004978.s001" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004978.s001" xlink:type="simple">
<label>S1 Script</label>
<caption>
<title>GUTS example R script.</title>
<p>Auxiliary R Script for the Paper “Computationally Efficient Implementation of a Novel Algorithm for the General Unified Threshold Model of Survival (GUTS)”.</p>
<p>(R)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1004978.s002" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1004978.s002" xlink:type="simple">
<label>S1 Data</label>
<caption>
<title>GUTS example data.</title>
<p>Example data for the Paper “Computationally Efficient Implementation of a Novel Algorithm for the General Unified Threshold Model of Survival (GUTS)”.</p>
<p>(TXT)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="pcbi.1004978.ref001">
<label>1</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Bliss</surname> <given-names>C I</given-names></name>. <article-title>The method of probits</article-title>. <source>Science</source>. <year>1934</year>;<volume>79</volume>(<issue>2037</issue>):<fpage>38</fpage>–<lpage>39</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1126/science.79.2037.38" xlink:type="simple">10.1126/science.79.2037.38</ext-link></comment> <object-id pub-id-type="pmid">17813446</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref002">
<label>2</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Newman</surname> <given-names>M C</given-names></name>, <name name-style="western"><surname>Unger</surname> <given-names>M A</given-names></name>. <source>Fundamentals of Ecotoxicology</source>. <edition>2nd ed</edition>. <publisher-loc>Boca Raton</publisher-loc>: <publisher-name>Lewis Publishers</publisher-name>; <year>2003</year>. isbn: 9781566705981</mixed-citation>
</ref>
<ref id="pcbi.1004978.ref003">
<label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Chew</surname> <given-names>R D</given-names></name>, <name name-style="western"><surname>Hamilton</surname> <given-names>M A</given-names></name>. <article-title>Toxicity curve estimation—fitting a compartment model to median survival times</article-title>. <source>Transactions of the American Fisheries Society</source>. <year>1985</year>;<volume>114</volume>(<issue>3</issue>):<fpage>403</fpage>–<lpage>412</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1577/1548-8659(1985)114%3C403:TCE%3E2.0.CO;2" xlink:type="simple">10.1577/1548-8659(1985)114%3C403:TCE%3E2.0.CO;2</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref004">
<label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Jager</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Albert</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Preuss</surname> <given-names>T G</given-names></name>, <name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>. <article-title>General Unified Threshold model of Survival—a toxicokinetic toxicodynamic framework for ecotoxicology</article-title>. <source>Environmental Science &amp; Technology</source>. <year>2011</year>;<volume>45</volume>(<issue>7</issue>):<fpage>2529</fpage>–<lpage>2540</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1021/es103092a" xlink:type="simple">10.1021/es103092a</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref005">
<label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Ceconi</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Ferrari</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Bachetti</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Opasich</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Volterrani</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Colombo</surname> <given-names>B</given-names></name>, <etal>et al</etal>. <article-title>Chromogranin A in heart failure: a novel neurohumoral factor and a predictor for mortality</article-title>. <source>European Heart Journal</source>. <year>2002</year>;<volume>23</volume>(<issue>12</issue>):<fpage>967</fpage>–<lpage>974</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1053/euhj.2001.2977" xlink:type="simple">10.1053/euhj.2001.2977</ext-link></comment> <object-id pub-id-type="pmid">12069452</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref006">
<label>6</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Selvin</surname> <given-names>S</given-names></name>. <source>Survival analysis for epidemiologic and medical research: a practical guide</source>. <publisher-loc>Cambridge</publisher-loc>: <publisher-name>Cambridge University Press</publisher-name>; <year>2008</year>. isbn: 9780521895194</mixed-citation>
</ref>
<ref id="pcbi.1004978.ref007">
<label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Mihaylova</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Emberson</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Blackwell</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Keech</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Simes</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Barnes</surname> <given-names>E H</given-names></name>, <etal>et al</etal>. <article-title>The effects of lowering LDL cholesterol with statin therapy in people at low risk of vascular disease: Meta-analysis of individual data from 27 randomised trials</article-title>. <source>The Lancet</source>. <year>2012</year>;<volume>380</volume>(<issue>9841</issue>):<fpage>581</fpage>–<lpage>590</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/S0140-6736(12)60367-5" xlink:type="simple">10.1016/S0140-6736(12)60367-5</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref008">
<label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Keiding</surname> <given-names>N</given-names></name>. <article-title>Event history analysis and the cross-section</article-title>. <source>Statistics in Medicine</source>. <year>2006</year>;<volume>25</volume>(<issue>14</issue>):<fpage>2343</fpage>–<lpage>2364</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1002/sim.2579" xlink:type="simple">10.1002/sim.2579</ext-link></comment> <object-id pub-id-type="pmid">16708345</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref009">
<label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Andersen</surname> <given-names>P K</given-names></name>, <name name-style="western"><surname>Keiding</surname> <given-names>N</given-names></name>. <article-title>Multi-state models for event history analysis</article-title>. <source>Statistical Methods in Medical Research</source>. <year>2002</year>;<volume>11</volume>(<issue>2</issue>):<fpage>91</fpage>–<lpage>115</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1191/0962280202sm275ed" xlink:type="simple">10.1191/0962280202sm275ed</ext-link></comment> <object-id pub-id-type="pmid">12040698</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref010">
<label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Balch</surname> <given-names>C M</given-names></name>, <name name-style="western"><surname>Soong</surname> <given-names>S J</given-names></name>, <name name-style="western"><surname>Gershenwald</surname> <given-names>J E</given-names></name>, <name name-style="western"><surname>Thompson</surname> <given-names>J F</given-names></name>, <name name-style="western"><surname>Reintgen</surname> <given-names>D S</given-names></name>, <name name-style="western"><surname>Cascinelli</surname> <given-names>N</given-names></name>, <etal>et al</etal>. <article-title>Prognostic factors analysis of 17,600 melanoma patients: validation of the American Joint Committee on Cancer melanoma staging system</article-title>. <source>Journal of Clinical Oncology</source>. <year>2001</year>;<volume>19</volume>(<issue>16</issue>):<fpage>3622</fpage>–<lpage>3634</lpage>. <object-id pub-id-type="pmid">11504744</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref011">
<label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Garrett</surname> <given-names>K A</given-names></name>, <name name-style="western"><surname>Madden</surname> <given-names>L V</given-names></name>, <name name-style="western"><surname>Hughes</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Pfender</surname> <given-names>W F</given-names></name>. <article-title>New applications of statistical tools in plant pathology</article-title>. <source>Phytopathology</source>. <year>2004</year>;<volume>94</volume>(<issue>9</issue>):<fpage>999</fpage>–<lpage>1003</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1094/PHYTO.2004.94.9.999" xlink:type="simple">10.1094/PHYTO.2004.94.9.999</ext-link></comment> <object-id pub-id-type="pmid">18943077</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref012">
<label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Carnes</surname> <given-names>B A</given-names></name>, <name name-style="western"><surname>Holden</surname> <given-names>L R</given-names></name>, <name name-style="western"><surname>Olshansky</surname> <given-names>S J</given-names></name>, <name name-style="western"><surname>Witten</surname> <given-names>M T</given-names></name>, <name name-style="western"><surname>Siegel</surname> <given-names>J S</given-names></name>. <article-title>Mortality partitions and their relevance to research on senescence</article-title>. <source>Biogerontology</source>. <year>2006</year>;<volume>7</volume>(<issue>4</issue>):<fpage>183</fpage>–<lpage>198</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/s10522-006-9020-3" xlink:type="simple">10.1007/s10522-006-9020-3</ext-link></comment> <object-id pub-id-type="pmid">16732401</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref013">
<label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Gavrilov</surname> <given-names>L A</given-names></name>, <name name-style="western"><surname>Gavrilova</surname> <given-names>N S</given-names></name>. <article-title>The reliability theory of aging and longevity</article-title>. <source>Journal of Theoretical Biology</source>. <year>2001</year>;<volume>213</volume>(<issue>4</issue>):<fpage>527</fpage>–<lpage>545</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1006/jtbi.2001.2430" xlink:type="simple">10.1006/jtbi.2001.2430</ext-link></comment> <object-id pub-id-type="pmid">11742523</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref014">
<label>14</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Lu</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Kolarik</surname> <given-names>W J</given-names></name>, <name name-style="western"><surname>Lu</surname> <given-names>S S</given-names></name>. <article-title>Real-time performance reliability prediction</article-title>. <source>IEEE Transactions on Reliability</source>. <year>2001</year>;<volume>50</volume>(<issue>4</issue>):<fpage>353</fpage>–<lpage>357</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1109/24.983393" xlink:type="simple">10.1109/24.983393</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref015">
<label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Au</surname> <given-names>S K</given-names></name>, <name name-style="western"><surname>Beck</surname> <given-names>J L</given-names></name>. <article-title>Estimation of small failure probabilities in high dimensions by subset simulation</article-title>. <source>Probabilistic Engineering Mechanics</source>. <year>2001</year>;<volume>16</volume>(<issue>4</issue>):<fpage>263</fpage>–<lpage>277</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/S0266-8920(01)00019-4" xlink:type="simple">10.1016/S0266-8920(01)00019-4</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref016">
<label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Box-Steffensmeier</surname> <given-names>J M</given-names></name>, <name name-style="western"><surname>Reiter</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Zorn</surname> <given-names>C</given-names></name>. <article-title>Nonproportional hazards and event history analysis in international relations</article-title>. <source>Journal of Conflict Resolution</source>. <year>2003</year>;<volume>47</volume>(<issue>1</issue>):<fpage>33</fpage>–<lpage>53</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1177/0022002702239510" xlink:type="simple">10.1177/0022002702239510</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref017">
<label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Guo</surname> <given-names>G</given-names></name>. <article-title>Event-history analysis for left-truncated data</article-title>. <source>Sociological Methodology</source>. <year>1993</year>;<volume>23</volume>:<fpage>217</fpage>–<lpage>243</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.2307/271011" xlink:type="simple">10.2307/271011</ext-link></comment> <object-id pub-id-type="pmid">12318163</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref018">
<label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Nyman</surname> <given-names>A-M</given-names></name>, <name name-style="western"><surname>Schirmer</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>. <article-title>Toxicokinetic-toxicodynamic modelling of survival of Gammarus pulex in multiple pulse exposures to propiconazole: model assumptions, calibration data requirements and predictive power</article-title>. <source>Ecotoxicology</source>. <year>2012</year>;<volume>21</volume>(<issue>7</issue>):<fpage>1828</fpage>–<lpage>1840</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/s10646-012-0917-0" xlink:type="simple">10.1007/s10646-012-0917-0</ext-link></comment> <object-id pub-id-type="pmid">22562719</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref019">
<label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Escher</surname> <given-names>B I</given-names></name>. <article-title>Advantages of toxicokinetic and toxicodynamic modelling in aquatic ecotoxicology and risk assessment</article-title>. <source>Journal of Environmental Monitoring</source>. <year>2010</year>;<volume>12</volume>(<issue>11</issue>):<fpage>2056</fpage>–<lpage>2061</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1039/c0em00234h" xlink:type="simple">10.1039/c0em00234h</ext-link></comment> <object-id pub-id-type="pmid">20862435</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref020">
<label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Jager</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Heugens</surname> <given-names>E H W</given-names></name>, <name name-style="western"><surname>Kooijman</surname> <given-names>S A L M</given-names></name>. <article-title>Making sense of ecotoxicological test results: towards application of process-based models</article-title>. <source>Ecotoxicology</source>. <year>2006</year>;<volume>15</volume>(<issue>3</issue>):<fpage>305</fpage>–<lpage>314</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/s10646-006-0060-x" xlink:type="simple">10.1007/s10646-006-0060-x</ext-link></comment> <object-id pub-id-type="pmid">16739032</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref021">
<label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Thorbek</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Warinton</surname> <given-names>J S</given-names></name>, <name name-style="western"><surname>Wheeler</surname> <given-names>J R</given-names></name>, <name name-style="western"><surname>Maund</surname> <given-names>S</given-names></name>. <article-title>A method to predict and understand fish survival under dynamic chemical stress using standard ecotoxicity data</article-title>. <source>Environmental Toxicology and Chemistry</source>. <year>2013</year>;<volume>23</volume>(<issue>4</issue>):<fpage>954</fpage>–<lpage>965</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1002/etc.2144" xlink:type="simple">10.1002/etc.2144</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref022">
<label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Beaudouin</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Zeman</surname> <given-names>F A</given-names></name>, <name name-style="western"><surname>Péry</surname> <given-names>A R R</given-names></name>. <article-title>Individual sensitivity distribution evaluation from survival data using a mechanistic model: implications for ecotoxicological risk assessment</article-title>. <source>Chemosphere</source>. <year>2012</year>;<volume>89</volume>(<issue>1</issue>):<fpage>83</fpage>–<lpage>88</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.chemosphere.2012.04.021" xlink:type="simple">10.1016/j.chemosphere.2012.04.021</ext-link></comment> <object-id pub-id-type="pmid">22572164</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref023">
<label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Kulkarni</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Daniels</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Preuss</surname> <given-names>T G</given-names></name>. <article-title>Life-stage-dependent sensitivity of the cyclopoid copepod Mesocyclops leuckarti to triphenyltin</article-title>. <source>Chemosphere</source>. <year>2013</year>;<volume>92</volume>(<issue>9</issue>):<fpage>1145</fpage>–<lpage>1153</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.chemosphere.2013.01.076" xlink:type="simple">10.1016/j.chemosphere.2013.01.076</ext-link></comment> <object-id pub-id-type="pmid">23466081</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref024">
<label>24</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Gergs</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Jager</surname> <given-names>T</given-names></name>. <article-title>Body size-mediated starvation resistance in an insect predator</article-title>. <source>Journal of Animal Ecology</source>. <year>2014</year>;<volume>83</volume>(<issue>4</issue>):<fpage>758</fpage>–<lpage>768</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1111/1365-2656.12195" xlink:type="simple">10.1111/1365-2656.12195</ext-link></comment> <object-id pub-id-type="pmid">24417336</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref025">
<label>25</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Nyman</surname> <given-names>A-M</given-names></name>, <name name-style="western"><surname>Hintermeister</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Schirmer</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>. <article-title>The insecticide Imidacloprid causes mortality of the freshwater amphipod Gammarus pulex by interfering with feeding behavior</article-title>. <source>PLoS ONE</source>. <year>2013</year>;<volume>8</volume>(<issue>5</issue>):<fpage>e62472</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1371/journal.pone.0062472" xlink:type="simple">10.1371/journal.pone.0062472</ext-link></comment> <object-id pub-id-type="pmid">23690941</object-id></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref026">
<label>26</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>O’Connor</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Hintermeister</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Escher</surname> <given-names>B</given-names></name>. <article-title>Death dilemma and organism recovery in ecotoxicology</article-title>. <source>Environmental Science &amp; Technology</source>. <year>2015</year>;<volume>49</volume>(<issue>16</issue>):<fpage>10136</fpage>–<lpage>10146</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1021/acs.est.5b03079" xlink:type="simple">10.1021/acs.est.5b03079</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref027">
<label>27</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Albert</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Künsch H</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Reichert</surname> <given-names>P</given-names></name>. <article-title>Bayesian experimental design for a toxicokinetic-toxicodynamic model</article-title>. <source>Journal of Statistical Planning and Inference</source>. <year>2012</year>;<volume>142</volume>(<issue>1</issue>):<fpage>263</fpage>–<lpage>275</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.jspi.2011.07.014" xlink:type="simple">10.1016/j.jspi.2011.07.014</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref028">
<label>28</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Andersen</surname> <given-names>P K</given-names></name>, <name name-style="western"><surname>Borgan</surname> <given-names>O</given-names></name>, <name name-style="western"><surname>Gill</surname> <given-names>R D</given-names></name>, <name name-style="western"><surname>Keiding</surname> <given-names>N</given-names></name>. <source>Statistical Models Based on Counting Processes</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>Springer</publisher-name>; <year>1993</year>. isbn: 9781461243489</mixed-citation>
</ref>
<ref id="pcbi.1004978.ref029">
<label>29</label>
<mixed-citation publication-type="other" xlink:type="simple">Albert C, Vogel S. GUTS: fast calculation of the likelihood of a stochastic survival model. R Package Version 0.1. 2011 Jun 17</mixed-citation>
</ref>
<ref id="pcbi.1004978.ref030">
<label>30</label>
<mixed-citation publication-type="other" xlink:type="simple">Albert C, Vogel S. GUTS: fast calculation of the likelihood of a stochastic survival model. R Package Version 1.0. 2015 Jun 26. Available from: <ext-link ext-link-type="uri" xlink:href="http://CRAN.R-project.org/package=GUTS" xlink:type="simple">http://CRAN.R-project.org/package=GUTS</ext-link></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref031">
<label>31</label>
<mixed-citation publication-type="book" xlink:type="simple">
<collab>R Core Team</collab>. <source>R: a language and environment for statistical computing</source>. <publisher-loc>Vienna</publisher-loc>: <publisher-name>R Foundation for Statistical Computing</publisher-name>; <year>2015</year> <month>Mar</month> <day>9</day>. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.r-project.org" xlink:type="simple">http://www.r-project.org</ext-link></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref032">
<label>32</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Eddelbuettel</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Francois</surname> <given-names>R</given-names></name>. <article-title>Rcpp: seamless R and C++ integration</article-title>. <source>Journal of Statistical Software</source>. <year>2011</year>;<volume>40</volume>(<issue>8</issue>):<fpage>1</fpage>–<lpage>18</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.18637/jss.v040.i08" xlink:type="simple">10.18637/jss.v040.i08</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref033">
<label>33</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Eddelbuettel</surname> <given-names>D</given-names></name>. <source>Seamless, R and C++ integration with Rcpp</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>Springer</publisher-name>; <year>2013</year>. isbn: 978-1-4614-6867-7</mixed-citation>
</ref>
<ref id="pcbi.1004978.ref034">
<label>34</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Ashauer</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Hintermeister</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Caravatti</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Kretschmann</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Escher</surname> <given-names>B I</given-names></name>. <article-title>Toxicokinetic and toxicodynamic modeling explains carry-over toxicity from exposure to diazinon by slow organism recovery</article-title>. <source>Environmental Science &amp; Technology</source>. <year>2010</year>;<volume>44</volume>(<issue>10</issue>):<fpage>3963</fpage>–<lpage>3971</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1021/es903478b" xlink:type="simple">10.1021/es903478b</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref035">
<label>35</label>
<mixed-citation publication-type="other" xlink:type="simple">Varadhan R, Johns Hopkins University, Borchers H W, ABB Corporate Research. dfoptim: derivative-free optimization. R package version 2011.8-1. 2011. Available from: <ext-link ext-link-type="uri" xlink:href="http://CRAN.R-project.org/package=dfoptim" xlink:type="simple">http://CRAN.R-project.org/package=dfoptim</ext-link></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref036">
<label>36</label>
<mixed-citation publication-type="other" xlink:type="simple">Scheidegger A. adaptMCMC: implementation of a generic adaptive Monte Carlo Markov Chain sampler. R package version 1.1. 2012. Available from: <ext-link ext-link-type="uri" xlink:href="http://CRAN.R-project.org/package=adaptMCMC" xlink:type="simple">http://CRAN.R-project.org/package=adaptMCMC</ext-link></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref037">
<label>37</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Plummer</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Best</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Cowles</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Vines</surname> <given-names>K</given-names></name>. <article-title>CODA: convergence diagnosis and output analysis for MCMC</article-title>. <source>R News</source>. <year>2006</year>;<volume>6</volume>(<issue>1</issue>):<fpage>7</fpage>–<lpage>11</lpage>. Available from: <ext-link ext-link-type="uri" xlink:href="http://CRAN.R-project.org/doc/Rnews/Rnews_2006-1.pdf" xlink:type="simple">http://CRAN.R-project.org/doc/Rnews/Rnews_2006-1.pdf</ext-link></mixed-citation>
</ref>
<ref id="pcbi.1004978.ref038">
<label>38</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Wickham</surname> <given-names>H</given-names></name>. <source>ggplot2: elegant graphics for data analysis</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>Springer</publisher-name>; <year>2009</year>. isbn: 978-0-387-98140-6</mixed-citation>
</ref>
</ref-list>
</back>
</article>