<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
<front>
<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="publisher-id">09-PLCB-RA-0641R2</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1000501</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology/Comparative Sequence Analysis</subject><subject>Computational Biology/Evolutionary Modeling</subject><subject>Computational Biology/Genomics</subject><subject>Computational Biology/Population Genetics</subject><subject>Computer Science/Applications</subject><subject>Evolutionary Biology/Bioinformatics</subject><subject>Evolutionary Biology/Evolutionary and Comparative Genetics</subject><subject>Evolutionary Biology/Genomics</subject><subject>Genetics and Genomics/Bioinformatics</subject><subject>Genetics and Genomics/Comparative Genomics</subject><subject>Genetics and Genomics/Population Genetics</subject></subj-group></article-categories><title-group><article-title>Species Tree Inference by Minimizing Deep Coalescences</article-title><alt-title alt-title-type="running-head">Species Tree Inference by MDC</alt-title></title-group><contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Than</surname><given-names>Cuong</given-names></name><xref ref-type="aff" rid="aff1"/></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Nakhleh</surname><given-names>Luay</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group><aff id="aff1">          <addr-line>Department of Computer Science, Rice University, Houston, Texas, United States of America</addr-line>       </aff><contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Li</surname><given-names>Wen-Hsiung</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group><aff id="edit1">University of Chicago, United States of America</aff><author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">nakhleh@rice.edu</email></corresp>
<fn fn-type="con"><p>Conceived and designed the experiments: CT LN. Performed the experiments: CT. Analyzed the data: CT LN. Contributed reagents/materials/analysis tools: CT. Wrote the paper: CT LN.</p></fn>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="collection"><month>9</month><year>2009</year></pub-date><pub-date pub-type="epub"><day>11</day><month>9</month><year>2009</year></pub-date><volume>5</volume><issue>9</issue><elocation-id>e1000501</elocation-id><history>
<date date-type="received"><day>3</day><month>6</month><year>2009</year></date>
<date date-type="accepted"><day>7</day><month>8</month><year>2009</year></date>
</history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2009</copyright-year><copyright-holder>Than, Nakhleh</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract>
<p>In a 1997 seminal paper, W. Maddison proposed <italic>minimizing deep coalescences</italic>, or MDC, as an optimization criterion for inferring the species tree from a set of incongruent gene trees, assuming the incongruence is exclusively due to lineage sorting. In a subsequent paper, Maddison and Knowles provided and implemented a search heuristic for optimizing the MDC criterion, given a set of gene trees. However, the heuristic is not guaranteed to compute optimal solutions, and its hill-climbing search makes it slow in practice.
In this paper, we provide two <italic>exact</italic> solutions to the problem of inferring the species tree from a set of gene trees under the MDC criterion. In other words, our solutions are guaranteed to find the tree that minimizes the total number of deep coalescences from a set of gene trees. One solution is based on a novel integer linear programming (ILP) formulation, and another is based on a simple dynamic programming (DP) approach. Powerful ILP solvers, such as CPLEX, make the first solution appealing, particularly for very large-scale instances of the problem, whereas the DP-based solution eliminates dependence on proprietary tools, and its simplicity makes it easy to integrate with other genomic events that may cause gene tree incongruence.
Using the exact solutions, we analyze a data set of 106 loci from eight yeast species, a data set of 268 loci from eight <italic>Apicomplexan</italic> species, and several simulated data sets. We show that the MDC criterion provides very accurate estimates of the species tree topologies, and that our solutions are very fast, thus allowing for the accurate analysis of genome-scale data sets. Further, the efficiency of the solutions allow for quick exploration of sub-optimal solutions, which is important for a parsimony-based criterion such as MDC, as we show. We show that searching for the species tree in the compatibility graph of the clusters induced by the gene trees may be sufficient in practice, a finding that helps ameliorate the computational requirements of optimization solutions. Further, we study the statistical consistency and convergence rate of the MDC criterion, as well as its optimality in inferring the species tree. Finally, we show how our solutions can be used to identify potential horizontal gene transfer events that may have caused some of the incongruence in the data, thus augmenting Maddison's original framework. We have implemented our solutions in the PhyloNet software package, which is freely available at: <ext-link ext-link-type="uri" xlink:href="http://bioinfo.cs.rice.edu/phylonet" xlink:type="simple">http://bioinfo.cs.rice.edu/phylonet</ext-link>.</p>
</abstract><abstract abstract-type="summary"><title>Author Summary</title>
<p>Inferring the evolutionary history of a set of species, known as the <italic>species tree</italic>, is a task of utmost significance in biology and beyond. The traditional approach to accomplishing this task from molecular sequences entails sequencing a gene in the set of species under consideration, reconstructing the gene's evolutionary history, and declaring it to be the species tree. However, recent analyses of multiple gene data sets, made available thanks to advances in sequencing technologies, have indicated that gene trees in the same group of species may disagree with each other, as well as with the species tree. Therefore, the development of methods for inferring the species tree despite such disagreements is imperative.</p>
<p>In this paper, we propose such a method, which seeks the tree that minimizes the amount of disagreement between the input set of gene trees and the inferred one. We have implemented our method and studied its performance, in terms of accuracy and computational efficiency, on two biological data sets and a large number of simulated data sets. Our analyses, of both the biological and synthetic data sets, indicate high accuracy of the method, as well as computationally efficient solutions in practice. Hence, our method makes a good candidate for inferring accurate species trees, despite gene tree disagreements, at a genomic scale.</p>
</abstract><funding-group><funding-statement>This work was supported in part by DOE grant DE-FG02-06ER25734, NSF grant CCF-0622037, and grant R01LM009494 from the National Library of Medicine. The contents are solely the responsibility of the author and do not necessarily represent the official views of the DOE, NSF, National Library of Medicine or the National Institutes of Health. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="12"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>Accurate <italic>species trees</italic>, which model the evolutionary histories of sets of species, play a central role in comparative genomics, conservation studies, and analyses of population divergence, among many other applications. Traditionally, a species tree is inferred by sequencing a single locus (gene) in a group of species, its tree, known as the <italic>gene tree</italic>, is reconstructed using a method such as maximum likelihood, and this tree is declared to be the species tree. The underlying assumption is, obviously, that the gene tree and the species tree are identical, and hence reconstructing the former amounts to learning the latter. However, biologists have long recognized that this assumption is not necessarily always valid. Nevertheless, due to limitations of sequencing technologies, this approach remained the standard method until very recently.</p>
<p>With the advent of whole-genome sequencing, complete genomes of various organisms are becoming increasingly available, and particularly important, data from multiple loci in organisms are becoming available. The availability of such data has allowed for analyzing multiple loci in various groups of species. These analyses have in many cases uncovered widespread incongruence among the gene trees of the same set of organisms. Therefore, while reconstructing a gene tree requires considering the process of nucleotide substitution, reconstructing a species tree requires, in addition, considering the process that resulted in the incongruities among the gene trees, so that the species phylogeny is inferred by reconciling these incongruities. In this paper, we address the problem of efficient inference of accurate species trees from multiple loci, when the gene trees are assumed to be correct, and their incongruence is assumed to be exclusively due to (incomplete) <italic>lineage sorting</italic>. We also address the integration of horizontal gene transfer, as a potential cause of gene tree incongruence, into the framework. Let us illustrate the process of lineage sorting and the way it causes gene tree incongruence.</p>
<p>From an evolutionary perspective, and barring any recombination, the evolutionary history of a set of genomes would be depicted by a tree that is the same tree that models the evolution of each gene in these genomes. However, events such as recombination break “linkage” among the different parts of the genome, and those unlinked parts may take different paths through the phylogeny, which results in gene trees that differ from the species tree as well as from each other, due to lineage sorting. Widespread gene tree incongruence due to lineage sorting has been shown recently in several groups of closely related organisms, including yeast <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>, Drosophila <xref ref-type="bibr" rid="pcbi.1000501-Pollard1">[2]</xref>, Staphylococcus aureus <xref ref-type="bibr" rid="pcbi.1000501-Than1">[3]</xref>, and <italic>Apicomplexan</italic> <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>. In this case, gene trees need be reconciled <italic>within</italic> the branches of the species tree, as shown in <xref ref-type="fig" rid="pcbi-1000501-g001">Figure 1</xref>.</p>
<fig id="pcbi-1000501-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g001</object-id><label>Figure 1</label><caption>
<title>Lineage sorting within the branches of a species tree.</title>
<p>Even though <italic>C</italic> and <italic>D</italic> diverged from their most recent common ancestor at time <italic>T</italic><sub>1</sub>, going back in time one observes that their gene lineage (solid lines) persisted further in the past and <italic>coalesced</italic> at time <italic>t</italic>′, which preceded the speciation time <italic>T</italic><sub>2</sub>. In this scenario, the gene lineages from <italic>B</italic> and <italic>D</italic> happened to coalesce at time <italic>T</italic><sub>2</sub>, after <italic>t</italic>′, thus resulting in gene tree (<italic>A</italic>, (<italic>C</italic>, (<italic>B</italic>, <italic>D</italic>))) that disagrees with the species tree (<italic>A</italic>, (<italic>B</italic>, (<italic>C</italic>, <italic>D</italic>))).</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g001" xlink:type="simple"/></fig>
<p>A few methods have been introduced recently for analyzing gene trees, reconciling their incongruities, and inferring species trees despite these incongruities. Generally speaking, each of these methods follows one of two approaches: the <italic>combined analysis</italic> approach or the <italic>separate analysis</italic> approach; see <xref ref-type="fig" rid="pcbi-1000501-g002">Figure 2</xref>. In the combined analysis aproach, the sequences from multiple loci are concatenated, and the resulting “supergene” data set is analyzed using traditional phylogenetic methods, such as maximum parsimony or maximum likelihood; e.g., <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>. In the separate analysis approach, the sequence data from each locus is first analyzed individually, and a reconciliation of the gene trees is then sought. One way to reconcile the gene trees is by taking their majority consensus; e.g., <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>. Another is the “democratic vote” method, which entails taking the tree topology occurring with the highest frequency among all gene trees as the species tree. Shortcomings of these methods based on the two approaches have been analyzed by various researchers <xref ref-type="bibr" rid="pcbi.1000501-Degnan1">[5]</xref>,<xref ref-type="bibr" rid="pcbi.1000501-Kubatko1">[6]</xref>. Recently, Bayesian methods following the separate analysis approach have been developed <xref ref-type="bibr" rid="pcbi.1000501-Edwards1">[7]</xref>,<xref ref-type="bibr" rid="pcbi.1000501-Liu1">[8]</xref>. While these methods have a firm statistical basis, they are very time consuming, taking hours and days even on moderate-size data sets, which limits their scalability (for example, the BEST tool of <xref ref-type="bibr" rid="pcbi.1000501-Edwards1">[7]</xref> took 800 hours on the yeast data set of <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>).</p>
<fig id="pcbi-1000501-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g002</object-id><label>Figure 2</label><caption>
<title>Approaches for inferring species trees.</title>
<p>In the combined analysis approach (top), the sequences of the four loci are concatenated, generating one sequence data set, which is then analyzed by any of a host of phylogenetic tree reconstruction methods. In the separate analysis approach (bottom), a gene tree is reconstructed for each locus, and a species tree that reconciles their incongruence is inferred.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g002" xlink:type="simple"/></fig>
<p>In <xref ref-type="bibr" rid="pcbi.1000501-Maddison1">[9]</xref>, Maddison proposed a parsimony-based approach for inferring species trees from gene trees by minimizing the number of extra lineages, or minimizing deep coalesces (MDC). A heuristic for this approach was later described in <xref ref-type="bibr" rid="pcbi.1000501-Maddison2">[10]</xref>. In <xref ref-type="bibr" rid="pcbi.1000501-Than1">[3]</xref>, Than <italic>et al.</italic> provided a two-stage heuristic for inferring the species tree under the MDC criterion. However, no exact solutions for computing the MDC criterion exist. In this paper, we provide a formal definition of the notion of extra lineages, first described in <xref ref-type="bibr" rid="pcbi.1000501-Maddison1">[9]</xref>. We then present exact solutions—an integer linear programming (ILP) algorithm and a dynamic programming (DP) algorithm—for finding the optimal species tree topology from a set of gene tree topologies, under the MDC criterion (see <xref ref-type="sec" rid="s3">Methods</xref>). Our solutions are based on two central observations: (1) the species tree is a maximal clique in the compatibility graph of the set of species clusters, and (2) quantifying the amount of incongruence between a set of gene trees and a species tree can be obtained by a simple counting of lineages within the branches of the species tree. The accuracy and computational efficiency of these solutions, as we demonstrate, allow for analysis of genome-scale data sets and analysis of large numbers of data sets, such as those involved in simulation studies. Given that MDC is a parsimonious explanation of the incongruence in the data, it is imperative that sub-optimal solutions are considered. The computational efficiency of our solutions allow for a rapid exploration of sub-optimal solutions. Last but not least, these exact solutions allow us to empirically study properties of MDC as an optimality criterion for inferring the species tree. We have implemented both exact solutions in the PhyloNet software package <xref ref-type="bibr" rid="pcbi.1000501-Than2">[11]</xref>.</p>
<p>We reanalyze the <italic>Apicomplexan</italic> data set of <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref> (268 loci from eight species), the yeast data set of <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref> (106 loci from 8 yeast species), and a large number of synthetic data sets of species/gene trees (up to 2000 loci from 8 species) that we simulated using the Mesquite tool of <xref ref-type="bibr" rid="pcbi.1000501-Maddison3">[12]</xref>. For each data set, our method computed the species tree in at most a few seconds (in some cases, it took 0.01 seconds), and produced very accurate species trees, as we show. In the case of the <italic>Apicomplexan</italic> data set, we provide a tree that is slightly different from the one proposed by the authors in <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>, and discuss this tree. For the yeast data set, we obtain a tree that is identical to the one proposed by the authors in <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>, as well as other studies, such as <xref ref-type="bibr" rid="pcbi.1000501-Edwards1">[7]</xref>. In addition to the quality of the species trees and efficiency with which our method inferred them, one advantage of our method is that it can be used in an exploratory fashion, to screen multiple species tree candidates, and study the reconciliation scenarios within the branches of each of them. We illustrate the utility of this capability on the yeast and <italic>Apicomplexan</italic> data sets. Further, for the <italic>Apicomplexan</italic> data set, we illustrate how to screen for possible horizontal gene transfer events using the reconciliation scenarios computed by other methods. Using the synthetic data sets, we study the statistical consistency, as well as convergence rate, of the MDC criterion. We also show that it may be sufficient to consider only the set of clusters induced by the gene trees, which, in practice, may be much smaller than the set of all clusters of species, thus achieving further reduction in computation time. Nonetheless, we present an example to illustrate that, in certain cases, focusing only on the gene tree clusters may result in a sub-optimal species tree under MDC. The computational efficiency of our methods, coupled with the promising properties of the MDC criterion, makes our methods particularly applicable to large, genome-scale data sets.</p>
</sec><sec id="s2">
<title>Results/Discussion</title>
<sec id="s2a">
<title>Data</title>
<p>In this paper, we reanalyze two biological data sets under the MDC criterion: the <italic>Apicomplexan</italic> data set of <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref> and the yeast data set of <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>. The <italic>Apicomplexan</italic> data set contains eight species: <italic>Babesia bovis</italic> (Bb), <italic>Cryptospordium pavum</italic> (Cp), <italic>Eimeria tenella</italic> (Et), <italic>Plasmodium falciparum</italic> (Pf), <italic>Plasmodium vivax</italic> (Pv), <italic>Theileria annulata</italic> (Ta), <italic>Toxoplasma gondii</italic> (Tg), and <italic>Tetrahymena thermophila</italic> (Tt). The authors in <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref> identified 268 single-copy genes suitable for phylogenetic inference. For each gene, they reconstructed its tree using three methods (maximum parsimony, maximum likelihood, and neighbor joining). Among the 268 gene trees, there were 48 different gene-tree topologies, the most frequent of which appears with about 18% frequency. <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref> inferred the species tree using two different methods: the concatenation method and the majority consensus method, both of which produced the same tree, shown in <xref ref-type="fig" rid="pcbi-1000501-g003">Figure 3</xref>, which the author presented as their hypothesis for the species tree of these eight <italic>Apicomplexan</italic> species.</p>
<fig id="pcbi-1000501-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g003</object-id><label>Figure 3</label><caption>
<title>The species tree for the <italic>Apicomplexan</italic> data as inferred using the majority consensus method and reported in <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>.</title>
<p>The species <italic>Tt</italic> (<italic>Tetrahymena thermophila</italic>) is the outgroup. The numbers on the tree branches are bootstrap support values based on maximum likelihood, maximum parsimony and neighbor joining methods, respectively.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g003" xlink:type="simple"/></fig>
<p>The yeast data set contains seven Saccharomyces species <italic>S. cerevisiae</italic> (Scer), <italic>S. paradoxus</italic> (Spar), <italic>S. mikatae</italic> (Smik), <italic>S. kudriavzevii</italic> (Skud), <italic>S. bayanus</italic> (Sbay), <italic>S. castellii</italic> (Scas), <italic>S. kluyveri</italic> (Sklu), and the outgroup fungus <italic>Candida albicans</italic> (Calb). <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref> identified 106 genes, which are distributed throughout the <italic>S. cerevisiae</italic> genome on all 16 chromosomes and comprise about 2% of predicted genes. For each gene, they reconstructed its tree using the maximum likelihood and maximum parsimony methods. Among the 106 trees, more than 20 different gene-tree topologies were observed. The authors in <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref> inferred the species tree using the concatenation method on the the sequences of the 106 genes. The resulting tree had 100% bootstrap support for each of its branches, and the tree topology is shown in <xref ref-type="fig" rid="pcbi-1000501-g004">Figure 4</xref>.</p>
<fig id="pcbi-1000501-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g004</object-id><label>Figure 4</label><caption>
<title>The species tree for the yeast data set as inferred using the concatenation method and reported in <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>.</title>
<p>All branches in the tree have 100% bootstrap support values.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g004" xlink:type="simple"/></fig>
<p>Further, to study various properties of the MDC criterion and our exact solutions, we ran the methods on synthetic data. To generate those data, we used the Mesquite <xref ref-type="bibr" rid="pcbi.1000501-Maddison3">[12]</xref> “Uniform Speciation” (Yule) module to generate 30 species trees, each with 8 taxa and total depth of 1,000,000 generations. Next, within the branches of each of these 30 species trees, 2000 gene trees were simulated under the colaescent process by using the Mesquite module “Coalescence Contained within Current Tree”. The effective population size <italic>N<sub>e</sub></italic> is 100,000. These were the parameters also recommended by <xref ref-type="bibr" rid="pcbi.1000501-Maddison2">[10]</xref>. Finally, to enable studying the statistical consistency of methods, we simulated sampling of gene trees as follows: for each set of 2000 genes trees simulated within the branches of a species tree, we created random samples of 5, 10, 25, 50, 100, 250, 500, 1000, 1500 and 2000 trees; to obtain statistically significant results, we created 30 data sets for each sample size and averaged the results. It is worth mentioning that the parameters we used here, following <xref ref-type="bibr" rid="pcbi.1000501-Maddison2">[10]</xref>, produced a considerable amount of gene tree incongruence that was similar to the patterns we observed in the two biological data sets.</p>
<p>We have implemented our methods in the PhyloNet software package <xref ref-type="bibr" rid="pcbi.1000501-Than2">[11]</xref> and analyzed the biological and synthetic data described above by inferring the species tree from the gene trees. In the case of the biological data, and since the “true” species tree is unknown, we compared the species tree inferred by our method to that hypothesized by the authors. We compared the species tree inferred by our method to the one reported in <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref> and shown in <xref ref-type="fig" rid="pcbi-1000501-g003">Figure 3</xref> in the case of the <italic>Apicomplexan</italic> data set, and to the one reported in <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref> and shown in <xref ref-type="fig" rid="pcbi-1000501-g004">Figure 4</xref> for the yeast data set. It is worth mentioning that the species tree inferred by Rokas <italic>et al.</italic> for the yeast data set was also inferred by the BEST Bayesian method <xref ref-type="bibr" rid="pcbi.1000501-Liu1">[8]</xref> and reported in <xref ref-type="bibr" rid="pcbi.1000501-Edwards1">[7]</xref>.</p>
<p>Since the species tree is known for the synthetic data, we studied the performance of methods by comparing the species tree they inferred against the true species tree. For this comparison, we used the normalized Robinson-Foulds (RF) measure <xref ref-type="bibr" rid="pcbi.1000501-Robinson1">[13]</xref>, which quantifies the average proportion of branches present in one, but not both, of the trees. A value of 0 for the RF distance indicates the two trees are identical, and a value of 1 indicates the two trees and completely different (they disagree on every branch).</p>
</sec><sec id="s2b">
<title>Analysis of the Apicomplexan Data Set</title>
<p>Applying our method to the <italic>Apicomplexan</italic> data set, by using the 268 gene trees reported by <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>, there was a single optimal tree, which is shown in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5A</xref>. The inferred tree requires in total 440 extra lineages to reconcile all 268 gene trees. This tree differs from the tree reported in <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>, and shown in <xref ref-type="fig" rid="pcbi-1000501-g003">Figure 3</xref>, with respect to only the single clade (<italic>Cp</italic>, (<italic>Et</italic>, <italic>Tg</italic>)). As <xref ref-type="fig" rid="pcbi-1000501-g003">Figure 3</xref> shows, the tree reported by Kuo <italic>et al.</italic> places <italic>Cp</italic> as a sibling of the clade ((<italic>Et</italic>, <italic>Tg</italic>), ((<italic>Pf</italic>, <italic>Pv</italic>), (<italic>Bb</italic>, <italic>Ta</italic>))). However, it is important to note that as the authors reported, this placement of <italic>Cp</italic> has very low bootstrap support values of 38, 42, and 40 based on maximum likelihood, maximum parsimony and neighbor joining methods, respectively. Therefore, this grouping is not well-supported, even though both the concatenation and majority consensus methods compute it. Our method differed by placing <italic>Cp</italic> as a sibling of the clade (<italic>Et</italic>, <italic>Tg</italic>). In fact, this grouping was advocated by <xref ref-type="bibr" rid="pcbi.1000501-Levine1">[14]</xref>.</p>
<fig id="pcbi-1000501-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g005</object-id><label>Figure 5</label><caption>
<title>Optimal and sub-optimal trees inferred under the MDC criterion for the <italic>Apicomplexan</italic> data set.</title>
<p><bold>A</bold> The optimal (species) tree inferred by our method for the <italic>Apicomplexan</italic> data set; this tree requires 440 deep coalescences to reconcile all 268 gene trees. The two sub-optimal species trees with 469 and 542 deep coalescences are shown in <bold>B</bold> and <bold>C</bold>, respectively. The value on each branch is the numbers of extra lineages within that branch, when reconciling all 268 gene trees.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g005" xlink:type="simple"/></fig>
<p>To investigate this data set further, and particularly the placement of <italic>Cp</italic>, we employed our method in an exploratory mode: the method identified all maximal cliques in the compatibility graph of this data set, and for each maximal clique it computed the optimal fitting of all gene trees by minimizing the deep coalescences. The compatibility graph has 37 vertices (which means there are 37 different clusters induced by all gene trees) and 297 edges. In this graph, there are 247 maximal cliques, all of which have 6 vertices. This allows us to construct 247 fully binary species tree candidates. <xref ref-type="fig" rid="pcbi-1000501-g006">Figure 6</xref> plots the number of extra lineages for all 247 species tree candidates, sorted from the lowest (which is the optimal one with 440 extra lineages) to the least optimal, which is a maximal clique requiring about 2200 extra lineages to reconcile all gene trees.</p>
<fig id="pcbi-1000501-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g006</object-id><label>Figure 6</label><caption>
<title>Plot of the number of extra lineages for each of the binary (fully resolved) 247 species tree candidates identified as maximal cliques in the compatibility graph of the gene tree clusters.</title>
<p>The first three lowest values are 440, 469 and 542. The trees corresponding to these numbers are shown in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5</xref>, respectively.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g006" xlink:type="simple"/></fig>
<p>We observed that next to the optimal maximal clique with 440 extra lineages, the next two sub-optimal maximal cliques within 100 lineage counts from the optimal one had 469 and 542 extra lineages, respectively. In other words, in addition to the optimal maximal clique, whose corresponding species tree is shown in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5A</xref>, there were two additional trees very close in terms of the optimality of MDC. These two trees are shown in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5B and 5C</xref>. It is worth noting that the tree in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5B</xref> is exactly the tree reported in <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>, and that the tree in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5C</xref> is the third way to group <italic>Cp</italic>, (<italic>Et</italic>, <italic>Tb</italic>) and ((<italic>Bb</italic>, <italic>Ta</italic>), (<italic>Pf</italic>, <italic>Pv</italic>)). In other words, while our method identified a single optimal tree, this tree along with the two close sub-optimal trees differ from each other by the placement of <italic>Cp</italic>. This fact is already reflected in the community by having two different hypotheses about this placement reported by Levine <xref ref-type="bibr" rid="pcbi.1000501-Levine1">[14]</xref> and Kuo <italic>et al.</italic> <xref ref-type="bibr" rid="pcbi.1000501-Kuo1">[4]</xref>. The MDC criterion, however, supports Levine's hypothesis of the species tree, which has 29 fewer deep coalescence events than that proposed by Kuo <italic>et al.</italic></p>
<p>Beside the biological significance of the results, this analysis highlights several strengths of our method. It is very fast, and it can be run in an exploratory way, which allows the biologist to investigate multiple hypotheses that, while not all optimal, are very close in terms of the optimality criterion. Our method took a few seconds to compute all the values reported in <xref ref-type="fig" rid="pcbi-1000501-g006">Figure 6</xref>. In other words, the method took a few seconds for 247 inferences of species tree candidates, each inference entailing the analysis of 268 gene trees. Second, while the majority consensus method reports a single tree, our method, when run in an exploratory manner, allows for exploring the “landscape” of the different tree topologies that could be species tree candidates. Third, the computation carried out very efficiently using our formulation allows us to explore the number of extra lineages on each of the branches of the inferred species tree, or any candidate tree that the biologist may wish to explore. For example, these numbers for the top three trees are shown on the branches of the trees in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5</xref>. Notice that across all three trees, only the number on one branch changes, and that is affected by the placement of <italic>Cp</italic>. These numbers may be useful in a further analysis aimed at estimating divergence times or population sizes, since these two parameters affect the number of extra lineages.</p>
<sec id="s2b1">
<title>Horizontal gene transfer or error in the gene trees?</title>
<p>In our paper, we consider the problem of species tree inference when species/gene tree incongruence is due to incomplete lineage sorting. However, gene trees can also differ from their containing species tree because of horizontal gene transfer (HGT). The phylogeny-based approach to detecting HGT is to reconcile the topological incongruence between a pair of species and gene trees. Here, we argue that we can also make HGT inference based on the number of extra lineages in each branch of the inferred species tree.</p>
<p>Suppose the number of extra lineages in branch <italic>e</italic> = (<italic>u</italic>, <italic>v</italic>) of the species tree <italic>T</italic>′ is small, relative to the size of cluster <italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>). This implies that for most gene trees, lineages in <italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>) coalesce at branch <italic>e</italic> or at branches below <italic>e</italic>. For a few remaining gene trees, there exist extra lineages in <italic>e</italic> that coalesce deeper with other lineages outside <italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>). Given the fact that the deeper a coalescence event, the less likely it will occur <xref ref-type="bibr" rid="pcbi.1000501-Maddison1">[9]</xref>, we can be more inclined to claim that for those gene trees, their incongruence with the species tree <italic>T</italic>′ on the cluster <italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>) is due to HGT.</p>
<p>In <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5A</xref>, the number of extra lineages in the branch that induces (<italic>Pv</italic>, <italic>Pf</italic>) is 2. This data set has 268 genes, and this means that 266 genes coalesced on the branch incoming into the most recent common ancestor (MRCA) of (<italic>Pv</italic>, <italic>Pf</italic>), while only two gene trees give rise to deep coalescences of the genes in <italic>Pv</italic> and <italic>Pf</italic>. The amount of deep coalescences persisting through a species tree branch may give an indication as to the length (time) and width (population size) of that branch. In this case, having only two out of 268 genes fail to coalesce indicate that the branch incoming into the MRCA of (<italic>Pv</italic>, <italic>Pf</italic>) in the species tree is very long so that the probability of two genes from <italic>Pv</italic> and <italic>Pf</italic> failing to coalesce is small. Therefore, one can zoom in on those two genes and try to understand why they failed to coalesce. The two gene trees are depicted within the branches of the species tree in <xref ref-type="fig" rid="pcbi-1000501-g007">Figure 7</xref>.</p>
<fig id="pcbi-1000501-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g007</object-id><label>Figure 7</label><caption>
<title>The only two gene trees of the <italic>Apicomplexan</italic> data set that do not have the cluster (<italic>Pv</italic>, <italic>Pf</italic>).</title>
<p><bold>A</bold> The coalescence process, as inferred by MDC, for gene tree (((<italic>Ta</italic>, <italic>Bb</italic>), ((((<italic>Tg</italic>, <italic>Et</italic>), <italic>Cp</italic>), <italic>Pv</italic>), <italic>Pf</italic>)), <italic>Tt</italic>). <bold>B</bold> The coalescence process, as inferred by MDC, for gene tree ((((((<italic>Ta</italic>, <italic>Bb</italic>), (<italic>Tg</italic>, <italic>Et</italic>)), <italic>Cp</italic>), <italic>Pv</italic>), <italic>Pf</italic>), <italic>Tt</italic>).</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g007" xlink:type="simple"/></fig>
<p>While deep coalescence may still be a possibility, though one with low probability, two other factors could have given rise to this scenario. One scenario is that in these two gene trees, <italic>Pf</italic> and <italic>Pv</italic> were grouped incorrectly; that is, the gene trees are incorrect. This is an illustration of how simultaneous reconstruction of the species and gene trees may help identify more accurate gene trees. The second scenario involves horizontal gene transfer. In this case, the two gene trees can be reanalyzed, after the species tree has been inferred, so as to reconcile them with the species tree, assuming HGT as a cause of the incongruence. <xref ref-type="fig" rid="pcbi-1000501-g008">Figure 8</xref> shows the results of such an analysis using the RIATA-HGT method <xref ref-type="bibr" rid="pcbi.1000501-Nakhleh1">[15]</xref> as implemented in PhyloNet <xref ref-type="bibr" rid="pcbi.1000501-Than2">[11]</xref>. In other words, using this exploratory analysis, which can be rapidly carried out given our method's efficiency, three hypotheses can be generated: one involving deep coalscences, one involving inaccuracy in the gene trees, and a third involving HGT. While tests such as bootstrapping can help assess, to some degree, the support of gene tree branches, some preliminary work has been done on stochastically distinguishing between lineage sorting and horizontal gene transfer (or reticulate evolution in general) as possible causes of incongruence <xref ref-type="bibr" rid="pcbi.1000501-Than3">[16]</xref>,<xref ref-type="bibr" rid="pcbi.1000501-Meng1">[17]</xref>.</p>
<fig id="pcbi-1000501-g008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g008</object-id><label>Figure 8</label><caption>
<title>Reconciliations of the two gene trees in <xref ref-type="fig" rid="pcbi-1000501-g007">Figure 7</xref> and the species tree in <xref ref-type="fig" rid="pcbi-1000501-g005">Figure 5A</xref> assuming HGT as the source of incongruence.</title>
<p><bold>A</bold> The reconciliation scenario for the gene tree (((<italic>Ta</italic>, <italic>Bb</italic>), ((((<italic>Tg</italic>, <italic>Et</italic>), <italic>Cp</italic>), <italic>Pv</italic>), <italic>Pf</italic>)), <italic>Tt</italic>). <bold>B</bold> The reconciliation for the gene tree ((((((<italic>Ta</italic>, <italic>Bb</italic>), (<italic>Tg</italic>, <italic>Et</italic>)), <italic>Cp</italic>), <italic>Pv</italic>), <italic>Pf</italic>), <italic>Tt</italic>).</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g008" xlink:type="simple"/></fig></sec></sec><sec id="s2c">
<title>Analysis of the Yeast Data Set</title>
<p>The yeast data set contains 106 genes from eight species, with massive discordance among the gene trees, as reported in <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>. The authors concatenated all gene sequences and used maximum likelihood and maximum parsimony methods to reconstruct the species tree, and produced a species tree all of whose branches had 100% bootstrap support; this tree is shown in <xref ref-type="fig" rid="pcbi-1000501-g004">Figure 4</xref>.</p>
<p>For our analysis, we reconstructed the gene trees using a maximum parsimony heuristic, and used our method to infer the species tree. There was a single optimal tree found by our method, which is shown in <xref ref-type="fig" rid="pcbi-1000501-g009">Figure 9A</xref>. Clearly, the tree is identical to the one reported by <xref ref-type="bibr" rid="pcbi.1000501-Rokas1">[1]</xref>. This tree requires 127 extra lineages to reconcile all 106 gene trees. Edwards <italic>et. al.</italic> <xref ref-type="bibr" rid="pcbi.1000501-Edwards1">[7]</xref> also reported the same species tree using their Bayesian tool, BEST <xref ref-type="bibr" rid="pcbi.1000501-Liu1">[8]</xref>. However, while our method took a fraction of a second to infer this species tree, the BEST tool took 800 hours.</p>
<fig id="pcbi-1000501-g009" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g009</object-id><label>Figure 9</label><caption>
<title>The species tree inferred by our method for the yeast data set.</title>
<p><bold>A</bold> The tree topology and the number of extra lineages, under the optimal reconciliation, for each of its branches. <bold>B</bold> Plot of the number of extra lineages for all 48 species tree candidates.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g009" xlink:type="simple"/></fig>
<p>As we did with the <italic>Apicomplexan</italic> data set, we also generated all species tree candidates from the compatibility graph built from gene trees (see <xref ref-type="sec" rid="s3">Methods</xref>). The compatibility graph for this yeast data has 17 vertices and 94 edges. We then built 48 binary trees from the 48 maximal cliques in the compatibility graph, and scored the minimum number of deep coalescences required to reconcile all gene trees with each of the trees; these values are shown in <xref ref-type="fig" rid="pcbi-1000501-g009">Figure 9B</xref>. The majority of those species tree candidates require more than 200 extra lineages. The first seven best trees have 127, 134, 163, 170, 186, 191 and 193, respectively. The best tree (the one with 127 extra lineages) is the one shown in <xref ref-type="fig" rid="pcbi-1000501-g009">Figure 9A</xref>, while the other six are shown in <xref ref-type="fig" rid="pcbi-1000501-g010">Figure 10</xref>. A very important point to make here is that these seven trees, while produced by our non-parametric method, include all six maximum posterior probability trees found by BEST in <xref ref-type="bibr" rid="pcbi.1000501-Edwards1">[7]</xref>. As before, this exploratory nature of our method allows us to investigate all seven of these trees, not only in terms of their topological differences, but also the implications that selecting one of them has on the reconciliation scenarios of the gene trees in the data set.</p>
<fig id="pcbi-1000501-g010" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g010</object-id><label>Figure 10</label><caption>
<title>The six best sub-optimal trees for the yeast data set.</title>
<p>These trees, from left to right and top down, have in total 134, 163, 170, 186, 191 and 193 extra lineages. The values on the branches are the numbers of extra lineages within them.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g010" xlink:type="simple"/></fig></sec><sec id="s2d">
<title>Analysis of the Synthetic Data</title>
<p>The simulated data allowed us to investigate other aspects of the performance of our method, since the true species tree is known and we could compare the inferences made by our method against the true trees.</p>
<p>One of the questions we sought to investigate is whether we need to use the compatibility graph of all species clusters or whether it is sufficient to focus on the compatibility graph of the gene trees. For <italic>n</italic> taxa, there are 2<italic><sup>n</sup></italic>−1 clusters (including clusters that have a single taxon and the cluster that contains all taxa, but excluding the “empty cluster”); hence, the compatibility graph of all clusters will have 2<italic><sup>n</sup></italic>−1 clusters, which becomes prohibitive for large values of <italic>n</italic>. The number of clusters exhibited by the gene trees, on the other hand, may be much smaller than 2<italic><sup>n</sup></italic>−1 in practice. Indeed, this is what we observed in the case of the <italic>Apicomplexian</italic> and yeast data sets. For both data sets, we have <italic>n</italic> = 8 (the number of species), which means the number of all species clusters is 2<sup>8</sup>−1 = 255. However, the numbers of clusters exhibited by the gene trees were 37 and 17, for the <italic>Apicomplexan</italic> and yeast data sets, respectively. This led to drastic reductions in actual running times. Further, this reduction was achieved without compromising the accuracy, as the optimal trees for both data sets were found in the compatibility graphs of the gene trees. To investigate this question further, we analyzed the synthetic data sets with respect to varying the sizes of gene tree samples (see section Data above). For each sample of gene trees, we built the compatibility graph and tested whether the species tree is one of the maximal cliques in the graph. However, rather than the binary question of existence/non-existence, we quantified the proportion of branches in the true species tree that are missing from the closest maximal clique in the graph. If this proportion is zero, then the species tree is one of the maximal cliques. <xref ref-type="fig" rid="pcbi-1000501-g011">Figure 11A</xref> shows the results for this analysis. The results show that when only 25 gene trees are sampled, the compatibility graph provides good “coverage” that the true species tree is already one of the maximal cliques. Even for sample sizes 5 and 10, the proportion of true species tree branches missing from the best maximal clique are 0.02 and 0.004, respectively. These are negligible error rates.</p>
<fig id="pcbi-1000501-g011" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g011</object-id><label>Figure 11</label><caption>
<title>Analysis of the synthetic data sets.</title>
<p><bold>A</bold> The average percentage of clusters induced by species trees that are not found in the set of clusters induced by gene trees. The <italic>x</italic>-axis indicates the number of sampled gene trees. The results are based on the simulated data. <bold>B</bold> The performance of our method on the simulated data. The <italic>x</italic>-axis indicates the number of sampled gene trees. The <italic>y</italic>-axis is the average Robinson-Foulds distance between the species tree and the tree inferred by our method.<bold>C</bold> The difference in the number of extra lineages of the true species tree and that number for the inferred optimal tree.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g011" xlink:type="simple"/></fig>
<p>Two important observations are in order. First, these results are well-supported under the experimental conditions we used, which are the parameters used by <xref ref-type="bibr" rid="pcbi.1000501-Maddison2">[10]</xref>. Investigations of this question under a richer set of parameters is currently under way. In fact, it is safe to state that there will be points in the parameter space under which the species tree may not be a maximal clique, or even a subgraph, of the compatibility graph. Such a scenario occurs, for example, in the “anomaly zone” <xref ref-type="bibr" rid="pcbi.1000501-Degnan1">[5]</xref>, which is a setting of specific branch lengths under which the most likely gene tree may be different from the species tree. Second, even though under these parameters the true species tree is one of the maximal cliques in the compatibility graph, this does not imply that optimizing the MDC criterion will correctly identify the species tree. To investigate this issue, we ran our method on the data and compared the optimal tree under MDC with the true species tree. The results are shown in <xref ref-type="fig" rid="pcbi-1000501-g011">Figure 11B</xref>.</p>
<p>In phylogenetics, two of the desirable properties of a phylogenetic method are <italic>statistical consistency</italic> and <italic>fast convergence</italic>. A method is statistically consistent if the error rate in its inference converges to 0 as the amount of data increases. In our case, a method is statistically consistent if the RF distance between the tree it infers and the true tree converges to 0 as more genes are sampled. Fast convergence means that not only does the method converge, but it does so “fast”, where “fast” here means “from small sample size of the data.” The results in <xref ref-type="fig" rid="pcbi-1000501-g011">Figure 11</xref> show that the MDC criterion has very low error rate. It is important to note that while the average RF distance for our method does not go down to zero, even when 2000 gene trees are used, the RF distance is negligible (about 0.04, which virtually amounts to zero wrong branches in the inferred tree). Yet, the interesting observation here is that combining the results of <xref ref-type="fig" rid="pcbi-1000501-g011">Figures 11A and 11B</xref>, we drew the conclusion that the species tree is one of the maximal cliques in the compatibility graph (particularly for samples of size at least 25), yet it is not the one with the minimum number of extra lineages. <xref ref-type="fig" rid="pcbi-1000501-g011">Figure 11C</xref> shows the difference between the number of extra lineages in the true species tree and that number in the tree inferred by our method. Since our method is guaranteed to find the optimal tree in terms of the number of deep coalescens, this difference (when subtracting the latter number from the former) is non-negative. The results in the figure confirmed our hypothesis: in a few cases, the tree that minimizes the number of deep coalescences is not necessarily the true species tree. Instead, in this case, the species tree is sometimes a sub-optimal one. We observed this same issue even with the two biological data sets, particularly the <italic>Apicomplexan</italic> one. We then investigated how sub-optimal the species tree may be. In all cases when the species tree was not the optimal tree, it was either the first or second sub-optimal one. Once again, this matches results of the analysis of the two biological data sets.</p>
<p>It is important to note that in practice only gene sequences are given and gene trees need to be inferred. Error in the inferred gene trees may affect the performance of the method negatively. Under the MDC criterion, error in the inferred gene trees may masquerade as deep coalescence events, but also may “cancel out” some of the incongruence truly caused by deep coalescence. Therefore, extending the simulation study to include inference of the gene trees, rather than assume they are given, is a task we identify for immediate future research. Nonetheless, the analysis of the two biological data sets above includes the inference of the gene trees themselves, and in these two cases, the MDC criterion provides accurate results.</p>
<p>We finish by showing an example of three gene trees for which the tree that minimizes their deep coalescences is not one of the maximal cliques in the compatibility graph of these three gene trees. Consider the three trees in <xref ref-type="fig" rid="pcbi-1000501-g012">Figure 12</xref>. The compatibility graph that is built from their induced clusters is shown in <xref ref-type="fig" rid="pcbi-1000501-g013">Figure 13</xref>. A minimum vertex-weighted clique of the graph is highlighted with thick lines. Its weight is 1+2+4 = 7, and it corresponds to the leftmost tree in <xref ref-type="fig" rid="pcbi-1000501-g012">Figure 12</xref>. This means that this tree requires seven extra lineages to reconcile the three trees in <xref ref-type="fig" rid="pcbi-1000501-g012">Figure 12</xref>. However, the tree in <xref ref-type="fig" rid="pcbi-1000501-g014">Figure 14</xref> requires only six extra lineages to reconcile all those three trees. We note that it induces cluster {<italic>a</italic>, <italic>b</italic>, <italic>c</italic>, <italic>e</italic>} that does not appear in any of the three gene trees. This illustrates that in theory the optimal tree under the MDC criterion may not be found in the compatibility graph of the clusters induced by the gene trees.</p>
<fig id="pcbi-1000501-g012" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g012</object-id><label>Figure 12</label><caption>
<title>A case in which the optimal tree under the MDC criterion contains at least one cluster that does not occur in any of the input gene trees.</title>
<p>Three gene trees over the taxon-set {<italic>a</italic>, <italic>b</italic>, <italic>c</italic>, <italic>d</italic>, <italic>e</italic>}. The tree that minimizes the total number of extra lineages and that consists of only clusters induced by those three trees is the leftmost one. It requires seven extra lineages to reconcile all three gene trees.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g012" xlink:type="simple"/></fig><fig id="pcbi-1000501-g013" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g013</object-id><label>Figure 13</label><caption>
<title>The compatibility graph that is built from clusters induced by the gene trees in <xref ref-type="fig" rid="pcbi-1000501-g012">Figure 12</xref>.</title>
<p>Each vertex of the graph corresponds to a cluster (a string next to it), and two vertices are adjacent if the two clusters they represent are compatible. The number following ‘/’ in a vertex label is the total number of extra lineages contributed by the cluster corresponding to that vertex.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g013" xlink:type="simple"/></fig><fig id="pcbi-1000501-g014" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g014</object-id><label>Figure 14</label><caption>
<title>A tree that requires six extra lineages to reconcile the three gene trees in <xref ref-type="fig" rid="pcbi-1000501-g012">Figure 12</xref>.</title>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g014" xlink:type="simple"/></fig></sec></sec><sec id="s3">
<title>Methods</title>
<p>In this section, we describe in detail two methods for reconstructing species trees from multiple gene trees using the MDC criterion. We first introduce notations and definitions necessary for their description.</p>
<sec id="s3a">
<title>Notations</title>
<p>Let <italic>X</italic> be a set of taxa. A phylogenetic tree <italic>T</italic> = (<italic>V</italic>, <italic>E</italic>), where <italic>V</italic> and <italic>E</italic> are its nodes and edges, is a tree with a bijection from <italic>X</italic> to its leaf set <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e001" xlink:type="simple"/></inline-formula>. Tree <italic>T</italic> is said to be rooted if the edges in <italic>E</italic> are directed and there is a single internal node <italic>r</italic> with in-degree 0. Except when explicitly stated, in this paper trees are assumed to be rooted and binary. For a node <italic>v</italic>∈<italic>V</italic>, we denote by <italic>T</italic>(<italic>v</italic>) the <italic>clade</italic>, or subtree of <italic>T</italic>, rooted at <italic>v</italic>. The set of leaf labels of <italic>T</italic>(<italic>v</italic>) is called a <italic>cluster</italic>, denoted by <italic>C<sub>T</sub></italic>(<italic>v</italic>). Cluster <italic>X</italic> and single-element clusters are called trivial. For a cluster <italic>A</italic>, we denote by MRCA<italic><sub>T</sub></italic> (<italic>A</italic>) the <italic>most recent common ancestor</italic> (also known as the <italic>least common ancestor</italic>) of taxa in <italic>A</italic> in tree <italic>T</italic>. For two clusters <italic>A</italic>, <italic>B</italic>, we say that they are <italic>compatible</italic> if either <italic>A</italic>⊆<italic>B</italic>, <italic>B</italic>⊆<italic>A</italic> or <italic>A</italic>∩<italic>B</italic> = Ø. Informally, it means that there exists a rooted tree that induces, or contains, both <italic>A</italic> and <italic>B</italic>. A collection of pairwise compatible clusters uniquely defines a rooted tree <xref ref-type="bibr" rid="pcbi.1000501-Semple1">[18]</xref>.</p>
</sec><sec id="s3b">
<title>Counting the Number of Extra Lineages</title>
<p>In <xref ref-type="bibr" rid="pcbi.1000501-Maddison1">[9]</xref>, Maddison introduced the concept of <italic>extra lineages</italic> and a parsimony approach, which we call the “minimize deep coalescences” approach, for species tree inference based on minimizing the number of extra lineages. We first define a mapping between a species tree and gene tree which allows for a precise definition of the number of extra lineages. We then prove that this number can be computed independently for each cluster in the species tree.</p>
<p>Suppose we are given a gene tree <italic>T</italic> and a species tree <italic>T</italic>′ on the same taxon set <italic>X</italic>. We fit tree <italic>T</italic> into <italic>T</italic>′ by mapping each node <italic>v</italic> of <italic>T</italic> according to three rules below:</p>
<list list-type="order"><list-item>
<p>Each taxon (leaf) in <italic>T</italic> is mapped to the corresponding taxon in <italic>T</italic>′.</p>
</list-item><list-item>
<p>Let <italic>v</italic>′ = MRCA<italic><sub>T</sub></italic><sub>′</sub>(<italic>C<sub>T</sub></italic>(<italic>v</italic>)), and let <italic>u</italic>′ be the parent node of <italic>v</italic>′. Then, <italic>v</italic> is mapped to any point <italic>p<sub>v</sub></italic>, excluding node <italic>u</italic>′, in the branch (<italic>u</italic>′, <italic>v</italic>′) in <italic>T</italic>′.</p>
</list-item><list-item>
<p>If <italic>w</italic> is a proper descendant of <italic>v</italic>, and <italic>w</italic>, <italic>v</italic> are mapped to <italic>p<sub>w</sub></italic>, <italic>p<sub>v</sub></italic> in <italic>T</italic>′, then <italic>p<sub>w</sub></italic> must also be a proper descendant of <italic>p<sub>v</sub></italic>.</p>
</list-item></list>
<p><xref ref-type="fig" rid="pcbi-1000501-g015">Figure 15</xref> shows an example of such a mapping. In this figure, we can see that for branch (<italic>u</italic>′,<italic>v</italic>′) there are two lineages, one being the lineage of the common ancestor of species <italic>A</italic>, <italic>B</italic>, <italic>C</italic>, and one being lineage <italic>D</italic>. In the case where <italic>T</italic> and <italic>T</italic>′ are identical topologically, then we can easily see that there is only one lineage in (<italic>u</italic>′, <italic>v</italic>′), that is one lineage for the common ancestor of <italic>A</italic>, <italic>B</italic>, <italic>C</italic> and <italic>D</italic>. Therefore, for the branch (<italic>u</italic>′, <italic>v</italic>′) in <xref ref-type="fig" rid="pcbi-1000501-g015">Figure 15</xref>, the number of extra lineages is 2−1 = 1. Formally, we define the number of extra lineages in a branch of <italic>T</italic>′ as the number of lineages exiting it minus 1, and the number of extra lineages for <italic>T</italic>′ as the sum of those numbers in all of its branches.</p>
<fig id="pcbi-1000501-g015" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g015</object-id><label>Figure 15</label><caption>
<title>Fitting a gene tree <italic>T</italic> into a species tree <italic>T</italic>′.</title>
<p>Here, only mappings of internal nodes of <italic>T</italic> are shown.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g015" xlink:type="simple"/></fig>
<p>Each <italic>p<sub>v</sub></italic> in <italic>T</italic>′ that is the image of the mapping of an internal node <italic>v</italic> in <italic>T</italic> is a coalescence event. In <xref ref-type="fig" rid="pcbi-1000501-g015">Figure 15</xref>, there are two coalescence events in branch (<italic>v</italic>′, <italic>w</italic>′), but there are no coalescent events in branch (<italic>u</italic>′, <italic>v</italic>′). We can establish a relationship between the number of extra lineages and the number of coalescence events as follows. Consider a branch (<italic>u</italic>′, <italic>v</italic>′) of <italic>T</italic>′. There are exactly |<italic>C<sub>T</sub></italic><sub>′</sub> (<italic>v</italic>′)| species in the subtree <italic>T</italic>′(<italic>v</italic>′). If there were no coalescence among those species, then there would be |<italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>′)| lineages exiting (<italic>u</italic>′, <italic>v</italic>′). However, each coalescence event merges two lineages into one, and we note that under the mapping's conditions whenever there is a coalescence among lineages from species in <italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>′), it must occur either in a branch of <italic>T</italic>′(<italic>v</italic>′) or in (<italic>u</italic>′, <italic>v</italic>′). Therefore, the actual number of lineages exiting (<italic>u</italic>′, <italic>v</italic>′) is equal to |<italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>′)| minus the total number of coalescence events among species in <italic>T</italic>′(<italic>v</italic>′). We have the following lemma.</p>
<p><bold>Lemma 1.</bold> <italic>Let n</italic>(<italic>v</italic>′) <italic>be the number of coalescence events occurring among species in C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>′). <italic>Then, the number of extra lineages in branch</italic> (<italic>u</italic>′,<italic>v</italic>′) <italic>is</italic><disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e002" xlink:type="simple"/><label>(1)</label></disp-formula>We note that this lemma may not be true without the conditions of the mapping defined above. If we do not have Conditions 2 and 3, then lineages <italic>A</italic>, <italic>B</italic>, and <italic>C</italic> in <xref ref-type="fig" rid="pcbi-1000501-g015">Figure 15</xref>, for example, need not coalesce in branch (<italic>v</italic>′, <italic>w</italic>′). They can coalesce at a branch above <italic>u</italic>′, and in this case there are four lineages (and therefore, three extra ones instead of one) in (<italic>u</italic>′, <italic>v</italic>′).</p>
<p>As we have seen, the number of extra lineages reflects the amount of incongruence between two trees. It is small if two trees are quite similar, and in fact zero if they are identical topologically. Given a set of gene trees, one approach to inferring the species tree is to minimize the number of extra lineages:</p>
<p><bold>Problem 1</bold> (Species Tree Inference Using the MDC Criterion).</p>
<p><bold>Input:</bold> <italic>A set of gene trees</italic> <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e003" xlink:type="simple"/></inline-formula>.</p>
<p><bold>Output:</bold> <italic>A tree T such that the total number of extra lineages required to reconcile all gene trees of</italic> <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e004" xlink:type="simple"/></inline-formula> <italic>within T is minimized.</italic></p>
<p>Let <italic>T</italic> be a gene tree and <italic>T</italic>′ be a species tree. It seems that the number of extra lineages in a branch (<italic>u</italic>′, <italic>v</italic>′) of <italic>T</italic>′ depends on both <italic>T</italic> and <italic>T</italic>′. The following theorem shows it depends only on the gene tree <italic>T</italic> and on the cluster <italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>′). Because of its independence on <italic>T</italic>′, we can denote it by <italic>α</italic>(<italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>′),<italic>T</italic>).</p>
<p><bold>Theorem 2.</bold> <italic>Let T be a gene tree and T</italic>′ <italic>be a species tree</italic>. <italic>Let</italic> (<italic>u</italic>′, <italic>v</italic>′) <italic>be a branch of the species tree T</italic>′. <italic>Denote by t</italic><sub>1</sub>, …, <italic>t<sub>k</sub> all the maximal clades of T such that</italic> <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e005" xlink:type="simple"/></inline-formula> <italic>for</italic> 1≤<italic>i</italic>≤<italic>k</italic>. <italic>Then, the number of extra lineages in</italic> (<italic>u</italic>′, <italic>v</italic>′) <italic>is</italic><disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e006" xlink:type="simple"/><label>(2)</label></disp-formula></p>
<p><italic>Proof</italic>. Consider a clade <italic>t<sub>i</sub></italic>, 1≤<italic>i</italic>≤<italic>k</italic>. First of all, because <italic>t<sub>i</sub></italic> is clade of <italic>T</italic> all species in <italic>t<sub>i</sub></italic> must coalesce into a single lineage (and they must coalesce either in a branch of <italic>T</italic>′ (<italic>v</italic>′) or (<italic>u</italic>′, <italic>v</italic>′) under the mapping's conditions defined above). Second, because <italic>t<sub>i</sub></italic> is a maximal clade such that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e007" xlink:type="simple"/></inline-formula>, that lineage will not coalesce with any other lineages in <italic>T</italic>′(<italic>v</italic>′) or in branch (<italic>u</italic>′, <italic>v</italic>′) (for otherwise, we will obtain a bigger clade in <italic>T</italic> whose leaf set is still a subset of <italic>C<sub>T</sub></italic><sub>′</sub>(<italic>v</italic>′), a contradiction). By Lemma 1, the number of coalescence events occurring among species of <italic>t<sub>i</sub></italic> is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e008" xlink:type="simple"/></inline-formula>. We also note that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e009" xlink:type="simple"/></inline-formula>. So, by applying this lemma again, we obtain<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e010" xlink:type="simple"/></disp-formula>As an example, consider trees <italic>T</italic> and <italic>T</italic>′ in <xref ref-type="fig" rid="pcbi-1000501-g015">Figure 15</xref>. From the figure, we see that there are no extra lineages in branch (<italic>v</italic>′, <italic>w</italic>′). The cluster under <italic>w</italic>′ is {<italic>A</italic>, <italic>B</italic>, <italic>C</italic>}. The clade (<italic>A</italic>, (<italic>B</italic>, <italic>C</italic>)) is a maximal clade of <italic>T</italic> with only species from {<italic>A</italic>, <italic>B</italic>, <italic>C</italic>}. Therefore, the number of extra lineages is 1−1 = 0. On the other hand, consider branch (<italic>u</italic>′, <italic>v</italic>′). There are two maximal clades in <italic>T</italic> with species from {<italic>A</italic>, <italic>B</italic>, <italic>C</italic>, <italic>D</italic>}: (<italic>A</italic>, (<italic>B</italic>, <italic>C</italic>)) and <italic>D</italic>. So, the number of extra lineages in (<italic>u</italic>′, <italic>v</italic>′) is 2−1 = 1.</p>
</sec><sec id="s3c">
<title>Integer-Linear Programming Method</title>
<p><italic>Linear programming</italic> (LP) is an algorithmic technique for optimizing a <italic>linear</italic> objective function, <italic>cx</italic>, where <italic>c</italic> is a vector of coefficients and <italic>x</italic> is a vector of variables, subject to a set of <italic>linear</italic> constraints <italic>Ax</italic>≤<italic>b</italic>, where <italic>A</italic> is a matrix of coefficients and <italic>b</italic> is a vector of coefficients. This is usually written in the form<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e011" xlink:type="simple"/></disp-formula>When the variables <italic>x</italic> are required to be integers, the problem becomes an <italic>integer linear programming</italic> (ILP). Solving an ILP problem is NP-hard in general. Nonetheless, software tools for efficiently solving large and hard instances in practice have been developed. One such (commercial) tool is CPLEX, which was developed by the company ILOG (<ext-link ext-link-type="uri" xlink:href="http://www.ilog.com/" xlink:type="simple">http://www.ilog.com/</ext-link>). In this section, we show how to use ILP to optimize the MDC criterion.</p>
<p>Using Theorem 2, it is possible to compute the number of extra lineages contributed by each individual cluster <italic>without</italic> the need of prior knowledge of the species tree. We can therefore solve Problem 1 exactly by seeking a maximal set of compatible clusters whose total number of extra lineages is minimum. Based on our empirical observation, we find that the species tree is almost always an agglomeration of compatible clusters, each of which appears in at least one of the input gene trees (see <xref ref-type="sec" rid="s2">Results and Discussion</xref>). Based on these two observations, we propose the following method to approximately solve Problem 1:</p>
<list list-type="order"><list-item>
<p>Given a collection <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e012" xlink:type="simple"/></inline-formula> of gene trees, compute the set of nontrivial clusters <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e013" xlink:type="simple"/></inline-formula> induced by trees in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e014" xlink:type="simple"/></inline-formula>;</p>
</list-item><list-item>
<p>Construct a vertex-weighted compatibility graph <italic>G</italic> based on the set <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e015" xlink:type="simple"/></inline-formula>; and</p>
</list-item><list-item>
<p>Find a maximal clique of <italic>G</italic> that minimizes the number of extra lineages, and reconstruct the species tree based on clusters in this clique.</p>
</list-item></list>
<p>We now give the details of the method, using the illustration in <xref ref-type="fig" rid="pcbi-1000501-g016">Figure 16</xref> as the running example.</p>
<fig id="pcbi-1000501-g016" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000501.g016</object-id><label>Figure 16</label><caption>
<title>Illustration of our method.</title>
<p><bold>A</bold> A weighted compatibility graph is constructed from the clusters of the input gene trees (<italic>T</italic><sub>1</sub>, <italic>T</italic><sub>2</sub>, and <italic>T</italic><sub>3</sub>). Shown at the bottom are all maximal cliques, along with their weights (the sum of weights of their vertices), of which the three heaviest maximal cliques are highlighted. <bold>B</bold> A table showing the calculation of the weight of each vertex in the compatibility graph, where in each row <italic>v</italic> is the vertex that corresponds to the cluster in that row, and <italic>w</italic>(<italic>v</italic>) = <italic>m</italic>+1−(<italic>α</italic>(<italic>C</italic>, <italic>T</italic><sub>1</sub>)+<italic>α</italic>(<italic>C</italic>,<italic>T</italic><sub>2</sub>)+<italic>α</italic>(<italic>C</italic>,<italic>T</italic><sub>3</sub>)) (<italic>m</italic> = 2 in this case).</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.g016" xlink:type="simple"/></fig><sec id="s3c1">
<title>Constructing the weighted compatibility graph</title>
<p>Given that a collection of pairwise compatible clusters uniquely defines a tree <xref ref-type="bibr" rid="pcbi.1000501-Semple1">[18]</xref>, we construct the <italic>compatibility graph G</italic> of all clusters and focus on the cliques in this graph. Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e016" xlink:type="simple"/></inline-formula> be the collection of all nontrivial clusters of a set <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e017" xlink:type="simple"/></inline-formula>. of gene trees. The vertex set of <italic>G</italic> represents clusters in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e018" xlink:type="simple"/></inline-formula>. Two vertices are adjacent if the two corresponding clusters are compatible. Since we seek the clique that is simultaneously maximal in terms of size and minimizes the amount of deep coalescence events, we assign weights to the vertices of <italic>G</italic> in a special way. Let <italic>v</italic> be a vertex in the graph <italic>G</italic> and let <italic>A</italic> be the cluster it represents. For each gene tree <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e019" xlink:type="simple"/></inline-formula>., we count the number of extra lineages contributed by <italic>A</italic> as in Eq. (2). In total, cluster <italic>A</italic> contributes <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e020" xlink:type="simple"/></inline-formula> extra lineages. Let <italic>m</italic> be the maximum value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e021" xlink:type="simple"/></inline-formula> over all <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e022" xlink:type="simple"/></inline-formula>. In the example of <xref ref-type="fig" rid="pcbi-1000501-g016">Figure 16</xref>, we have <italic>m</italic> = 2. We assign vertex <italic>v</italic> the weight<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e023" xlink:type="simple"/><label>(3)</label></disp-formula>The reason we define <italic>w</italic>(<italic>v</italic>) in this manner, instead of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e024" xlink:type="simple"/></inline-formula>, will be clear next, where we describe an efficient ILP formulation for identifying the clique in the compatibility graph that corresponds to a tree that minimizes the total number of deep coalescence events.</p>
</sec><sec id="s3c2">
<title>Finding the tree in the compatibility graph</title>
<p>A clique in the compatibility graph <italic>G</italic> defines a tree, and we seek a clique in <italic>G</italic> such that, on one hand, it has as many vertices as possible (to obtain maximal resolution of the species tree), and on the other hand, the number of extra lineages contributed by its vertices, as defined above, is as small as possible. The way we assign weights to vertices of the compatibility graph <italic>G</italic> allows us to achieve both goals simultaneously.</p>
<p>In the compatibility graph <italic>G</italic>, we will find a maximum vertex-weighted clique. This clique is clearly a maximal one, because each vertex is assigned a positive weight by function <italic>w</italic>(<italic>v</italic>) in Eq. (3), which will guarantee having the maximal number possible of compatible clusters in the species tree. Moreover, because we maximize the clique weight, by the definition of function <italic>w</italic>(<italic>v</italic>), we in fact minimize the total number of extra lineages (among all cliques of the same size).</p>
<p>Finding a maximal vertex-weighted clique in a graph can be converted to a linear programming formulation <xref ref-type="bibr" rid="pcbi.1000501-Bomze1">[19]</xref>:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e025" xlink:type="simple"/><label>(4)</label></disp-formula>This formulation allows us to solve our problem by using CPLEX. From empirical observations, we find that the compatibility graph <italic>G</italic> is often very sparse. Therefore, the above formulation results in a very large number of constraints <italic>x<sub>u</sub></italic>+<italic>x<sub>v</sub></italic>≤1. The following method can reduce the number of constraints to exactly |<italic>V</italic>(<italic>G</italic>)|. For a vertex <italic>u</italic>∈<italic>V</italic>(<italic>G</italic>), let <italic>N</italic>(<italic>u</italic>) be the set of vertices that are adjacent to <italic>u</italic>. The constraint<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e026" xlink:type="simple"/></disp-formula>means that if <italic>u</italic> is included in the clique (i.e, <italic>x<sub>u</sub></italic> = 1), then no vertices in <italic>G</italic> that are not adjacent to <italic>u</italic> are included in the clique (all <italic>x<sub>v</sub></italic>'s not in <italic>N</italic>(<italic>u</italic>) are 0), and that if any of those vertices is included in the clique, then <italic>u</italic> cannot be in the clique (i.e., <italic>x<sub>u</sub></italic> must be 0). Therefore, the above linear programming formulation is equivalent to<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e027" xlink:type="simple"/><label>(5)</label></disp-formula></p>
</sec></sec><sec id="s3d">
<title>Dynamic Programming Method</title>
<p>We can find the optimal species tree without the need to find a maximum vertex-weighted clique in the compatibility graph <italic>G</italic> by employing dynamic programming. Dynamic programming (DP) is a divide-and-conquer algorithmic technique that breaks a problem into sub-problems, solves the sub-problems, and then uses those solutions in an efficient way to form the solution to the main problem. For a problem to be amenable to a DP solution, it has to exhibit certain properties. For more details, the reader is referred to any standard textbook on algorithms; e.g., <xref ref-type="bibr" rid="pcbi.1000501-Cormen1">[20]</xref>. We now describe how to solve the MDC optimization problem using a DP algorithm.</p>
<p>Let <italic>t</italic>′ be a rooted binary phylogenetic tree on a fixed taxon subset <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e028" xlink:type="simple"/></inline-formula> of <italic>X</italic>. Given a collection <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e029" xlink:type="simple"/></inline-formula> of gene trees, let us denote <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e030" xlink:type="simple"/></inline-formula> the sum of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e031" xlink:type="simple"/></inline-formula> for all clusters <italic>B</italic> in <italic>t</italic>′, including <italic>A</italic>. Further, let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e032" xlink:type="simple"/></inline-formula> be the minimum value of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e033" xlink:type="simple"/></inline-formula> over all possible binary trees <italic>t</italic>′ on <italic>A</italic>. If <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e034" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e035" xlink:type="simple"/></inline-formula> are the two subtrees whose roots are the children of <italic>t</italic>′, then clearly we have<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e036" xlink:type="simple"/></disp-formula>The quantity <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e037" xlink:type="simple"/></inline-formula> is fixed for each <italic>A</italic>, and therefore, if <italic>t</italic>′ is an optimal tree on <italic>A</italic> such that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e038" xlink:type="simple"/></inline-formula> is minimum, then <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e039" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e040" xlink:type="simple"/></inline-formula> must also be minimum. This allows us to compute <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e041" xlink:type="simple"/></inline-formula> recursively as follows.</p>
<list list-type="order"><list-item>
<p>Let <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e042" xlink:type="simple"/></inline-formula> be a collection of nontrivial clusters induced by trees in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e043" xlink:type="simple"/></inline-formula> plus cluster <italic>X</italic> and all single-element clusters. We partition <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e044" xlink:type="simple"/></inline-formula> into subsets <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e045" xlink:type="simple"/></inline-formula>, where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e046" xlink:type="simple"/></inline-formula>, 1≤<italic>i</italic>≤|<italic>X</italic>|, is the collection of all clusters of size <italic>i</italic> in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e047" xlink:type="simple"/></inline-formula>.</p>
</list-item><list-item>
<p>For every <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e048" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e049" xlink:type="simple"/></inline-formula>, and for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e050" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e051" xlink:type="simple"/></inline-formula>.</p>
</list-item><list-item>
<p>For <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e052" xlink:type="simple"/></inline-formula>, 3≤<italic>i</italic>≤|<italic>X</italic>|,<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e053" xlink:type="simple"/></disp-formula></p>
</list-item><list-item>
<p>Return <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e054" xlink:type="simple"/></inline-formula>.</p>
</list-item></list>
<p>Although the algorithm described above only returns the number of extra lineages, we can easily modify it so that we can actually reconstruct the optimal species tree. For each <italic>i</italic>, 3≤<italic>i</italic>≤|<italic>X</italic>|, in Step 3, we also record two pointers to optimal subclusters <italic>A</italic><sub>1</sub> and <italic>A</italic><sub>2</sub>. By backtracking those pointers starting with cluster <italic>X</italic>, we can obtain the optimal set of compatible clusters.</p>
<p>Any tree <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e055" xlink:type="simple"/></inline-formula> induces exactly |<italic>X</italic>|−2 nontrivial clusters. Therefore, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e056" xlink:type="simple"/></inline-formula>. For every <italic>A</italic>⊆<italic>X</italic>, there are at most <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e057" xlink:type="simple"/></inline-formula> subsets of <italic>A</italic> to look at, and hence Step 3 is executed at most <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e058" xlink:type="simple"/></inline-formula> times. The running time of the algorithm is then <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e059" xlink:type="simple"/></inline-formula>.</p>
<p>The collection <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e060" xlink:type="simple"/></inline-formula> described in the algorithm only contains clusters induced by gene trees in <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e061" xlink:type="simple"/></inline-formula>. However, we can replace it by the collection of all nonempty subsets of <italic>X</italic> (there are 2<sup>|<italic>X</italic>|</sup>−1 such subsets). In this case, the running time of the algorithm is bounded by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000501.e062" xlink:type="simple"/></inline-formula>. Although it is exponential, it is significantly better than a brute-force approach that examines all (2|<italic>X</italic>|−3)!! binary rooted phylogenetic trees on <italic>X</italic>.</p>
</sec></sec></body>
<back>
<ack>
<p>The authors would like to thank Laura Kubatko and an anonymous reviewer for helpful comments on the manuscript.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1000501-Rokas1"><label>1</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Rokas</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Williams</surname><given-names>B</given-names></name>
<name name-style="western"><surname>King</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Carroll</surname><given-names>S</given-names></name>
</person-group>             <year>2003</year>             <article-title>Genome-scale approaches to resolving incongruence in molecular phylogenies.</article-title>             <source>Nature</source>             <volume>425</volume>             <fpage>798</fpage>             <lpage>804</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Pollard1"><label>2</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Pollard</surname><given-names>DA</given-names></name>
<name name-style="western"><surname>Iyer</surname><given-names>VN</given-names></name>
<name name-style="western"><surname>Moses</surname><given-names>AM</given-names></name>
<name name-style="western"><surname>Eisen</surname><given-names>MB</given-names></name>
</person-group>             <year>2006</year>             <article-title>Widespread discordance of gene trees with species tree in <italic>Drosophila</italic>: evidence for incomplete lineage sorting.</article-title>             <source>PLoS Genet</source>             <volume>2</volume>             <fpage>e173</fpage>          </element-citation></ref>
<ref id="pcbi.1000501-Than1"><label>3</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Than</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Sugino</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Innan</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Nakhleh</surname><given-names>L</given-names></name>
</person-group>             <year>2008</year>             <article-title>Efficient inference of bacterial strain trees from genome-scale multi-locus data.</article-title>             <source>Bioinformatics</source>             <volume>24</volume>             <fpage>i123</fpage>             <lpage>i131</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Kuo1"><label>4</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kuo</surname><given-names>CH</given-names></name>
<name name-style="western"><surname>Wares</surname><given-names>JP</given-names></name>
<name name-style="western"><surname>Kissinger</surname><given-names>JC</given-names></name>
</person-group>             <year>2008</year>             <article-title>The Apicomplexan whole-genome phylogeny: An analysis of incongurence among gene trees.</article-title>             <source>Mol Biol Evol</source>             <volume>25</volume>             <fpage>2689</fpage>             <lpage>2698</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Degnan1"><label>5</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Degnan</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Rosenberg</surname><given-names>N</given-names></name>
</person-group>             <year>2006</year>             <article-title>Discordance of species trees with their most likely gene trees.</article-title>             <source>PLoS Genetics</source>             <volume>2</volume>             <fpage>e68</fpage>          </element-citation></ref>
<ref id="pcbi.1000501-Kubatko1"><label>6</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kubatko</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Degnan</surname><given-names>J</given-names></name>
</person-group>             <year>2007</year>             <article-title>Inconsistency of phylogenetic estimates from concatenated data under coalescence.</article-title>             <source>Systematic Biology</source>             <volume>56</volume>             <fpage>17</fpage>             <lpage>24</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Edwards1"><label>7</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Edwards</surname><given-names>SV</given-names></name>
<name name-style="western"><surname>Liu</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Pearl</surname><given-names>DK</given-names></name>
</person-group>             <year>2007</year>             <article-title>High-resolution species trees without concatenation.</article-title>             <source>PNAS</source>             <volume>104</volume>             <fpage>5936</fpage>             <lpage>5941</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Liu1"><label>8</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Liu</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Pearl</surname><given-names>DK</given-names></name>
</person-group>             <year>2007</year>             <article-title>Species trees from gene trees: Reconstructing Bayesian posterior distri-butions of a species phylogeny using estimated gene tree distributions.</article-title>             <source>Systematic Biology</source>             <volume>56</volume>             <fpage>504</fpage>             <lpage>514</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Maddison1"><label>9</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Maddison</surname><given-names>W</given-names></name>
</person-group>             <year>1997</year>             <article-title>Gene trees in species trees.</article-title>             <source>Systematic Biology</source>             <volume>46</volume>             <fpage>523</fpage>             <lpage>536</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Maddison2"><label>10</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Maddison</surname><given-names>W</given-names></name>
<name name-style="western"><surname>Knowles</surname><given-names>L</given-names></name>
</person-group>             <year>2006</year>             <article-title>Inferring phylogeny despite incomplete lineage sorting.</article-title>             <source>Systematic Biology</source>             <volume>55</volume>             <fpage>21</fpage>             <lpage>30</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Than2"><label>11</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Than</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Ruths</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Nakhleh</surname><given-names>L</given-names></name>
</person-group>             <year>2008</year>             <article-title>PhyloNet: a software package for analyzing and reconstructing reticulate evolutionary relationships.</article-title>             <source>BMC Bioinformatics</source>             <volume>9</volume>             <fpage>322</fpage>          </element-citation></ref>
<ref id="pcbi.1000501-Maddison3"><label>12</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Maddison</surname><given-names>W</given-names></name>
<name name-style="western"><surname>Maddison</surname><given-names>D</given-names></name>
</person-group>             <year>2004</year>             <article-title>Mesquite: A modular system for evolutionary analysis. Version 1.01.</article-title>             <comment><ext-link ext-link-type="uri" xlink:href="http://mesquiteproject.org" xlink:type="simple">http://mesquiteproject.org</ext-link></comment>          </element-citation></ref>
<ref id="pcbi.1000501-Robinson1"><label>13</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Robinson</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Foulds</surname><given-names>L</given-names></name>
</person-group>             <year>1981</year>             <article-title>Comparison of phylogenetic trees.</article-title>             <source>Math Biosciences</source>             <volume>53</volume>             <fpage>131</fpage>             <lpage>147</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Levine1"><label>14</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Levine</surname><given-names>ND</given-names></name>
</person-group>             <year>1984</year>             <article-title>Taxonomy and review of the coccidian genus <italic>cryptosporidium</italic> (Protozoa, Api-complexa).</article-title>             <source>Journal of Protozool</source>             <volume>31</volume>          </element-citation></ref>
<ref id="pcbi.1000501-Nakhleh1"><label>15</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Nakhleh</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Ruths</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Wang</surname><given-names>L</given-names></name>
</person-group>             <year>2005</year>             <article-title>RIATA-HGT: A fast and accurate heuristic for reconstrucing horizontal gene transfer.</article-title>             <person-group person-group-type="editor">
<name name-style="western"><surname>Wang</surname><given-names>L</given-names></name>
</person-group>             <fpage>84</fpage>             <lpage>93</lpage>             <comment>Proceedings of the Eleventh International Computing and Combinatorics Conference (COCOON 05)</comment>             <comment>LNCS #3595</comment>          </element-citation></ref>
<ref id="pcbi.1000501-Than3"><label>16</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Than</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Ruths</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Innan</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Nakhleh</surname><given-names>L</given-names></name>
</person-group>             <year>2007</year>             <article-title>Confounding factors in HGT detection: Statistical error, coalescent effects, and multiple solutions.</article-title>             <source>Journal of Computational Biology</source>             <volume>14</volume>             <fpage>517</fpage>             <lpage>535</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Meng1"><label>17</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Meng</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Kubatko</surname><given-names>L</given-names></name>
</person-group>             <year>2009</year>             <article-title>Detecting hybrid speciation in the presence of incomplete lineage sorting using gene tree incongruence: A model.</article-title>             <source>Theoretical Population Biology</source>             <volume>75</volume>             <fpage>35</fpage>             <lpage>45</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Semple1"><label>18</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Semple</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Steel</surname><given-names>M</given-names></name>
</person-group>             <year>2003</year>             <source>Phylogenetics</source>             <publisher-name>Oxford University Press</publisher-name>          </element-citation></ref>
<ref id="pcbi.1000501-Bomze1"><label>19</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bomze</surname><given-names>IM</given-names></name>
<name name-style="western"><surname>Budinich</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Pardalos</surname><given-names>PM</given-names></name>
<name name-style="western"><surname>Pelillo</surname><given-names>M</given-names></name>
</person-group>             <year>1999</year>             <article-title>The maximum clique problem.</article-title>             <source>Hand-book of combinatorial optimization</source>             <fpage>1</fpage>             <lpage>74</lpage>          </element-citation></ref>
<ref id="pcbi.1000501-Cormen1"><label>20</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Cormen</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Leiserson</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Rivest</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Stein</surname><given-names>C</given-names></name>
</person-group>             <year>2001</year>             <source>Introduction to Algorithms</source>             <publisher-name>The MIT Press, 2 edition</publisher-name>          </element-citation></ref>
</ref-list>

</back>
</article>