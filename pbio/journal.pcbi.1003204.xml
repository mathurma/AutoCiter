<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id><journal-title-group>
<journal-title>PLoS Computational Biology</journal-title></journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-13-00275</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1003204</article-id>
<article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories>
<title-group>
<article-title>Detecting and Removing Inconsistencies between Experimental Data and Signaling Network Topologies Using Integer Linear Programming on Interaction Graphs</article-title>
<alt-title alt-title-type="running-head">Training Signaling Maps with Integer Programming</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes" xlink:type="simple"><name name-style="western"><surname>Melas</surname><given-names>Ioannis N.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" equal-contrib="yes" xlink:type="simple"><name name-style="western"><surname>Samaga</surname><given-names>Regina</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Alexopoulos</surname><given-names>Leonidas G.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>Steffen</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group>
<aff id="aff1"><label>1</label><addr-line>National Technical University of Athens, Athens, Greece</addr-line></aff>
<aff id="aff2"><label>2</label><addr-line>Max Planck Institute for Dynamics of Complex Technical Systems, Magdeburg, Germany</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Bonneau</surname><given-names>Richard</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group>
<aff id="edit1"><addr-line>New York University, United States of America</addr-line></aff>
<author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">klamt@mpi-magdeburg.mpg.de</email></corresp>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn>
<fn fn-type="con"><p>Conceived and designed the experiments: LGA. Performed the experiments: LGA. Analyzed the data: INM RS SK. Contributed reagents/materials/analysis tools: LGA. Wrote the paper: INM RS LGA SK. Designed the study: SK. Developed the software: INM SK. Tested, used, and documented the software: INM RS SK.</p></fn>
</author-notes>
<pub-date pub-type="collection"><month>9</month><year>2013</year></pub-date>
<pub-date pub-type="epub"><day>5</day><month>9</month><year>2013</year></pub-date>
<volume>9</volume>
<issue>9</issue>
<elocation-id>e1003204</elocation-id>
<history>
<date date-type="received"><day>14</day><month>2</month><year>2013</year></date>
<date date-type="accepted"><day>16</day><month>7</month><year>2013</year></date>
</history>
<permissions>
<copyright-year>2013</copyright-year>
<copyright-holder>Melas et al</copyright-holder><license xlink:type="simple"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions>
<related-article id="RA1" related-article-type="companion" ext-link-type="uri" vol="" page="e.1002972" xlink:type="simple" xlink:href="info:doi/10.1371/journal.pcbi.1002972"> <article-title>New Methods Section in <italic>PLOS Computational Biology</italic></article-title></related-article>
<abstract>
<p>Cross-referencing experimental data with our current knowledge of signaling network topologies is one central goal of mathematical modeling of cellular signal transduction networks. We present a new methodology for data-driven interrogation and training of signaling networks. While most published methods for signaling network inference operate on Bayesian, Boolean, or ODE models, our approach uses integer linear programming (ILP) on interaction graphs to encode constraints on the qualitative behavior of the nodes. These constraints are posed by the network topology and their formulation as ILP allows us to predict the possible qualitative changes (up, down, no effect) of the activation levels of the nodes for a given stimulus. We provide four basic operations to detect and remove inconsistencies between measurements and predicted behavior: (i) find a topology-consistent explanation for responses of signaling nodes measured in a stimulus-response experiment (if none exists, find the closest explanation); (ii) determine a minimal set of nodes that need to be corrected to make an inconsistent scenario consistent; (iii) determine the optimal subgraph of the given network topology which can best reflect measurements from a set of experimental scenarios; (iv) find possibly missing edges that would improve the consistency of the graph with respect to a set of experimental scenarios the most. We demonstrate the applicability of the proposed approach by interrogating a manually curated interaction graph model of EGFR/ErbB signaling against a library of high-throughput phosphoproteomic data measured in primary hepatocytes. Our methods detect interactions that are likely to be inactive in hepatocytes and provide suggestions for new interactions that, if included, would significantly improve the goodness of fit. Our framework is highly flexible and the underlying model requires only easily accessible biological knowledge. All related algorithms were implemented in a freely available toolbox <italic>SigNetTrainer</italic> making it an appealing approach for various applications.</p>
</abstract>
<abstract abstract-type="summary"><title>Author Summary</title>
<p>Cellular signal transduction is orchestrated by communication networks of signaling proteins commonly depicted on signaling pathway maps. However, each cell type may have distinct variants of signaling pathways, and wiring diagrams are often altered in disease states. The identification of truly active signaling topologies based on experimental data is therefore one key challenge in systems biology of cellular signaling. We present a new framework for training signaling networks based on interaction graphs (IG). In contrast to complex modeling formalisms, IG capture merely the known positive and negative edges between the components. This basic information, however, already sets hard constraints on the possible qualitative behaviors of the nodes when perturbing the network. Our approach uses Integer Linear Programming to encode these constraints and to predict the possible changes (down, neutral, up) of the activation levels of the involved players for a given experiment. Based on this formulation we developed several algorithms for detecting and removing inconsistencies between measurements and network topology. Demonstrated by EGFR/ErbB signaling in hepatocytes, our approach delivers direct conclusions on edges that are likely inactive or missing relative to canonical pathway maps. Such information drives the further elucidation of signaling network topologies under normal and pathological phenotypes.</p>
</abstract>
<funding-group><funding-statement>LGA and INM were funded via European Social Fund (ESF) and Greek National funds through the Operational Program “Education and Lifelong Learning” of the National Strategic Reference Framework (NSRF) - Research Funding Program: ERC. SK and RS acknowledge funding and support by the German Federal Ministry of Education and Research (“Virtual Liver” project (grant 0315744) and “JAK-Sys” project (grant 0316167B)) and by the Federal State of Saxony-Anhalt (Research Center “Dynamic Systems: Biosystems Engineering”). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="19"/></counts></article-meta>
</front>
<body><sec id="s1">
<title/>
<disp-quote>
<p>This is a <italic>PLOS Computational Biology</italic> Methods article.</p>
</disp-quote></sec><sec id="s2">
<title>Introduction</title>
<p>Recent advancements in high-throughput phosphoproteomic technologies have led to the generation of large datasets, capturing the cell's response to factors of its biochemical micro-environment <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez1">[1]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Alexopoulos1">[2]</xref>. However, interpreting the increasing amounts of available data in such a manner that biologically relevant insights can be drawn for the interrogated system is far from trivial. To this end, signaling data are often examined in conjunction with network models that represent our current knowledge of the causality of cellular signal flows (as stored, for example, in online pathway databases <xref ref-type="bibr" rid="pcbi.1003204-JoshiTope1">[3]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Kanehisa1">[5]</xref>). Finding, in a rigorous fashion, causal explanations for experimental data in the context of a given network topology is one of the key challenges for systems biology of cellular signaling.</p>
<p>Significant work has been published on this front attempting to identify inconsistencies between measured data and signaling topologies <xref ref-type="bibr" rid="pcbi.1003204-Mitsos1">[6]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Feiglin1">[16]</xref>. Some methods also facilitate an optimization of the network structure to identify the wiring diagram that can best fit the data at hand <xref ref-type="bibr" rid="pcbi.1003204-Mitsos1">[6]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez2">[7]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Sachs1">[15]</xref>. However, before such an analysis can be conducted one has to choose an appropriate modeling formalism. Common approaches used for modeling signal transduction networks are based on graphs <xref ref-type="bibr" rid="pcbi.1003204-Guziolowski1">[12]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Gebser1">[13]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Klamt1">[17]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref>, Bayesian networks <xref ref-type="bibr" rid="pcbi.1003204-Sachs1">[15]</xref>, some form of logical modeling including Boolean or constrained fuzzy logic <xref ref-type="bibr" rid="pcbi.1003204-Klamt1">[17]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Morris2">[19]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Wang1">[20]</xref>, hybrid intelligent systems <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Morris2">[19]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Aldridge1">[21]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Bosl1">[23]</xref>, or ordinary differential equations (ODEs) <xref ref-type="bibr" rid="pcbi.1003204-Schoeberl1">[24]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Qiu1">[26]</xref>.</p>
<p>Deciding on the mathematical formalism to be used for representing and modeling signal transduction networks is often not trivial and depends on many factors such as the amount and type of available data, the quality of prior knowledge, whether transient or steady-state behavior needs to be addressed, the biological questions that are to be answered, the computational efforts and so forth. For example, ODE modeling or constrained fuzzy logic are closer to the actual mechanics of signal transduction than Boolean logic as they support continuous values for the activation states of signaling species, but at the cost of numerous free parameters. These parameters must be known (in addition to the actual (initial) network structure) or estimated from experimental data. A large number of parameters in the model often gives rise to identifiability problems whose resolution requires extensive and elaborate training datasets.</p>
<p>Graph models are probably the simplest models of signaling networks one can think of. In particular, <italic>signed directed graphs</italic> (also called interaction graphs, dependency graphs, or influence graphs), where each edge indicates either a positive or a negative effect of one node upon another, have frequently been used to investigate basic functional properties of biological networks with signal or information flows. Despite their simplicity, interaction graphs (IG) capture the most important biological information and are useful to uncover fundamental network properties such as feedback and feedforward loops or global interdependencies between the involved players. The fact that each Boolean and each ODE model has an underlying IG renders the analysis of IG directly relevant also for other modeling formalisms. A famous example is the fact that a system (in an ODE or Boolean model representation) exhibiting bistability must contain a positive feedback loop in its underlying network structure <xref ref-type="bibr" rid="pcbi.1003204-Thomas1">[27]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Soul1">[28]</xref>. Properties that are uniquely identifiable from a given IG immediately hold for all ODE and Boolean models that have this IG as underlying wiring diagram, whereas the opposite direction does not hold. For example, in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> we see that there is (exactly) one path in the IG leading from node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e001" xlink:type="simple"/></inline-formula> to node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e002" xlink:type="simple"/></inline-formula> and that this path is negative. We can therefore uniquely conclude from the IG that, in any Boolean or ODE model derived from it, a perturbation in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e003" xlink:type="simple"/></inline-formula> cannot lead to an increase in the activation level of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e004" xlink:type="simple"/></inline-formula>. In contrast, there is a positive and a negative path from <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e005" xlink:type="simple"/></inline-formula> to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e006" xlink:type="simple"/></inline-formula>, hence, nothing can be concluded from the graph alone when perturbing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e007" xlink:type="simple"/></inline-formula>. In fact, it will depend on the kinetics and parameters in an ODE model (and the logical functions in a logical model) whether the level of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e008" xlink:type="simple"/></inline-formula> will increase, decrease, or, in the extreme case, remain constant.</p>
<fig id="pcbi-1003204-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g001</object-id><label>Figure 1</label><caption>
<title>A simple example network used for illustration purposes.</title>
<p>The interaction graph consists of 7 nodes and 7 edges. The green nodes <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e009" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e010" xlink:type="simple"/></inline-formula> can be perturbed externally; the grey nodes <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e011" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e012" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e013" xlink:type="simple"/></inline-formula> are the readouts of the network whose activation state is measured in the experiments; the white nodes <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e014" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e015" xlink:type="simple"/></inline-formula> are latent nodes which are neither perturbed nor measured (see scenarios in <xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref>). (A) The initial topology of the interaction graph representing the prior knowledge. This graph produces a total fitting error of 5 over the three scenarios in <xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref>. (B) The (unique) optimal subgraph of (A) minimizing the total fitting error on the experimental scenarios to 2 (see <xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref>). (C) Two optimal graphs obtained from (A) by applying OPT_GRAPH: by adding edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e016" xlink:type="simple"/></inline-formula> and either (left) removing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e017" xlink:type="simple"/></inline-formula> <italic>or</italic> (right) removing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e018" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e019" xlink:type="simple"/></inline-formula>, the fitting error is eradicated completely and becomes 0 (cf. <xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref>).</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g001" position="float" xlink:type="simple"/></fig>
<p>The previous example shows that IG can be used to make predictions (without needing any further parameters) on the qualitative behavior of signaling and regulatory networks. These predictions can easily be compared with (qualitative trends of) experimental data, typically from stimulus-response experiments. The concept of the dependency matrix introduced in <xref ref-type="bibr" rid="pcbi.1003204-Klamt1">[17]</xref> is consequently based on the idea used above, namely to check—for each (ordered) pair <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e020" xlink:type="simple"/></inline-formula> of nodes <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e021" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e022" xlink:type="simple"/></inline-formula>—the existence of positive and negative paths (and negative feedback loops) to make predictions on the effect of perturbations in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e023" xlink:type="simple"/></inline-formula>. This concept has been applied, for instance, in <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> to experimental data of the epidermal growth factor (EGF) receptor signaling network. The comparisons of the predictions from the dependency matrix with the measured behavior from several combinatorial stimulations showed several inconsistencies from which some (cell-type specific) conclusions on missing or probably inactive interactions could be made. However, these conclusions were drawn by inspection only. It is therefore one goal of this study to develop methods that find, in an automatic way, corrections in the network structure improving the consistency. The dependency matrix is useful to get an overview on how a node can potentially influence the other nodes in the network; however, it may become limiting if multiple node values are measured in one experiment. Given the IG topology, state changes measured for certain nodes are, in general, not independent and therefore require stronger constraints. For example, assume there would be another node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e024" xlink:type="simple"/></inline-formula> in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> that is activated by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e025" xlink:type="simple"/></inline-formula> (edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e026" xlink:type="simple"/></inline-formula>). From the IG topology we know that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e027" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e028" xlink:type="simple"/></inline-formula> can both decrease or increase their levels if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e029" xlink:type="simple"/></inline-formula> is perturbed (as correctly predicted by the dependency matrix); however, it is not possible that their new steady state levels change in different directions.</p>
<p>A related class of methods for detecting discrepancies between IG topology and experimental data relies on the <italic>sign consistency rule</italic> <xref ref-type="bibr" rid="pcbi.1003204-Siegel1">[11]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Gebser1">[13]</xref>. The key idea is that, in a steady-state shift experiment, the direction of change of the state of a node must be explainable by the direction of change of at least one of its predecessor nodes (except for the directly perturbed node(s)). For example, in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref>, after a perturbation in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e030" xlink:type="simple"/></inline-formula>, the steady-state level of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e031" xlink:type="simple"/></inline-formula> may have become larger only if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e032" xlink:type="simple"/></inline-formula> decreased its activation level (as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e033" xlink:type="simple"/></inline-formula> inhibits <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e034" xlink:type="simple"/></inline-formula>) or if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e035" xlink:type="simple"/></inline-formula> increased its level (as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e036" xlink:type="simple"/></inline-formula> activates <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e037" xlink:type="simple"/></inline-formula>). The sign consistency rule gives rise to constraints on the possible patterns of “ups and downs” of the nodes' activation levels in a given IG. These constraints can be encoded, for example, by Answer Set Programming <xref ref-type="bibr" rid="pcbi.1003204-Gebser1">[13]</xref>. Confronting these constraints with experimental data may then lead to the detection of topological inconsistencies, namely if no sign pattern complying with the given measurements and perturbations can be found <xref ref-type="bibr" rid="pcbi.1003204-Siegel1">[11]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Gebser1">[13]</xref>.</p>
<p>The novel methods we will present herein are based on a similar sign consistency rule; however, they differ in a number of aspects. First, we will encode the sign constraints as an Integer Linear Programming (ILP) problem which has not been described before. This formulation gives us the opportunity to utilize the large corpus of effective algorithms developed for ILP problems. Furthermore, for the situation that multiple stimulus-response experiments are available, we will address aspects that go beyond the detection of inconsistencies from single experiments, namely to correct a given network structure such that the number of mismatches is minimized. For the structure optimization process we will consider edge removals as well as edge additions.</p>
<p>As starting point, we assume that we are given (i) an initial IG topology, for example, a “master topology” of a signaling pathway subsuming all reported (potential) interactions and (ii) a set of stimulus-response experiments (scenarios) in each of which some nodes were perturbed and the resulting up- or downregulation of some readout nodes was measured. The IG is a signed directed graph <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e038" xlink:type="simple"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e039" xlink:type="simple"/></inline-formula> is the set of nodes (species), <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e040" xlink:type="simple"/></inline-formula> is the set of edges (interactions), and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e041" xlink:type="simple"/></inline-formula> is the set of signs corresponding to edges in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e042" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e043" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e044" xlink:type="simple"/></inline-formula>). <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> and the three experimental scenarios in <xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref> (defined by the columns “Perturbations” and “Measurements”) provide an illustrative example. Here, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e045" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e046" xlink:type="simple"/></inline-formula> are nodes that can be perturbed; <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e047" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e048" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e049" xlink:type="simple"/></inline-formula> are the readout nodes for which we get measurements, and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e050" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e051" xlink:type="simple"/></inline-formula> are latent nodes which are neither perturbed nor measured.</p>
<table-wrap id="pcbi-1003204-t001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.t001</object-id><label>Table 1</label><caption>
<title>Example scenarios and optimizations for the example network in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1</xref>.</title>
</caption><alternatives><graphic id="pcbi-1003204-t001-1" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.t001" xlink:type="simple"/>
<table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td colspan="2" align="left" rowspan="1">Perturbations</td>
<td colspan="3" align="left" rowspan="1">Measurements</td>
<td colspan="3" align="left" rowspan="1">Initial fitting error (<xref ref-type="fig" rid="pcbi-1003204-g001">Fig. 1A</xref>)</td>
<td align="left" rowspan="1" colspan="1">MCoS</td>
<td colspan="3" align="left" rowspan="1">Remaining fitting error (<xref ref-type="fig" rid="pcbi-1003204-g001">Fig. 1B</xref>/<xref ref-type="fig" rid="pcbi-1003204-g001">Fig. 1C</xref>)</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><italic>A</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>D</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>F</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>G</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>H</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>F</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>G</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>H</italic></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><italic>F</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>G</italic></td>
<td align="left" rowspan="1" colspan="1"><italic>H</italic></td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1">sc1</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">−1</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">0/0</td>
<td align="left" rowspan="1" colspan="1">0/0</td>
<td align="left" rowspan="1" colspan="1">0/0</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">sc2</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">−1</td>
<td align="left" rowspan="1" colspan="1">−1</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">{1→<italic>F</italic>}, {1→<italic>C</italic>}, {1→<italic>A</italic>}</td>
<td align="left" rowspan="1" colspan="1">0/0</td>
<td align="left" rowspan="1" colspan="1">0/0</td>
<td align="left" rowspan="1" colspan="1">0/0</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">sc3</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1">0</td>
<td align="left" rowspan="1" colspan="1">2</td>
<td align="left" rowspan="1" colspan="1">2</td>
<td align="left" rowspan="1" colspan="1">{1→<italic>G</italic>}, {−1→<italic>E</italic>}, {−1→<italic>D</italic>}, {−1→<italic>C</italic>}</td>
<td align="left" rowspan="1" colspan="1">0/0</td>
<td align="left" rowspan="1" colspan="1">1/0</td>
<td align="left" rowspan="1" colspan="1">1/0</td>
</tr>
</tbody>
</table>
</alternatives><table-wrap-foot><fn id="nt101"><label/><p>Rows “sc1”, “sc2”, “sc3” correspond to scenarios 1 to 3. The “Perturbations” column shows the externally imposed state of the nodes <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e052" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e053" xlink:type="simple"/></inline-formula> which can be −1 (downregulation), 0 (state of the node did not change), or 1 (activation level is increased). No value is given if the node was not perturbed. The “Measurements” column shows the measured change of the activation level of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e054" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e055" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e056" xlink:type="simple"/></inline-formula> in the respective scenarios. The “Initial fitting error” column shows the total mismatch of predictions and measurements with respect to the initial topology (shown in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref>). The “MCoS” (Minimal Correction Sets) column shows artificial positive (1) or negative (−1) external inputs to some nodes which would lead to a perfect fit of the data (resulting fitting error for the scenario becomes 0). The “Remaining fitting error” columns show the remaining mismatches for the optimal subgraph depicted in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1B</xref> and for the two optimal graphs displayed in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1C</xref>. The original network in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> has a total fitting error of 5; it is 2 for the optimal subgraph in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1B</xref> and it becomes 0 in the optimal graphs in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1C</xref>.</p></fn></table-wrap-foot></table-wrap>
<p>Our goal is now to analyze and improve the consistency of an IG topology with respect to a given set of experimental data. Central to all algorithms presented herein is the following definition of sign consistency.</p>
<p><bold>Definition 1</bold> (Sign Consistency). We are given an IG and a node labeling (sign pattern) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e057" xlink:type="simple"/></inline-formula> which stores for each node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e058" xlink:type="simple"/></inline-formula> a sign <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e059" xlink:type="simple"/></inline-formula>. We say that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e060" xlink:type="simple"/></inline-formula> is <italic>sign-consistent with respect to the IG</italic> if the following conditions hold for each node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e061" xlink:type="simple"/></inline-formula>:</p>
<list list-type="alpha-lower"><list-item>
<p>If <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e062" xlink:type="simple"/></inline-formula>: either <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e063" xlink:type="simple"/></inline-formula> was fixed to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e064" xlink:type="simple"/></inline-formula> (perturbed node), or there is a predecessor node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e065" xlink:type="simple"/></inline-formula> and an edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e066" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e067" xlink:type="simple"/></inline-formula>.</p>
</list-item><list-item>
<p>If <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e068" xlink:type="simple"/></inline-formula>: either <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e069" xlink:type="simple"/></inline-formula> was fixed to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e070" xlink:type="simple"/></inline-formula> (perturbed node), or there is a predecessor node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e071" xlink:type="simple"/></inline-formula> and an edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e072" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e073" xlink:type="simple"/></inline-formula>.</p>
</list-item><list-item>
<p>If <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e074" xlink:type="simple"/></inline-formula>: either (i) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e075" xlink:type="simple"/></inline-formula> was fixed to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e076" xlink:type="simple"/></inline-formula>, or (ii) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e077" xlink:type="simple"/></inline-formula> has no predecessor, or (iii) for all edges <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e078" xlink:type="simple"/></inline-formula> we have <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e079" xlink:type="simple"/></inline-formula>, or (iv) there is an edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e080" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e081" xlink:type="simple"/></inline-formula> and another edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e082" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e083" xlink:type="simple"/></inline-formula>.</p>
</list-item></list>
<p>In our setting, the signs of the external perturbations as well as the measured signs of the readout nodes can be described by a specific node labeling (which we call the <italic>associated</italic> labeling of the scenario). In realistic applications one usually has latent nodes which are neither perturbed nor measured, hence, the associated node labeling of an experimental scenario may contain unknown values which we denote by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e084" xlink:type="simple"/></inline-formula>. We call incomplete sign patterns <italic>partial labelings</italic>. A partial labeling <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e085" xlink:type="simple"/></inline-formula> is sign-consistent if there exists a complete sign-consistent labeling <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e086" xlink:type="simple"/></inline-formula> for which we have <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e087" xlink:type="simple"/></inline-formula> wherever <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e088" xlink:type="simple"/></inline-formula>. In this sense, we say that an experimental scenario is sign-consistent if its associated (partial) labeling is sign-consistent. Finally, if we have a <italic>collection</italic> of scenarios we say that this collection is sign-consistent with the IG if all the (partial) labelings associated with the scenarios are sign-consistent.</p>
<p>We can now consider four fundamental problems on the consistency of experimental scenarios with respect to a given IG:</p>
<sec id="s2a">
<title>(1) SCEN_FIT</title>
<p>Given a single experimental scenario, we fix the states of the perturbed nodes (according to the experimental interventions) and then search for a sign-consistent node labeling having a minimal mismatch with the given measurements. In the ideal case, where the associated labeling of the experimental scenario is sign-consistent, the <italic>fitting error</italic> will be 0. The fitting error is defined as the absolute difference <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e089" xlink:type="simple"/></inline-formula> between the measurements <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e090" xlink:type="simple"/></inline-formula> and the optimal sign pattern <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e091" xlink:type="simple"/></inline-formula>.</p>
<p>From <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref>/<xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref>, we see that scenario 1 is sign-consistent: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e092" xlink:type="simple"/></inline-formula> was externally increased and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e093" xlink:type="simple"/></inline-formula> decreased, and with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e094" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e095" xlink:type="simple"/></inline-formula>, we obtain a sign-consistent labeling giving us a possible explanation for the measurements. In contrast, scenario 2 is not consistent with the IG topology: if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e096" xlink:type="simple"/></inline-formula> is increased externally (no perturbation in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e097" xlink:type="simple"/></inline-formula>), then we expect to see a decrease in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e098" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e099" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e100" xlink:type="simple"/></inline-formula> which is not seen in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e101" xlink:type="simple"/></inline-formula> (unchanged). The minimal resulting fitting error for an optimal sign pattern is thus 1. Generally, an error of 1 or <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e102" xlink:type="simple"/></inline-formula> occurs if a change was expected/not expected, but was not seen/was seen in the experiments. For scenario 3, the predictions are even worse: increase in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e103" xlink:type="simple"/></inline-formula> (no perturbation in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e104" xlink:type="simple"/></inline-formula> which thus depends on <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e105" xlink:type="simple"/></inline-formula>) should lead to down-regulation of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e106" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e107" xlink:type="simple"/></inline-formula>, but an increase is measured for both. We thus get an absolute error of 2 for each of the two predictions. The fitting error of a sign-consistent node labeling closest to scenario 3 can thus not be smaller than 4.</p>
<p>It may happen that several solutions exist explaining a given scenario equally well. For example, assume again that there was another node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e108" xlink:type="simple"/></inline-formula> in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> that is activated by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e109" xlink:type="simple"/></inline-formula> through an edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e110" xlink:type="simple"/></inline-formula>. If we now measured <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e111" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e112" xlink:type="simple"/></inline-formula> after positively perturbing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e113" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e114" xlink:type="simple"/></inline-formula>), then the best scenario fit would result in an error value of 2 since <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e115" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e116" xlink:type="simple"/></inline-formula> must have the same value. However, there are three optimal solutions regarding <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e117" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e118" xlink:type="simple"/></inline-formula>, namely <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e119" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e120" xlink:type="simple"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e121" xlink:type="simple"/></inline-formula>, all leading to the same minimal fitting error of 2. For some applications it will be helpful to know all these optimal solutions and we will therefore also address their enumeration.</p>
</sec><sec id="s2b">
<title>(2) Minimal Correction Sets (MCoS)</title>
<p>Another optimization problem for a single scenario directly follows if a given scenario is not sign-consistent, i.e., if no sign-consistent labeling can be found that results in a fitting error of 0. We can then try to identify a minimal set of nodes whose states need to be corrected to obtain a consistent scenario. The correction of a node's state is simulated by adding an additional external input that is either 1 or <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e122" xlink:type="simple"/></inline-formula>. We call these sets <italic>Minimal Correction Sets</italic> (MCoS), the minimality property demanding that no subset of a MCoS would lead to a consistent labeling. For example, regarding scenario 3 in <xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref>, there are four MCoS suggesting that there was either an external up-regulation of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e123" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e124" xlink:type="simple"/></inline-formula>), or a down-regulation in one of the nodes <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e125" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e126" xlink:type="simple"/></inline-formula>, or <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e127" xlink:type="simple"/></inline-formula>, each of unknown cause. Thus, MCoS show possible places in the network that have a high probability to cause the observed inconsistencies. With the MCoS problem we identify the enumeration of MCoS of minimal size for a given scenario (a simple extension not considered herein is to enumerate all MCoS irrespective of their size).</p>
</sec><sec id="s2c">
<title>(3) OPT_SUBGRAPH</title>
<p>The first two problems focus on a single scenario; now we intend to optimize the network structure in such a way that the total fitting error over all scenarios is minimized. Initially, we allow only the removal of edges in the network, that is, we search for an optimal subgraph. As there might be several solutions to this optimization problem, we consider the following sub-problems: computation of any/of the sparsest/of the largest sub-network of the initial IG minimizing the mismatches. In addition, we may also be interested in an enumeration of all sub-networks minimizing the number of inconsistencies between IG topology and data. As an example, <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1B</xref> shows the unique optimal subgraph of the original IG in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> minimizing the fitting error over all three scenarios in <xref ref-type="table" rid="pcbi-1003204-t001">Table 1</xref>. This solution reduces the total fitting error from 5 to 2 (and there is no solution that could reduce it further).</p>
</sec><sec id="s2d">
<title>(4) OPT_GRAPH</title>
<p>The removal of certain edges may significantly improve the agreement between measurements and network topology, but some fitting errors can often only disappear if we have additionally the opportunity to add new interactions. This fourth optimization problem, therefore, intends to minimize the fitting error by allowing edge removals <italic>and</italic> insertions in parallel. Obviously, the fit cannot be worse than the one obtained by problem (3). For smaller networks, a full enumeration of all optimal solutions might be possible. However, as the insertion of new interactions increases the solution space dramatically in large networks, we may consider a <italic>greedy</italic> strategy which determines, in each iteration, the optimal edge whose inclusion (in combination with the pruning step (3)) decreases the fitting error the most. One may then add this edge permanently and repeat the algorithm described above until no further significant improvement can be obtained by inserting a new edge.</p>
<p><xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1C</xref> shows a result of this optimization step in our example: the edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e128" xlink:type="simple"/></inline-formula> is identified as missing edge which, in combination with a pruning step, completely eradicates the original fitting errors in all scenarios. The resulting network is thus fully consistent with the entire set of experimental data. In this example, nine other edges can be identified whose addition, in combination with a pruning step by OPT_SUBGRAPH, lead to a fitting error of 0. Furthermore, for each added edge, the OPT_SUBGRAPH problem that is called after adding the edge might return several optimal solutions. <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1C</xref> shows the two existing optimal solutions (with a fitting error of 0) that are derived after adding edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e129" xlink:type="simple"/></inline-formula>.</p>
<p>The present paper is organized as follows: the <xref ref-type="sec" rid="s3">Methods</xref> section details how sign consistency and the four basic optimization problems can be encoded as Integer Linear Programming problems. The <xref ref-type="sec" rid="s3">Methods</xref> section thus contains the main theoretical achievements of our work. Readers not interested in the mathematical details may skip this part and directly continue with the <xref ref-type="sec" rid="s4">Results</xref> section. In the latter we employ our proposed methodology to identify the EGFR/ErbB signaling topology active in primary hepatocytes <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> by using prior knowledge on network topology and data from combinatorial stimulus-response experiments. This study reveals interesting biological insights and demonstrates that the introduced framework provides a highly flexible and powerful approach for exploring and training wiring diagrams of signaling networks based on large sets of experimental data. We also provide results from benchmarks of our algorithms and discuss the scalability of the presented method.</p>
</sec></sec><sec id="s3" sec-type="methods">
<title>Methods</title>
<sec id="s3a">
<title>Basic definitions and ILP formulation of sign consistency</title>
<p>As described in the <xref ref-type="sec" rid="s2">Introduction</xref> section, we assume that we are given an interaction graph (signed digraph) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e130" xlink:type="simple"/></inline-formula> capturing our prior knowledge on the signaling topology and, additionally, a set of experimental scenarios each consisting of a specific set of perturbed nodes and a set of measurements. The edges (also called interactions) are indexed by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e131" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e132" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e133" xlink:type="simple"/></inline-formula>, the nodes by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e134" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e135" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e136" xlink:type="simple"/></inline-formula>, and the scenarios by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e137" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e138" xlink:type="simple"/></inline-formula>. The experimental scenarios are specified by two matrices: (i) the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e139" xlink:type="simple"/></inline-formula> perturbation matrix <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e140" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e141" xlink:type="simple"/></inline-formula> storing the (enforced) state of node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e142" xlink:type="simple"/></inline-formula> in scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e143" xlink:type="simple"/></inline-formula> through external perturbation, and (ii) the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e144" xlink:type="simple"/></inline-formula> measurement matrix <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e145" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e146" xlink:type="simple"/></inline-formula> storing the measured change of the (steady) state level of node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e147" xlink:type="simple"/></inline-formula> in scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e148" xlink:type="simple"/></inline-formula>. Perturbation and measurement values thus indicate enforced/measured upregulation (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e149" xlink:type="simple"/></inline-formula>), downregulation (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e150" xlink:type="simple"/></inline-formula>), or unchanged state (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e151" xlink:type="simple"/></inline-formula>). Usually, only a small subset of nodes is perturbed, and only a subset of nodes can be measured; unperturbed and non-measured states are therefore marked by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e152" xlink:type="simple"/></inline-formula> in the matrices <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e153" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e154" xlink:type="simple"/></inline-formula>, respectively.</p>
<p>In what follows we translate sign-consistency of a node labeling (according to Definition 1) into equality and inequality constraints of an Integer Linear Programming (ILP) problem. In this formulation, the predicted state of a node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e155" xlink:type="simple"/></inline-formula> in experiment <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e156" xlink:type="simple"/></inline-formula> will be represented by an integer variable <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e157" xlink:type="simple"/></inline-formula>. Again, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e158" xlink:type="simple"/></inline-formula> encodes upregulation and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e159" xlink:type="simple"/></inline-formula> downregulation of node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e160" xlink:type="simple"/></inline-formula> in scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e161" xlink:type="simple"/></inline-formula>, whereas <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e162" xlink:type="simple"/></inline-formula> indicates that the activation level of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e163" xlink:type="simple"/></inline-formula> remained unchanged.</p>
<p>The <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e164" xlink:type="simple"/></inline-formula>-th signaling edge is defined as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e165" xlink:type="simple"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e166" xlink:type="simple"/></inline-formula> is the start node and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e167" xlink:type="simple"/></inline-formula> the end node of edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e168" xlink:type="simple"/></inline-formula>. Furthermore, the sign of edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e169" xlink:type="simple"/></inline-formula> is denoted by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e170" xlink:type="simple"/></inline-formula>.</p>
<p>We introduce the binary variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e171" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e172" xlink:type="simple"/></inline-formula> to represent the potential of edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e173" xlink:type="simple"/></inline-formula> to up- or downregulate its end node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e174" xlink:type="simple"/></inline-formula> in experiment <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e175" xlink:type="simple"/></inline-formula>. Edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e176" xlink:type="simple"/></inline-formula> with start node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e177" xlink:type="simple"/></inline-formula> has the potential of upregulating its target node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e178" xlink:type="simple"/></inline-formula> in experiment <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e179" xlink:type="simple"/></inline-formula> (i.e., <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e180" xlink:type="simple"/></inline-formula>) if and only if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e181" xlink:type="simple"/></inline-formula>. In any other case we have <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e182" xlink:type="simple"/></inline-formula>. Accordingly, edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e183" xlink:type="simple"/></inline-formula> with start node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e184" xlink:type="simple"/></inline-formula> has the potential of downregulating its target <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e185" xlink:type="simple"/></inline-formula> in experiment <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e186" xlink:type="simple"/></inline-formula> (i.e., <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e187" xlink:type="simple"/></inline-formula>) if and only if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e188" xlink:type="simple"/></inline-formula>. In any other case <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e189" xlink:type="simple"/></inline-formula>. Thus, with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e190" xlink:type="simple"/></inline-formula>,<disp-formula id="pcbi.1003204.e191"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e191" xlink:type="simple"/><label>(1)</label></disp-formula>As the max operator is not linear (required for an ILP), we introduce the binary variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e192" xlink:type="simple"/></inline-formula> to linearize (1) in the following way:<disp-formula id="pcbi.1003204.e193"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e193" xlink:type="simple"/><label>(2)</label></disp-formula>Finally, the two binary variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e194" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e195" xlink:type="simple"/></inline-formula> are introduced to represent the potential for node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e196" xlink:type="simple"/></inline-formula> of being up- or downregulated depending on the activity of its upstream edges. Node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e197" xlink:type="simple"/></inline-formula> has the potential of being upregulated (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e198" xlink:type="simple"/></inline-formula>) if and only if an edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e199" xlink:type="simple"/></inline-formula> exists such that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e200" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e201" xlink:type="simple"/></inline-formula>, and node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e202" xlink:type="simple"/></inline-formula> has the potential of being downregulated (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e203" xlink:type="simple"/></inline-formula>) if and only if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e204" xlink:type="simple"/></inline-formula> exists such that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e205" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e206" xlink:type="simple"/></inline-formula>. Thus,<disp-formula id="pcbi.1003204.e207"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e207" xlink:type="simple"/><label>(3)</label></disp-formula>The state <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e208" xlink:type="simple"/></inline-formula> of node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e209" xlink:type="simple"/></inline-formula> in scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e210" xlink:type="simple"/></inline-formula> is constrained by the values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e211" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e212" xlink:type="simple"/></inline-formula> according to the definition of sign-consistency (see Definition 1): (i) Node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e213" xlink:type="simple"/></inline-formula> may be upregulated (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e214" xlink:type="simple"/></inline-formula>) if it has the potential of being upregulated (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e215" xlink:type="simple"/></inline-formula>). (ii) Node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e216" xlink:type="simple"/></inline-formula> may be downregulated (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e217" xlink:type="simple"/></inline-formula>) if it has the potential of being downregulated (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e218" xlink:type="simple"/></inline-formula>). (iii) Node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e219" xlink:type="simple"/></inline-formula> may stay unchanged (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e220" xlink:type="simple"/></inline-formula>) if it has the potential of being both up- and downregulated (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e221" xlink:type="simple"/></inline-formula>) or neither of the above (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e222" xlink:type="simple"/></inline-formula>). These rules are encoded in inequalities as follows:<disp-formula id="pcbi.1003204.e223"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e223" xlink:type="simple"/><label>(4)</label></disp-formula>The equations and inequalities derived in this subsection describe sign-consistent node labelings and provide the frame within which we can now address the four basic optimization problems posed in the <xref ref-type="sec" rid="s2">Introduction</xref> section.</p>
</sec><sec id="s3b">
<title>SCEN_FIT</title>
<p>The goal of SCEN_FIT is to identify, for a given scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e224" xlink:type="simple"/></inline-formula>, a sign-consistent vertex labeling that is closest to the measurements of this scenario. We first have to constrain the values of the perturbed nodes in scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e225" xlink:type="simple"/></inline-formula>:<disp-formula id="pcbi.1003204.e226"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e226" xlink:type="simple"/><label>(5)</label></disp-formula>Realistic perturbations typically affect either input nodes (e.g., ligands) or internal nodes in the case where a specific inhibitor was added or where a constitutive activation or a knock-in/knock-out is introduced. The state of the perturbed nodes are thus fixed to the enforced value and the constraints (4) are omitted for these nodes to preserve the consistency of the formulation.</p>
<p>We now search for a sign-consistent labeling <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e227" xlink:type="simple"/></inline-formula> (fulfilling thus constraints (2)–(4) of the previous subsection) that minimizes the measurement-prediction-mismatch. The following objective function is used accordingly:<disp-formula id="pcbi.1003204.e228"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e228" xlink:type="simple"/><label>(6)</label></disp-formula>The summation of mismatches in <xref ref-type="disp-formula" rid="pcbi.1003204.e228">equation (6)</xref> is thus done over all nodes for which measurements exist. By introducing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e229" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e230" xlink:type="simple"/></inline-formula>, the lower bound for the absolute value of the mismatch above is formulated as follows (an upper bound needs not to be defined because the objective function (6) will automatically take the smallest possible value):<disp-formula id="pcbi.1003204.e231"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e231" xlink:type="simple"/><label>(7)</label></disp-formula>The resulting states <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e232" xlink:type="simple"/></inline-formula> for scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e233" xlink:type="simple"/></inline-formula> represent an optimal solution as desired for SCEN_FIT.</p>
<p>As discussed in the <xref ref-type="sec" rid="s2">Introduction</xref> section, we also consider the enumeration of <italic>all</italic> optimal SCEN_FIT solutions for a given scenario. To this end, we solve the ILP repeatedly and after each run we exclude previously found solutions by adding the following constraints for each previous solution <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e234" xlink:type="simple"/></inline-formula>:<disp-formula id="pcbi.1003204.e235"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e235" xlink:type="simple"/><label>(8)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e236" xlink:type="simple"/></inline-formula> represent the value of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e237" xlink:type="simple"/></inline-formula> in solution <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e238" xlink:type="simple"/></inline-formula>. Since constraint (8) is again non-linear because of the absolute value, it is reformulated in the following manner:<disp-formula id="pcbi.1003204.e239"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e239" xlink:type="simple"/><label>(9)</label></disp-formula>with the auxiliary variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e240" xlink:type="simple"/></inline-formula> (integer) and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e241" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e242" xlink:type="simple"/></inline-formula> (binary). We may then compute a new sign-consistent labeling of the nodes by optimizing again objective function (6). To ensure that only solutions with minimum fitting error are found, we replace, after the first iteration, the objective function in (6) by forcing instead the algorithm to find solutions with the same minimum fitting error as in the first run:<disp-formula id="pcbi.1003204.e243"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e243" xlink:type="simple"/><label>(10)</label></disp-formula>Here, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e244" xlink:type="simple"/></inline-formula> is the optimal (minimal) value of the objective function (6) found in the first run of the algorithm. The resulting problem becomes thus a simple search for a feasible solution and is repeated until no further solution can be found.</p>
</sec><sec id="s3c">
<title>Minimal Correction Sets</title>
<sec id="s3c1">
<title>Computing a single Minimal Correction Set</title>
<p>Next, we address the identification of a Minimal Correction Set (MCoS) for a sign-inconsistent scenario <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e245" xlink:type="simple"/></inline-formula> (where the fitting error in <xref ref-type="disp-formula" rid="pcbi.1003204.e228">equation (6)</xref> after optimization is greater than zero). An MCoS indicates possible causes of discrepancies between measured data and assumed IG topology. As described in the <xref ref-type="sec" rid="s2">Introduction</xref> section, MCoS correspond to artificial perturbations of certain nodes which render the measurements from a given inconsistent scenario consistent with the network topology. Let a new set of binary variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e246" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e247" xlink:type="simple"/></inline-formula> denote these artificial perturbations. The state <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e248" xlink:type="simple"/></inline-formula> of node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e249" xlink:type="simple"/></inline-formula> can be enforced to 1 by adding a positive input, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e250" xlink:type="simple"/></inline-formula>. Accordingly, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e251" xlink:type="simple"/></inline-formula> can be enforced to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e252" xlink:type="simple"/></inline-formula> by adding a negative input, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e253" xlink:type="simple"/></inline-formula>. To enforce the state of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e254" xlink:type="simple"/></inline-formula> to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e255" xlink:type="simple"/></inline-formula>, either a positive (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e256" xlink:type="simple"/></inline-formula>) or a negative (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e257" xlink:type="simple"/></inline-formula>) input might be required. To account for these artificial perturbations, we modify the constraints (4) in the following manner:<disp-formula id="pcbi.1003204.e258"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e258" xlink:type="simple"/><label>(11)</label></disp-formula>Having introduced the correction terms <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e259" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e260" xlink:type="simple"/></inline-formula>, we set as an extra constraint the perfect fit for all measured nodes (which is now always feasible):<disp-formula id="pcbi.1003204.e261"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e261" xlink:type="simple"/><label>(12)</label></disp-formula>The absolute value is again reformulated as described in section SCEN_FIT. As we are interested in MCoS with a <italic>minimum</italic> number of corrections, we use the following objective function:<disp-formula id="pcbi.1003204.e262"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e262" xlink:type="simple"/><label>(13)</label></disp-formula></p>
</sec><sec id="s3c2">
<title>Enumeration of Minimal Correction Sets</title>
<p>In general, many MCoS of minimum size may exist; therefore, we address in this subsection the enumeration of <italic>all</italic> minimum MCoS. To this end, we solve the ILP repeatedly, and after each run, we exclude previously found solutions by adding the following constraint (so-called integer cuts) for each previous solution <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e263" xlink:type="simple"/></inline-formula>:<disp-formula id="pcbi.1003204.e264"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e264" xlink:type="simple"/><label>(14)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e265" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e266" xlink:type="simple"/></inline-formula> represent the value of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e267" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e268" xlink:type="simple"/></inline-formula> in solution <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e269" xlink:type="simple"/></inline-formula>. Constraint (14) can be linearized as follows:<disp-formula id="pcbi.1003204.e270"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e270" xlink:type="simple"/><label>(15)</label></disp-formula>We may then compute a new MCoS by optimizing again objective function (13). To focus only on MCoS with the minimum number of corrections, we replace after the first iteration the objective function (13) by forcing the algorithm to find a solution with the same minimum number of corrections:<disp-formula id="pcbi.1003204.e271"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e271" xlink:type="simple"/><label>(16)</label></disp-formula>Here, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e272" xlink:type="simple"/></inline-formula> is the value of the objective function found in the first run of the algorithm. The resulting problem becomes thus a simple search for a feasible solution and is repeated until no further solution can be found.</p>
</sec></sec><sec id="s3d">
<title>OPT_SUBGRAPH</title>
<sec id="s3d1">
<title>Computing a single optimal subgraph</title>
<p>As stated in the <xref ref-type="sec" rid="s2">Introduction</xref> section, OPT_SUBGRAPH searches for an optimal subgraph of the original topology (i.e., for a set of suitable edge removals) minimizing the total fitting error <italic>over all</italic> scenarios. In this subsection we describe how we can identify one particular solution to this problem before turning to the enumeration of optimal subgraphs.</p>
<p>The removal of edges is implemented using binary variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e273" xlink:type="simple"/></inline-formula>. The algorithm will set <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e274" xlink:type="simple"/></inline-formula> if the edge <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e275" xlink:type="simple"/></inline-formula> is removed by the optimization procedure to improve the fit of the data (otherwise <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e276" xlink:type="simple"/></inline-formula>). We impose again the constraints (1)–(4) for sign-consistency. The actual pruning is implemented by modifying constraints (1) as follows:<disp-formula id="pcbi.1003204.e277"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e277" xlink:type="simple"/><label>(17)</label></disp-formula>The max operator is again rewritten in form of linear constraints:<disp-formula id="pcbi.1003204.e278"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e278" xlink:type="simple"/><label>(18)</label></disp-formula>We then reuse objective function (6), but now minimize the measurement-prediction mismatch <italic>over all</italic> scenarios:<disp-formula id="pcbi.1003204.e279"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e279" xlink:type="simple"/><label>(19)</label></disp-formula></p>
<p>This optimization will deliver an optimal sub-network of the original IG which can best explain the data. Usually, many optimal solutions may exist yielding the same residual fitting error in <xref ref-type="disp-formula" rid="pcbi.1003204.e279">Equation (19)</xref>. One might then be interested to focus on particular solutions, for example, on those containing the minimal/maximal number of edges in the remaining subgraph. For this purpose, we may replace (19) by<disp-formula id="pcbi.1003204.e280"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e280" xlink:type="simple"/><label>(20)</label></disp-formula>(the absolute value is again reformulated in form of linear constraints). The constant <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e281" xlink:type="simple"/></inline-formula> is defined as follows: in order to arrive at a solution with minimal error between predicted and measured values, the absolute value <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e282" xlink:type="simple"/></inline-formula> needs to be less than <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e283" xlink:type="simple"/></inline-formula>. Furthermore, constants <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e284" xlink:type="simple"/></inline-formula> assume negative values (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e285" xlink:type="simple"/></inline-formula>) for obtaining a minimum subgraph and positive values (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e286" xlink:type="simple"/></inline-formula>) for obtaining a maximum subgraph.</p>
<p>Another way to deal with non-unique solutions is to enumerate all of them which we address next.</p>
</sec><sec id="s3d2">
<title>Enumeration of optimal subgraphs</title>
<p>To identify all optimal subgraphs minimizing the inconsistencies between IG topology and measurements of all scenarios, we solve the ILP repeatedly and after each run we exclude previous solutions <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e287" xlink:type="simple"/></inline-formula> by adding the following constraints:<disp-formula id="pcbi.1003204.e288"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e288" xlink:type="simple"/><label>(21)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e289" xlink:type="simple"/></inline-formula> represents the value of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e290" xlink:type="simple"/></inline-formula> in solution <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e291" xlink:type="simple"/></inline-formula>. Constraint (21) is reformulated in linear form as follows:<disp-formula id="pcbi.1003204.e292"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e292" xlink:type="simple"/><label>(22)</label></disp-formula></p>
<p>Moreover, after the first run we replace the objective function in (19) by enforcing the algorithm to obtain the same, optimal, goodness of fit as in the first run:<disp-formula id="pcbi.1003204.e293"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1003204.e293" xlink:type="simple"/><label>(23)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e294" xlink:type="simple"/></inline-formula> is the value of the objective function (19) after the first run of the algorithm. In the same way we may also consider the enumeration of minimum and maximum subgraphs; we then have to fix (20) to its optimal value instead of considering (19).</p>
</sec></sec><sec id="s3e">
<title>OPT_GRAPH</title>
<p>As motivated in the <xref ref-type="sec" rid="s2">Introduction</xref> section, optimizing the IG topology by edge removals may eliminate some, but often not all mismatches. One reason could be that some real effects cannot be transduced in the model due to missing edges. We therefore propose an algorithm suggesting de-novo interactions whose addition would minimize the fitting error. As the possibility to insert new interactions increases the solution space dramatically in large networks, we consider the following greedy strategy: for each interaction not contained yet in the IG, we temporarily insert this edge and determine the resulting optimal solution for the fitting error by applying the OPT_SUBGRAPH algorithm introduced above. The single interaction that reduces the fitting error the most is picked by the greedy algorithm and permanently inserted in the IG. This process is repeated until no further edge exists that could improve the goodness of fit to the data significantly (significance can be quantified by a certain threshold). Importantly, at the beginning of each iteration, a list of eligible edges is computed consisting only of those edges that do not form a positive cycle (see below).</p>
</sec><sec id="s3f">
<title>Positive cycles and steady-state assumption</title>
<p>(Feedback) cycles often hamper the analysis of causality and many network inference techniques therefore exclude cycles from the network or assume that no cycles exist (see, e.g., <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez2">[7]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Sachs1">[15]</xref>). In contrast to many other approaches, our method can readily deal with negative cycles without any problems. However, positive cycles may become problematic as they can provide explanations for state changes without any external perturbation. A simple example for such “self-explaining” state changes is the following network: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e295" xlink:type="simple"/></inline-formula> (all edges are positive). Node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e296" xlink:type="simple"/></inline-formula> would normally serve as an input. However, assuming that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e297" xlink:type="simple"/></inline-formula> has not changed, a measured up-regulation of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e298" xlink:type="simple"/></inline-formula> would be explainable by the sign-consistent labeling (0,1,1), that is, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e299" xlink:type="simple"/></inline-formula> activates <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e300" xlink:type="simple"/></inline-formula> which then activates <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e301" xlink:type="simple"/></inline-formula> again. Although such a shift without external perturbations could indeed happen in realistic systems (due to fluctuations in bistable systems), we recommend that the initial IG should not contain a positive feedback (otherwise, many observations might become sign-consistent just through the existence of positive cycles). This is also the reason why a new candidate edge can only be added to the network if it does not give rise to a new positive cycle (see previous subsection). In many applications, this requirement is not a real limitation, in particular when describing early events in signaling networks.</p>
<p>We also restate another assumption for the analysis followed herein, namely that the system moves from one steady state to another upon imposing the perturbations (see also <xref ref-type="bibr" rid="pcbi.1003204-Siegel1">[11]</xref>; similar assumptions are also required in other studies, e.g., <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez2">[7]</xref>, <xref ref-type="bibr" rid="pcbi.1003204-Melas1">[29]</xref>). However, this does not necessarily mean that we have to wait until the system has reached its new steady state completely; instead, we can take the measurements if we can assume that the <italic>signs</italic> of the state variations will not change anymore. It will therefore be important to determine a suitable time point where all relevant state changes induced by the perturbation have become visible in the measurements. For example, if measurements are taken too early, a signal has possibly not yet been propagated to all downstream nodes at the bottom of the network resulting in inconsistencies with the predictions made from the IG.</p>
</sec><sec id="s3g">
<title>Model compression</title>
<p>In the previous sections we presented several ILP formulations related to detecting and resolving inconsistencies between IG and experimental data. As long as one searches for a single (optimal) solution it is likely that a solution will be found even in very large networks due to an evolved library of effective ILP algorithms (see also benchmarks discussed in the <xref ref-type="sec" rid="s4">Results</xref> section). However, the related enumeration approaches may quickly become intractable, at least if one aims at an exhaustive enumeration. In those cases one may stop the calculation if no new solution is found within a given time interval. Another useful strategy is to use (loss-free) network compression techniques by which (compressed) solutions can be calculated from a smaller network and then subsequently decompressed to solutions of the full network. Other advantages of network compression are that differences between the original and the compressed network structure may indicate non-identifiabilities in the original network and that obtained optimal solutions can be represented in a condensed manner (not explicitly displaying all combinatorial solutions existing due to non-uniqueness). We use four simple compression rules (illustrated in <xref ref-type="fig" rid="pcbi-1003204-g002">Figure 2</xref>) in an iterative manner which, as shown in the EGF scenario below, may reduce the network size considerably so that enumeration of solutions in large networks become possible (some but not all rules are identical to those used in <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez2">[7]</xref>). Compressing the network is particularly useful for enumerating solutions for OPT_GRAPH and OPT_SUBGRAPH.</p>
<fig id="pcbi-1003204-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g002</object-id><label>Figure 2</label><caption>
<title>Basic network compression rules.</title>
<p>(A) Parallel edges. (B) Nodes with single input. (C) Nodes with single output. (D) Shown is the compressed version of the network in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> after applying the compression rules. For further explanations see main text.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g002" position="float" xlink:type="simple"/></fig>
<list list-type="simple"><list-item>
<p><bold>Rule 1</bold> (removal of non-controllable and non-observable nodes): <italic>Non-controllable</italic> nodes (which cannot be affected by any of the perturbed nodes in any scenario) and <italic>non-observable</italic> nodes (which do not influence any measured (readout) node in any scenario) define non-identifiable parts of the network. Therefore, these nodes as well as all edges they are connected to can be removed. Non-observable and non-controllable nodes can easily be identified by shortest path algorithms (cf. <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez2">[7]</xref>).</p>
</list-item><list-item>
<p><bold>Rule 2</bold> (removal of parallel edges): If there are two parallel edges of the same sign, we may safely remove one of them (<xref ref-type="fig" rid="pcbi-1003204-g002">Figure 2A</xref>).</p>
</list-item><list-item>
<p><bold>Rule 3</bold> (absorbing a node with a single input edge): If a latent node (neither measured nor perturbed in any of the experimental scenarios) has only one single incoming edge, then we can remove this node (together with the incoming edge) and reconnect all the outgoing edges of this node to its only predecessor node (under consideration of edge signs; see example in <xref ref-type="fig" rid="pcbi-1003204-g002">Figure 2B</xref>).</p>
</list-item><list-item>
<p><bold>Rule 4</bold> (absorbing a node with a single output edge): If a latent node has only one single outgoing edge, then we can remove this node (together with the outgoing edge) and reconnect all its incoming edges to its only successor node (under consideration of edge signs; see example in <xref ref-type="fig" rid="pcbi-1003204-g002">Figure 2C</xref>).</p>
</list-item></list>
<p>Rule 1 is performed once at the beginning, whereas rules 2–4 are iteratively used until no further rule can be applied (note that new parallel edges may arise after applying rules 3 or 4). The compressed version of the example network in <xref ref-type="fig" rid="pcbi-1003204-g001">Figure 1A</xref> is shown in <xref ref-type="fig" rid="pcbi-1003204-g002">Figure 2D</xref>).</p>
<p>By keeping track of the made compression steps it is, in principle, possible to decompress solutions found by the described optimization algorithms in the compressed network. However, as mentioned above, it is often useful to discuss the obtained solutions directly in the compressed network, thereby avoiding the interpretation of a typically much larger number of decompressed solutions arising due to non-uniqueness. For example, instead of listing all possible (parallel) pathway combinations connecting <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e302" xlink:type="simple"/></inline-formula> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e303" xlink:type="simple"/></inline-formula>, one might conclude that “at least one pathway between A and B must exist” which can easier be represented in a compressed network.</p>
</sec><sec id="s3h">
<title>Implementation: <italic>SigNetTrainer</italic></title>
<p>The ILP formulations presented in the previous sections were implemented in the new software <italic>SigNetTrainer</italic>. The toolbox is available in two versions, the first is written in C and uses routines from the ILP solver GUROBI (<ext-link ext-link-type="uri" xlink:href="http://www.gurobi.com" xlink:type="simple">http://www.gurobi.com</ext-link>), whereas the second version is implemented in MATLAB and uses the IBM ILOG CPLEX Optimizer (for which free academic versions can be obtained via <ext-link ext-link-type="uri" xlink:href="http://www-03.ibm.com/ibm/university/academic/pub/page/membership" xlink:type="simple">http://www-03.ibm.com/ibm/university/academic/pub/page/membership</ext-link>) as ILP solver. Thus, <italic>SigNetTrainer</italic> benefits from state-of-the-art-solvers for ILP problems which use a number of methodologies to deal with large-scale problems. For a more general introduction to ILP algorithms we refer to <xref ref-type="bibr" rid="pcbi.1003204-Bertsimas1">[30]</xref>.</p>
<p><italic>SigNetTrainer</italic> is easy to use; the user has to provide three files to define network training problems: (i) the network topology in.sif format (also used by Cytoscape <ext-link ext-link-type="uri" xlink:href="http://www.cytoscape.org" xlink:type="simple">http://www.cytoscape.org</ext-link>), (ii) an ASCII file describing the experimental scenarios (i.e., the imposed state changes), and (iii) an ASCII file containing the experimentally measured state changes for each scenario. The user may then call different functions implementing the optimization routines as described herein. Source code and manual of both versions of <italic>SigNetTrainer</italic> are available on the following website:</p>
<p><ext-link ext-link-type="uri" xlink:href="http://www.mpi-magdeburg.mpg.de/projects/cna/etcdownloads.html" xlink:type="simple">http://www.mpi-magdeburg.mpg.de/projects/cna/etcdownloads.html</ext-link>.</p>
<p>Preprocessing routines, in particular the network compression algorithm, were implemented as MATLAB functions and are also part of the package. The manual of <italic>SigNetTrainer</italic> is provided in the Supporting Information (<xref ref-type="supplementary-material" rid="pcbi.1003204.s005">Text S1</xref>).</p>
</sec></sec><sec id="s4">
<title>Results</title>
<sec id="s4a">
<title>EGFR/ErbB signaling in hepatocytes</title>
<p>In order to demonstrate the performance of the proposed approach in a realistic situation, we apply it to a recently published network topology of EGFR/ErbB signaling <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> with the aim to identify topological particularities of this important signaling pathway in hepatocytes. The network was built within the logical modeling framework introduced in <xref ref-type="bibr" rid="pcbi.1003204-Klamt1">[17]</xref> and describes signal transduction downstream of the members of the EGF receptor family, ErbB1–4. Network reconstruction was based on signaling reactions reported in literature and databases. As the included reactions have been observed in a variety of cell types and tissues, the model must be seen as a “master network” and it is likely that not all of the included interactions are functional in primary human hepatocytes considered herein. In <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref>, qualitative predictions derived both from the logical model and its underlying interaction graph were compared with a dataset (a subset of the phosphoproteomic data published in <xref ref-type="bibr" rid="pcbi.1003204-Alexopoulos1">[2]</xref>) consisting of combinatorial treatments of primary human hepatocytes with/without TGF<italic>α</italic> and specific molecular inhibitors (see <xref ref-type="supplementary-material" rid="pcbi.1003204.s001">Figure S1</xref>). Note that the measurements were taken at an optimal time point such that the perturbation-induced changes in the phosphorylation level of the proteins are well-reflected by the measurements <xref ref-type="bibr" rid="pcbi.1003204-Alexopoulos1">[2]</xref>. The interaction graph-based data analysis in <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> made use of the dependency matrix of the network (see <xref ref-type="sec" rid="s2">Introduction</xref> section): for pairs of experiments (e.g., Exp. 1: stimuli <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e304" xlink:type="simple"/></inline-formula>, inhibitor <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e305" xlink:type="simple"/></inline-formula>, Exp. 2: stimuli <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e306" xlink:type="simple"/></inline-formula>, no inhibitor) it was checked whether the ratio of the measured responses (e.g., Exp. 1/Exp. 2, showing the effect of inhibitor <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e307" xlink:type="simple"/></inline-formula>) is consistent with the causal dependencies in the network topology (e.g., if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e308" xlink:type="simple"/></inline-formula> has a positive/negative/no influence on a readout <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e309" xlink:type="simple"/></inline-formula>, inhibiting <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e310" xlink:type="simple"/></inline-formula> should lead to decreased/increased/unchanged <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e311" xlink:type="simple"/></inline-formula>). Resulting from this analysis, changes in the network structure were proposed that would improve the agreement between experimental data and model predictions. These changes were derived solely by inspection; the ILP approach presented herein can be seen as a step forward as it adapts the model structure to the experimental data in an automatic way and searches systematically for all possible solutions resolving discrepancies between model and data.</p>
</sec><sec id="s4b">
<title>Preprocessing</title>
<p>Before applying the ILP formulation, both the phosphoproteomic data (<xref ref-type="supplementary-material" rid="pcbi.1003204.s001">Figure S1</xref>) and the EGFR/ErbB signaling network topology used in <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> had to be preprocessed. The phosphoproteomic data were originally obtained via xMAP technology which measures fluorescent units <xref ref-type="bibr" rid="pcbi.1003204-Alexopoulos1">[2]</xref>. The dynamic range of the measured signals depends on the antibody pair used for detection. For example, the signal for JNK ranges from 100 units to 500 units, while MEK1/2 ranges up to 25000 units (<xref ref-type="supplementary-material" rid="pcbi.1003204.s001">Figure S1</xref>). Variations such as these do not necessarily reflect that JNK is less activated than MEK1/2, but may be attributed to protein abundance or assay calibration issues. Furthermore, the proposed formulation requires a qualitative view of signal transduction, supporting only three discrete states indicating the variation of the activation state of signaling nodes when changing external inputs or adding inhibitors (“−1” for downregulated, “0” for unchanged, and “1” for upregulated). Thus, the raw data need to be discretized before it can be used in the ILP formulation. To this end, the methodology introduced by Samaga et al. in <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> is adopted: the ratios of all experiments that differ only by a single perturbation (ligand or inhibitor treatment) are evaluated and the respective measurement is considered to be (i) upregulated if the fold-increase of the signal (with versus without perturbation) is above 1.5, (ii) downregulated if the fold-decrease of the signal (with versus without perturbation) is below 0.66 and (iii) unchanged otherwise. The dataset analyzed in <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> contains measurements with JNK inhibitor showing an effect of the inhibitor on many of the measured signals. As these inhibitions are likely to be off-target effects <xref ref-type="bibr" rid="pcbi.1003204-Alexopoulos1">[2]</xref>, we decided to exclude the JNK inhibitor data for our analysis. The complete set of discretized data can be seen in <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref>.</p>
<fig id="pcbi-1003204-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g003</object-id><label>Figure 3</label><caption>
<title>Discretized measurements of the 16 considered experimental scenarios and the resulting SCEN_FIT solutions computed from the EGFR/ErbB graph model.</title>
<p>Each row corresponds to one experimental scenario, each column contains the measured state changes of the readout species. The discretized measurements are mapped to the fill color of the respective fields: if a node is upregulated in the respective scenario, the corresponding field is filled green, if it is downregulated, the field is filled red, and if it shows no significant change, it is filled white. Accordingly, the color of the added circles shows the sign of the node in the closest sign-consistent node labeling derived by SCEN_FIT: green circles correspond to sign 1, red circles to sign −1 and white circles to sign 0. Note that circles only appear if the measurement is not in accordance with the respective state in the sign-consistent labeling.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g003" position="float" xlink:type="simple"/></fig>
<p>Regarding the EGFR/ErbB network model, the original interaction graph used by Samaga et al. <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> was adopted but non-observable and non-controllable nodes were removed (see <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez2">[7]</xref> and Rule 1 of the model compression described in the <xref ref-type="sec" rid="s3">Methods</xref> section; the full compression will be applied in a later step). The resulting graph is shown in <xref ref-type="fig" rid="pcbi-1003204-g004">Figure 4A</xref>.</p>
<fig id="pcbi-1003204-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g004</object-id><label>Figure 4</label><caption>
<title>Interaction graph model of the EGFR/ErbB signaling network.</title>
<p>(A) The full network adopted from <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> after removal of non-observable and non-controllable nodes. All edges are activating edges (having positive signs). (B) The compressed model obtained after applying the compression rules to (A).</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g004" position="float" xlink:type="simple"/></fig></sec><sec id="s4c">
<title>Applying SCEN_FIT and Minimal Correction Sets</title>
<p><xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref> depicts the discretized measurements and, for each scenario, the corresponding SCEN_FIT solution. Recall that the SCEN_FIT algorithm determines, for a given scenario, a sign-consistent node labeling that is closest to the measurements and can thus best explain how the EGFR network topology in <xref ref-type="fig" rid="pcbi-1003204-g004">Figure 4A</xref> induces the measured node changes for the respective scenario. Deviations between the determined optimal sign pattern and the measured state changes (as indicated in <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref>) uncover inconsistencies between network structure and observed behavior. For example, scenario 1 reflects the influence of the ligand TGF<italic>α</italic>, that is, TGF<italic>α</italic> is the perturbed node and its state is fixed to 1. As depicted in <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref>, the SCEN_FIT solution for this scenario shows a fitting error of 1: in the optimal sign-consistent node labeling, all measured nodes have sign 1 as they are connected to TGF<italic>α</italic> by positive paths only. This is in accordance with the measured state of all nodes except STAT3: the latter shows no significant change in response to TGF<italic>α</italic> inducing thus a fitting error. Scenarios 2–6 reflect the influence of TGF<italic>α</italic> in presence of different inhibitors. We assume that an inhibitor completely blocks the signal flow through the inhibited species and thus define these scenarios by fixing the state of TGF<italic>α</italic> to 1 and of the inhibited node to 0. The remaining scenarios reflect the influence of the inhibitors in presence (scenarios 7–11) and absence (scenarios 12–16) of TGF<italic>α</italic>. In each of these scenarios the perturbed node is the respective inhibitor and its state is fixed to −1. Importantly, by using the enumeration algorithm for SCEN_FIT we could prove that, for each scenario, the found solution for the optimal fit is unique, hence, no other optimal solutions need to be considered. We also assessed the sensitivity of the SCEN_FIT results with respect to the chosen thresholds for data discretization and found a fairly robust behavior for a relatively large range of the threshold parameters (see <xref ref-type="supplementary-material" rid="pcbi.1003204.s002">Figure S2</xref> and <xref ref-type="supplementary-material" rid="pcbi.1003204.s006">Text S2</xref>).</p>
<p><xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref> shows that there are several inconsistencies between experimental data and the SCEN_FIT solutions derived from the initial network topology. In order to understand where these inconsistencies are induced in the network, we address the identification of minimal correction sets (MCoS). We recall that MCoS are minimum sets of (artificially) enforced changes of node states (e.g., from up- to downregulated) which make an inconsistent scenario consistent. Exemplarily, we focus on scenario 14 of <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref> (where PI3K-i is added without presence of TGF<italic>α</italic>) whose SCEN_FIT solution produced a total error value of 6.</p>
<p>As shown in <xref ref-type="table" rid="pcbi-1003204-t002">Table 2</xref>, five MCoS are identified, each containing three corrections (virtual perturbations) rendering the experimental scenario 14 sign-consistent. Common trend in all MCoS is to remove the downregulating effect of PI3K on signals downstream of Rac_Cdc42 by setting Rac_Cdc42 to unchanged (0) or one of the nodes SOS1_Eps8_E3b1, Vav2, PI(3,4)P2 or PIP3 to upregulated (1). Introducing this change, the states of p38, JNK, MEK1/2, Hsp27, CREB and p90RSK are now in accordance with the measurements (i.e., they show now response upon adding PI3K inhibitor). However, by this modification, the states of ERK1/2 and p70S6_1 would change their predicted level from “downregulated” to “unchanged” which is not in agreement with the measured state. This is corrected in all MCoS by setting ERK1/2 to −1. Again, this correction implies an undesired effect, namely changing p90RSK from 0 to −1, which is countered by assigning p90RSK the value 0 in all MCoS. Clearly, three required corrections indicate that the observed behavior for this scenario is not well-reflected by the network topology. It would therefore be useful to consider all scenarios at the same time to detect common points of errors produced in all or many scenarios.</p>
<table-wrap id="pcbi-1003204-t002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.t002</object-id><label>Table 2</label><caption>
<title>MCoS for scenario 14 in <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref>.</title>
</caption><alternatives><graphic id="pcbi-1003204-t002-2" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.t002" xlink:type="simple"/>
<table><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup>
<thead>
<tr>
<td align="left" rowspan="1" colspan="1"/>
<td colspan="3" align="left" rowspan="1">MCoS 1</td>
<td colspan="3" align="left" rowspan="1">MCoS 2</td>
<td colspan="3" align="left" rowspan="1">MCoS 3</td>
<td colspan="3" align="left" rowspan="1">MCoS 4</td>
<td colspan="3" align="left" rowspan="1">MCoS 5</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">Node id</td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e312" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e313" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1">Val</td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e314" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e315" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1">Val</td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e316" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e317" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1">Val</td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e318" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e319" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1">Val</td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e320" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1"><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e321" xlink:type="simple"/></inline-formula></td>
<td align="left" rowspan="1" colspan="1">Val</td>
</tr>
</thead>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1">rac_cdc42</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>0</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">p90rsk</td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>0</bold></td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>0</bold></td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>0</bold></td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>0</bold></td>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>0</bold></td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">erk12</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"><bold>−1</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"><bold>−1</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"><bold>−1</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"><bold>−1</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"><bold>−1</bold></td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">sos1_eps8_e3b1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>1</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">vav2</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>1</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">pi34p2</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>1</bold></td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">pip3</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1">1</td>
<td align="left" rowspan="1" colspan="1"/>
<td align="left" rowspan="1" colspan="1"><bold>1</bold></td>
</tr>
</tbody>
</table>
</alternatives><table-wrap-foot><fn id="nt102"><label/><p>Five MCoS are identified for the EGFR network model (<xref ref-type="fig" rid="pcbi-1003204-g004">Figure 4</xref>) with respect to scenario 14 in <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref>. Each MCoS would lead to a perfect fit for this scenario and all five MCoS contain three nodes to be enforced to a certain value. Nodes p90rsk and erk12 are common in all MCoS. Nodes rac_cdc42, sos1_eps8_e3b1, vav2, pi34p2 and pip3 are perturbed respectively in MCoS 1–5. In columns MCoS 1–5, three sub-columns are shown: sub-column “Val” shows the corrected state of the node (the actual MCoS), the entry 1 in sub-column “<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e322" xlink:type="simple"/></inline-formula>” indicates that a positive input edge is added to the node in order to alter its state, and the entry 1 in sub-column “<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e323" xlink:type="simple"/></inline-formula>” indicates that a negative input edge is added to the node (see <xref ref-type="sec" rid="s3">Methods</xref> section).</p></fn></table-wrap-foot></table-wrap></sec><sec id="s4d">
<title>Applying OPT_SUBGRAPH</title>
<p>We use the OPT_SUBGRAPH algorithm to find—by appropriate edge removals—an optimal subgraph of the EGFR network structure which minimizes the fitting errors over all experimental scenarios.</p>
<p>To be able to make meaningful conclusions, we need to find all optimal solutions. However, enumerating all solutions for OPT_SUBGRAPH in the full model structure becomes quickly intractable as the highly branched network structure (e.g., various feedforward routes running over different combinations of ErbB dimers and adapter proteins connect TGF<italic>α</italic> with PI3K) leads to an immense number of different optimal solutions. Therefore, we compress the model structure as described in section “Model compression” before searching for optimal subgraphs. As can be seen in <xref ref-type="fig" rid="pcbi-1003204-g004">Figure 4B</xref>, the model structure can be compressed substantially from 39 nodes and 67 edges to 14 nodes and 18 edges. Strikingly, Rac_Cdc42 remains as the only latent node in the compressed structure. The compressed IG reflects the essential dependencies in the original network structure that can be addressed by the given set of perturbed/measured nodes. For example, parallel signaling paths leading from a perturbed node to a measured node without passing any other measured/perturbed node cannot be distinguished in the analysis performed herein and are therefore condensed to one single edge in the compressed graph.</p>
<p>The computation of all optimal subgraphs of the compressed network resulted in six solutions having the same minimal fitting error of 26 which has thus reduced much in comparison to 45 in the original model. <xref ref-type="fig" rid="pcbi-1003204-g005">Figure 5</xref> shows a combined view of the six optimal solutions; the single solutions are shown in <xref ref-type="supplementary-material" rid="pcbi.1003204.s004">Table S1</xref>. In more detail, a positive influence of TGF<italic>α</italic> on STAT3 is not reflected in the measurements (see <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref>); consequently, the edge TGF<italic>α</italic>→STAT3 is removed in all optimal solutions. Another edge that is removed in all solutions is PI3K→Rac_Cdc42, as a number of signals downstream of Rac_Cdc42 did not show the expected downregulated response to the PI3K inhibitor in the measurements (this is consistent with the results of the MCoS disussed in the previous subsection). Finally, by removing the edge ERK1/2→p70S6_1 in all solutions, the missing influence of MEK inhibitor on p70S6_1 is accommodated. The edges TGF<italic>α</italic>→MEK1/2 and Rac_Cdc42→MEK1/2 are only removed in some of the solutions. This is an example for two parallel routes that cannot be distinguished: the model structures containing both routes or either route give rise to the same sign-consistent labeling. In contrast, removing either of the edges p90RSK→CREB and p38→CREB results in different sign-consistent labelings, both showing the same number of discrepancies to the measurements: the phosphorylation state of CREB is neither affected by MEK inhibitor nor by p38 inhibitor. However, removing both edges at the same time would interrupt all routes from TGF<italic>α</italic> to CREB what is contradictory to the observed positive effect of TGF<italic>α</italic> in scenarios 1–6. Thus, in this case, allowing only the removal of edges is not sufficient to fully explain the observed measurements. This can be seen in <xref ref-type="fig" rid="pcbi-1003204-g006">Figure 6</xref>, where the two possible optimal sign-consistent labelings that SCEN_FIT would find for the six pruned model structures are shown in comparison to the discretized measurements: in each solution, there are three different remaining errors in the CREB column. The errors for STAT3 as well as the errors in response to PI3K inhibitor (scenarios 9 and 14) could be significantly reduced by removing the respective edges.</p>
<fig id="pcbi-1003204-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g005</object-id><label>Figure 5</label><caption>
<title>Combined view of all optimal model structures derived from the compressed EGFR/ErbB model by applying the OPT_SUBGRAPH procedure with enumeration.</title>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g005" position="float" xlink:type="simple"/></fig><fig id="pcbi-1003204-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g006</object-id><label>Figure 6</label><caption>
<title>Discretized data and the (two) SCEN_FIT solutions that result from the optimal subgraphs given in <xref ref-type="fig" rid="pcbi-1003204-g005">Figure 5</xref>.</title>
<p>The color coding is the same as in <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref>. All six optimal subgraphs contained in <xref ref-type="fig" rid="pcbi-1003204-g005">Figure 5</xref> give rise to the same SCEN_FIT solution, except for the CREB column. Here, three subgraphs show a mismatch in scenarios 5, 10, and 15 (indicated by the left semicycles), while the other three show a mismatch in scenarios 6, 11, and 16 (indicated by the right semicycles).</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g006" position="float" xlink:type="simple"/></fig></sec><sec id="s4e">
<title>Applying OPT_GRAPH</title>
<p>Next, we use the OPT_GRAPH procedure to identify edges that may be missing from the EGFR network and whose addition would therefore improve the goodness of fit to the data. <xref ref-type="table" rid="pcbi-1003204-t003">Table 3</xref> displays the edges that lead to the highest improvement as determined by OPT_GRAPH. All these edges have in common that they give rise to an additional route from TGF<italic>α</italic> to CREB not running over p38 or MEK1/2. By adding any of these edges to the model structure before reapplying the OPT_SUBGRAPH procedure, we can further reduce the fitting error to 23 (compared to 26 if only edge removals are allowed).</p>
<table-wrap id="pcbi-1003204-t003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.t003</object-id><label>Table 3</label><caption>
<title>Suggestions for new edges as computed by OPT_GRAPH.</title>
</caption><alternatives><graphic id="pcbi-1003204-t003-3" position="float" mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.t003" xlink:type="simple"/>
<table><colgroup span="1"><col align="left" span="1"/></colgroup>
<tbody>
<tr>
<td align="left" rowspan="1" colspan="1">tgfa→creb</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">jnk→creb</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">p70s61→creb</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">rac_cdc42→creb</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">tgfa→erk12</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">jnk→erk12</td>
</tr>
<tr>
<td align="left" rowspan="1" colspan="1">rac_cdc42→erk12</td>
</tr>
</tbody>
</table>
</alternatives><table-wrap-foot><fn id="nt103"><label/><p>Adding any of these edges to the model structure leads to a decrease of the fitting error from 26 to 23.</p></fn></table-wrap-foot></table-wrap>
<p>As an example, we show the optimized model structures when adding the edge TGF<italic>α</italic>→CREB. A combined view of the three optimal solutions (that can be found by OPT_GRAPH after adding this edge) is shown in <xref ref-type="fig" rid="pcbi-1003204-g007">Figure 7</xref>. As it was the case for the optimization in the original network, the edges TGF<italic>α</italic>→STAT3, PI3K→Rac_CDC42 and ERK1/2→p70S6_1 are removed in all solutions, while the edges TGF<italic>α</italic>→MEK1/2 and Rac_Cdc42→MEK1/2 are two alternative routes (either both are present or at least one of both; this gives the three optimal subgraphs). With the added edge TGF<italic>α</italic>→CREB the model structure comprises an activation route from TGF<italic>α</italic> to CREB that is independent of p38 and p90RSK, and removing both the p90RSK→CREB and p38→CREB edge in all solutions is now optimal.</p>
<fig id="pcbi-1003204-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g007</object-id><label>Figure 7</label><caption>
<title>Combined view of the three optimal subgraphs resulting when adding TGF<italic>α</italic> to CREB to the initial model structure.</title>
<p>In all three solutions, the edges erk12→p70s6_1, tgfa→stat3, p90rsk→creb and p38→creb are removed. Edges tgfa→mek12 and rac_cdc42→mek12 represent alternative pathways; at least one of both must be contained.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g007" position="float" xlink:type="simple"/></fig>
<p>All three solutions induce the same optimal sign-consistent node labeling. <xref ref-type="fig" rid="pcbi-1003204-g008">Figure 8</xref> shows the mismatches of the experimental data in the optimal graph (<xref ref-type="fig" rid="pcbi-1003204-g007">Figure 7</xref>) vs. the mismatches in the initial model structure (<xref ref-type="fig" rid="pcbi-1003204-g004">Figure 4B</xref>). The measurements for CREB are now in full accordance with the model structure and the errors for STAT3 could be significantly reduced. Furthermore, a number of errors in scenarios 9 and 14 showing the influence of PI3K inhibitor could be eliminated, although at the same time a few mismatches for some nodes have been introduced. Finally, the influence of MEK inhibitor on p70S6_1 is now predicted correctly. Here, we considered only the addition of a single edge to improve the fit to data. In principle, one could remove all remaining discrepancies by adding further edges. However, in particular if the measurements show inconsistencies (e.g., the different effect of PI3K inhibitor on ERK1/2 with/without TGF<italic>α</italic>), some errors can only be removed by introducing a positive and a negative edge between a pair of nodes. Furthermore, edges leading only to a minor improvement of the fitting error are unlikely to represents a real effect. We also emphasize that proposed new edges may often indicate <italic>indirect</italic> rather than direct effects (representing then (hidden) paths in the network). In any case, dedicated experiments are required to confirm or prove the suggested causal links.</p>
<fig id="pcbi-1003204-g008" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1003204.g008</object-id><label>Figure 8</label><caption>
<title>Comparison of the fitting errors of the initial model structure (see <xref ref-type="fig" rid="pcbi-1003204-g003">Figures 3</xref> and <xref ref-type="fig" rid="pcbi-1003204-g004">4</xref>) and of the optimal interaction graph shown in <xref ref-type="fig" rid="pcbi-1003204-g007">Figure 7</xref>.</title>
<p>Green fields indicate an error that has been present in the original model structure, but could be removed by optimizing the model structure. Yellow fields refer to errors that could not be resolved, and red fields indicate errors that have not been present in the original model structure, but were introduced by the optimization.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1003204.g008" position="float" xlink:type="simple"/></fig>
<p>To summarize, essential findings of the network structure optimization in the EGFR/ErbB network—which may indicate important specifics of this signaling pathway in hepatocytes—are: (1) STAT3 is not activated by TGF<italic>α</italic>; (2) Phosphorylation of the autocatalytic domain of p70S6 (termed p70S6_1 in the model) is independent of ERK1/2; (3) The activation of CREB in response to TGF<italic>α</italic> is likely to be caused by a p38 and MEK1/2 independent route; and (4) The activation of Rac/Cdc42 is independent of PI3K activity. These results, generated in an automated way, confirm several of the conjectures formulated in <xref ref-type="bibr" rid="pcbi.1003204-Samaga1">[18]</xref> that were derived by inspection only. In addition, by identifying parallel activation routes that cannot be distinguished with the experimental data at hand, the presented approach contributes to a better understanding of the network topology and helps to suggest further experiments for uncovering the true wiring diagram of this important signaling pathway in the given cell type.</p>
</sec><sec id="s4f">
<title>Evaluation of the runtime behavior with respect to different problem sizes</title>
<p>When applying the four fundamental optimization problems SCEN_FIT, MCoS, OPT_SUBGRAPH and OPT_GRAPH to the EGFR/ErbB case study, we observed that all problems for both finding single and enumerating all solutions could be solved in a few seconds (see <xref ref-type="supplementary-material" rid="pcbi.1003204.s003">Figure S3</xref>), although hundreds or (in case of OPT_SUBGRAPH and OPT_GRAPH) even thousands of integer variables and constraints might be involved. However, since ILPs are in general NP-hard problems, we tested the runtime behavior more systematically by means of benchmarks to provide information on scalability and the ability of the algorithms to tackle larger, more complex problems. The benchmarks shown in <xref ref-type="supplementary-material" rid="pcbi.1003204.s003">Figure S3</xref> evaluate the runtime of the formulations for problems of different size. Four experimental/simulated datasets were used: (i) the EGFR dataset interrogated throughout this paper, (ii) a random dataset of equal size to the EGFR dataset, (iii) a random dataset with the same number of signals (readouts) as the EGFR dataset but with double the number of experimental scenarios, and (iv) a random dataset with equal number of scenarios as the EGFR dataset, but with more measured signals. Moreover, four networks of different size were interrogated: (i) the compressed EGFR network (numbering 18 edges; <xref ref-type="fig" rid="pcbi-1003204-g004">Figure 4B</xref>), (ii) the uncompressed EGFR network, after removing non-observable and non-controllable parts of it (numbering 67 edges; <xref ref-type="fig" rid="pcbi-1003204-g004">Figure 4A</xref>), and two partially compressed networks, (iii) one numbering 32 edges, and (iv) one numbering 42 edges. For a detailed report on the benchmarks see <xref ref-type="supplementary-material" rid="pcbi.1003204.s007">Text S3</xref>; here, we give a brief overview of the results.</p>
<p>First of all, the benchmarks clearly showed a significant effect of the compression of the interaction graph as the amount of required memory and the runtimes were greatly decreased. All four problems (also in enumeration mode) could be solved within seconds for all training datasets. This is not only due to smaller network size (and thus fewer constraints and variables), but also due to the fact that the number of alternate optimal solutions to be found in the enumeration procedure, in particular for the OPT_SUBGRAPH problem, is strongly reduced.</p>
<p><xref ref-type="supplementary-material" rid="pcbi.1003204.s003">Figure S3</xref> shows that <italic>single solutions</italic> could be found within seconds for almost all problems, also in the larger networks. However, the runtime rapidly increased for OPT_SUBGRAPH and OPT_GRAPH problems when interrogated with the random dataset with double the number of experimental scenarios. The utilization of randomly generated data mimics a noisy dataset full of internal conflicts (i.e., the signal does not follow certain motifs like the actual data, but signals that are co-regulated in one scenario are anti-regulated in the next). This slows down the formulation and the runtime increases drastically, especially for the uncompressed network.</p>
<p>Regarding the <italic>full enumeration</italic> of alternate optimal solutions, we observed that all optimal SCEN_FIT and MCoS solutions could be found for all problem sizes within seconds. As expected, full enumeration of the optimal OPT_SUBGRAPH solutions (as well as solving the OPT_GRAPH problem) becomes challenging in larger networks for two reasons: (i) more than 17,000 variables and 37,000 constraints might be required to represent the problem, and (ii) a large number of alternate optimal solutions might exist. For this reason, several runs stopped because either the limit of the maximal number of solutions or the time limit was exceeded.</p>
</sec></sec><sec id="s5">
<title>Discussion</title>
<p>We presented a new framework for interrogating and training signaling networks based on measurements from stimulus-response experiments. Our approach represents signaling networks as interaction graphs and can thus immediately be applied to network topologies stored in many databases without the need to convert these graphs into other modeling formalisms. Interaction graphs capture merely the positive and negative edges between the components in the network; however, this information already sets constraints on the possible qualitative behavior of the nodes when stimulating or perturbing the network. Our approach uses Integer Linear Programming to encode these constraints and to predict the possible changes (down, neutral, up) of the activation levels of the involved players for a given experiment. Based on this ILP formulation we presented four basic optimization routines useful to detect and remove inconsistencies between measurements and predicted behaviors:</p>
<list list-type="order"><list-item>
<p>SCEN_FIT: Determination of a causal explanation for the measured activation changes of readout nodes under a given perturbation scenario. If the measurements are inconsistent with the network topology, the closest feasible explanation is identified.</p>
</list-item><list-item>
<p>Minimal Correction Sets: In case of an inconsistent scenario, determination of a minimal set of nodes whose states need to be corrected to make a single inconsistent scenario consistent.</p>
</list-item><list-item>
<p>OPT_SUBGRAPH: Determination of an optimal subgraph of a given network topology that can reflect the measurements for a set of scenarios at best.</p>
</list-item><list-item>
<p>OPT_GRAPH: Identification of edge candidate(s) whose insertion would improve the consistency of the graph with respect to a set of experimental scenarios the most.</p>
</list-item></list>
<p>The first two optimization problems seek to match the network topology with measurements from a <italic>single</italic> stimulus-response experiment. In contrast, (3) and (4) operate on a <italic>set</italic> of scenarios and seek to optimize (train) the network structure over all scenarios by removing or/and adding edges. For the first three problems we also provided enumeration algorithms to find multiple or all solutions that solve the optimization problem equally well (e.g., for problem (3), all optimal subgraphs that minimize the number of inconsistencies between measurements and predictions). The enumeration of all solutions is necessary to allow one to draw general conclusions, for example, that a certain edge is removed in all (not only in some) optimal solutions. However, the enumeration of optimal solutions may quickly become prohibitive in larger networks. We therefore employ effective compression techniques to deal with the combinatorial complexity arising in large-scale networks. In fact, this allowed us to also address the enumeration of multiple optimal solutions in the EGFR/ErbB case study where all performed computations could be finished within seconds on a standard PC. To assess the runtime behavior and scalability of our algorithms, we performed further benchmark tests showing that finding single optimal solutions to the four basic problems is feasible also in larger networks, whereas enumeration of all solutions, in particular for OPT_SUBGRAPH, becomes challenging (see <xref ref-type="supplementary-material" rid="pcbi.1003204.s003">Figure S3</xref> and <xref ref-type="supplementary-material" rid="pcbi.1003204.s007">Text S3</xref>).</p>
<p>In contrast to the globally optimal solutions that will be delivered for problems (1)–(3), the identification of (a set of) missing edges reducing the fitting error the most (problem (4)) is based on a greedy algorithm which may deliver local instead of globally optimal solutions when adding more than one edge. However, given the huge search space of potentially missing (sets of) edges, the employed greedy algorithm appears to be a suitable and useful heuristics to suggest missing interactions in the IG model. If only one candidate edge is to be added (instead of a set), it even delivers the globally optimal solution, also in large networks.</p>
<p>To the best of our knowledge, our presented approach is the first that uses Integer Linear Programming directly on <italic>interaction graphs</italic> to systematically interrogate and train the wiring diagrams of signaling networks. Our framework shares some similarities with the approach of Saez-Rodriguez et al. <xref ref-type="bibr" rid="pcbi.1003204-SaezRodriguez2">[7]</xref> for which recently also an ILP formulation was conceived <xref ref-type="bibr" rid="pcbi.1003204-Melas1">[29]</xref>. This method also starts with an IG representing the prior knowledge; however, the IG is then translated to a superstructure of Boolean networks within which the optimal (sub)model fitting the data at best is identified. Although a correctly reconstructed Boolean network can potentially provide a more specific view on the network structure than an IG, the search space is considerably larger since usually a vast number of possible Boolean networks can be constructed from a given IG. This may lead to highly underdetermined problems and enumeration strategies as discussed herein can become intractable. Furthermore, Boolean networks require a strict binarization of the nodes' states whereas in the IG formulation we consider “influences”. This may lead to different results. For example, the Boolean function for a node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e324" xlink:type="simple"/></inline-formula> may read <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e325" xlink:type="simple"/></inline-formula>. Assume that we consider the influence of (external) activation of node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e326" xlink:type="simple"/></inline-formula> given the network state where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e327" xlink:type="simple"/></inline-formula> is active and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e328" xlink:type="simple"/></inline-formula> inactive; hence, where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e329" xlink:type="simple"/></inline-formula> is already in the active state. The Boolean model will tell us that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e330" xlink:type="simple"/></inline-formula> remains in state 1 when activating <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e331" xlink:type="simple"/></inline-formula>, hence, the influence of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e332" xlink:type="simple"/></inline-formula> seems to be not relevant. However, Boolean functions are discrete approximations of the true mechanisms and what one could probably see in the measurements is that the level of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e333" xlink:type="simple"/></inline-formula> goes from “high” to “very high”. In the IG, we can still account for this effect stating that an elevated level of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e334" xlink:type="simple"/></inline-formula> induces a positive effect on <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e335" xlink:type="simple"/></inline-formula>. So discretized node states need not to be considered in the IG model; however, similar as for the Boolean model, some kind of discretization of the data will be required as well when classifying a change of an activation level to be significant or not. Finally, we also mention that methods for the enumeration of solutions and for the search for missing edges were not presented in <xref ref-type="bibr" rid="pcbi.1003204-Melas1">[29]</xref>.</p>
<p>The approach that is arguably closest to ours is the method introduced in <xref ref-type="bibr" rid="pcbi.1003204-Siegel1">[11]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Gebser1">[13]</xref>. This framework is also based on IG and uses a similar consistency rule as we did herein. However, there are a number of key differences. First, we explicitly allow a “0” change to mark non-affected states of nodes. This extension seems to be essential, for example, when perturbation of a node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e336" xlink:type="simple"/></inline-formula> cannot affect another node <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e337" xlink:type="simple"/></inline-formula> simply because (in the true topology) a path from <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e338" xlink:type="simple"/></inline-formula> to <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e339" xlink:type="simple"/></inline-formula> does not exist. Second, the four basic problem formulations presented herein go beyond the techniques introduced in <xref ref-type="bibr" rid="pcbi.1003204-Siegel1">[11]</xref>–<xref ref-type="bibr" rid="pcbi.1003204-Gebser1">[13]</xref>. In particular, the training of the topology, that is, the identification of inactive or missing interactions based on a library of stimulus-response experiments, was not considered in these works. A third key difference is that we formulated the constraints resulting from the consistency rules as an ILP problem, whereas <xref ref-type="bibr" rid="pcbi.1003204-Gebser1">[13]</xref> uses Answer Set Programming (ASP). Both ILP and ASP deliver globally optimal solutions and highly optimized solvers exist. Using ILP or ASP solvers is not straightforward for non-experts and with <italic>SigNetTrainer</italic> we provide an easy-to-use toolbox. However, it would be an interesting aspect for future work to compare ASP and ILP formulations of the training and enumeration problems formulated herein.</p>
<p>We demonstrated the power of our proposed approach by interrogating and (re-)training a manually curated IG model of EGFR/ErbB signaling against a library of high-throughput phosphoproteomic data measured in primary human hepatocytes. Our algorithms could systematically uncover all inconsistencies between measurements and network topology and gave possible explanations for them. Novel biological insights for this important signaling pathway could be revealed by listing interactions that are likely to be inactive in hepatocytes and by giving suggestions for possibly missing interactions that, if included, would significantly improve the goodness of fit. Clearly, these predictions await experimental validation.</p>
<p>This study gave a proof of principle for our methodology, showing its flexibility and that it can be applied to a wide range of problems arising when confronting signaling network topologies with experimental datasets. Given that only fairly accessible biological knowledge is required and that all related algorithms were implemented in a freely available toolbox make it an appealing approach for various applications.</p>
</sec><sec id="s6">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1003204.s001" mimetype="application/postscript" xlink:href="info:doi/10.1371/journal.pcbi.1003204.s001" position="float" xlink:type="simple"><label>Figure S1</label><caption>
<p><bold>Raw training data.</bold> A subset of the phosphoprotein data published in <xref ref-type="bibr" rid="pcbi.1003204-Alexopoulos1">[2]</xref>, capturing the signaling response of primary human hepatocytes to TGF<italic>α</italic> in combination with six specific molecular inhibitors (including the no-inhibitor treatment): MEK12-i, p38-i, PI3K-i, mTORrap-i, GSK3-i, no-inhib. Each subplot shows the phosphorylation state of the respective protein in fluorescent units (obtained via xMAP technology), measured 0 minutes (left border) and 25 minutes (right border) after stimulation.</p>
<p>(EPS)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003204.s002" mimetype="image/png" xlink:href="info:doi/10.1371/journal.pcbi.1003204.s002" position="float" xlink:type="simple"><label>Figure S2</label><caption>
<p><bold>Cumulative fitness error of optimal SCEN_FIT solutions over all 16 scenarios in the (compressed) EGFR/ErbB network as a function of the two discretization thresholds.</bold> The cumulative fitness error of optimal SCEN_FIT solutions over all 16 scenarios in the (compressed) EGFR/ErbB network as a function of the significant increase and significant decrease thresholds is plotted. The thresholds combination used for all analyses presented in this paper are plotted as a blue rectangle. There is a relatively broad range for “significant decrease” in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e340" xlink:type="simple"/></inline-formula> and “significant increase” in <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pcbi.1003204.e341" xlink:type="simple"/></inline-formula> where the fitness error assumes its lowest values (40–50). Outside that area the fitness error increases rapidly. The thresholds used in the EGFR/ErbB study (0.66 and 1.5, respectively) are inside that range and result in a total fitness error of 45 (see <xref ref-type="fig" rid="pcbi-1003204-g003">Figure 3</xref> in main text).</p>
<p>(PNG)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003204.s003" mimetype="application/pdf" xlink:href="info:doi/10.1371/journal.pcbi.1003204.s003" position="float" xlink:type="simple"><label>Figure S3</label><caption>
<p><bold>Evaluation of runtimes of </bold><bold><italic>SigNetTrainer</italic></bold><bold> (GUROBI version) with respect to the four basic optimization problems and different problem sizes.</bold> Runs for all four ILP problems introduced in this paper (SCEN_FIT, MCoS, OPT_SUBGRAPH, OPT_GRAPH) are shown in the corresponding columns. For each run the CPU time, number of variables, number of constraints, and number of found solutions are reported, both for obtaining a single solution and for enumeration of solutions. The first five columns give a description of each run regarding the interrogated data and network: the dataset used (EGFR data, random data, more scenarios, more signals; see explanations in the main text and in <xref ref-type="supplementary-material" rid="pcbi.1003204.s007">text S3</xref>), the number of reactions in the network (18, 32, 42, 67), number of measured signals, number of scenarios and number of inputs. A time limit is set for each run at 64,000 seconds. For the enumeration benchmarks, a maximum number of allowed solutions is set at 1000 solutions. The maximum allowed memory is 4 GB. Instances where the algorithm did not complete the run due to time-out are marked with red. All calculations were done on a PC with a 2.2 GHz Intel quad core i7 CPU (only a single core was used) and 4 GB 1333 MHz DDR3 memory. The default optimality tolerance was used in all optimizations for the GUROBI solver (see also <ext-link ext-link-type="uri" xlink:href="http://www.gurobi.com/documentation/5.0/reference-manual/" xlink:type="simple">http://www.gurobi.com/documentation/5.0/reference-manual/</ext-link>).</p>
<p>(PDF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003204.s004" mimetype="application/pdf" xlink:href="info:doi/10.1371/journal.pcbi.1003204.s004" position="float" xlink:type="simple"><label>Table S1</label><caption>
<p><bold>Optimal model structures derived from the compressed EGFR/ErbB model by OPT_SUBGRAPH with enumeration.</bold></p>
<p>(PDF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003204.s005" mimetype="application/pdf" xlink:href="info:doi/10.1371/journal.pcbi.1003204.s005" position="float" xlink:type="simple"><label>Text S1</label><caption>
<p><bold>Getting started with </bold><bold><italic>SigNetTrainer</italic></bold><bold>.</bold></p>
<p>(PDF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003204.s006" mimetype="application/pdf" xlink:href="info:doi/10.1371/journal.pcbi.1003204.s006" position="float" xlink:type="simple"><label>Text S2</label><caption>
<p><bold>Sensitivity analysis of the SCEN_FIT solutions with respect to the chosen discretization thresholds.</bold></p>
<p>(PDF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1003204.s007" mimetype="application/pdf" xlink:href="info:doi/10.1371/journal.pcbi.1003204.s007" position="float" xlink:type="simple"><label>Text S3</label><caption>
<p><bold>Systematic evaluation of ILP runtimes with respect to problem size.</bold></p>
<p>(PDF)</p>
</caption></supplementary-material></sec></body>
<back>
<ack>
<p>We thank Alexander Mitsos and Julio Saez-Rodriguez for fruitful discussions.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1003204-SaezRodriguez1"><label>1</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Alexopoulos</surname><given-names>LG</given-names></name>, <name name-style="western"><surname>Stolovitzky</surname><given-names>G</given-names></name> (<year>2011</year>) <article-title>Setting the standards for signal transduction research</article-title>. <source>Sci Signal</source> <volume>4</volume>: <fpage>pe10</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Alexopoulos1"><label>2</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Alexopoulos</surname><given-names>LG</given-names></name>, <name name-style="western"><surname>Saez Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Cosgrove</surname><given-names>BD</given-names></name>, <name name-style="western"><surname>Lauffenburger</surname><given-names>DA</given-names></name>, <name name-style="western"><surname>Sorger</surname><given-names>PK</given-names></name> (<year>2010</year>) <article-title>Networks inferred from biochemical data reveal profound differences in toll-like receptor and inammatory signaling between normal and transformed hepatocytes</article-title>. <source>Mol Cell Proteomics</source> <volume>9</volume>: <fpage>1849</fpage>–<lpage>1865</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-JoshiTope1"><label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Joshi-Tope</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Gillespie</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Vastrik</surname><given-names>I</given-names></name>, <name name-style="western"><surname>D'Eustachio</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Schmidt</surname><given-names>E</given-names></name>, <etal>et al</etal>. (<year>2005</year>) <article-title>Reactome: a knowledgebase of biological pathways</article-title>. <source>Nucleic Acids Res</source> <volume>33</volume>: <fpage>D428</fpage>–<lpage>D432</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Cerami1"><label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Cerami</surname><given-names>EG</given-names></name>, <name name-style="western"><surname>Gross</surname><given-names>BE</given-names></name>, <name name-style="western"><surname>Demir</surname><given-names>E</given-names></name>, <name name-style="western"><surname>Rodchenkov</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Babur</surname><given-names>O</given-names></name>, <etal>et al</etal>. (<year>2011</year>) <article-title>Pathway Commons, a web resource for biological pathway data</article-title>. <source>Nucleic Acids Res</source> <volume>39</volume>: <fpage>D685</fpage>–<lpage>D690</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Kanehisa1"><label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kanehisa</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Goto</surname><given-names>S</given-names></name> (<year>2000</year>) <article-title>KEGG: kyoto encyclopedia of genes and genomes</article-title>. <source>Nucleic Acids Res</source> <volume>28</volume>: <fpage>27</fpage>–<lpage>30</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Mitsos1"><label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Mitsos</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Melas</surname><given-names>IN</given-names></name>, <name name-style="western"><surname>Siminelakis</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Chairakaki</surname><given-names>AD</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <etal>et al</etal>. (<year>2009</year>) <article-title>Identifying drug effects via pathway alterations using an integer linear programming optimization formulation on phosphoproteomic data</article-title>. <source>PLoS Comput Biol</source> <volume>5</volume>: <fpage>e1000591</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-SaezRodriguez2"><label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Alexopoulos</surname><given-names>LG</given-names></name>, <name name-style="western"><surname>Epperlein</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Samaga</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Lauffenburger</surname><given-names>DA</given-names></name>, <etal>et al</etal>. (<year>2009</year>) <article-title>Discrete logic modelling as a means to link protein signalling networks with functional analysis of mammalian signal transduction</article-title>. <source>Mol Syst Biol</source> <volume>5</volume>: <fpage>331</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Morris1"><label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Morris</surname><given-names>MK</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Clarke</surname><given-names>DC</given-names></name>, <name name-style="western"><surname>Sorger</surname><given-names>PK</given-names></name>, <name name-style="western"><surname>Lauffenburger</surname><given-names>DA</given-names></name> (<year>2011</year>) <article-title>Training signaling pathway maps to biochemical data with constrained fuzzy logic: quantitative analysis of liver cell responses to inammatory stimuli</article-title>. <source>PLoS Comput Biol</source> <volume>7</volume>: <fpage>e1001099</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Chu1"><label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chu</surname><given-names>Y</given-names></name>, <name name-style="western"><surname>Jayaraman</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Hahn</surname><given-names>J</given-names></name> (<year>2007</year>) <article-title>Parameter sensitivity analysis of IL-6 signalling pathways</article-title>. <source>IET Syst Biol</source> <volume>1</volume>: <fpage>342</fpage>–<lpage>352</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Zhang1"><label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Zhang</surname><given-names>Y</given-names></name>, <name name-style="western"><surname>Rundell</surname><given-names>A</given-names></name> (<year>2006</year>) <article-title>Comparative study of parameter sensitivity analyses of the TCRactivated ERK-MAPK signalling pathway</article-title>. <source>Syst Biol (Stevenage)</source> <volume>153</volume>: <fpage>201</fpage>–<lpage>211</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Siegel1"><label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Siegel</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Radulescu</surname><given-names>O</given-names></name>, <name name-style="western"><surname>Le Borgne</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Veber</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Ouy</surname><given-names>J</given-names></name>, <etal>et al</etal>. (<year>2006</year>) <article-title>Qualitative analysis of the relation between DNA microarray data and behavioral models of regulation networks</article-title>. <source>Biosystems</source> <volume>84</volume>: <fpage>153</fpage>–<lpage>174</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Guziolowski1"><label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Guziolowski</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Bourdé</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Moreews</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Siegel</surname><given-names>A</given-names></name> (<year>2009</year>) <article-title>BioQuali Cytoscape plugin: analysing the global consistency of regulatory networks</article-title>. <source>BMC Genomics</source> <volume>10</volume>: <fpage>244</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Gebser1"><label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gebser</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Schaub</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Thiele</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Veber</surname><given-names>P</given-names></name> (<year>2011</year>) <article-title>Detecting inconsistencies in large biological networks with answer set programming</article-title>. <source>Theory and Practice of Logic Programming</source> <volume>11</volume>: <fpage>323</fpage>–<lpage>360</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-GutirrezRos1"><label>14</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gutiérrez-Ríos</surname><given-names>RM</given-names></name>, <name name-style="western"><surname>Rosenblueth</surname><given-names>DA</given-names></name>, <name name-style="western"><surname>Loza</surname><given-names>JA</given-names></name>, <name name-style="western"><surname>Huerta</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>Glasner</surname><given-names>JD</given-names></name>, <etal>et al</etal>. (<year>2003</year>) <article-title>Regulatory network of Escherichia coli: consistency between literature knowledge and microarray profiles</article-title>. <source>Genome Res</source> <volume>13</volume>: <fpage>2433</fpage>–<lpage>2443</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Sachs1"><label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Sachs</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Perez</surname><given-names>O</given-names></name>, <name name-style="western"><surname>Pe'er</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Lauffenburger</surname><given-names>DA</given-names></name>, <name name-style="western"><surname>Nolan</surname><given-names>GP</given-names></name> (<year>2005</year>) <article-title>Causal protein-signaling networks derived from multiparameter single-cell data</article-title>. <source>Science</source> <volume>308</volume>: <fpage>523</fpage>–<lpage>529</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Feiglin1"><label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Feiglin</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Hacohen</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Sarusi</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Fisher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Unger</surname><given-names>R</given-names></name>, <etal>et al</etal>. (<year>2012</year>) <article-title>Static network structure can be used to model the phenotypic effects of perturbations in regulatory networks</article-title>. <source>Bioinformatics</source> <volume>28</volume>: <fpage>2811</fpage>–<lpage>2818</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Klamt1"><label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Lindquist</surname><given-names>JA</given-names></name>, <name name-style="western"><surname>Simeoni</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Gilles</surname><given-names>ED</given-names></name> (<year>2006</year>) <article-title>A methodology for the structural and functional analysis of signaling and regulatory networks</article-title>. <source>BMC Bioinformatics</source> <volume>7</volume>: <fpage>56</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Samaga1"><label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Samaga</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Alexopoulos</surname><given-names>LG</given-names></name>, <name name-style="western"><surname>Sorger</surname><given-names>PK</given-names></name>, <name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name> (<year>2009</year>) <article-title>The logic of EGFR/ErbB signaling: theoretical properties and analysis of high-throughput data</article-title>. <source>PLoS Comput Biol</source> <volume>5</volume>: <fpage>e1000438</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Morris2"><label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Morris</surname><given-names>MK</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Sorger</surname><given-names>PK</given-names></name>, <name name-style="western"><surname>Lauffenburger</surname><given-names>DA</given-names></name> (<year>2010</year>) <article-title>Logic-based models for the analysis of cell signaling networks</article-title>. <source>Biochemistry</source> <volume>49</volume>: <fpage>3216</fpage>–<lpage>3224</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Wang1"><label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wang</surname><given-names>RS</given-names></name>, <name name-style="western"><surname>Saadatpour</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Albert</surname><given-names>R</given-names></name> (<year>2012</year>) <article-title>Boolean modeling in systems biology: an overview of methodology and applications</article-title>. <source>Phys Biol</source> <volume>9</volume>: <fpage>055001</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Aldridge1"><label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Aldridge</surname><given-names>BB</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Muhlich</surname><given-names>JL</given-names></name>, <name name-style="western"><surname>Sorger</surname><given-names>PK</given-names></name>, <name name-style="western"><surname>Lauffenburger</surname><given-names>DA</given-names></name> (<year>2009</year>) <article-title>Fuzzy logic analysis of kinase pathway crosstalk in TNF/EGF/insulin-induced signaling</article-title>. <source>PLoS Comput Biol</source> <volume>5</volume>: <fpage>e1000340</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Klamt2"><label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Klamt</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Gilles</surname><given-names>ED</given-names></name> (<year>2007</year>) <article-title>Structural and functional analysis of cellular networks with CellNetAnalyzer</article-title>. <source>BMC Systems Biology</source> <volume>1</volume>: <fpage>2</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Bosl1"><label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Bosl</surname><given-names>W</given-names></name> (<year>2007</year>) <article-title>Systems biology by the rules: hybrid intelligent systems for pathway modeling and discovery</article-title>. <source>BMC Syst Biol</source> <volume>1</volume>: <fpage>13</fpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Schoeberl1"><label>24</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Schoeberl</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Eichler-Jonsson</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Gilles</surname><given-names>ED</given-names></name>, <name name-style="western"><surname>Müller</surname><given-names>G</given-names></name> (<year>2004</year>) <article-title>Computational modeling of the dynamics of the MAP kinase cascade activated by surface and internalized EGF receptors</article-title>. <source>Nat Biotechnol</source> <volume>20</volume>: <fpage>370</fpage>–<lpage>375</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Quach1"><label>25</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Quach</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Brunel</surname><given-names>N</given-names></name>, <name name-style="western"><surname>d'Alché-Buc</surname><given-names>F</given-names></name> (<year>2007</year>) <article-title>Estimating parameters and hidden variables in nonlinear state-space models based on ODEs for biological networks inference</article-title>. <source>Bioinformatics</source> <volume>23</volume>: <fpage>3209</fpage>–<lpage>3216</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Qiu1"><label>26</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Qiu</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Plevritis</surname><given-names>SK</given-names></name> (<year>2011</year>) <article-title>Reconstructing directed signed gene regulatory network from microarray data</article-title>. <source>IEEE Trans Biomed Eng</source> <volume>58</volume>: <fpage>3518</fpage>–<lpage>3521</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Thomas1"><label>27</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Thomas</surname><given-names>R</given-names></name> (<year>1981</year>) <article-title>On the relation between the logical structure of systems and their ability to generate multiple steady states of sustained oscillations</article-title>. <source>Springer Series Synergetics</source> <volume>9</volume>: <fpage>180</fpage>–<lpage>193</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Soul1"><label>28</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Soulé</surname><given-names>C</given-names></name> (<year>2003</year>) <article-title>Graphic requirements for multistationarity</article-title>. <source>ComPlexUs</source> <volume>1</volume>: <fpage>123</fpage>–<lpage>133</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Melas1"><label>29</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Melas</surname><given-names>IN</given-names></name>, <name name-style="western"><surname>Mitsos</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Messinis</surname><given-names>DE</given-names></name>, <name name-style="western"><surname>Weiss</surname><given-names>TS</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <etal>et al</etal>. (<year>2012</year>) <article-title>Construction of large signaling pathways using an adaptive perturbation approach with phosphoproteomic data</article-title>. <source>Mol Biosys</source> <volume>8</volume>: <fpage>1571</fpage>–<lpage>1584</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1003204-Bertsimas1"><label>30</label>
<mixed-citation publication-type="other" xlink:type="simple">Bertsimas D, Tsitsiklis J (1997) Introduction to Linear Optimization. Belmont: Athena Scientific.</mixed-citation>
</ref>
</ref-list></back>
</article>