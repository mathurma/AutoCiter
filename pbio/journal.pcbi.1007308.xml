<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.1d3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-19-00254</article-id>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1007308</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Algebra</subject><subj-group><subject>Polynomials</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Computer and information sciences</subject><subj-group><subject>Network analysis</subject><subj-group><subject>Metabolic networks</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Chemistry</subject><subj-group><subject>Chemical compounds</subject><subj-group><subject>Organic compounds</subject><subj-group><subject>Carbohydrates</subject><subj-group><subject>Monosaccharides</subject><subj-group><subject>Xylose</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Chemistry</subject><subj-group><subject>Organic chemistry</subject><subj-group><subject>Organic compounds</subject><subj-group><subject>Carbohydrates</subject><subj-group><subject>Monosaccharides</subject><subj-group><subject>Xylose</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Chemistry</subject><subj-group><subject>Chemical compounds</subject><subj-group><subject>Organic compounds</subject><subj-group><subject>Carbohydrates</subject><subj-group><subject>Monosaccharides</subject><subj-group><subject>Glucose</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Chemistry</subject><subj-group><subject>Organic chemistry</subject><subj-group><subject>Organic compounds</subject><subj-group><subject>Carbohydrates</subject><subj-group><subject>Monosaccharides</subject><subj-group><subject>Glucose</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Metabolism</subject><subj-group><subject>Carbohydrate metabolism</subject><subj-group><subject>Glucose metabolism</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Research design</subject><subj-group><subject>Experimental design</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Approximation methods</subject></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>Fast uncertainty quantification for dynamic flux balance analysis using non-smooth polynomial chaos expansions</article-title>
<alt-title alt-title-type="running-head">Fast uncertainty quantification for dynamic flux balance analysis</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Paulson</surname> <given-names>Joel A.</given-names></name>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff001"/>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Martin-Casas</surname> <given-names>Marc</given-names></name>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff001"/>
</contrib>
<contrib contrib-type="author" corresp="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-1700-0600</contrib-id>
<name name-style="western">
<surname>Mesbah</surname> <given-names>Ali</given-names></name>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff001"/>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
</contrib-group>
<aff id="aff001">
<addr-line>Department of Chemical and Biomolecular Engineering, University of California, Berkeley, Berkeley, California, United States of America</addr-line>
</aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Mendes</surname> <given-names>Pedro</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1">
<addr-line>University of Connecticut School of Medicine, UNITED STATES</addr-line>
</aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">mesbah@berkeley.edu</email></corresp>
</author-notes>
<pub-date pub-type="collection">
<month>8</month>
<year>2019</year>
</pub-date>
<pub-date pub-type="epub">
<day>30</day>
<month>8</month>
<year>2019</year>
</pub-date>
<volume>15</volume>
<issue>8</issue>
<elocation-id>e1007308</elocation-id>
<history>
<date date-type="received">
<day>14</day>
<month>2</month>
<year>2019</year>
</date>
<date date-type="accepted">
<day>31</day>
<month>7</month>
<year>2019</year>
</date>
</history>
<permissions>
<copyright-year>2019</copyright-year>
<copyright-holder>Paulson et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1007308"/>
<abstract>
<p>We present a novel surrogate modeling method that can be used to accelerate the solution of uncertainty quantification (UQ) problems arising in nonlinear and non-smooth models of biological systems. In particular, we focus on dynamic flux balance analysis (DFBA) models that couple intracellular fluxes, found from the solution of a constrained metabolic network model of the cellular metabolism, to the time-varying nature of the extracellular substrate and product concentrations. DFBA models are generally computationally expensive and present unique challenges to UQ, as they entail dynamic simulations with discrete events that correspond to switches in the active set of the solution of the constrained intracellular model. The proposed non-smooth polynomial chaos expansion (nsPCE) method is an extension of traditional PCE that can effectively capture singularities in the DFBA model response due to the occurrence of these discrete events. The key idea in nsPCE is to use a model of the singularity time to partition the parameter space into two elements on which the model response behaves smoothly. Separate PCE models are then fit in both elements using a basis-adaptive sparse regression approach that is known to scale well with respect to the number of uncertain parameters. We demonstrate the effectiveness of nsPCE on a DFBA model of an <italic>E. coli</italic> monoculture that consists of 1075 reactions and 761 metabolites. We first illustrate how traditional PCE is unable to handle problems of this level of complexity. We demonstrate that over 800-fold savings in computational cost of uncertainty propagation and Bayesian estimation of parameters in the substrate uptake kinetics can be achieved by using the nsPCE surrogates in place of the full DFBA model simulations. We then investigate the scalability of the nsPCE method by utilizing it for global sensitivity analysis and maximum a posteriori estimation in a synthetic metabolic network problem with a larger number of parameters related to both intracellular and extracellular quantities.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author summary</title>
<p>Construction and validation of mathematical models in biological systems involving genome-scale biomolecular networks is a challenging problem. This article presents a novel surrogate modeling method that can accelerate parameter inference from experimental data and the quantification of uncertainty in the predictions of complex dynamic biological models, with a particular emphasis on nonlinear models with non-smooth behavior. The method is applied to infer extracellular kinetic parameters in a batch fermentation reactor consisting of diauxic growth of <italic>E. coli</italic> on a glucose/xylose mixed media as well as a larger synthetic metabolic network problem. The proposed approach enables rigorous quantification of parameter uncertainty to determine whether or not available data is sufficient for estimation of all unknown model parameters.</p>
</abstract>
<funding-group>
<funding-statement>The authors received no specific funding for this work.</funding-statement>
</funding-group>
<counts>
<fig-count count="14"/>
<table-count count="1"/>
<page-count count="35"/>
</counts>
<custom-meta-group>
<custom-meta>
<meta-name>PLOS Publication Stage</meta-name>
<meta-value>vor-update-to-uncorrected-proof</meta-value>
</custom-meta>
<custom-meta>
<meta-name>Publication Update</meta-name>
<meta-value>2019-09-12</meta-value>
</custom-meta>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>All relevant data are within the manuscript and its Supporting Information files.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>The utility of mathematical modeling in biology is on the rise due to computational advancements and the increasing availability of data provided by high-throughput experimental techniques [<xref ref-type="bibr" rid="pcbi.1007308.ref001">1</xref>]. Flux balance analysis (FBA) is widely used for modeling cellular metabolism in a large range of metabolic and biochemical engineering problems [<xref ref-type="bibr" rid="pcbi.1007308.ref002">2</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref003">3</xref>]. Given a constrained metabolic network, FBA assumes the intracellular fluxes are regulated by the cell to optimize a predefined cellular objective function (e.g., maximizing the biomass growth rate [<xref ref-type="bibr" rid="pcbi.1007308.ref004">4</xref>]) subject to mass balances of the intracellular metabolites and other feasibility constraints (e.g., bounds on the substrate uptake and product secretion rates). However, FBA only identifies metabolic flux distributions at steady-state and, thus, provides no information on metabolite concentrations or the dynamic behavior of the fluxes. A dynamic extension to FBA, commonly referred to as dynamic FBA (DFBA), was originally developed in [<xref ref-type="bibr" rid="pcbi.1007308.ref005">5</xref>] and has been subsequently applied in several applications [<xref ref-type="bibr" rid="pcbi.1007308.ref006">6</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref009">9</xref>]. In DFBA models, the intracellular fluxes are given by the solution of a FBA model, which is coupled to a set of dynamic equations that describes the time-varying nature of the extracellular substrate and product concentrations as a function of the extracellular environment [<xref ref-type="bibr" rid="pcbi.1007308.ref010">10</xref>]. The key assumption in DFBA is that the intracellular fluxes equilibrate instantaneously. This “quasi steady-state” assumption is valid as long as the intracellular dynamics are significantly faster than the extracellular dynamics.</p>
<p>Generally, the prediction of the behavior of biological systems such as those described by DFBA models can be subject to various sources of uncertainty including unknown model parameters, unknown model structure, and experimental uncertainty such as measurement error [<xref ref-type="bibr" rid="pcbi.1007308.ref011">11</xref>]. Accurate quantification of these uncertainties, as well as their impact on the quality of model predictions, is vital when applying these models in decision-support or optimization tasks such as parameter estimation or optimal experiment design. The task of uncertainty quantification (UQ) can be divided into two major problems: <italic>forward</italic> uncertainty propagation and <italic>inverse</italic> uncertainty estimation. The forward problem focuses on propagating all uncertainties through the model to predict the overall uncertainty in the outputs, whereas the inverse problem aims to calibrate the model with experimental data [<xref ref-type="bibr" rid="pcbi.1007308.ref012">12</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref014">14</xref>]. However, the most commonly used UQ methods are intractable for expensive-to-evaluate computational models [<xref ref-type="bibr" rid="pcbi.1007308.ref015">15</xref>], which has severely limited their application to DFBA models. An overview of the various challenges in DFBA simulations can be found in [<xref ref-type="bibr" rid="pcbi.1007308.ref016">16</xref>].</p>
<p>Surrogate modeling techniques are being increasingly adopted to enable complex UQ analyses that would otherwise be impossible. Of the available surrogate modeling approaches, polynomial chaos expansions (PCEs) are one of the most commonly used methods for UQ, which have been shown to yield accurate representations of model outputs using limited computational resources in various engineering systems [<xref ref-type="bibr" rid="pcbi.1007308.ref017">17</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref020">20</xref>] as well as biological systems [<xref ref-type="bibr" rid="pcbi.1007308.ref021">21</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref023">23</xref>]. However, an important underlying assumption in PCE is that the model response is a smooth function of the uncertain parameters such that the response can be accurately approximated by a collection of polynomial functions. For non-smooth models, PCE has been shown to either converge very slowly or even fail to converge altogether depending on the type of non-smoothness [<xref ref-type="bibr" rid="pcbi.1007308.ref024">24</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref025">25</xref>]. This is a critical challenge in DFBA models because they are known to become singular (i.e., lose differentiability) at certain time points due to the underlying quasi steady-state assumption [<xref ref-type="bibr" rid="pcbi.1007308.ref010">10</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref026">26</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref027">27</xref>], meaning that even state-of-the-art PCE methods are not directly applicable to DFBA models.</p>
<p>In this work, we propose an extension to PCE, referred to as non-smooth PCE (nsPCE), that can adequately capture the non-smooth behavior exhibited by DFBA models. The underlying concept behind the proposed nsPCE framework is that the time of occurrence of any singularity in a DFBA model is a smooth function of the parameters, which can be effectively modeled with a PCE. Thus, for any given time of interest, the PCE model of the singularity time can be used to partition the parameter space into two non-overlapping regions (or elements) that represent the collection of parameters for which the singularity has and has not occurred. Separate PCEs can then be constructed over each of these elements, leading to a piecewise polynomial approximation of the overall model response. We adopt a non-intrusive, regression-based approach for PCE construction from a limited number of expensive DFBA simulations. In particular, we take advantage of state-of-the-art sparse regression methods to systematically locate the terms that have the greatest impact on the model response out of a very large candidate set of terms. By exploiting sparsity, we can mitigate the curse-of-dimensionality that can plague traditional PCE, allowing the application of the proposed nsPCE approach to problems with reasonably large number of uncertain parameters.</p>
<p>To demonstrate the effectiveness of the nsPCE method, it is applied to accelerate Bayesian estimation of parameters in the substrate uptake kinetic expressions of diauxic growth of a batch monoculture of <italic>Escherichia coli</italic> on a glucose and xylose mixed media. The metabolic network reconstruction used for <italic>E. coli</italic> is iJ904, which is a genome-scale model that contains 1075 reactions and 761 metabolites [<xref ref-type="bibr" rid="pcbi.1007308.ref028">28</xref>]. Parameter estimation is performed using measurements of the concentrations of extracellular metabolites and biomass that are taken at certain time points throughout the batch. We selected this particular system due to the fact that reported parameter estimates were determined from experimental data using a trial-and-error procedure [<xref ref-type="bibr" rid="pcbi.1007308.ref008">8</xref>]. This was likely due to the computational complexity of the genome-scale DFBA model in conjunction with the limited data set that may not enable unique estimation of parameters. In addition, we demonstrate how nsPCE can be applied to vastly speedup forward UQ analyses including global sensitivity analysis and estimation of the probability distribution of the model response. To demonstrate the scalability of nsPCE, it is used for maximum a posteriori parameter estimation in a synthetic metabolic network problem with twenty unknown parameters related to quantities in both the intracellular reaction network and the extracellular environment. The codes that implement the proposed nsPCE method for generic DFBA models are provided at the repository [<xref ref-type="bibr" rid="pcbi.1007308.ref029">29</xref>].</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Methods</title>
<sec id="sec003">
<title>Dynamic flux balance analysis models</title>
<p>We focus on modeling a microbial cultivation process using dynamic flux balance analysis (DFBA), in which the bioreactor is viewed as a combination of the fluid medium (extracellular environment) and the microorganisms (intracellular environment). Cell walls act as physical boundaries between these two phases, through which certain chemical metabolites are exchanged. The DFBA model can be mathematically formulated as [<xref ref-type="bibr" rid="pcbi.1007308.ref026">26</xref>]
<disp-formula id="pcbi.1007308.e001"><alternatives><graphic id="pcbi.1007308.e001g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e001" xlink:type="simple"/><mml:math display="block" id="M1"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold">s</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="bold">f</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi mathvariant="bold">v</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mi mathvariant="bold">s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold">s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(1)</label></disp-formula>
with <bold>v</bold>(<bold>s</bold>(<italic>t</italic>)) being an element of the solution set of the flux balance model
<disp-formula id="pcbi.1007308.e002"><alternatives><graphic id="pcbi.1007308.e002g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e002" xlink:type="simple"/><mml:math display="block" id="M2"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold">v</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:munder><mml:mtext>argmax</mml:mtext><mml:mi mathvariant="bold">v</mml:mi></mml:munder><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>h</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">v</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mtext>subject</mml:mtext><mml:mspace width="4.pt"/><mml:mtext>to:</mml:mtext><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi><mml:mi mathvariant="bold">v</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="bold">0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msup><mml:mi mathvariant="bold">v</mml:mi><mml:mtext>LB</mml:mtext></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mi mathvariant="bold">v</mml:mi><mml:mo>≤</mml:mo><mml:msup><mml:mi mathvariant="bold">v</mml:mi><mml:mtext>UB</mml:mtext></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(2)</label></disp-formula>
where <bold>s</bold> denotes the state variables describing the extracellular environment (e.g., concentrations of substrates, biomass, and products) with time derivative <inline-formula id="pcbi.1007308.e003"><alternatives><graphic id="pcbi.1007308.e003g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e003" xlink:type="simple"/><mml:math display="inline" id="M3"><mml:mover accent="true"><mml:mi mathvariant="bold">s</mml:mi><mml:mo>˙</mml:mo></mml:mover></mml:math></alternatives></inline-formula> and initial conditions <bold>s</bold><sub>0</sub>; <bold>v</bold> denotes the metabolic fluxes that include both intracellular fluxes and exchange rates; <bold>A</bold> is the stoichiometric matrix of the metabolic network; and <bold>v</bold><sup>LB</sup>(<bold>s</bold>) and <bold>v</bold><sup>UB</sup>(<bold>s</bold>) are the lower and upper bounds on the fluxes, respectively, which are functions of the extracellular concentrations. The vector function <bold>f</bold>, specified by the set of mass balances in the extracellular medium, defines the rate of change of each component of <bold>s</bold> and must be integrated to determine the time evolution of extracellular concentrations. The scalar function <italic>h</italic> is the cellular objective that is maximized by the cells. Whenever more than one microbial species are present in the culture, then multiple flux balance models of the form (<xref ref-type="disp-formula" rid="pcbi.1007308.e002">2</xref>) must be incorporated into (<xref ref-type="disp-formula" rid="pcbi.1007308.e001">1</xref>) [<xref ref-type="bibr" rid="pcbi.1007308.ref010">10</xref>].</p>
<p>DFBA models can be classified as ordinary differential equations with embedded optimization wherein the lower-level FBA optimization can either be a linear or nonlinear program [<xref ref-type="bibr" rid="pcbi.1007308.ref030">30</xref>]. A variety of methods have been developed for integrating DFBA models, which are summarized in <xref ref-type="supplementary-material" rid="pcbi.1007308.s008">S1 Text</xref>. We focus on the direct approach for integrating DFBA models in this work due to its ability to ensure accurate solutions through the use of error-controlled integration schemes. Another advantage of the direct approach is that a unique solution set to the FBA (<xref ref-type="disp-formula" rid="pcbi.1007308.e002">2</xref>) can be obtained using lexicographic optimization [<xref ref-type="bibr" rid="pcbi.1007308.ref010">10</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref027">27</xref>], which may help overcome numerical challenges that can occur when using alternative DFBA simulators (e.g., see [<xref ref-type="bibr" rid="pcbi.1007308.ref031">31</xref>, Chapter 3]). Since the direct approach requires continuous monitoring and identification of any active set changes in (<xref ref-type="disp-formula" rid="pcbi.1007308.e002">2</xref>), it constitutes a dynamic simulation with discrete events (i.e., a hybrid system). In the next section, we present the proposed nsPCE method that is capable of directly accounting for the hybrid nature of DFBA models.</p>
</sec>
<sec id="sec004">
<title>Polynomial chaos expansions</title>
<sec id="sec005">
<title>Theoretical background</title>
<p>We consider a DFBA model with a set of <italic>M</italic> input parameters that are denoted by <bold><italic>x</italic></bold> = (<italic>x</italic><sub>1</sub>, …, <italic>x</italic><sub><italic>M</italic></sub>). These parameters can appear in the initial conditions <bold>s</bold><sub>0</sub>, rate of change function <bold>f</bold>, cellular objective <italic>h</italic>, and/or the flux limits <bold>v</bold><sup>LB</sup>, <bold>v</bold><sup>UB</sup>. We look to develop a computationally cheap-to-evaluate representation of some output of the DFBA model referred to as the <italic>model response</italic>. The model response <inline-formula id="pcbi.1007308.e004"><alternatives><graphic id="pcbi.1007308.e004g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e004" xlink:type="simple"/><mml:math display="inline" id="M4"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> can be any chosen function of the states or fluxes that appear in (<xref ref-type="disp-formula" rid="pcbi.1007308.e001">1</xref>) and (<xref ref-type="disp-formula" rid="pcbi.1007308.e002">2</xref>) including, for example, metabolite concentrations, growth rate, or time-to-consumption of any metabolite. The model response function <inline-formula id="pcbi.1007308.e005"><alternatives><graphic id="pcbi.1007308.e005g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e005" xlink:type="simple"/><mml:math display="inline" id="M5"><mml:mrow><mml:mi mathvariant="script">M</mml:mi><mml:mo>:</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math></alternatives></inline-formula> need not be known analytically, and can be approximated using a finite number of model evaluations. We focus on the scalar response case <italic>y</italic> for notational simplicity. However, the developed procedure can be easily applied separately to each component of a vector of responses <bold><italic>y</italic></bold>.</p>
<p>Unless the parameters <bold><italic>x</italic></bold> are perfectly known, they must be treated as uncertain. Parameter uncertainty can generally be represented by a random vector <bold><italic>X</italic></bold> with some known probability density function (PDF). In this case, the model response also becomes a random variable with some unknown PDF that is implicitly defined by
<disp-formula id="pcbi.1007308.e006"><alternatives><graphic id="pcbi.1007308.e006g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e006" xlink:type="simple"/><mml:math display="block" id="M6"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>Y</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>∼</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">X</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(3)</label></disp-formula>
where ∼ denotes “distributed as” and <italic>f</italic><sub><italic><bold>X</bold></italic></sub> denotes the PDF of uncertain parameters. Determining the distribution <italic>f</italic><sub><italic><bold>Y</bold></italic></sub> (or its statistical moments) of the model response represents the forward UQ problem that can be tackled in various ways, the majority of which require extensive sampling that is not feasible whenever <inline-formula id="pcbi.1007308.e007"><alternatives><graphic id="pcbi.1007308.e007g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e007" xlink:type="simple"/><mml:math display="inline" id="M7"><mml:mi mathvariant="script">M</mml:mi></mml:math></alternatives></inline-formula> is a computationally expensive model. The polynomial chaos expansion (PCE) method addresses this problem by constructing a <italic>surrogate model</italic> that accurately approximates <inline-formula id="pcbi.1007308.e008"><alternatives><graphic id="pcbi.1007308.e008g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e008" xlink:type="simple"/><mml:math display="inline" id="M8"><mml:mi mathvariant="script">M</mml:mi></mml:math></alternatives></inline-formula>, but is significantly cheaper to evaluate. The PCE surrogate model can also be straightforwardly applied to other UQ tasks, as discussed later in the Results section. Provided that <italic>Y</italic> has finite variance, it can be represented with a PCE as follows [<xref ref-type="bibr" rid="pcbi.1007308.ref017">17</xref>]
<disp-formula id="pcbi.1007308.e009"><alternatives><graphic id="pcbi.1007308.e009g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e009" xlink:type="simple"/><mml:math display="block" id="M9"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>Y</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">N</mml:mi><mml:mi>M</mml:mi></mml:msup></mml:mrow></mml:munder><mml:msub><mml:mi>a</mml:mi><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(4)</label></disp-formula>
where <inline-formula id="pcbi.1007308.e010"><alternatives><graphic id="pcbi.1007308.e010g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e010" xlink:type="simple"/><mml:math display="inline" id="M10"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math></alternatives></inline-formula> are coefficients of the expansion, <inline-formula id="pcbi.1007308.e011"><alternatives><graphic id="pcbi.1007308.e011g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e011" xlink:type="simple"/><mml:math display="inline" id="M11"><mml:mrow><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math></alternatives></inline-formula> are multivariate polynomials, <bold><italic>α</italic></bold> = (<italic>α</italic><sub>1</sub>, …, <italic>α</italic><sub><italic>M</italic></sub>) is a multi-index that identifies the degree of the multivariate polynomials in each of the input parameters <italic>X</italic><sub><italic>i</italic></sub>, and <inline-formula id="pcbi.1007308.e012"><alternatives><graphic id="pcbi.1007308.e012g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e012" xlink:type="simple"/><mml:math display="inline" id="M12"><mml:mrow><mml:mi mathvariant="double-struck">N</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> is the set of positive integers. The polynomial basis functions are required to be orthonormal with respect to the parameter distribution, such that they satisfy
<disp-formula id="pcbi.1007308.e013"><alternatives><graphic id="pcbi.1007308.e013g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e013" xlink:type="simple"/><mml:math display="block" id="M13"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">β</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∫</mml:mo><mml:mi>S</mml:mi></mml:msub><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">β</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">X</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>d</mml:mi><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>δ</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mi mathvariant="bold-italic">β</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mo>∀</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">N</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(5)</label></disp-formula>
where <italic>S</italic> is the support of the distribution of <bold><italic>X</italic></bold> and <italic>δ</italic><sub><bold><italic>αβ</italic></bold></sub> is the Kronecker delta that is 1 whenever <bold><italic>α</italic></bold> = <bold><italic>β</italic></bold> and 0 otherwise. For computational purposes, the series (<xref ref-type="disp-formula" rid="pcbi.1007308.e009">4</xref>) must be truncated after a finite number of <italic>P</italic> terms, which yields the following approximation
<disp-formula id="pcbi.1007308.e014"><alternatives><graphic id="pcbi.1007308.e014g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e014" xlink:type="simple"/><mml:math display="block" id="M14"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mi>Y</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>a</mml:mi><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">a</mml:mi></mml:mrow><mml:mi>⊤</mml:mi></mml:msup><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(6)</label></disp-formula>
where <inline-formula id="pcbi.1007308.e015"><alternatives><graphic id="pcbi.1007308.e015g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e015" xlink:type="simple"/><mml:math display="inline" id="M15"><mml:mi mathvariant="script">A</mml:mi></mml:math></alternatives></inline-formula> is a finite set of multi-indices with cardinality equal to <italic>P</italic>, <inline-formula id="pcbi.1007308.e016"><alternatives><graphic id="pcbi.1007308.e016g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e016" xlink:type="simple"/><mml:math display="inline" id="M16"><mml:mrow><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> is a vector of the coefficients, and <inline-formula id="pcbi.1007308.e017"><alternatives><graphic id="pcbi.1007308.e017g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e017" xlink:type="simple"/><mml:math display="inline" id="M17"><mml:mrow><mml:mi mathvariant="bold">Ψ</mml:mi><mml:mo>:</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>→</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> is a vector containing all polynomial basis functions. The expansion coefficients are defined to be those that minimize the mean-square error (MSE) between the exact representation (<xref ref-type="disp-formula" rid="pcbi.1007308.e009">4</xref>) and the truncated PCE (<xref ref-type="disp-formula" rid="pcbi.1007308.e014">6</xref>)
<disp-formula id="pcbi.1007308.e018"><alternatives><graphic id="pcbi.1007308.e018g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e018" xlink:type="simple"/><mml:math display="block" id="M18"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmin</mml:mtext><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mspace width="3.33333pt"/><mml:mi mathvariant="double-struck">E</mml:mi><mml:mo>{</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi mathvariant="bold">⊤</mml:mi></mml:msup><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>}</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(7)</label></disp-formula>
The right-hand side of this expression represents the analytic solution to the MSE optimization problem and directly follows from the Hilbert projection theorem [<xref ref-type="bibr" rid="pcbi.1007308.ref032">32</xref>].</p>
<p>The expressions in (<xref ref-type="disp-formula" rid="pcbi.1007308.e013">5</xref>) and (<xref ref-type="disp-formula" rid="pcbi.1007308.e018">7</xref>) involve multivariate integration over complicated nonlinear functions. As such, the construction of the polynomial basis and computation of the expansion coefficients are usually carried out numerically in practice, which leads to additional sources of error. The choice of <inline-formula id="pcbi.1007308.e019"><alternatives><graphic id="pcbi.1007308.e019g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e019" xlink:type="simple"/><mml:math display="inline" id="M19"><mml:mi mathvariant="script">A</mml:mi></mml:math></alternatives></inline-formula> also plays an important role in PCE performance because <inline-formula id="pcbi.1007308.e020"><alternatives><graphic id="pcbi.1007308.e020g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e020" xlink:type="simple"/><mml:math display="inline" id="M20"><mml:mi mathvariant="script">A</mml:mi></mml:math></alternatives></inline-formula> directly controls the number of coefficients that must be estimated. Larger <italic>P</italic> values require more computational effort and are more susceptible to numerical sources of error. An overview of state-of-the-art methods for addressing these challenges is provided next.</p>
</sec>
<sec id="sec006">
<title>Orthonormal basis construction</title>
<p>The complexity of determining the polynomials <inline-formula id="pcbi.1007308.e021"><alternatives><graphic id="pcbi.1007308.e021g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e021" xlink:type="simple"/><mml:math display="inline" id="M21"><mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mo>Ψ</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula> depends fully on the structure of the PDF <italic>f</italic><sub><italic><bold>X</bold></italic></sub>. Whenever the uncertain parameters are statistically independent, then (<xref ref-type="disp-formula" rid="pcbi.1007308.e013">5</xref>) reduces to the tensor product of <italic>M</italic> univariate polynomials that are orthonormal with respect to each marginal density <inline-formula id="pcbi.1007308.e022"><alternatives><graphic id="pcbi.1007308.e022g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e022" xlink:type="simple"/><mml:math display="inline" id="M22"><mml:msub><mml:mi>f</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula>. These polynomials have been analytically derived for many common PDFs [<xref ref-type="bibr" rid="pcbi.1007308.ref017">17</xref>], and can be found numerically for generic PDFs using algorithms in terms of the three-term recurrence relationship for orthogonal polynomials [<xref ref-type="bibr" rid="pcbi.1007308.ref033">33</xref>]. There are two main approaches for handling the more general case that <bold><italic>X</italic></bold> has statistically dependent (or correlated) elements. The first approach involves transforming the generic random vector <bold><italic>X</italic></bold> into a standard random vector <bold><italic>Z</italic></bold> for which it is simpler to build the polynomial basis functions [<xref ref-type="bibr" rid="pcbi.1007308.ref034">34</xref>]. Any <italic>isoprobabilistic transformation</italic> that preserves the PDFs of these random vectors can be utilized, though the most commonly used is the Rosenblatt transformation [<xref ref-type="bibr" rid="pcbi.1007308.ref035">35</xref>]. The second approach involves applying a more sophisticated numerical procedure that is able to impose the conditions in (<xref ref-type="disp-formula" rid="pcbi.1007308.e013">5</xref>) simultaneously in <italic>M</italic> dimensions. This includes the Gram-Schmidt process [<xref ref-type="bibr" rid="pcbi.1007308.ref036">36</xref>] as well as the modified Cholesky decomposition of the Gram moment matrix [<xref ref-type="bibr" rid="pcbi.1007308.ref037">37</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref038">38</xref>].</p>
</sec>
<sec id="sec007">
<title>Sparse truncation and regression</title>
<p>We denote the approximate PCE with numerically estimated coefficients <inline-formula id="pcbi.1007308.e023"><alternatives><graphic id="pcbi.1007308.e023g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e023" xlink:type="simple"/><mml:math display="inline" id="M23"><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math></alternatives></inline-formula> as follows
<disp-formula id="pcbi.1007308.e024"><alternatives><graphic id="pcbi.1007308.e024g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e024" xlink:type="simple"/><mml:math display="block" id="M24"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>Y</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="script">M</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>⊤</mml:mi></mml:msup><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(8)</label></disp-formula>
A variety of methods have been proposed for estimating the coefficients that can be broadly categorized as <italic>intrusive</italic> (e.g., Galerkin projection [<xref ref-type="bibr" rid="pcbi.1007308.ref012">12</xref>]) or <italic>non-intrusive</italic> (e.g., pseudo-spectral projection [<xref ref-type="bibr" rid="pcbi.1007308.ref039">39</xref>] or regression [<xref ref-type="bibr" rid="pcbi.1007308.ref015">15</xref>]). Here, we focus exclusively on non-intrusive methods. The phrase “non-intrusive” implies that coefficient estimates are obtained over a finite set of parameter realizations <inline-formula id="pcbi.1007308.e025"><alternatives><graphic id="pcbi.1007308.e025g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e025" xlink:type="simple"/><mml:math display="inline" id="M25"><mml:mrow><mml:mi mathvariant="script">X</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>N</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, referred to as the experimental design (ED). These samples can be chosen in various ways including Monte Carlo sampling, quasi-random samples derived from Sobol or Halton sequences, or sparse grids to name a few [<xref ref-type="bibr" rid="pcbi.1007308.ref040">40</xref>]. The computational model is then evaluated at every point in the ED, i.e., <inline-formula id="pcbi.1007308.e026"><alternatives><graphic id="pcbi.1007308.e026g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e026" xlink:type="simple"/><mml:math display="inline" id="M26"><mml:mrow><mml:mi mathvariant="script">Y</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>N</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> with <inline-formula id="pcbi.1007308.e027"><alternatives><graphic id="pcbi.1007308.e027g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e027" xlink:type="simple"/><mml:math display="inline" id="M27"><mml:mrow><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> for all <italic>i</italic> = 1, …, <italic>N</italic>. As such, non-intrusive approaches are “black-box” in the sense that they can be applied to any function, even when this function is not explicitly known, and do not require any modification to the deterministic solver.</p>
<p>We will focus on regression methods due to their flexibility when it comes to enforcing sparsity. In the regression approach, coefficients <inline-formula id="pcbi.1007308.e028"><alternatives><graphic id="pcbi.1007308.e028g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e028" xlink:type="simple"/><mml:math display="inline" id="M28"><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math></alternatives></inline-formula> are defined as those that minimize the least-square residual of the polynomial approximation over the ED <inline-formula id="pcbi.1007308.e029"><alternatives><graphic id="pcbi.1007308.e029g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e029" xlink:type="simple"/><mml:math display="inline" id="M29"><mml:mi mathvariant="script">X</mml:mi></mml:math></alternatives></inline-formula>
<disp-formula id="pcbi.1007308.e030"><alternatives><graphic id="pcbi.1007308.e030g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e030" xlink:type="simple"/><mml:math display="block" id="M30"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmin</mml:mtext><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mi>P</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mspace width="3.33333pt"/><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>⊤</mml:mi></mml:msup><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow><mml:mi>⊤</mml:mi></mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow><mml:mi>⊤</mml:mi></mml:msup><mml:mi mathvariant="script">Y</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(9)</label></disp-formula>
where <inline-formula id="pcbi.1007308.e031"><alternatives><graphic id="pcbi.1007308.e031g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e031" xlink:type="simple"/><mml:math display="inline" id="M31"><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> is the model matrix that contains the values of all polynomial basis functions evaluated at all ED points. The solution of (<xref ref-type="disp-formula" rid="pcbi.1007308.e030">9</xref>) requires a minimum number of sample points <italic>N</italic> ≥ <italic>P</italic> to ensure a unique solution exists. Since every sample requires an expensive DFBA simulation here, the truncation scheme plays a central role in reducing the complexity of surrogate model construction. The total degree method is the most commonly used approach for specifying <inline-formula id="pcbi.1007308.e032"><alternatives><graphic id="pcbi.1007308.e032g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e032" xlink:type="simple"/><mml:math display="inline" id="M32"><mml:mi mathvariant="script">A</mml:mi></mml:math></alternatives></inline-formula>, which looks to keep all polynomials up to a specified order <italic>p</italic> in the series. For total degree truncation, the set of multi-indices is defined as <inline-formula id="pcbi.1007308.e033"><alternatives><graphic id="pcbi.1007308.e033g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e033" xlink:type="simple"/><mml:math display="inline" id="M33"><mml:mrow><mml:mi mathvariant="script">A</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">N</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>:</mml:mo><mml:mo>‖</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi><mml:msub><mml:mo>‖</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:mo>≤</mml:mo><mml:mi>p</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>, where ‖<italic><bold>α</bold></italic>‖<sub>1</sub> = <italic>α</italic><sub>1</sub> + ⋯ + <italic>α</italic><sub><italic>M</italic></sub> and <inline-formula id="pcbi.1007308.e034"><alternatives><graphic id="pcbi.1007308.e034g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e034" xlink:type="simple"/><mml:math display="inline" id="M34"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>(</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>!</mml:mo><mml:mi>p</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula>. Due to the sharp increase in <italic>P</italic> as the polynomial order increases, the total degree truncation scheme can quickly lead to a prohibitive number of model evaluations, especially in high dimensions. This issue is often termed the <italic>curse-of-dimensionality</italic>, which is known to considerably limit standard PCE methods.</p>
<p>We look to take advantage of two approaches for overcoming the curse-of-dimensionality limitation. The first approach involves replacing the total order truncation with the so-called <italic>hyperbolic</italic> truncation scheme, which is defined as
<disp-formula id="pcbi.1007308.e035"><alternatives><graphic id="pcbi.1007308.e035g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e035" xlink:type="simple"/><mml:math display="block" id="M35"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>∈</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="double-struck">N</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:msub><mml:mrow><mml:mo>:</mml:mo><mml:mo>‖</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>‖</mml:mo></mml:mrow><mml:mi>q</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mo>‖</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>‖</mml:mo></mml:mrow><mml:mi>q</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msubsup><mml:mi>α</mml:mi><mml:mi>i</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(10)</label></disp-formula>
where 0 &lt; <italic>q</italic> ≤ 1. Lower values for <italic>q</italic> limit the number of high-order interaction terms considered, which directly lead to sparser solutions. The second approach looks to further sparsify the solution, without sacrificing potentially important interaction terms, by including a regularization term of the form <inline-formula id="pcbi.1007308.e036"><alternatives><graphic id="pcbi.1007308.e036g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e036" xlink:type="simple"/><mml:math display="inline" id="M36"><mml:mrow><mml:mrow><mml:mo>λ</mml:mo><mml:mo>‖</mml:mo></mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:msub><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> with λ ≥ 0 in the least-squares problem (<xref ref-type="disp-formula" rid="pcbi.1007308.e030">9</xref>). This regularization term is known to force the minimization to favor low-rank solutions and ensures the existence of a unique solution even when <italic>N</italic> &lt; <italic>P</italic>.</p>
<p>The key challenge with regularization is a proper choice of λ, which indirectly specifies the number of non-zero coefficients included in the expansion. In this work, we use the hybrid least angle regression (LAR) method to solve the regularized version of (<xref ref-type="disp-formula" rid="pcbi.1007308.e030">9</xref>). LAR is an efficient procedure for variable selection, which aims to select the predictors (i.e., polynomials Ψ<sub><italic><bold>α</bold></italic></sub>) that have the greatest impact on the model response among a potentially large set of candidates [<xref ref-type="bibr" rid="pcbi.1007308.ref041">41</xref>]. Hybrid LAR is a variant of the original LAR that uses a modified cross-validation scheme to estimate the approximation error [<xref ref-type="bibr" rid="pcbi.1007308.ref019">19</xref>]. This modification relies on only a single call to the LAR procedure, which provides significant savings in computational cost when compared to the original method. The relative MSE (RMSE), which is defined as <italic>ε</italic> = MSE/Var{<italic>Y</italic>}, is the natural choice of the approximation error in PCE and can be robustly estimated by the leave-one-out (LOO) cross-validation error <italic>ε</italic><sub><italic>LOO</italic></sub>. Not only can <italic>ε</italic><sub><italic>LOO</italic></sub> be calculated analytically for PCE models [<xref ref-type="bibr" rid="pcbi.1007308.ref042">42</xref>], but it is known to be much less sensitive to overfitting than the empirical estimator [<xref ref-type="bibr" rid="pcbi.1007308.ref043">43</xref>].</p>
<p>Provided a sensible sampling strategy has been chosen, the remaining parameters that must be selected are related to truncation <italic>p</italic> and <italic>q</italic> and the ED size <italic>N</italic>. We use a systematic procedure for selecting these parameters to achieve a target error level <italic>ε</italic><sub><italic>target</italic></sub>. As discussed in [<xref ref-type="bibr" rid="pcbi.1007308.ref019">19</xref>], a <italic>basis-adaptive</italic> strategy can help overcome potential limitations of an <italic>a priori</italic> fixed truncation set <inline-formula id="pcbi.1007308.e037"><alternatives><graphic id="pcbi.1007308.e037g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e037" xlink:type="simple"/><mml:math display="inline" id="M37"><mml:mi mathvariant="script">A</mml:mi></mml:math></alternatives></inline-formula> by letting the maximum degree be driven directly from the data. The basic idea is to start with small values for <italic>p</italic> and <italic>q</italic>, estimate the coefficients using hybrid LAR, and calculate <italic>ε</italic><sub><italic>LOO</italic></sub>. These steps are repeated for incremented values of <italic>p</italic> and <italic>q</italic>, and the algorithm returns the PCE model with the lowest error. Early stop criteria can easily be introduced to avoid an excessive number of iterations. However, when dealing with computationally expensive models, the number of model evaluations <italic>N</italic> dominates the cost of construction of the surrogate model. We therefore propose an iterative “greedy” approach for constructing the ED to ensure that <italic>N</italic> can be kept as small as possible. This sequential ED strategy can be summarized as
<list list-type="order">
<list-item><p>Initialize the current ED with a relatively small number of samples <italic>N</italic><sub><italic>init</italic></sub>.</p></list-item>
<list-item><p>Train a sparse basis-adaptive PCE using the current ED and calculate <italic>ε</italic><sub><italic>LOO</italic></sub>.</p></list-item>
<list-item><p>If <italic>ε</italic><sub><italic>LOO</italic></sub> &lt; <italic>ε</italic><sub><italic>target</italic></sub>, stop the algorithm and return current PCE. Otherwise, enrich the current ED with <italic>N</italic><sub><italic>add</italic></sub> more samples and return to Step 2.</p></list-item>
</list>
Note that any method can be used in the training step of this algorithm. Thus, in the proposed nsPCE method, the desired accuracy level is the key parameter that must chosen by the user.</p>
</sec>
</sec>
<sec id="sec008">
<title>The nsPCE surrogate modeling method</title>
<p>The PCE method is guaranteed to converge as both the number of model evaluations <italic>N</italic> and number of terms in the expansion <italic>P</italic> increase; however, the rate of convergence can be very slow whenever <inline-formula id="pcbi.1007308.e038"><alternatives><graphic id="pcbi.1007308.e038g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e038" xlink:type="simple"/><mml:math display="inline" id="M38"><mml:mi mathvariant="script">M</mml:mi></mml:math></alternatives></inline-formula> exhibits any singularities [<xref ref-type="bibr" rid="pcbi.1007308.ref024">24</xref>]. This is a primary challenge in DFBA models since they can lose differentiability when a switch in the active set of the FBA problem (<xref ref-type="disp-formula" rid="pcbi.1007308.e002">2</xref>) occurs. Inspired by [<xref ref-type="bibr" rid="pcbi.1007308.ref025">25</xref>], we look to take advantage of the following <italic>multi-element</italic> representation of PCE as it is capable of capturing non-smooth behavior
<disp-formula id="pcbi.1007308.e039"><alternatives><graphic id="pcbi.1007308.e039g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e039" xlink:type="simple"/><mml:math display="block" id="M39"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>Y</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:munderover><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">α</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">N</mml:mi><mml:mi>M</mml:mi></mml:msup></mml:mrow></mml:munder><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mo>Ψ</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">α</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(11)</label></disp-formula>
where <italic>N</italic><sub><italic>e</italic></sub> denotes the number of elements; <italic>S</italic><sub><italic>k</italic></sub>, <italic>a</italic><sub><italic>k</italic>,<bold><italic>α</italic></bold></sub>, and Ψ<sub><italic>k</italic>,<bold><italic>α</italic></bold></sub> denote the local support, coefficient, and orthogonal polynomials in element <italic>k</italic>, respectively; <inline-formula id="pcbi.1007308.e040"><alternatives><graphic id="pcbi.1007308.e040g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e040" xlink:type="simple"/><mml:math display="inline" id="M40"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:msubsup><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>; and <inline-formula id="pcbi.1007308.e041"><alternatives><graphic id="pcbi.1007308.e041g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e041" xlink:type="simple"/><mml:math display="inline" id="M41"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> are indicator random variables defined by
<disp-formula id="pcbi.1007308.e042"><alternatives><graphic id="pcbi.1007308.e042g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e042" xlink:type="simple"/><mml:math display="block" id="M42"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mtext>if</mml:mtext><mml:mspace width="3.33333pt"/><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(12)</label></disp-formula>
The indicator random variables can be used to define the following conditional random variables <inline-formula id="pcbi.1007308.e043"><alternatives><graphic id="pcbi.1007308.e043g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e043" xlink:type="simple"/><mml:math display="inline" id="M43"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> with PDF
<disp-formula id="pcbi.1007308.e044"><alternatives><graphic id="pcbi.1007308.e044g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e044" xlink:type="simple"/><mml:math display="block" id="M44"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">X</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mtext>Pr</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">X</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mo>∫</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">X</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>d</mml:mi><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(13)</label></disp-formula>
The local polynomials in (<xref ref-type="disp-formula" rid="pcbi.1007308.e039">11</xref>) are orthogonal with respect to <bold><italic>X</italic></bold><sub><italic>k</italic></sub> while the coefficients are similarly defined as in (<xref ref-type="disp-formula" rid="pcbi.1007308.e018">7</xref>) but now in terms of <bold><italic>X</italic></bold><sub><italic>k</italic></sub>. This implies that the same strategies discussed above for building the polynomials, estimating the coefficients using regularized least squares, truncating the expansion, and sequentially populating the ED can be utilized locally within each element.</p>
<p>The remaining unanswered question is how to design the elements <inline-formula id="pcbi.1007308.e045"><alternatives><graphic id="pcbi.1007308.e045g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e045" xlink:type="simple"/><mml:math display="inline" id="M45"><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:msubsup></mml:math></alternatives></inline-formula> to limit the growth in the number of model evaluations since <italic>N</italic> will scale approximately linearly with <italic>N</italic><sub><italic>e</italic></sub>. The best decomposition should ensure that the model response behaves smoothly in every element. The proposed nsPCE method decomposes the support into two elements <italic>S</italic><sub>1</sub> and <italic>S</italic><sub>2</sub> that denote, respectively, the set of parameters for which the singularity has not and has occurred. This idea is best illustrated through a simple example. Consider the following non-smooth ODE system <inline-formula id="pcbi.1007308.e046"><alternatives><graphic id="pcbi.1007308.e046g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e046" xlink:type="simple"/><mml:math display="inline" id="M46"><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></alternatives></inline-formula> if <italic>y</italic> &gt; 0 and <inline-formula id="pcbi.1007308.e047"><alternatives><graphic id="pcbi.1007308.e047g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e047" xlink:type="simple"/><mml:math display="inline" id="M47"><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula> otherwise with initial condition <italic>y</italic><sub>0</sub> &gt; 0, whose solution is given by
<disp-formula id="pcbi.1007308.e048"><alternatives><graphic id="pcbi.1007308.e048g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e048" xlink:type="simple"/><mml:math display="block" id="M48"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>y</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:mi>t</mml:mi><mml:mi>x</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="3.33333pt"/><mml:msub><mml:mi>y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>&gt;</mml:mo><mml:mi>t</mml:mi><mml:mi>x</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo/></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(14)</label></disp-formula>
This function is not differentiable at the time point <italic>t</italic><sub><italic>s</italic></sub>(<italic>x</italic>) = <italic>y</italic><sub>0</sub>/<italic>x</italic>, which can be thought of as the “singularity manifold” in the parameter support space, i.e., <italic>t</italic><sub><italic>s</italic></sub> is the boundary function that separates <italic>S</italic><sub>1</sub> and <italic>S</italic><sub>2</sub>. At any given time of interest <italic>t</italic>, the two elements can be defined in terms of <italic>t</italic><sub><italic>s</italic></sub>(<italic>x</italic>) as follows
<disp-formula id="pcbi.1007308.e049"><alternatives><graphic id="pcbi.1007308.e049g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e049" xlink:type="simple"/><mml:math display="block" id="M49"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:mi>S</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mi>t</mml:mi><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:mi>S</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mi>t</mml:mi><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(15)</label></disp-formula>
Let us briefly analyze the behavior of these elements. The elements are continuous functions of time, meaning that every time of interest <italic>t</italic> requires a different decomposition. Whenever <italic>t</italic> is outside of the support of <italic>t</italic><sub><italic>s</italic></sub>(<italic>X</italic>), then one of these sets is empty and we revert back to traditional PCE that covers the full support <italic>S</italic>. In light of this, we can easily generalize the idea to the case of multiple <italic>n</italic><sub><italic>s</italic></sub> &gt; 1 sequential singularities as long as the random variables <inline-formula id="pcbi.1007308.e050"><alternatives><graphic id="pcbi.1007308.e050g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e050" xlink:type="simple"/><mml:math display="inline" id="M50"><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:msubsup></mml:math></alternatives></inline-formula> do not have overlapping supports. When multiple non-overlapping singularities are present, we must simply find the support in which <italic>t</italic> lies and define the two elements using that corresponding boundary function. The case of overlapping supports is more challenging due to the fact that more elements would need to be created based on the intersection of <italic>S</italic><sub>1</sub> and <italic>S</italic><sub>2</sub> for all active singularities.</p>
<p>For the simple scalar example in (<xref ref-type="disp-formula" rid="pcbi.1007308.e048">14</xref>), we can analytically derive the boundary function; however, this is not generally possible in DFBA models. Based on the observation that the singularity boundary depends smoothly on the parameters, we instead propose to construct a sparse PCE model to approximate the boundary in multiple dimensions, i.e., <inline-formula id="pcbi.1007308.e051"><alternatives><graphic id="pcbi.1007308.e051g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e051" xlink:type="simple"/><mml:math display="inline" id="M51"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>s</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>. The nsPCE method thus creates a surrogate model with the following structure for any <bold><italic>x</italic></bold> ∈ <italic>S</italic>
<disp-formula id="pcbi.1007308.e052"><alternatives><graphic id="pcbi.1007308.e052g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e052" xlink:type="simple"/><mml:math display="block" id="M52"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi mathvariant="script">M</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:munderover><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>k</mml:mi><mml:mi>⊤</mml:mi></mml:msubsup><mml:msub><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mn>1</mml:mn><mml:mi>⊤</mml:mi></mml:msubsup><mml:msub><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mtext>if</mml:mtext><mml:mspace width="3.33333pt"/><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mn>2</mml:mn><mml:mi>⊤</mml:mi></mml:msubsup><mml:msub><mml:mo mathvariant="bold">Ψ</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mtext>if</mml:mtext><mml:mspace width="3.33333pt"/><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo/></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(16)</label></disp-formula>
where the coefficients <inline-formula id="pcbi.1007308.e053"><alternatives><graphic id="pcbi.1007308.e053g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e053" xlink:type="simple"/><mml:math display="inline" id="M53"><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>k</mml:mi></mml:msub></mml:math></alternatives></inline-formula> are estimated from the sparse regression problem
<disp-formula id="pcbi.1007308.e054"><alternatives><graphic id="pcbi.1007308.e054g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e054" xlink:type="simple"/><mml:math display="block" id="M54"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmin</mml:mtext><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>k</mml:mi></mml:msub></mml:munder><mml:mspace width="3.33333pt"/><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mfrac><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">Y</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>k</mml:mi></mml:msub><mml:msubsup><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mo>λ</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mrow><mml:mo>‖</mml:mo><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>k</mml:mi></mml:msub><mml:mo>‖</mml:mo></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(17)</label></disp-formula>
based on the local ED <inline-formula id="pcbi.1007308.e055"><alternatives><graphic id="pcbi.1007308.e055g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e055" xlink:type="simple"/><mml:math display="inline" id="M55"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1007308.e056"><alternatives><graphic id="pcbi.1007308.e056g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e056" xlink:type="simple"/><mml:math display="inline" id="M56"><mml:mrow><mml:msub><mml:mi mathvariant="script">Y</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> in terms of <italic>N</italic><sub><italic>k</italic></sub> samples. Notice that the full DFBA model must be integrated when constructing <inline-formula id="pcbi.1007308.e057"><alternatives><graphic id="pcbi.1007308.e057g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e057" xlink:type="simple"/><mml:math display="inline" id="M57"><mml:msubsup><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>s</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula>. Instead of discarding this information, it can be reused by storing the list of state and time points generated when integrating the DFBA model and then interpolating these points when calculating the model response function. Thus, we can use this approach to initialize the ED <inline-formula id="pcbi.1007308.e058"><alternatives><graphic id="pcbi.1007308.e058g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e058" xlink:type="simple"/><mml:math display="inline" id="M58"><mml:mi mathvariant="script">X</mml:mi></mml:math></alternatives></inline-formula>, model response data <inline-formula id="pcbi.1007308.e059"><alternatives><graphic id="pcbi.1007308.e059g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e059" xlink:type="simple"/><mml:math display="inline" id="M59"><mml:mi mathvariant="script">Y</mml:mi></mml:math></alternatives></inline-formula>, and singularity time data <inline-formula id="pcbi.1007308.e060"><alternatives><graphic id="pcbi.1007308.e060g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e060" xlink:type="simple"/><mml:math display="inline" id="M60"><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></alternatives></inline-formula>. Using <inline-formula id="pcbi.1007308.e061"><alternatives><graphic id="pcbi.1007308.e061g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e061" xlink:type="simple"/><mml:math display="inline" id="M61"><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></alternatives></inline-formula> along with the set definitions in (<xref ref-type="disp-formula" rid="pcbi.1007308.e049">15</xref>), we can easily partition <inline-formula id="pcbi.1007308.e062"><alternatives><graphic id="pcbi.1007308.e062g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e062" xlink:type="simple"/><mml:math display="inline" id="M62"><mml:mi mathvariant="script">X</mml:mi></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1007308.e063"><alternatives><graphic id="pcbi.1007308.e063g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e063" xlink:type="simple"/><mml:math display="inline" id="M63"><mml:mi mathvariant="script">Y</mml:mi></mml:math></alternatives></inline-formula> into the required local EDs. The sequential ED strategy is then applied in each element to ensure that the target error is achieved.</p>
<p>A flowchart that summarizes the main steps of the nsPCE method is shown in <xref ref-type="fig" rid="pcbi.1007308.g001">Fig 1</xref>. By evaluating the nsPCE surrogate in (<xref ref-type="disp-formula" rid="pcbi.1007308.e052">16</xref>), which is much cheaper to evaluate than the full model <inline-formula id="pcbi.1007308.e064"><alternatives><graphic id="pcbi.1007308.e064g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e064" xlink:type="simple"/><mml:math display="inline" id="M64"><mml:mi mathvariant="script">M</mml:mi></mml:math></alternatives></inline-formula>, on a collection of Monte Carlo samples of the parameters, we can directly approximate statistical properties of <italic>Y</italic> including moments, parametric sensitivities, or even its full distribution.</p>
<fig id="pcbi.1007308.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g001</object-id>
<label>Fig 1</label>
<caption>
<title>Flowchart for the proposed nsPCE surrogate modeling method.</title>
<p>The model response function can be freely chosen by the user. The singularity time function should be specified implicitly as a function of the DFBA model states. This function can be identified by simulating the DFBA model with nominal parameters and locating at which time points a switch in the active set of the FBA solution occurs. The PCE coefficients are fit using the basis-adaptive version of the hybrid LAR method, while the ED is sequentially enriched to ensure that the target accuracy level is achieved.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g001" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec009">
<title>Numerical implementation</title>
<p>The complete set of Matlab scripts that implement the nsPCE method is available at [<xref ref-type="bibr" rid="pcbi.1007308.ref029">29</xref>]. All of the modifiable parameters in the algorithm are defined in the “User inputs” section of the <monospace>main_pce.m</monospace> script, which automatically executes the steps summarized in <xref ref-type="fig" rid="pcbi.1007308.g001">Fig 1</xref>. It is important to note that the scripts require the installation of two additional packages that integrate the DFBA model and construct sparse PCE models. The nsPCE scripts are written to be compatible with readily available DFBA and PCE toolboxes to provide flexibility. The simulation of DFBA models can be done with any non-smooth integration code including <monospace>COBRA</monospace> [<xref ref-type="bibr" rid="pcbi.1007308.ref044">44</xref>], <monospace>ORCA</monospace> [<xref ref-type="bibr" rid="pcbi.1007308.ref045">45</xref>], and <monospace>DFBAlab</monospace> [<xref ref-type="bibr" rid="pcbi.1007308.ref010">10</xref>]. All files needed by the DFBA integrator should be placed in the <monospace>dfba_model</monospace> folder. We opt for <monospace>DFBAlab</monospace> in this work due to certain numerical advantages that it exhibits over the available alternatives (see [<xref ref-type="bibr" rid="pcbi.1007308.ref027">27</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref031">31</xref>] for more details). The sparse PCE operations are carried out using <monospace>UQLab</monospace> [<xref ref-type="bibr" rid="pcbi.1007308.ref043">43</xref>], which implements the hybrid LAR method as well as the required calculations to determine the cross-validation error <italic>ε</italic><sub><italic>LOO</italic></sub>. The syntax in <monospace>main_pce.m</monospace> is heavily based on <monospace>UQLab</monospace>. Hence, some modifications to the source code may be needed to perform the same operations with other toolboxes.</p>
</sec>
</sec>
<sec id="sec010" sec-type="results">
<title>Results</title>
<p>We present two separate case studies in this section. The first case study explores Bayesian estimation of six parameters related to the substrate uptake kinetics in a computationally expensive DFBA model of <italic>E. coli</italic> with a genome-scale metabolic network. The goal of the first case study is to demonstrate advantages of the proposed nsPCE method over alternatives as well as its application to a realistic problem that has been previously studied in the literature. The second case study focuses on maximum a posteriori estimation in a synthetic DFBA problem with a relatively large number of parameters, i.e., twenty uncertain parameters appearing in a variety of intracellular and extracellular quantities. The goal of the second case study is to provide preliminary evidence of the scalability of nsPCE as well as the fact that the method is applicable to a wide-variety of UQ applications.</p>
<sec id="sec011">
<title>Case study 1: Batch fermentation of <italic>E. coli</italic> monoculture</title>
<p>This case study is based on a DFBA model of a batch fermentation reactor consisting of an <italic>E. coli</italic> monoculture, which has been investigated for the production of valuable chemicals such as ethanol. Here, we focus on the initial phase of batch operation of the <italic>E. coli</italic> fermentation reactor under aerobic growth in a glucose and xylose mixed media [<xref ref-type="bibr" rid="pcbi.1007308.ref008">8</xref>]. No ethanol production is observed under aerobic conditions (i.e., this phase is mainly used to increase the biomass), such that the concentration of ethanol can be omitted from the dynamics. This case study is commonly used as a benchmark for comparing DFBA solvers (see, e.g., [<xref ref-type="bibr" rid="pcbi.1007308.ref016">16</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref027">27</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref031">31</xref>]), as it exhibits stiff dynamics and multiple singularities.</p>
<p>The dynamic mass balance equations of the form (<xref ref-type="disp-formula" rid="pcbi.1007308.e001">1</xref>) for the extracelluar environment can be summarized as follows
<disp-formula id="pcbi.1007308.e065"><alternatives><graphic id="pcbi.1007308.e065g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e065" xlink:type="simple"/><mml:math display="block" id="M65"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>μ</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mi>b</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>z</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(18)</label></disp-formula>
where <italic>b</italic>(<italic>t</italic>), <italic>g</italic>(<italic>t</italic>), and <italic>z</italic>(<italic>t</italic>) denote the biomass, glucose, and xlyose concentrations at time <italic>t</italic>, respectively. The uptake kinetics for glucose, xylose, and oxygen are given by Michaelis-Menten kinetics
<disp-formula id="pcbi.1007308.e066"><alternatives><graphic id="pcbi.1007308.e066g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e066" xlink:type="simple"/><mml:math display="block" id="M66"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:mrow><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:mrow><mml:mi>z</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>z</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>o</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:mrow><mml:mi>o</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>o</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>o</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(19)</label></disp-formula>
where parameters <italic>u</italic><sub><italic>g</italic>,<italic>max</italic></sub>, <italic>u</italic><sub><italic>z</italic>,<italic>max</italic></sub>, <italic>u</italic><sub><italic>o</italic>,<italic>max</italic></sub>, <italic>K</italic><sub><italic>g</italic></sub>, <italic>K</italic><sub><italic>z</italic></sub>, <italic>K</italic><sub><italic>o</italic></sub>, and <italic>K</italic><sub><italic>ig</italic></sub> correspond to the maximum substrate uptake rates, saturation constants, and inhibition constants. It is assumed that the reactor oxygen concentration, <italic>o</italic>(<italic>t</italic>), is controlled and is therefore constant. The growth rate <italic>μ</italic>(<italic>t</italic>), on the other hand, is determined from the metabolic network model of wild-type <italic>E. coli</italic>. The chosen metabolic network reconstruction was iJR904 [<xref ref-type="bibr" rid="pcbi.1007308.ref028">28</xref>], which contains 1075 reactions and 761 metabolites. The cells are assumed to maximize growth, implying (<xref ref-type="disp-formula" rid="pcbi.1007308.e002">2</xref>) is an LP of the form
<disp-formula id="pcbi.1007308.e067"><alternatives><graphic id="pcbi.1007308.e067g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e067" xlink:type="simple"/><mml:math display="block" id="M67"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>μ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mtext>min</mml:mtext><mml:mi mathvariant="bold">v</mml:mi></mml:munder></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:msup><mml:mi mathvariant="bold">c</mml:mi><mml:mi>⊤</mml:mi></mml:msup><mml:mi mathvariant="bold">v</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mtext>s</mml:mtext><mml:mo>.</mml:mo><mml:mtext>t</mml:mtext><mml:mo>.</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:mi mathvariant="bold">A</mml:mi><mml:mi mathvariant="bold">v</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="bold">0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:msub><mml:mi>v</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:msub><mml:mi>v</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:msub><mml:mi>v</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>o</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="3.33333pt"/><mml:mspace width="3.33333pt"/><mml:msup><mml:mi mathvariant="bold">v</mml:mi><mml:mtext>LB</mml:mtext></mml:msup><mml:mo>≤</mml:mo><mml:mi mathvariant="bold">v</mml:mi><mml:mo>≤</mml:mo><mml:msup><mml:mi mathvariant="bold">v</mml:mi><mml:mtext>UB</mml:mtext></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(20)</label></disp-formula>
where <bold>c</bold> is a vector of weights that represent the contribution of each flux to biomass formation while <inline-formula id="pcbi.1007308.e068"><alternatives><graphic id="pcbi.1007308.e068g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e068" xlink:type="simple"/><mml:math display="inline" id="M68"><mml:msub><mml:mi>v</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></alternatives></inline-formula>, <inline-formula id="pcbi.1007308.e069"><alternatives><graphic id="pcbi.1007308.e069g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e069" xlink:type="simple"/><mml:math display="inline" id="M69"><mml:msub><mml:mi>v</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></alternatives></inline-formula>, and <inline-formula id="pcbi.1007308.e070"><alternatives><graphic id="pcbi.1007308.e070g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e070" xlink:type="simple"/><mml:math display="inline" id="M70"><mml:msub><mml:mi>v</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></alternatives></inline-formula> are, respectively, the exchange fluxes for glucose, xylose, and oxygen (i.e., elements of the flux vector <bold>v</bold>). Thus, the metabolic network interacts with the extracellular environment through the exchange fluxes in (<xref ref-type="disp-formula" rid="pcbi.1007308.e066">19</xref>).</p>
<p>The initial conditions of the batch are assumed to be fixed at 0.03 g/L of inoculum, 15.5 g/L of glucose, and 8 g/L of xylose; the oxygen concentration is kept constant at 0.24 mmol/L; and <bold>A</bold>, <bold>c</bold>, <bold>v</bold><sup>LB</sup>, and <bold>v</bold><sup>UB</sup> are specified by the iJR904 model. However, the parameters in the substrate uptake rates (<xref ref-type="disp-formula" rid="pcbi.1007308.e066">19</xref>) should be fit to experimental data since they cannot be easily predicted from first principles. This problem of identifying the model parameters was partially tackled in [<xref ref-type="bibr" rid="pcbi.1007308.ref008">8</xref>], where most of the parameters were fixed according to estimates provided in the literature while <italic>u</italic><sub><italic>z</italic>,<italic>max</italic></sub> and <italic>K</italic><sub><italic>ig</italic></sub> were adjusted by trial-and-error to match transient measurements of biomass, glucose, and xylose. The reported parameter estimates are given in <xref ref-type="supplementary-material" rid="pcbi.1007308.s003">S1 Table</xref>. Since <italic>o</italic>(<italic>t</italic>) is fixed, <italic>u</italic><sub><italic>o</italic>,<italic>max</italic></sub> and <italic>K</italic><sub><italic>o</italic></sub> can be lumped into a single parameter <italic>u</italic><sub><italic>o</italic></sub>. These six parameters are unknown and here are modeled as a random vector whose elements are independent and uniformly distributed around ±10% of the nominal values. We selected this range to reflect a reasonable level of confidence in the reported literature values. In the following, we demonstrate how the proposed nsPCE surrogate modeling method can facilitate UQ tasks that are otherwise computationally intractable with respect to the full DFBA model.</p>
<p>All reported computations are performed in MATLAB R2016a on a MacBook Pro with 8 GB of RAM and a 2.6 GHz Intel i5 processor. The DFBA model is simulated using DFBAlab with default options for integration and LP optimization tolerances. CPLEX was used as the LP solver and MATLAB ode15s was used as the integrator.</p>
<sec id="sec012">
<title>Decomposition of parameter space</title>
<p>Before selecting the element decomposition, we must first simulate the DFBA model to locate any significant singularities. The extracellular glucose, xylose, and biomass concentration profiles are plotted in <xref ref-type="fig" rid="pcbi.1007308.g002">Fig 2</xref> for one hundred randomly sampled parameter values. For a given realization of the parameter, the full simulation requires approximately 1.5 seconds of CPU time.</p>
<fig id="pcbi.1007308.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Monte Carlo simulation of <italic>E. coli</italic> DFBA model.</title>
<p>The genome-scale model is integrated from 0 to 8.5 hours for 100 different parameter realizations that are independently drawn from the uniform prior density. The consumption of xylose only occurs after glucose is fully exhausted, which is a strong function of the parameters.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g002" xlink:type="simple"/>
</fig>
<p>At the start of the batch, glucose is consumed preferentially over xylose. Once glucose has been depleted, the LP solution switches and xylose becomes the main carbon source. The final batch time is then specified as the time that both glucose and xylose have been fully depleted, at which point the LP becomes infeasible and the solution ceases to exist. The <italic>E. coli</italic> cells stop growing at this point due to the lack of a carbon source. Although physically the cells would begin to die in this situation, DFBA models cannot directly predict the cell death phase and thus we assume the biomass remains constant for simplicity. The time-to-consumption of glucose <italic>t</italic><sub><italic>g</italic></sub> and xylose <italic>t</italic><sub><italic>z</italic></sub> represent the two singularities in this problem, and clearly depend on the value of the model parameters. Since the singularity time functions cannot be derived analytically, we look to construct PCE approximations for both <italic>t</italic><sub><italic>g</italic></sub> and <italic>t</italic><sub><italic>z</italic></sub>. We investigate two different fitting methods: classical <italic>full</italic> PCE with coefficients estimated using ordinary least squares (OLS) and <italic>sparse</italic> basis-adaptive PCE with coefficients estimated using hybrid LAR. The degree of the polynomials is varied from 1 to 6 in the full PCE method, where <italic>N</italic> = 2<italic>P</italic> model evaluations are used for regression with <italic>P</italic> denoting the size of the basis. In the sparse PCE method, the maximum degree is allowed to vary from 1 to 20, and a hyperbolic truncation scheme (<xref ref-type="disp-formula" rid="pcbi.1007308.e035">10</xref>) is used with <italic>q</italic> = 0.75. The experimental designs (EDs) are generated using Monte Carlo (MC) sampling with a fixed random seed to ensure repeatable results. <xref ref-type="fig" rid="pcbi.1007308.g003">Fig 3a and 3b</xref> show the RMSE as a function of the number of model evaluations used to fit surrogate models for <italic>t</italic><sub><italic>g</italic></sub> and <italic>t</italic><sub><italic>z</italic></sub>, respectively. The sparse PCE method consistently outperforms full PCE, achieving approximately an order-of-magnitude lower RMSE for all ED sizes.</p>
<fig id="pcbi.1007308.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Accuracy of singularity time surrogate models.</title>
<p>RMSE versus the number of model evaluations (i.e., size of the experimental design) used to train the PCE model for <bold>(a)</bold> the glucose singularity <italic>t</italic><sub><italic>g</italic></sub> and <bold>(b)</bold> the xylose singularity <italic>t</italic><sub><italic>z</italic></sub>. The RMSE was estimated empirically from a validation set of 10,000 full DFBA simulations.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g003" xlink:type="simple"/>
</fig>
<p>The sparse PCE surrogate models for <italic>t</italic><sub><italic>g</italic></sub> and <italic>t</italic><sub><italic>z</italic></sub> are used in the nsPCE method to build surrogates for the extracellular concentrations. Additionally, these surrogate models contain useful information on which parameters influence the consumption of different substrates. The Sobol’ indices of <italic>t</italic><sub><italic>g</italic></sub>(<bold><italic>X</italic></bold>) and <italic>t</italic><sub><italic>z</italic></sub>(<bold><italic>X</italic></bold>) are shown in <xref ref-type="fig" rid="pcbi.1007308.g004">Fig 4</xref>, which are a commonly used tool in global sensitivity analysis for ranking the parameters according to their contribution to the variance of the model response. The Sobol’ indices can be computed <italic>analytically</italic> from the PCE coefficients [<xref ref-type="bibr" rid="pcbi.1007308.ref043">43</xref>], which requires less than one second of CPU time here. It is interesting to note that <italic>u</italic><sub><italic>g</italic>,<italic>max</italic></sub> and <italic>u</italic><sub><italic>o</italic></sub> mainly contribute to the variance of <italic>t</italic><sub><italic>g</italic></sub>(<bold><italic>X</italic></bold>), while <italic>u</italic><sub><italic>g</italic>,<italic>max</italic></sub>, <italic>u</italic><sub><italic>z</italic>,<italic>max</italic></sub>, and <italic>u</italic><sub><italic>o</italic></sub> are the significant contributors to the variance of <italic>t</italic><sub><italic>z</italic></sub>(<bold><italic>X</italic></bold>).</p>
<fig id="pcbi.1007308.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Uncertainty propagation with singularity time surrogate models.</title>
<p>The estimated global sensitivity indices of <bold>(a)</bold> <italic>t</italic><sub><italic>g</italic></sub> and <bold>(b)</bold> <italic>t</italic><sub><italic>z</italic></sub> with respect to the uncertain parameters. The estimated PDF of <bold>(c)</bold> <italic>t</italic><sub><italic>g</italic></sub> and <bold>(d)</bold> <italic>t</italic><sub><italic>z</italic></sub> based on 1e+6 surrogate model evaluations, which only requires approximately 1 second of CPU time.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g004" xlink:type="simple"/>
</fig>
<p>The surrogate models can also be used to estimate the PDF of <italic>t</italic><sub><italic>g</italic></sub>(<bold><italic>X</italic></bold>) and <italic>t</italic><sub><italic>z</italic></sub>(<bold><italic>X</italic></bold>), as shown in <xref ref-type="fig" rid="pcbi.1007308.g004">Fig 4</xref>. From the estimated PDFs, we find that <italic>t</italic><sub><italic>g</italic></sub>(<bold><italic>X</italic></bold>) ranges from approximately 6.31 to 7.87 hr, whereas <italic>t</italic><sub><italic>z</italic></sub>(<bold><italic>X</italic></bold>) ranges from approximately 7.33 to 9.12 hr. This suggests that the model response is a non-smooth function of <bold><italic>X</italic></bold> ∈ <italic>S</italic> for any <italic>t</italic> ∈ [6.31, 9.12] hr, so that we must split <italic>S</italic> into two disjoint regions according to <xref ref-type="disp-formula" rid="pcbi.1007308.e049">15</xref>. Since the supports of <italic>t</italic><sub><italic>g</italic></sub>(<bold><italic>X</italic></bold>) and <italic>t</italic><sub><italic>z</italic></sub>(<bold><italic>X</italic></bold>) partially overlap for any <italic>t</italic> ∈ [7.33, 7.87] hr, additional elements should be introduced to ensure the model response is smooth. However, for times outside of this window, we can exclusively define the elements of the parameter space in terms of <italic>t</italic><sub><italic>g</italic></sub> for times before 7.33 hr and <italic>t</italic><sub><italic>z</italic></sub> for times after 7.87 hr. Plots of these two regions at times 6.5, 7.0, and 7.25 hr projected onto the two most sensitive parameters are shown in <xref ref-type="fig" rid="pcbi.1007308.g005">Fig 5</xref>. The blue region represents <italic>S</italic><sub>1</sub> while the red region represents <italic>S</italic><sub>2</sub>. For comparison purposes, we also show the decision boundary in green (along with 95% confidence limits with dashed green lines) learned from a support vector machine (SVM) binary classifier [<xref ref-type="bibr" rid="pcbi.1007308.ref046">46</xref>] that was trained using the same 500 data points. The SVM model is unable to capture the significant nonlinear behavior of the boundary as it evolves over time. Thus, SVM results in relatively large misclassification errors due to the limited training data. The sparse PCE model, however, is able to accurately represent the <italic>t</italic><sub><italic>g</italic></sub> function over the full support (see the parity plot in <xref ref-type="fig" rid="pcbi.1007308.g005">Fig 5d</xref>), which leads to a much more accurate representation of these two elements using limited data.</p>
<fig id="pcbi.1007308.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Parameter space decomposition over time.</title>
<p>The decomposition of the parameter support into two non-overlapping elements at <bold>(a)</bold> 6.5 hr, <bold>(b)</bold> 7.0 hr, and <bold>(c)</bold> 7.25 hr using a sparse PCE model of the glucose singularity time <italic>t</italic><sub><italic>g</italic></sub>. The blue and red regions represent parameters for which <italic>t</italic><sub><italic>g</italic></sub>(<bold><italic>x</italic></bold>) &gt; <italic>t</italic> and <italic>t</italic><sub><italic>g</italic></sub>(<bold><italic>x</italic></bold>) ≤ <italic>t</italic>, respectively, projected onto the two most sensitive parameters. The green line represents the decision boundary learned using an SVM classifier trained with the same set of data as the sparse PCE model, while the dashed green lines represent the corresponding 95% confidence limits. <bold>(d)</bold> Parity plot for the sparse PCE model of <italic>t</italic><sub><italic>g</italic></sub> for 1e4 validation points.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g005" xlink:type="simple"/>
</fig>
<p>The “true” RMSE values reported in <xref ref-type="fig" rid="pcbi.1007308.g003">Fig 3</xref> were estimated using a large validation set that consisted of 10,000 evaluations of the full DFBA model, which required over 3 hours of CPU time. Ideally, these additional model evaluations could be avoided by directly estimating the RMSE from the ED either empirically or using cross-validation techniques. The empirical estimate of the RMSE is based on sample-based approximations to the integral expressions for mean and variance. Cross-validation obtains a more robust RMSE estimate by splitting the ED into various training and validation sets, fitting different models with each training set, and averaging the prediction error of each model. We focus exclusively on <italic>ε</italic><sub><italic>LOO</italic></sub> in this work. <xref ref-type="table" rid="pcbi.1007308.t001">Table 1</xref> gives the estimated RMSE values for the sparse PCE surrogate models fit using different ED sizes. We observe that the empirical estimator greatly underpredicts the “true” RMSE found from the large validation set. In fact, for the smallest size <italic>N</italic> = 10, the empirical estimate is a factor of 10<sup>4</sup> smaller than the true RMSE. The cross-validated RMSE, on the other hand, predicts the correct order in all considered cases except <italic>N</italic> = 10 where it is off merely by a factor of 10 instead of 10<sup>4</sup>. Note that <italic>ε</italic><sub><italic>LOO</italic></sub> is used within the hybrid LAR algorithm to select the best surrogate out of all potential candidates.</p>
<table-wrap id="pcbi.1007308.t001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.t001</object-id>
<label>Table 1</label>
<caption>
<title>Relative mean square error estimates for glucose singularity time surrogate models under multiple experimental design sizes.</title>
</caption>
<alternatives>
<graphic id="pcbi.1007308.t001g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.t001" xlink:type="simple"/>
<table border="0" frame="box" rules="all">
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left" style="border-bottom:thick"><italic>N</italic></th>
<th align="left" style="border-bottom:thick">Validation</th>
<th align="left" style="border-bottom:thick">Cross-validation</th>
<th align="left" style="border-bottom:thick">Empirical</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">10</td>
<td align="left">1.014e-02</td>
<td align="left">1.268e-03</td>
<td align="left">2.601e-06</td>
</tr>
<tr>
<td align="left">50</td>
<td align="left">2.230e-04</td>
<td align="left">3.718e-04</td>
<td align="left">2.130e-04</td>
</tr>
<tr>
<td align="left">100</td>
<td align="left">1.616e-04</td>
<td align="left">1.347e-04</td>
<td align="left">5.333e-05</td>
</tr>
<tr>
<td align="left">150</td>
<td align="left">7.864e-05</td>
<td align="left">6.468e-05</td>
<td align="left">2.820e-05</td>
</tr>
<tr>
<td align="left">200</td>
<td align="left">5.787e-05</td>
<td align="left">3.898e-05</td>
<td align="left">2.416e-05</td>
</tr>
<tr>
<td align="left">500</td>
<td align="left">1.817e-05</td>
<td align="left">1.273e-05</td>
<td align="left">7.679e-06</td>
</tr>
</tbody>
</table>
</alternatives>
<table-wrap-foot>
<fn id="t001fn001">
<p>The validation error is computed using a large set of samples not used in the fitting procedure. Cross-validation and empirical error, however, are computed using only points in the original experimental design. Cross-validation partitions the experimental design into various training and validation sets such that multiple models can be fit and their prediction errors averaged in order to compute more robust error estimates than its empirical counterpart. Here, a leave-one-out cross-validation procedure is utilized.</p>
</fn>
</table-wrap-foot>
</table-wrap>
</sec>
<sec id="sec013">
<title>Validation of nsPCE surrogate models</title>
<p>We have verified that the PCE surrogate models are able to accurately represent the singularity manifold that leads to non-smooth behavior in the states of the DFBA model. Thus, they can be used to build nsPCE surrogates for the extracellular concentrations based on the algorithm summarized in <xref ref-type="fig" rid="pcbi.1007308.g001">Fig 1</xref>. We choose three quantities of interest for illustrative purposes: glucose at time 7.0 hr, xylose at time 8.0 hr, and biomass at time 8.0 hr. We look to compare so-called global PCE to the proposed nsPCE method for these three quantities of interest. In global PCE, a single surrogate model is constructed over the full parameter support, while nsPCE systematically breaks down the support into two disjoint elements using the singularity time function as a dividing boundary. To ensure a fair comparison, the expansion coefficients of both global PCE and nsPCE are estimated using the basis-adaptive hybrid LAR strategy with maximum degree varying from 1 to 20 and <italic>q</italic> = 0.75 in the hyperbolic truncation scheme (<xref ref-type="disp-formula" rid="pcbi.1007308.e035">10</xref>). In addition, the ED in both approaches are sequentially enriched using MC sampling with a fixed random seed. To simplify the construction of the polynomial basis functions when training the nsPCE surrogate models, the elements <italic>S</italic><sub>1</sub> and <italic>S</italic><sub>2</sub> were outerbounded with hyper-rectangles. However, only parameter values that explicitly fall within these sets are incorporated into the local ED. This simple approach for dealing with elements of any shape is currently used in the provided scripts [<xref ref-type="bibr" rid="pcbi.1007308.ref029">29</xref>], but other ways of dealing with generic elements can also be explored.</p>
<p>The convergence properties of the nsPCE surrogate models for the three quantities of interest are compared to that of global PCE in <xref ref-type="fig" rid="pcbi.1007308.g006">Fig 6</xref>. The nsPCE surrogates achieve significantly lower RMSE than the global PCE surrogates in virtually all cases considered, while requiring many fewer samples to converge to the target error level. In addition, global PCE saturates at the maximum number of ED samples for all three quantities of interest. This implies that global PCE is unable to achieve the desired accuracy levels, whereas nsPCE only saturates for the lowest target error of xylose. This behavior is expected since the convergence rate of global PCE is known to be substantially lowered whenever singularities are present in the model response function. Thus, nsPCE is able to significantly improve the rate of convergence based on a properly chosen elemental decomposition of the parameter support. To show that lower target error levels translate to improved predictions, parity plots for the three quantities of interest are shown in <xref ref-type="fig" rid="pcbi.1007308.g007">Fig 7</xref>. Note that global PCE has large prediction errors for particular values of the parameters (see the blue dots that largely deviate from the <italic>y</italic> = <italic>x</italic> line), which is likely due to the fact that an inherently non-smooth function is being represented by smooth polynomials. This is highly undesirable when using the PCE to predict <italic>specific</italic> response values, as opposed to predicting statistical quantities that average over the response values where individual points are not as important. The nsPCE surrogate models clearly mitigate this limitation of global PCE in a significant way since there are no outlier predictions in the set of 10,000 validation points.</p>
<fig id="pcbi.1007308.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Convergence properties of nsPCE surrogate models.</title>
<p><bold>(a,b)</bold> Glucose concentration at time 7 hours. <bold>(c,d)</bold> Xylose concentration at time 8 hours. <bold>(e,f)</bold> Biomass concentration at time 8 hours. Left plots show the validation RMSE versus the specified error tolerance. Right plots show the total number of model evaluations based on a sequential ED construction, with a maximum of 1000 samples allowed. The global sparse basis-adaptive PCE results are also shown for comparison purposes.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g006" xlink:type="simple"/>
</fig>
<fig id="pcbi.1007308.g007" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g007</object-id>
<label>Fig 7</label>
<caption>
<title>Parity plots for nsPCE surrogate models.</title>
<p><bold>(a,b,c)</bold> Target RMSE level <italic>ε</italic><sub><italic>target</italic></sub> = 10<sup>−2</sup>. <bold>(d,e,f)</bold> Target RMSE level <italic>ε</italic><sub><italic>target</italic></sub> = 10<sup>−3</sup>. <bold>(g,h,i)</bold> Target RMSE level <italic>ε</italic><sub><italic>target</italic></sub> = 10<sup>−4</sup>. The left, middle, and right columns correspond to glucose concentration at 7 hours, xylose concentration at 8 hours, and biomass concentration at 8 hours, respectively. The parity plots for global sparse basis-adaptive PCE are overlaid for comparison purposes. The global PCE has considerably larger error than nsPCE.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g007" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec014">
<title>Bayesian parameter inference</title>
<p>Here, we focus on the inverse UQ problem of estimating parameters from data, which can be greatly accelerated using nsPCE. The same data set used in [<xref ref-type="bibr" rid="pcbi.1007308.ref008">8</xref>] is utilized, which includes measurements of the extracellular biomass, glucose, and xylose concentrations at <italic>t</italic> ∈ {5.5, 6.0, 6.5, 7.0, 7.25, 8.0, 8.25, 8.5} hr. The measurements are corrupted with noise
<disp-formula id="pcbi.1007308.e071"><alternatives><graphic id="pcbi.1007308.e071g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e071" xlink:type="simple"/><mml:math display="block" id="M71"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="left"><mml:msubsup><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mrow><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msubsup><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:msubsup><mml:mrow><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:msubsup><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>z</mml:mi></mml:msubsup><mml:mrow><mml:mo>=</mml:mo><mml:mi>z</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mi>x</mml:mi></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(21)</label></disp-formula>
where <inline-formula id="pcbi.1007308.e072"><alternatives><graphic id="pcbi.1007308.e072g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e072" xlink:type="simple"/><mml:math display="inline" id="M72"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>z</mml:mi></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1007308.e073"><alternatives><graphic id="pcbi.1007308.e073g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e073" xlink:type="simple"/><mml:math display="inline" id="M73"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mi>z</mml:mi></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> are, respectively, vectors of the measured data and noise at the <italic>i</italic>th time point. The concatenated data (respectively noise) vector is denoted by <bold><italic>D</italic></bold> = (<bold><italic>D</italic></bold><sub>1</sub>, …, <bold><italic>D</italic></bold><sub>8</sub>) (respectively <bold><italic>E</italic></bold> = (<bold><italic>E</italic></bold><sub>1</sub>, …, <bold><italic>E</italic></bold><sub>8</sub>)). The measurement noise variables are modeled as independent zero-mean Gaussian random variables with state-dependent variance that equals 5% of the measured signal, i.e.,
<disp-formula id="pcbi.1007308.e074"><alternatives><graphic id="pcbi.1007308.e074g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e074" xlink:type="simple"/><mml:math display="block" id="M74"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mi>E</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:msubsup><mml:mo>∼</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>.</mml:mo><mml:mn>05</mml:mn><mml:mrow><mml:mo>|</mml:mo><mml:mi>v</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(22)</label></disp-formula>
Given a set of measurements, the change in the state of information about the parameters is given by Bayes’ rule [<xref ref-type="bibr" rid="pcbi.1007308.ref011">11</xref>]
<disp-formula id="pcbi.1007308.e075"><alternatives><graphic id="pcbi.1007308.e075g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e075" xlink:type="simple"/><mml:math display="block" id="M75"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">D</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">d</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">d</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">X</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">D</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">d</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(23)</label></disp-formula>
where <italic>f</italic><sub><bold><italic>X</italic></bold>|<bold><italic>D</italic></bold></sub> is the posterior density; <italic>f</italic><sub><bold><italic>D</italic></bold>|<bold><italic>X</italic></bold></sub> is the likelihood function; <italic>f</italic><sub><bold><italic>X</italic></bold></sub> is the prior density; and <italic>f</italic><sub><bold><italic>D</italic></bold></sub> is the evidence. As Bayesian inference looks to characterize the full posterior density, it directly provides an explicit representation of the uncertainty in the parameter estimates.</p>
<p>The prior and likelihood function must be specified before solving (<xref ref-type="disp-formula" rid="pcbi.1007308.e075">23</xref>). We assume the same uniform priors as those used to construct the nsPCE surrogate models, though these can differ in general. The likelihood function describes the discrepancy between the observed data and the model predictions in a probabilistic way. The likelihood function is specified by the data and noise models in (<xref ref-type="disp-formula" rid="pcbi.1007308.e071">21</xref>) and (<xref ref-type="disp-formula" rid="pcbi.1007308.e074">22</xref>), and is given by
<disp-formula id="pcbi.1007308.e076"><alternatives><graphic id="pcbi.1007308.e076g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e076" xlink:type="simple"/><mml:math display="block" id="M76"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">d</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>8</mml:mn></mml:munderover><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:munder><mml:mspace width="3.33333pt"/><mml:mfrac><mml:mn>1</mml:mn><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msqrt></mml:mfrac><mml:mtext>exp</mml:mtext><mml:mspace width="4pt"/><mml:mo>(</mml:mo><mml:mo>−</mml:mo><mml:mfrac><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:msubsup><mml:mo>−</mml:mo><mml:mi>v</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mn>2</mml:mn><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(24)</label></disp-formula>
Although we use a Gaussian likelihood here, the same Bayesian estimation approach can be applied to any choice of likelihood function and thus can be easily modified to incorporate other potentially important factors including sensor bias or asymmetric noise.</p>
<p>Since (<xref ref-type="disp-formula" rid="pcbi.1007308.e075">23</xref>) cannot be solved analytically, we must resort to sample-based approximations that rely on generating samples from the target posterior distribution. A variety of methods have been developed for sampling from the unknown posterior <italic>f</italic><sub><bold><italic>X</italic></bold>|<bold><italic>D</italic></bold></sub>, including Markov Chain Monte Carlo (MCMC) [<xref ref-type="bibr" rid="pcbi.1007308.ref047">47</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref049">49</xref>] and sequential Monte Carlo (SMC) [<xref ref-type="bibr" rid="pcbi.1007308.ref050">50</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref052">52</xref>] algorithms. The proposed surrogate models can be used to accelerate any sampling-based method; however, we focus on SMC since this is a class of algorithms that can be made fully parallelized. SMC is based on the concept of <italic>importance sampling</italic>, which can be implemented in an iterative fashion such that the posterior is updated every time a new measurement becomes available. For a given number of particles <italic>N</italic><sub><italic>p</italic></sub>, the SMC approximation to (<xref ref-type="disp-formula" rid="pcbi.1007308.e075">23</xref>) can be summarized as follows:
<list list-type="order">
<list-item><p>Initialization: set <italic>k</italic> = 1 and generate samples and weights <inline-formula id="pcbi.1007308.e077"><alternatives><graphic id="pcbi.1007308.e077g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e077" xlink:type="simple"/><mml:math display="inline" id="M77"><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:msubsup></mml:math></alternatives></inline-formula> from prior.</p></list-item>
<list-item><p>Reweighting: update the weights <italic>w</italic><sub><italic>i</italic></sub> ← <italic>w</italic><sub><italic>i</italic></sub> × <italic>w</italic><sub><italic>k</italic></sub>(<bold><italic>x</italic></bold><sub><italic>i</italic></sub>) where <italic>w</italic><sub><italic>k</italic></sub>(<bold><italic>x</italic></bold><sub><italic>i</italic></sub>) ∝ <italic>f</italic><sub><italic>D</italic><sub><italic>k</italic></sub>|<bold><italic>X</italic></bold></sub>(<italic>d</italic><sub><italic>k</italic></sub>|<bold><italic>x</italic></bold><sub><italic>i</italic></sub>).</p></list-item>
<list-item><p>Resampling: resample <inline-formula id="pcbi.1007308.e078"><alternatives><graphic id="pcbi.1007308.e078g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e078" xlink:type="simple"/><mml:math display="inline" id="M78"><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:msubsup></mml:math></alternatives></inline-formula> for particles with equal weights <inline-formula id="pcbi.1007308.e079"><alternatives><graphic id="pcbi.1007308.e079g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e079" xlink:type="simple"/><mml:math display="inline" id="M79"><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>i</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mfrac><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:msubsup></mml:math></alternatives></inline-formula>.</p></list-item>
<list-item><p>Loop: set <italic>k</italic> ← <italic>k</italic> + 1 and <inline-formula id="pcbi.1007308.e080"><alternatives><graphic id="pcbi.1007308.e080g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e080" xlink:type="simple"/><mml:math display="inline" id="M80"><mml:mrow><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:msubsup><mml:mo>←</mml:mo><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>i</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mfrac><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>. Return to Step 2 if <italic>k</italic> &lt; <italic>k</italic><sub><italic>f</italic></sub>.</p></list-item>
</list>
When the algorithm stops at time <italic>k</italic><sub><italic>f</italic></sub>, the set of <italic>N</italic><sub><italic>p</italic></sub> particles targets the posterior distribution of interest. We use systematic resampling in Step 3 due to its computational simplicity and good empirical performance, though a variety of other methods are available [<xref ref-type="bibr" rid="pcbi.1007308.ref050">50</xref>]. Step 2 is usually the computational bottleneck because the model must be repeatedly solved in order to evaluate the likelihood weight factors using (<xref ref-type="disp-formula" rid="pcbi.1007308.e076">24</xref>). Therefore, we propose to replace the evaluation of <italic>v</italic>(<italic>t</italic><sub><italic>i</italic></sub>; <bold><italic>x</italic></bold>) with a nsPCE surrogate model <italic>v</italic><sup><italic>nsPCE</italic></sup>(<italic>t</italic><sub><italic>i</italic></sub>; <bold><italic>x</italic></bold>) for every <italic>v</italic> ∈ {<italic>b</italic>, <italic>g</italic>, <italic>z</italic>} and <italic>i</italic> = 1, …, 8. We must then construct a total of 24 surrogates before running the SMC algorithm.</p>
<p>The same basic strategy described in the previous section is used for constructing all 24 of the nsPCE surrogate models. Similarly to how the samples for the singularity time are used to initialize the ED in each element, we can store the list of state and time points generated when integrating the DFBA model and interpolate these points to calculate the extracellular concentrations at every time point of interest. By keeping a working ED that is used to initialize each element at every time point, we can greatly limit the number of expensive DFBA simulations that represent the computational bottleneck in SMC. The proposed algorithm in <xref ref-type="fig" rid="pcbi.1007308.g001">Fig 1</xref> is run with a target error of <italic>ε</italic><sub><italic>target</italic></sub> = 10<sup>−3</sup>, 250 initial ED samples, 10 ED samples added at each iteration, 2500 maximum ED samples, maximum degree varying from 1 to 20, and hyperbolic truncation with <italic>q</italic> = 0.75. The algorithm converged with cross-validated errors <italic>ε</italic><sub><italic>LOO</italic></sub> below the desired tolerance using only a total of 1200 DFBA simulations to train all 24 nsPCE surrogate models. The basis-adaptive hybrid LAR method consistently estimated coefficients in less than 30 seconds, verifying that the DFBA simulations are the dominant cost in this case study. The validation RMSE values are summarized in <xref ref-type="supplementary-material" rid="pcbi.1007308.s004">S2 Table</xref>, which are all below the target error threshold.</p>
<p><xref ref-type="fig" rid="pcbi.1007308.g008">Fig 8</xref> shows the posterior density estimated using SMC with <italic>N</italic><sub><italic>p</italic></sub> = 1 × 10<sup>6</sup> particles for a synthetic data set, where the likelihood weights are evaluated using the inexpensive nsPCE surrogate models. The synthetic data (‘x’ marks in <xref ref-type="supplementary-material" rid="pcbi.1007308.s001">S1 Fig</xref>) was obtained by simulating the genome-scale <italic>E. coli</italic> DFBA model with fixed parameters (red lines in <xref ref-type="fig" rid="pcbi.1007308.g008">Fig 8</xref>) and adding random noise realizations (<xref ref-type="disp-formula" rid="pcbi.1007308.e074">22</xref>) to the resulting model outputs. The 1200 DFBA simulations used to construct the surrogates require ∼ 30 minutes of CPU time while the surrogate-based SMC algorithm, which takes advantage of vectorization, finishes in ∼ 2 minutes of CPU time. Hence, over 800-fold savings in computational cost is achieved when compared to SMC without surrogates that would require approximately 17 days of CPU time under the same settings (1 × 10<sup>6</sup> DFBA simulations at a cost of 1.5 seconds per evaluation). The DFBA model predictions under the MAP estimates (i.e., parameters that maximize the posterior) are shown in <xref ref-type="supplementary-material" rid="pcbi.1007308.s001">S1 Fig</xref>, which closely match the observed data. To verify that the SMC algorithm approximately converged with this many particles, we performed 10 separate bootstrap runs that produced a set of very similar posterior densities. Note that a discussion on challenges and open issues in Bayesian estimation is provided in the Discussion section. The SMC code is provided in the <monospace>main_smc.m</monospace> script in [<xref ref-type="bibr" rid="pcbi.1007308.ref029">29</xref>].</p>
<fig id="pcbi.1007308.g008" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g008</object-id>
<label>Fig 8</label>
<caption>
<title>Posterior distribution of the estimated model parameters.</title>
<p>The diagonal subplots represent marginal densities while the off-diagonal subplots represent two-dimensional projections of samples from the joint density. Blue denotes the posterior density while green denotes the prior density. The red line represents the true parameter values used to generate synthetic data for estimation purposes.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g008" xlink:type="simple"/>
</fig>
<p>The estimated posterior density in <xref ref-type="fig" rid="pcbi.1007308.g008">Fig 8</xref> provides interesting physical insights. Three of the parameters (<italic>K</italic><sub><italic>g</italic></sub>, <italic>K</italic><sub><italic>z</italic></sub>, <italic>K</italic><sub><italic>ig</italic></sub>) are unobservable with the current data set since their posterior (blue) and prior (green) densities are equivalent. This observation could not be easily made before running the estimation procedure due to the nonlinear and indirect relationship between <bold><italic>D</italic></bold> and <bold><italic>X</italic></bold>. A change in the experimental conditions such as the initial conditions, controlled oxygen concentration, or substrate feed profiles can enhance the sensitivity of the data to parameters (<italic>K</italic><sub><italic>g</italic></sub>, <italic>K</italic><sub><italic>z</italic></sub>, <italic>K</italic><sub><italic>ig</italic></sub>). For example, running the batch at low glucose concentrations <italic>g</italic>(<italic>t</italic>) ≪ <italic>K</italic><sub><italic>g</italic></sub> results in a glucose uptake rate <inline-formula id="pcbi.1007308.e081"><alternatives><graphic id="pcbi.1007308.e081g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e081" xlink:type="simple"/><mml:math display="inline" id="M81"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:mrow><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula> that is a strong function of <italic>K</italic><sub><italic>g</italic></sub>, whereas running the batch at high glucose concentrations (as done in this case study) produces a nearly constant uptake rate <italic>u</italic><sub><italic>g</italic></sub>(<italic>t</italic>) ≈ <italic>u</italic><sub><italic>g</italic>,<italic>max</italic></sub> that is independent of <italic>K</italic><sub><italic>g</italic></sub>. Although the data is sensitive to (<italic>u</italic><sub><italic>g</italic>,<italic>max</italic></sub>, <italic>u</italic><sub><italic>z</italic>,<italic>max</italic></sub>, <italic>u</italic><sub><italic>o</italic></sub>), these parameters are highly correlated as seen in the off-diagonal plots of their joint densities in <xref ref-type="fig" rid="pcbi.1007308.g008">Fig 8</xref>. Thus, the currently available data from one single batch is insufficient for accurately estimating all the parameters of interest. The evolution of the marginal posterior densities of the observable parameters over time is shown in <xref ref-type="fig" rid="pcbi.1007308.g009">Fig 9</xref>. Since glucose is mostly consumed by 7.25 hr, the densities of <italic>u</italic><sub><italic>g</italic>,<italic>max</italic></sub> and <italic>u</italic><sub><italic>o</italic></sub> remain constant for the remaining batch time. The density of <italic>u</italic><sub><italic>z</italic>,<italic>max</italic></sub>, however, is constant before 7.25 hr because xylose remains mostly at its initial condition.</p>
<fig id="pcbi.1007308.g009" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g009</object-id>
<label>Fig 9</label>
<caption>
<title>Evolution of the posterior marginal densities for the observable model parameters over time.</title>
<p>Each subplot shows the histogram of parameter posterior samples estimated using the sequential Monte Carlo method. The <italic>x</italic>-axis represents the range of values of the parameters and the <italic>y</italic>-axis represents frequencies. The red line represents the true parameter values.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g009" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec015">
<title>Forward uncertainty propagation</title>
<p>Let <inline-formula id="pcbi.1007308.e082"><alternatives><graphic id="pcbi.1007308.e082g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e082" xlink:type="simple"/><mml:math display="inline" id="M82"><mml:mrow><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> denote the vector of all model responses. The forward UQ problem looks to characterize the uncertainty in the model predictions by propagating uncertainty in the parameters through <inline-formula id="pcbi.1007308.e083"><alternatives><graphic id="pcbi.1007308.e083g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e083" xlink:type="simple"/><mml:math display="inline" id="M83"><mml:mi mathvariant="script">M</mml:mi></mml:math></alternatives></inline-formula>. This can involve estimating either the prior predictive distribution <italic>f</italic><sub><italic><bold>Y</bold></italic></sub> (before any data has been collected), or the posterior predictive distribution <italic>f</italic><sub><bold><italic>Y</italic></bold>|<bold><italic>D</italic></bold></sub> (after data has been obtained). The only difference between these two problems is that <inline-formula id="pcbi.1007308.e084"><alternatives><graphic id="pcbi.1007308.e084g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e084" xlink:type="simple"/><mml:math display="inline" id="M84"><mml:mi mathvariant="script">M</mml:mi></mml:math></alternatives></inline-formula> is evaluated at i.i.d. samples drawn from the prior in the former and the posterior in the latter. The densities of the model predictions estimated using 1 × 10<sup>6</sup> samples are shown in <xref ref-type="fig" rid="pcbi.1007308.g010">Fig 10</xref>. By replacing the full DFBA model with the nsPCE surrogate model, these histograms were obtained in less than 1 minute of CPU time. As expected, the prior predictive distributions are much wider than the posterior predictive distributions, indicating there is significant uncertainty in the predictions before incorporating data. In addition, we see that many of these distributions have sharp changes and long tails due to the non-smooth behavior of the model responses, which can be accurately captured with the proposed nsPCE framework. It is also interesting to note that the posterior predictive distributions have low variance, even though the parameters are not perfectly estimated. This highlights the impact that nonlinearity can have on both estimation and uncertainty propagation.</p>
<fig id="pcbi.1007308.g010" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g010</object-id>
<label>Fig 10</label>
<caption>
<title>Predicted probability distributions of extracellular concentrations.</title>
<p><bold>(a)</bold> Model predictions using parameter samples from the prior. <bold>(b)</bold> Model predictions using parameter samples from the posterior. Each subplot shows the histogram of samples of the model output obtained by substituting i.i.d. samples from the parameter distribution into the corresponding ME-PCE surrogate model. The <italic>x</italic>-axis represents the range of values of the model outputs and the <italic>y</italic>-axis represents frequencies.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g010" xlink:type="simple"/>
</fig>
</sec>
</sec>
<sec id="sec016">
<title>Case study 2: Synthetic metabolic network</title>
<p>This case study is based on a synthetic metabolic network originally introduced in [<xref ref-type="bibr" rid="pcbi.1007308.ref031">31</xref>, Chapter 8]. The goal of this case study is to show that the proposed nsPCE method can be applied to problems with a larger number of parameters as well as alternative UQ approaches. The synthetic metabolic network consumes a carbon source <italic>C</italic>, a nitrogen source <italic>N</italic>, and an oxygen source <italic>O</italic> to produce lipids <italic>L</italic>, ethanol <italic>E</italic>, biomass <italic>X</italic>, <italic>ATP</italic>, and some oxidation product <italic>COX</italic>. Although used for illustrative purposes, this network is meant to mimic the behavior of living organisms in the sense that: (i) <italic>E</italic> can only be produced in the absence of <italic>O</italic>, (ii) <italic>L</italic> can only be accumulated in the absence of <italic>N</italic>, (iii) there is a minimum <italic>ATP</italic> requirement, and (iv) the aerobic oxidation of <italic>C</italic> produces more energy than fermentation of <italic>C</italic>. The set of reactions can be summarized as
<disp-formula id="pcbi.1007308.e085"><alternatives><graphic id="pcbi.1007308.e085g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e085" xlink:type="simple"/><mml:math display="block" id="M85"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mi>C</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mi>O</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>O</mml:mi><mml:mi>X</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mo>→</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>O</mml:mi><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>O</mml:mi><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>O</mml:mi><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>F</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:mn>4</mml:mn><mml:mi>C</mml:mi><mml:mo>→</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>F</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>O</mml:mi><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>F</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:mn>4</mml:mn><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>→</mml:mo><mml:mi>L</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mi>N</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>→</mml:mo><mml:mi>X</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>:</mml:mo><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>→</mml:mo><mml:mi>A</mml:mi><mml:mi>T</mml:mi><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>c</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(25)</label></disp-formula>
where the subscript <italic>ex</italic> denotes extracellular metabolites and all of the reactions are assumed to be unidirectional. The unknown stoichiometric coefficients are denoted by <italic>S</italic><sub><italic>i</italic>,<italic>j</italic></sub>, where <italic>i</italic> represents the metabolite name and <italic>j</italic> represents the reaction name. The dynamic mass balance equations for the extracellular environment are given by
<disp-formula id="pcbi.1007308.e086"><alternatives><graphic id="pcbi.1007308.e086g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e086" xlink:type="simple"/><mml:math display="block" id="M86"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>X</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>C</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>C</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>N</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>N</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>O</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>O</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>O</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>O</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>L</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>E</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>F</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:mi>X</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>O</mml:mi><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>O</mml:mi><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>O</mml:mi><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>O</mml:mi><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>F</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>F</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:mi>X</mml:mi><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>α</mml:mi><mml:mo>˙</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>γ</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mi>α</mml:mi><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(26)</label></disp-formula>
where <italic>α</italic> is a penalty state that remains equal to zero until the state trajectories become infeasible (e.g., when all of the metabolites are depleted). A detailed discussion on how to determine the instantaneous penalty value <italic>γ</italic> is provided in [<xref ref-type="bibr" rid="pcbi.1007308.ref010">10</xref>], which is automatically computed in <monospace>DFBAlab</monospace>. We assume that the uptake kinetics are given by the following expressions
<disp-formula id="pcbi.1007308.e087"><alternatives><graphic id="pcbi.1007308.e087g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e087" xlink:type="simple"/><mml:math display="block" id="M87"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>C</mml:mi><mml:mrow><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mtext>max</mml:mtext><mml:mspace width="4pt"/><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>C</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>C</mml:mi></mml:mrow></mml:mfrac><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mfrac><mml:mi>E</mml:mi><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>E</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mrow></mml:mfrac><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>N</mml:mi><mml:mrow><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mtext>max</mml:mtext><mml:mspace width="4pt"/><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:mfrac><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>O</mml:mi><mml:mrow><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold">s</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mtext>max</mml:mtext><mml:mspace width="4pt"/><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>O</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:mi>O</mml:mi><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>O</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>O</mml:mi></mml:mrow></mml:mfrac><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(27)</label></disp-formula>
where <bold>s</bold> = (<italic>X</italic>, <italic>C</italic>, <italic>N</italic>, <italic>O</italic>, <italic>L</italic>, <italic>E</italic>, <italic>COX</italic>, <italic>α</italic>) is the vector of extracellular species. A hierarchical set of objectives is used in the FBA problem (<xref ref-type="disp-formula" rid="pcbi.1007308.e002">2</xref>) to ensure that unique reaction fluxes are obtained (see <xref ref-type="supplementary-material" rid="pcbi.1007308.s005">S3 Table</xref>). A total of twenty parameters in this DFBA model, appearing in both intracellular and extracellular quantities, are assumed to be uniformly distributed between upper and lower bounds summarized in <xref ref-type="supplementary-material" rid="pcbi.1007308.s006">S4 Table</xref>.</p>
<sec id="sec017">
<title>Global sensitivity analysis</title>
<p>To locate any possible singularities, we first simulate the DFBA model with randomly sampled parameter values. The results are shown in <xref ref-type="fig" rid="pcbi.1007308.g011">Fig 11</xref> wherein we see that the penalty state becomes positive <italic>α</italic>(<italic>t</italic>) &gt; 0 once all substrates are depleted, which introduces a strong discontinuity into the state profiles. Even though this is a considerably smaller metabolic network than the one considered in the <italic>E. coli</italic> case study, it still takes approximately 0.5 seconds of CPU time per realization of the parameter. Thus, it is still advantageous to construct a surrogate model to speedup both forward and inverse UQ problems.</p>
<fig id="pcbi.1007308.g011" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g011</object-id>
<label>Fig 11</label>
<caption>
<title>Monte Carlo simulation of the synthetic metabolic network.</title>
<p>The synthetic DFBA model with twenty uncertain parameters is integrated from time 0 to 40 hours for 100 different parameter realizations drawn independently from the uniform prior density. The time profiles are shown for <bold>(a)</bold> biomass and lipids, <bold>(b)</bold> the substrates and products, and <bold>(c)</bold> the penalty state.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g011" xlink:type="simple"/>
</fig>
<p>We look to run the proposed nsPCE method (see <xref ref-type="fig" rid="pcbi.1007308.g001">Fig 1</xref>) using the time that the penalty state switches from zero to positive as the singularity time. As suggested in [<xref ref-type="bibr" rid="pcbi.1007308.ref031">31</xref>, Chapter 8], we consider the seven substrate and product concentrations (<italic>X</italic>, <italic>C</italic>, <italic>N</italic>, <italic>O</italic>, <italic>L</italic>, <italic>E</italic>, <italic>COX</italic>) at four time points <italic>t</italic> ∈ {10, 20, 30, 40} hr as our main quantities of interest. The nsPCE method was applied in the same manner as described in the previous case study. Here, we specified a target error of <italic>ε</italic><sub><italic>target</italic></sub> = 10<sup>−3</sup>, 100 initial ED samples, 100 ED samples added at each iteration, 1500 maximum ED samples, the maximum polynomial degree could vary from 1 to 30, and a hyperbolic truncation scheme with <italic>q</italic> = 0.6. The algorithm converged using a total of 2800 DFBA simulations. The resulting parity plots are shown in <xref ref-type="supplementary-material" rid="pcbi.1007308.s002">S2 Fig</xref>, which all have empirical RMSE values significantly below the target error. To further assess the accuracy of these models, we calculated the RMSE using 1000 additional samples that were not used during the training process. The validation RMSE averaged over the 28 models was found to be 8.1 × 10<sup>−4</sup>. Only 6 of the 28 surrogates had RMSE values slightly above the target, with the largest overall RMSE being 3.5 × 10<sup>−3</sup>, indicating that the surrogates are reasonably accurate representations of the original model. Note that these errors can be refined by specifying a lower <italic>ε</italic><sub><italic>target</italic></sub> at the cost of more DFBA simulations.</p>
<p>Once the nsPCE surrogate models are constructed, they can be used to efficiently perform global sensitivity analysis in order to quantify the respective effects of each individual parameter on the variance of the model response. Although many sensitivity measures exist, we use Sobol’ indices since they make no assumption on the underlying linearity or monotonicity of the model. The global sensitivity results for the various quantities of interest over time are shown in <xref ref-type="fig" rid="pcbi.1007308.g012">Fig 12</xref>. A variety of interesting conclusions can be drawn from these results. For example, the model appears to be insensitive to <italic>K</italic><sub><italic>C</italic></sub> and <italic>K</italic><sub><italic>iE</italic></sub>, which is likely due to the fact that the batch was run at high carbon and low ethanol concentrations. In addition, the measurements of carbon, nitrogen, and oxygen are highly sensitive to their respective initial conditions <italic>C</italic><sub>0</sub>, <italic>N</italic><sub>0</sub>, and <italic>O</italic><sub>0</sub> at the first measurement time of 10 hr; however, this sensitivity drops considerably as time evolves. We emphasize that obtaining such insights using random sampling on the full model can be prohibitively expensive, but requires negligible cost using the nsPCE surrogate models.</p>
<fig id="pcbi.1007308.g012" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g012</object-id>
<label>Fig 12</label>
<caption>
<title>Global sensitivity indices for the quantities of interest in the synthetic metabolic network.</title>
<p><bold>(a)</bold>-<bold>(g)</bold> Global sensitivity indices for extracellular substrate and product concentrations at various time points with respect to the twenty uncertain parameters.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g012" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec018">
<title>Optimization-based parameter estimation</title>
<p>We now utilize maximum a posteriori (MAP) estimation to estimate the unknown model parameters from synthetically-generated experimental data (see <xref ref-type="supplementary-material" rid="pcbi.1007308.s007">S5 Table</xref>). The MAP estimate is defined as the mode of the posterior distribution, and can be stated directly as an optimization problem of the form [<xref ref-type="bibr" rid="pcbi.1007308.ref053">53</xref>]
<disp-formula id="pcbi.1007308.e088"><alternatives><graphic id="pcbi.1007308.e088g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1007308.e088" xlink:type="simple"/><mml:math display="block" id="M88"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mtext>MAP</mml:mtext></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">d</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmax</mml:mtext><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mspace width="3.33333pt"/><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">D</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">d</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmax</mml:mtext><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mspace width="3.33333pt"/><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">d</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="bold-italic">X</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives> <label>(28)</label></disp-formula>
where the prior acts as a regularization term that can stabilize the solution whenever the parameters cannot be uniquely inferred from the available data [<xref ref-type="bibr" rid="pcbi.1007308.ref054">54</xref>]. We consider a Gaussian likelihood, with noise standard deviations reported in <xref ref-type="supplementary-material" rid="pcbi.1007308.s007">S5 Table</xref>, and a Gaussian prior whose mean is equal to the midpoint of the bounds in <xref ref-type="supplementary-material" rid="pcbi.1007308.s006">S4 Table</xref> and standard deviations equal to 10% of the mean values. Under the Gaussian restrictions, we can convert the MAP problem to the minimization of a regularized weighted least squares objective by applying a negative log transformation. We solved the optimization (<xref ref-type="disp-formula" rid="pcbi.1007308.e088">28</xref>) using both the full DFBA and nsPCE surrogate models in order to assess the computational gains afforded by the nsPCE method. To ensure a fair comparison, we solved both of these MAP problems in Matlab using the non-smooth optimizer SolvOpt [<xref ref-type="bibr" rid="pcbi.1007308.ref055">55</xref>] with default parameter settings and the mean of the prior as the initial guess. The algorithm took approximately 2.5 hr to converge when using the full DFBA model, which was substantially reduced to less than 2 minutes (i.e., a factor of 60) when the full model was replaced with the nsPCE surrogates.</p>
<p>Not only did the use of the nsPCE surrogate models accelerate the optimization, it also produced a solution with a lower overall objective function value. The objective improved from 471.73 to 1.56 when using the surrogate models as compared to 63.57 when using the full DFBA model. Convergence to a suboptimal solution is likely a consequence of numerical issues related to the stability of derivative approximation using finite difference in DFBA models, which were also observed in [<xref ref-type="bibr" rid="pcbi.1007308.ref031">31</xref>, Chapter 8]. On the other hand, since the nsPCE surrogate models are defined in terms of simple polynomial functions, the finite difference derivative approximation seems to produce more stable iterations towards the solution of the MAP problem, at least in this particular case study. The predictions of the DFBA model under the MAP estimates found using the nsPCE surrogates are shown in <xref ref-type="fig" rid="pcbi.1007308.g013">Fig 13</xref>. We see that the predictions using the posterior parameter estimates very closely match the observed data, which is a large improvement when compared to the predictions based on the prior parameter estimates.</p>
<fig id="pcbi.1007308.g013" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g013</object-id>
<label>Fig 13</label>
<caption>
<title>Comparison of model predictions and data for the synthetic metabolic network.</title>
<p>The model predictions for <bold>(a)</bold> biomass and lipids and <bold>(b)</bold> the substrates and products, shown with solid lines, were obtained by integrating the DFBA model with the MAP estimates of the parameters. The ‘□’ marks represent the data that was obtained by corrupting the model predictions using the true (unknown) parameters with randomly generated noise. The dotted lines represent the model predictions based on the initial parameter guess that was used to initialization the optimizer.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g013" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec019">
<title>Posterior distribution analysis</title>
<p>The MAP estimation (<xref ref-type="disp-formula" rid="pcbi.1007308.e088">28</xref>) determines the parameters that maximize the posterior density. However, we need a characterization of the entire posterior to assess uncertainty in these estimates. Here, we use a Laplace approximation of the posterior density, which is based on a second-order Taylor series of −log(<italic>f</italic><sub><bold><italic>X</italic></bold>|<bold><italic>D</italic></bold></sub>(<bold><italic>x</italic></bold>|<bold><italic>d</italic></bold>)) around the MAP estimate [<xref ref-type="bibr" rid="pcbi.1007308.ref056">56</xref>]. As shown in [<xref ref-type="bibr" rid="pcbi.1007308.ref057">57</xref>], this leads to a Gaussian approximation of the posterior whose mean is equal to the MAP estimate and whose covariance is defined in terms of the model response sensitives. The approximated posterior marginal densities and 95% confidence regions for the twenty MAP parameter estimates are shown in <xref ref-type="fig" rid="pcbi.1007308.g014">Fig 14</xref>. As can be seen, the true (unknown) parameter values are contained within the reported confidence regions. We also see that the parameters with the highest global sensitivity indices (see <xref ref-type="fig" rid="pcbi.1007308.g012">Fig 12</xref>) are accurately estimated, whereas the parameters that have little-to-no sensitivity to the data have much wider variances that are similar to that of the prior. Lastly, we observe that physically-related parameters exhibit a significant degree of correlation including, for example, nitrogen uptake parameters <italic>v</italic><sub><italic>max</italic>,<italic>N</italic></sub> and <italic>K</italic><sub><italic>N</italic></sub>. It is worth noting that the surrogate models can also enable the use of more advanced methods for posterior characterization such as randomized MAP [<xref ref-type="bibr" rid="pcbi.1007308.ref058">58</xref>], which would require the repeated solution of (<xref ref-type="disp-formula" rid="pcbi.1007308.e088">28</xref>) with randomly perturbed data.</p>
<fig id="pcbi.1007308.g014" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1007308.g014</object-id>
<label>Fig 14</label>
<caption>
<title>Estimated posterior distribution for the parameters of the synthetic metabolic network.</title>
<p>The diagonal subplots represent the estimated marginal densities, while the off-diagonal subplots represent the two-dimensional projections of the 95% confidence regions. Black ‘x’ marks represent the true parameter values, while the modes of the marginal densities signify the MAP estimates.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.g014" xlink:type="simple"/>
</fig>
</sec>
</sec>
</sec>
<sec id="sec020" sec-type="conclusions">
<title>Discussion</title>
<p>In this work, we develop a novel surrogate modeling method for handling the non-smooth nature of computationally expensive dynamic flux balance analysis (DFBA) models. It is shown that surrogate models can vastly accelerate uncertainty quantification (UQ) tasks, such as calibrating the model with experimental data (inverse problem) and quantifying confidence in the model predictions (forward problem). The proposed surrogate modeling method is based on an extension of polynomial chaos expansion (PCE), which we refer to as non-smooth PCE (nsPCE). The main idea behind nsPCE is to systematically partition the parameter space into two non-overlapping regions (or elements) on which the model response behaves smoothly. The nsPCE uses a model of the time that the singularity occurs in order to define the boundary between these two elements. State-of-the-art (i.e., sparse basis-adaptive) regression methods are used to estimate the coefficients of the expansions, such that the overall model response is approximated by a sparse piecewise polynomial function.</p>
<p>We demonstrate the advantages of the nsPCE surrogate modeling method on two separate case studies. The first case study is based on a DFBA model of an <italic>E. coli</italic> fermentation reactor under aerobic growth in a glucose and xylose mixed media. A genome-scale metabolic network reconstruction with 1075 reactions and 761 metabolites is used to represent the intracellular behavior, which results in an expensive-to-simulate DFBA model that is prohibitive for use in most UQ tasks. Thus, we illustrate how both inverse and forward UQ can be significantly accelerated using nsPCE surrogate models on this problem. In particular, we use a Bayesian estimation method to infer six uncertain parameters related to the substrate uptake kinetics from data. The posterior parameter distribution is estimated using sequential Monte Carlo with 1 × 10<sup>6</sup> samples, which would have required ∼17 days of CPU time to compute using the full DFBA model, but takes less than one hour when using the nsPCE surrogate models including the cost of training the models. The resulting posterior distribution yields significant physical insights including that the available data set is insufficient to reliably estimate all six parameters, with three of the parameters being non-identifiable under the current experimental conditions. We then demonstrate the scalability of the proposed nsPCE method on a synthetic metabolic network problem with twenty unknown parameters that are related to both intracellular and extracellular quantities. We estimate these parameters using maximum a posteriori (MAP) estimation, and observe that the cost of the optimization algorithm can be reduced by a factor of 60 when using the nsPCE surrogates in place of the full DFBA model. Note that the observed speedups are expected to be even greater for more complex DFBA models, such as those with nonlinear cellular objectives, multiple cultures, or even larger metabolic networks due to the increased cost of the simulations.</p>
<sec id="sec021">
<title>Scalability properties of nsPCE</title>
<p>The nsPCE method is specifically constructed to take advantage of the hybrid LAR method for sparse regression, which was originally developed in [<xref ref-type="bibr" rid="pcbi.1007308.ref019">19</xref>]. As such, nsPCE directly inherits the beneficial scalability properties of hybrid LAR that introduces two sources of sparsity into the expansions: (i) low-rank truncation that discards basis terms that lead to high-order interaction of the parameters that are irrelevant in most engineering problems and (ii) regularized least squares is used to systematically add basis terms that are strongly correlated to the model response. Additionally, the risk of over-fitting the surrogate model to the available data set can be reduced even further by making the approach basis-adaptive, i.e., separate PCE models are fit for varying maximum degrees and the one with the lowest error is selected.</p>
<p>The basis-adaptive hybrid LAR approach has been successfully applied to a wide-variety of problems and has consistently shown the ability to greatly mitigate the curse-of-dimensionality that is inherent in traditional PCE methods (see, for example, [<xref ref-type="bibr" rid="pcbi.1007308.ref019">19</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref059">59</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref060">60</xref>]). To the best of our knowledge, [<xref ref-type="bibr" rid="pcbi.1007308.ref060">60</xref>] tackled the largest problem to-date, which is a hydrogeological model with 78 parameters (68 identified to be sensitive) that can be accurately represented using a sparse PCE trained using only 2000 model evaluations. Although uncertainty in high-dimensional DFBA models has not been explored in the literature, these promising results and those shown in the synthetic case study give some confidence that nsPCE may be able to scale to the sizes needed to solve these challenging problems. Note that very recent work has shown that sparse PCEs can be applied to ultrahigh-dimensional problems (on the order of 10<sup>4</sup> parameters) by incorporating a dimensionality reduction step before training the surrogate model [<xref ref-type="bibr" rid="pcbi.1007308.ref061">61</xref>]. It may be possible to use similar approaches to incorporate uncertainty in the complete set of intracellular model parameters into the nsPCE surrogate models. These are interesting and important challenges that deserve further investigation.</p>
</sec>
<sec id="sec022">
<title>Further reducing the number of model evaluations</title>
<p>In this work, the surrogate models are trained using experimental designs (EDs) populated with random samples of the parameters. Recent work has demonstrated that the number of ED points needed to achieve a desired accuracy level can be further reduced by maximizing the information content of the sample locations. Multiple approaches have been developed to tackle this challenging problem, including coherence-optimal sampling [<xref ref-type="bibr" rid="pcbi.1007308.ref062">62</xref>] and numerical “moment-matching” optimization [<xref ref-type="bibr" rid="pcbi.1007308.ref034">34</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref037">37</xref>]. The optimal placement of samples in arbitrary domain shapes in a sequential fashion remains largely unexplored in the literature.</p>
<p>Additionally, the current implementation of nsPCE involves only two elements; however, it is unclear if the convergence rate can be improved even more by further decomposing these elements. An adaptive approach for decomposing the random parameter space that uses sensitivity information to decide which elements to split was proposed in [<xref ref-type="bibr" rid="pcbi.1007308.ref025">25</xref>]. A similar concept could be potentially utilized within nsPCE, though the method would likely benefit from the incorporation of more advanced geometries than simple boxes.</p>
</sec>
<sec id="sec023">
<title>Considerations and challenges in parameter estimation</title>
<p>Many of the difficulties encountered during parameter estimation are related to poor identifiability of model parameters. Performing parameter identifiability tests can help mitigate these difficulties by ensuring the parameter estimation problem is well-posed, which is especially important when dealing with limited experimental data and/or considering a large number of model parameters. It is common to distinguish between structural and practical identifiability. Structural identifiability is a theoretical property of the model structure that depends only on the observation function and the manipulated input function. Since a structurally non-identifiable parameter is independent of the accuracy of available experimental data, it cannot be resolved by a refinement of existing measurements. The only remedy is a qualitatively new measurement or experiment that alters the structure of the mapping between the parameters and the data. In contrast, practical identifiability also takes into account the amount and quality of the measured data, meaning that it can in principle be resolved by improving the quality of the measurements or increasing the number of measured time points. A thorough treatment of these issues in the context of biological models can be found in, e.g., [<xref ref-type="bibr" rid="pcbi.1007308.ref063">63</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref065">65</xref>]. To the best of our knowledge, structural and practical identifiability analysis has not been demonstrated on DFBA models, which is an interesting area for future work. It is important to note that, although many methods exist for detecting non-identifiable parameters, they often have restrictions on the class of functions so that they are not directly applicable to DFBA models.</p>
<p>Although not observed here, sequential Monte Carlo (SMC) can suffer from <italic>degeneracy</italic> wherein fewer and fewer particles retain significant weight. This is especially prevalent in high-dimensional problems including those with a large number of parameters or a large time horizon [<xref ref-type="bibr" rid="pcbi.1007308.ref066">66</xref>]. In [<xref ref-type="bibr" rid="pcbi.1007308.ref067">67</xref>], it is shown that the degeneracy phenomenon occurs unless the sample size is chosen to be exponential in the dimension, which indicates some type of curse-of-dimensionality. This sample degeneracy can be protected against by adding a <italic>rejuvenation</italic> step that “moves” the resampled particles according to a Markov chain Monte Carlo (MCMC) transition kernel [<xref ref-type="bibr" rid="pcbi.1007308.ref051">51</xref>]. This operation does not change the target distribution, but does reduce impoverishment since identical replicates of a single particle are replaced with new values. The most challenging part of the MCMC step is ensuring that the samples obtained realistically represent the desired distribution. It is known that convergence of the Markov chain fails for posteriors that are not proper, which can happen whenever the prior is improper (e.g., uniform density with infinite bounds) or non-identifiable parameters exist in the model [<xref ref-type="bibr" rid="pcbi.1007308.ref068">68</xref>]. In these situations, neither the prior assumptions nor the likelihood that represents the experimental data sufficiently constrain the posterior distribution. As such, the convergence properties of SMC and MCMC methods may improve considerably by resolving parameter identifiability issues before running the algorithm [<xref ref-type="bibr" rid="pcbi.1007308.ref069">69</xref>].</p>
</sec>
<sec id="sec024">
<title>Extensions to optimal experiment design</title>
<p>The selection of optimal conditions for conducting experiments (e.g., measurement times, initial conditions, and time-varying input profiles) is important for ensuring maximum information is extracted from the observations, especially when the experiments are expensive and time-consuming to perform. For example, it may be useful to change the feed rate or the measurement times in the considered case study so that the data ensures tight parameter estimates are obtained. Optimal experiment design (OED) has been extensively studied in the classical framework wherein the design criteria are defined as some scalar function of the Fisher information matrix (FIM) [<xref ref-type="bibr" rid="pcbi.1007308.ref070">70</xref>, <xref ref-type="bibr" rid="pcbi.1007308.ref071">71</xref>]. More recently, OED has been tackled from a fully Bayesian perspective that replaces the approximated classical design criteria with an <italic>expected utility</italic> function that is rigorously chosen from a decision-theoretic point of view [<xref ref-type="bibr" rid="pcbi.1007308.ref072">72</xref>–<xref ref-type="bibr" rid="pcbi.1007308.ref074">74</xref>].</p>
<p>The nsPCE surrogate models could be used to efficiently evaluate classical or Bayesian design criteria at any fixed experimental condition. However, the parameter space decomposition depends strongly on the experiment, such that separate surrogates need to be constructed for all experiments of interest. This is not a major challenge when only a small number of experiments are considered, but may become intractable for continuous design spaces. Developing efficient procedures for both classical and Bayesian OED in genome-scale DFBA models is an important area for future research. One possible direction is to treat the experiment design variables as parameters when constructing the surrogate model, as suggested in [<xref ref-type="bibr" rid="pcbi.1007308.ref075">75</xref>] for global PCE. It would be interesting to see how well nsPCE can handle these additional dimensions, since the model responses would likely be highly sensitive to the design variables.</p>
</sec>
</sec>
<sec id="sec025">
<title>Supporting information</title>
<supplementary-material id="pcbi.1007308.s001" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s001" xlink:type="simple">
<label>S1 Fig</label>
<caption>
<title>Comparison of model predictions and synthetic data for the <italic>E. coli</italic> case study.</title>
<p>The model predictions, shown with solid lines, were obtained by integrating the DFBA model with the maximum a posteriori (MAP) estimates of the parameters, which correspond to the mode of the posterior density. The ‘x’ marks represent synthetic data generated by corrupting model predictions for the true (unknown) parameters with randomly generated noise.</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1007308.s002" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s002" xlink:type="simple">
<label>S2 Fig</label>
<caption>
<title>Parity plots for nsPCE surrogate models for synthetic metabolic network.</title>
<p>The rows correspond to the extracellular substrate and product concentrations while the columns correspond to the various time points of interest. The <italic>x</italic>-axis represents the exact value of the model while the <italic>y</italic>-axis represents the surrogate model predictions. The blank plots represent quantities of interest with variance significantly lower than the tolerance.</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1007308.s003" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s003" xlink:type="simple">
<label>S1 Table</label>
<caption>
<title>Nominal substrate uptake parameters for <italic>E. coli</italic> DFBA model.</title>
<p>Parameter values taken from [<xref ref-type="bibr" rid="pcbi.1007308.ref008">8</xref>]. Uncertainty in the parameter estimates was not quantified. We assume the uncertainty in these estimates is uniformly distributed around ±10% of the nominal parameter values, which leads to fairly large variability in the predicted extracellular behavior.</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1007308.s004" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s004" xlink:type="simple">
<label>S2 Table</label>
<caption>
<title>Relative mean square error estimates for nsPCE surrogate models for <italic>E. coli</italic> case study.</title>
<p>A total of 1200 DFBA simulations were sequentially generated to train all nsPCE surrogate models to meet the specification <italic>ε</italic><sub><italic>target</italic></sub> = 10<sup>−3</sup>. The RMSE values were computed using a validation set of 10,000 DFBA simulations. An entry of 0.0 corresponds to quantities of interest with variance below <italic>ε</italic><sub><italic>target</italic></sub>.</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1007308.s005" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s005" xlink:type="simple">
<label>S3 Table</label>
<caption>
<title>Hierarchy of objectives for synthetic metabolic network.</title>
<p>The FBA problem was formulated as a linear program with multiple objectives that are optimized based on the priority list specified in this table. This approach is able to ensure that the FBA problem is feasible for all simulation times and that the exchange fluxes are unique. More information on this strategy can be found in [<xref ref-type="bibr" rid="pcbi.1007308.ref010">10</xref>].</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1007308.s006" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s006" xlink:type="simple">
<label>S4 Table</label>
<caption>
<title>Uncertain parameter bounds for synthetic metabolic network.</title>
<p>The uncertainty ranges are based on the nominal values presented in [<xref ref-type="bibr" rid="pcbi.1007308.ref031">31</xref>, Chapter 8]. The parameters are either related to the substrate uptake kinetics, the initial conditions, or the stoichiometric coefficients of the reactions. For the latter, we selected coefficients that are likely to be inferred from experimental data in real applications.</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1007308.s007" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s007" xlink:type="simple">
<label>S5 Table</label>
<caption>
<title>Simulated experimental data for synthetic metabolic network.</title>
<p>This data was used to estimate the parameters in the synthetic case study, which was obtained by simulating the DFBA model with true (unknown) parameters and then adding randomly generated noise. The noise was assumed to be Gaussian with standard deviation shown in row labeled ‘STDEV’.</p>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1007308.s008" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1007308.s008" xlink:type="simple">
<label>S1 Text</label>
<caption>
<title>Summary of methods for simulating DFBA models.</title>
<p>(PDF)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="pcbi.1007308.ref001">
<label>1</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Covert</surname> <given-names>MW</given-names></name>, <name name-style="western"><surname>Knight</surname> <given-names>EM</given-names></name>, <name name-style="western"><surname>Reed</surname> <given-names>JL</given-names></name>, <name name-style="western"><surname>Herrgard</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Palsson</surname> <given-names>BO</given-names></name>. <article-title>Integrating high-throughput and computational data elucidates bacterial networks</article-title>. <source>Nature</source>. <year>2004</year>;<volume>429</volume>(<issue>6987</issue>):<fpage>92</fpage>–<lpage>96</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nature02456" xlink:type="simple">10.1038/nature02456</ext-link></comment> <object-id pub-id-type="pmid">15129285</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref002">
<label>2</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Orth</surname> <given-names>JD</given-names></name>, <name name-style="western"><surname>Thiele</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Palsson</surname> <given-names>BØ</given-names></name>. <article-title>What is flux balance analysis?</article-title> <source>Nature Biotechnology</source>. <year>2010</year>;<volume>28</volume>:<fpage>245</fpage>–<lpage>248</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nbt.1614" xlink:type="simple">10.1038/nbt.1614</ext-link></comment> <object-id pub-id-type="pmid">20212490</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref003">
<label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>O’Brien</surname> <given-names>EJ</given-names></name>, <name name-style="western"><surname>Monk</surname> <given-names>JM</given-names></name>, <name name-style="western"><surname>Palsson</surname> <given-names>BO</given-names></name>. <article-title>Using genome-scale models to predict biological capabilities</article-title>. <source>Cell</source>. <year>2015</year>;<volume>161</volume>(<issue>5</issue>):<fpage>971</fpage>–<lpage>987</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.cell.2015.05.019" xlink:type="simple">10.1016/j.cell.2015.05.019</ext-link></comment> <object-id pub-id-type="pmid">26000478</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref004">
<label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Van Gulik</surname> <given-names>WM</given-names></name>, <name name-style="western"><surname>Heijnen</surname> <given-names>JJ</given-names></name>. <article-title>A metabolic network stoichiometry analysis of microbial growth and product formation</article-title>. <source>Biotechnology and Bioengineering</source>. <year>1995</year>;<volume>48</volume>:<fpage>681</fpage>–<lpage>698</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/bit.260480617" xlink:type="simple">10.1002/bit.260480617</ext-link></comment> <object-id pub-id-type="pmid">18623538</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref005">
<label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Mahadevan</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Edwards</surname> <given-names>JS</given-names></name>, <name name-style="western"><surname>Doyle</surname> <given-names>FJ</given-names> <suffix>III</suffix></name>. <article-title>Dynamic flux balance analysis of diauxic growth in Escherichia coli</article-title>. <source>Biophysical Journal</source>. <year>2002</year>;<volume>83</volume>:<fpage>1331</fpage>–<lpage>1340</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/S0006-3495(02)73903-9" xlink:type="simple">10.1016/S0006-3495(02)73903-9</ext-link></comment> <object-id pub-id-type="pmid">12202358</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref006">
<label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Hjersted</surname> <given-names>JL</given-names></name>, <name name-style="western"><surname>Henson</surname> <given-names>MA</given-names></name>. <article-title>Optimization of fed-batch Saccharomyces cerevisiae fermentation using dynamic flux balance models</article-title>. <source>Biotechnology Progress</source>. <year>2006</year>;<volume>22</volume>:<fpage>1239</fpage>–<lpage>1248</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1021/bp060059v" xlink:type="simple">10.1021/bp060059v</ext-link></comment> <object-id pub-id-type="pmid">17022660</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref007">
<label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Meadows</surname> <given-names>AL</given-names></name>, <name name-style="western"><surname>Karnik</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Lam</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Forestell</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Snedecor</surname> <given-names>B</given-names></name>. <article-title>Application of dynamic flux balance analysis to an industrial Escherichia coli fermentation</article-title>. <source>Metabolic engineering</source>. <year>2010</year>;<volume>12</volume>:<fpage>150</fpage>–<lpage>160</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.ymben.2009.07.006" xlink:type="simple">10.1016/j.ymben.2009.07.006</ext-link></comment> <object-id pub-id-type="pmid">19646545</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref008">
<label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Hanly</surname> <given-names>TJ</given-names></name>, <name name-style="western"><surname>Henson</surname> <given-names>MA</given-names></name>. <article-title>Dynamic flux balance modeling of microbial co-cultures for efficient batch fermentation of glucose and xylose mixtures</article-title>. <source>Biotechnology and Bioengineering</source>. <year>2011</year>;<volume>108</volume>:<fpage>376</fpage>–<lpage>385</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/bit.22954" xlink:type="simple">10.1002/bit.22954</ext-link></comment> <object-id pub-id-type="pmid">20882517</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref009">
<label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Lisha</surname> <given-names>KP</given-names></name>, <name name-style="western"><surname>Sarkar</surname> <given-names>D</given-names></name>. <article-title>Dynamic flux balance analysis of batch fermentation: Effect of genetic manipulations on ethanol production</article-title>. <source>Bioprocess and Biosystems Engineering</source>. <year>2014</year>;<volume>37</volume>:<fpage>617</fpage>–<lpage>627</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1007/s00449-013-1027-y" xlink:type="simple">10.1007/s00449-013-1027-y</ext-link></comment> <object-id pub-id-type="pmid">23921448</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref010">
<label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Gomez</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Höffner</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Barton</surname> <given-names>PI</given-names></name>. <article-title>DFBAlab: A fast and reliable MATLAB code for dynamic flux balance analysis</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year>;<volume>15</volume>:<fpage>409</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/s12859-014-0409-8" xlink:type="simple">10.1186/s12859-014-0409-8</ext-link></comment> <object-id pub-id-type="pmid">25519981</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref011">
<label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Kennedy</surname> <given-names>MC</given-names></name>, <name name-style="western"><surname>O’Hagan</surname> <given-names>A</given-names></name>. <article-title>Bayesian calibration of computer models</article-title>. <source>Journal of the Royal Statistical Society: Series B (Statistical Methodology)</source>. <year>2001</year>;<volume>63</volume>:<fpage>425</fpage>–<lpage>464</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1111/1467-9868.00294" xlink:type="simple">10.1111/1467-9868.00294</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref012">
<label>12</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Ghanem</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Spanos</surname> <given-names>P</given-names></name>. <source>Stochastic Finite Elements A Spectral Approach</source>. <publisher-name>SpringerVerlag</publisher-name>; <year>1991</year>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref013">
<label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Xiu</surname> <given-names>D</given-names></name>. <article-title>Fast numerical methods for stochastic computations: A review</article-title>. <source>Communications in Computational Physics</source>. <year>2009</year>;<volume>5</volume>:<fpage>242</fpage>–<lpage>272</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref014">
<label>14</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Smith</surname> <given-names>RC</given-names></name>. <source>Uncertainty quantification: Theory, implementation, and applications</source>. <volume>vol. 12</volume>. <publisher-name>SIAM</publisher-name>; <year>2013</year>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref015">
<label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Marzouk</surname> <given-names>YM</given-names></name>, <name name-style="western"><surname>Najm</surname> <given-names>HN</given-names></name>. <article-title>Dimensionality reduction and polynomial chaos acceleration of Bayesian inference in inverse problems</article-title>. <source>Journal of Computational Physics</source>. <year>2009</year>;<volume>228</volume>:<fpage>1862</fpage>–<lpage>1902</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jcp.2008.11.024" xlink:type="simple">10.1016/j.jcp.2008.11.024</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref016">
<label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Scott</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Wilson</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Conejeros</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Vassiliadis</surname> <given-names>VS</given-names></name>. <article-title>Simulation and optimization of dynamic flux balance analysis models using an interior point method reformulation</article-title>. <source>Computers &amp; Chemical Engineering</source>. <year>2018</year>;<volume>119</volume>:<fpage>152</fpage>–<lpage>170</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.compchemeng.2018.08.041" xlink:type="simple">10.1016/j.compchemeng.2018.08.041</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref017">
<label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Xiu</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Karniadakis</surname> <given-names>GE</given-names></name>. <article-title>The Wiener–Askey polynomial chaos for stochastic differential equations</article-title>. <source>SIAM Journal of Scientific Computing</source>. <year>2002</year>;<volume>24</volume>:<fpage>619</fpage>–<lpage>644</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1137/S1064827501387826" xlink:type="simple">10.1137/S1064827501387826</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref018">
<label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Xiu</surname> <given-names>D</given-names></name>. <article-title>Efficient collocational approach for parametric uncertainty analysis</article-title>. <source>Communications in Computational Physics</source>. <year>2007</year>;<volume>2</volume>:<fpage>293</fpage>–<lpage>309</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref019">
<label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Blatman</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Sudret</surname> <given-names>B</given-names></name>. <article-title>Adaptive sparse polynomial chaos expansion based on least angle regression</article-title>. <source>Journal of Computational Physics</source>. <year>2011</year>;<volume>230</volume>:<fpage>2345</fpage>–<lpage>2367</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jcp.2010.12.021" xlink:type="simple">10.1016/j.jcp.2010.12.021</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref020">
<label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Paulson</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Mesbah</surname> <given-names>A</given-names></name>. <article-title>An efficient method for stochastic optimal control with joint chance constraints for nonlinear systems</article-title>. <source>International Journal of Robust and Nonlinear Control</source>. <year>2017</year>; p. <fpage>1</fpage>–<lpage>21</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref021">
<label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Streif</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Petzke</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Mesbah</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Findeisen</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Braatz</surname> <given-names>RD</given-names></name>. <article-title>Optimal experimental design for probabilistic model discrimination using polynomial chaos</article-title>. <source>IFAC Proceedings Volumes</source>. <year>2014</year>;<volume>47</volume>(<issue>3</issue>):<fpage>4103</fpage>–<lpage>4109</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.3182/20140824-6-ZA-1003.01562" xlink:type="simple">10.3182/20140824-6-ZA-1003.01562</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref022">
<label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Martin-Casas</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Mesbah</surname> <given-names>A</given-names></name>. <article-title>Discrimination between competing model structures of biological systems in the presence of population heterogeneity</article-title>. <source>IEEE Life Science Letters</source>. <year>2016</year>;<volume>2</volume>:<fpage>23</fpage>–<lpage>26</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1109/LLS.2016.2644645" xlink:type="simple">10.1109/LLS.2016.2644645</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref023">
<label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Renardy</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Yi</surname> <given-names>TM</given-names></name>, <name name-style="western"><surname>Xiu</surname> <given-names>D</given-names></name>, <name name-style="western"><surname>Chou</surname> <given-names>CS</given-names></name>. <article-title>Parameter uncertainty quantification using surrogate models applied to a spatial model of yeast mating polarization</article-title>. <source>PLoS Computational Biology</source>. <year>2018</year>;<volume>14</volume>:<fpage>e1006181</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pcbi.1006181" xlink:type="simple">10.1371/journal.pcbi.1006181</ext-link></comment> <object-id pub-id-type="pmid">29813055</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref024">
<label>24</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Wan</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Karniadakis</surname> <given-names>GE</given-names></name>. <article-title>An adaptive multi-element generalized polynomial chaos method for stochastic differential equations</article-title>. <source>Journal of Computational Physics</source>. <year>2005</year>;<volume>209</volume>:<fpage>617</fpage>–<lpage>642</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jcp.2005.03.023" xlink:type="simple">10.1016/j.jcp.2005.03.023</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref025">
<label>25</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Wan</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Karniadakis</surname> <given-names>GE</given-names></name>. <article-title>Multi-element generalized polynomial chaos for arbitrary probability measures</article-title>. <source>SIAM Journal on Scientific Computing</source>. <year>2006</year>;<volume>28</volume>:<fpage>901</fpage>–<lpage>928</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1137/050627630" xlink:type="simple">10.1137/050627630</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref026">
<label>26</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Höffner</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Harwood</surname> <given-names>SM</given-names></name>, <name name-style="western"><surname>Barton</surname> <given-names>PI</given-names></name>. <article-title>A reliable simulator for dynamic flux balance analysis</article-title>. <source>Biotechnology and Bioengineering</source>. <year>2013</year>;<volume>110</volume>:<fpage>792</fpage>–<lpage>802</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/bit.24748" xlink:type="simple">10.1002/bit.24748</ext-link></comment> <object-id pub-id-type="pmid">23055276</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref027">
<label>27</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Harwood</surname> <given-names>SM</given-names></name>, <name name-style="western"><surname>Höffner</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Barton</surname> <given-names>PI</given-names></name>. <article-title>Efficient solution of ordinary differential equations with a parametric lexicographic linear program embedded</article-title>. <source>Numerische Mathematik</source>. <year>2016</year>;<volume>133</volume>:<fpage>623</fpage>–<lpage>653</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1007/s00211-015-0760-3" xlink:type="simple">10.1007/s00211-015-0760-3</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref028">
<label>28</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Reed</surname> <given-names>JL</given-names></name>, <name name-style="western"><surname>Vo</surname> <given-names>TD</given-names></name>, <name name-style="western"><surname>Schilling</surname> <given-names>CH</given-names></name>, <name name-style="western"><surname>Palsson</surname> <given-names>BO</given-names></name>. <article-title>An expanded genome-scale model of Escherichia coli K-12 (i JR904 GSM/GPR)</article-title>. <source>Genome Biology</source>. <year>2003</year>;<volume>4</volume>:<fpage>R54</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/gb-2003-4-9-r54" xlink:type="simple">10.1186/gb-2003-4-9-r54</ext-link></comment> <object-id pub-id-type="pmid">12952533</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref029">
<label>29</label>
<mixed-citation publication-type="other" xlink:type="simple">Paulson, JA. The nsPCE toolbox. <ext-link ext-link-type="uri" xlink:href="https://github.com/joelpaulson/nsPCE" xlink:type="simple">https://github.com/joelpaulson/nsPCE</ext-link>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref030">
<label>30</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Zhao</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Noack</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Wiechert</surname> <given-names>W</given-names></name>, <name name-style="western"><surname>von Lieres</surname> <given-names>E</given-names></name>. <article-title>Dynamic flux balance analysis with nonlinear objective function</article-title>. <source>Journal of Mathematical Biology</source>. <year>2017</year>;<volume>75</volume>:<fpage>1487</fpage>–<lpage>1515</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1007/s00285-017-1127-4" xlink:type="simple">10.1007/s00285-017-1127-4</ext-link></comment> <object-id pub-id-type="pmid">28401266</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref031">
<label>31</label>
<mixed-citation publication-type="other" xlink:type="simple">Gomez JA. Simulation, sensitivity analysis, and optimization of bioprocesses using dynamic flux balance analysis. Massachusetts Institute of Technology; 2018.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref032">
<label>32</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Soize</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Ghanem</surname> <given-names>R</given-names></name>. <article-title>Physical systems with random uncertainties: Chaos representations with arbitrary probability measure</article-title>. <source>SIAM Journal on Scientific Computing</source>. <year>2004</year>;<volume>26</volume>:<fpage>395</fpage>–<lpage>410</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1137/S1064827503424505" xlink:type="simple">10.1137/S1064827503424505</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref033">
<label>33</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Gautschi</surname> <given-names>W</given-names></name>. <article-title>On generating orthogonal polynomials</article-title>. <source>SIAM Journal on Scientific and Statistical Computing</source>. <year>1982</year>;<volume>3</volume>(<issue>3</issue>):<fpage>289</fpage>–<lpage>317</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1137/0903018" xlink:type="simple">10.1137/0903018</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref034">
<label>34</label>
<mixed-citation publication-type="other" xlink:type="simple">Paulson JA, Mesbah A. Arbitrary Polynomial Chaos for Quantification of General Probabilistic Uncertainties: Shaping Closed-loop Behavior of Nonlinear Systems. In: Proceedings of the 57<sup><italic>th</italic></sup> IEEE Conference on Decision and Control. Miami; 2018. p. Accepted.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref035">
<label>35</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Rosenblatt</surname> <given-names>M</given-names></name>. <article-title>Remarks on a multivariate transformation</article-title>. <source>The Annals of Mathematical Statistics</source>. <year>1952</year>;<volume>23</volume>:<fpage>470</fpage>–<lpage>472</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1214/aoms/1177729394" xlink:type="simple">10.1214/aoms/1177729394</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref036">
<label>36</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Paulson</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Buehler</surname> <given-names>EA</given-names></name>, <name name-style="western"><surname>Mesbah</surname> <given-names>A</given-names></name>. <article-title>Arbitrary Polynomial Chaos for Uncertainty Propagation of Correlated Random Variables in Dynamic Systems</article-title>. <source>IFAC-PapersOnLine</source>. <year>2017</year>;<volume>50</volume>:<fpage>3548</fpage>–<lpage>3553</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.ifacol.2017.08.954" xlink:type="simple">10.1016/j.ifacol.2017.08.954</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref037">
<label>37</label>
<mixed-citation publication-type="other" xlink:type="simple">Paulson JA, Mesbah A. Nonlinear Model Predictive Control with Explicit Backoffs for Stochastic Systems under Arbitrary Uncertainty. In: Proceedings of the 6th IFAC Conference on Nonlinear Model Predictive Control. Madison, WI; 2018. p. 622–633.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref038">
<label>38</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Feinberg</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Eck</surname> <given-names>VG</given-names></name>, <name name-style="western"><surname>Langtangen</surname> <given-names>HP</given-names></name>. <article-title>Multivariate polynomial chaos expansions with dependent variables</article-title>. <source>SIAM Journal on Scientific Computing</source>. <year>2018</year>;<volume>40</volume>(<issue>1</issue>):<fpage>A199</fpage>–<lpage>A223</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1137/15M1020447" xlink:type="simple">10.1137/15M1020447</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref039">
<label>39</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Constantine</surname> <given-names>PG</given-names></name>, <name name-style="western"><surname>Eldred</surname> <given-names>MS</given-names></name>, <name name-style="western"><surname>Phipps</surname> <given-names>ET</given-names></name>. <article-title>Sparse pseudospectral approximation method</article-title>. <source>Computer Methods in Applied Mechanics and Engineering</source>. <year>2012</year>;<volume>229</volume>:<fpage>1</fpage>–<lpage>12</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.cma.2012.03.019" xlink:type="simple">10.1016/j.cma.2012.03.019</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref040">
<label>40</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Sinsbeck</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Nowak</surname> <given-names>W</given-names></name>. <article-title>An optimal sampling rule for nonintrusive polynomial chaos expansions of expensive models</article-title>. <source>International Journal for Uncertainty Quantification</source>. <year>2015</year>;<volume>5</volume>:<fpage>275</fpage>–<lpage>295</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1615/Int.J.UncertaintyQuantification.2015008446" xlink:type="simple">10.1615/Int.J.UncertaintyQuantification.2015008446</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref041">
<label>41</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Efron</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Hastie</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Johnstone</surname> <given-names>I</given-names></name>, <name name-style="western"><surname>Tibshirani</surname> <given-names>R</given-names></name>. <article-title>Least angle regression</article-title>. <source>The Annals of Statistics</source>. <year>2004</year>;<volume>32</volume>:<fpage>407</fpage>–<lpage>499</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1214/009053604000000067" xlink:type="simple">10.1214/009053604000000067</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref042">
<label>42</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Molinaro</surname> <given-names>AM</given-names></name>, <name name-style="western"><surname>Simon</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Pfeiffer</surname> <given-names>RM</given-names></name>. <article-title>Prediction error estimation: a comparison of resampling methods</article-title>. <source>Bioinformatics</source>. <year>2005</year>;<volume>21</volume>:<fpage>3301</fpage>–<lpage>3307</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/bti499" xlink:type="simple">10.1093/bioinformatics/bti499</ext-link></comment> <object-id pub-id-type="pmid">15905277</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref043">
<label>43</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Marelli</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Sudret</surname> <given-names>B</given-names></name>. <chapter-title>UQLab: A framework for uncertainty quantification in Matlab</chapter-title>. In: <source>Vulnerability, Uncertainty, and Risk: Quantification, Mitigation, and Management</source>; <year>2014</year>. p. <fpage>2554</fpage>–<lpage>2563</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref044">
<label>44</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Becker</surname> <given-names>SA</given-names></name>, <name name-style="western"><surname>Feist</surname> <given-names>AM</given-names></name>, <name name-style="western"><surname>Mo</surname> <given-names>ML</given-names></name>, <name name-style="western"><surname>Hannum</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Palsson</surname> <given-names>BØ</given-names></name>, <name name-style="western"><surname>Herrgard</surname> <given-names>MJ</given-names></name>. <article-title>Quantitative prediction of cellular metabolism with constraint-based models: The COBRA toolbox</article-title>. <source>Nature Protocols</source>. <year>2007</year>;<volume>2</volume>:<fpage>727</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nprot.2007.99" xlink:type="simple">10.1038/nprot.2007.99</ext-link></comment> <object-id pub-id-type="pmid">17406635</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref045">
<label>45</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Mao</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Verwoerd</surname> <given-names>WS</given-names></name>. <article-title>ORCA: a COBRA toolbox extension for model-driven discovery and analysis</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>30</volume>:<fpage>584</fpage>–<lpage>585</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btt723" xlink:type="simple">10.1093/bioinformatics/btt723</ext-link></comment> <object-id pub-id-type="pmid">24336807</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref046">
<label>46</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Suykens</surname> <given-names>JAK</given-names></name>, <name name-style="western"><surname>Vandewalle</surname> <given-names>J</given-names></name>. <article-title>Least squares support vector machine classifiers</article-title>. <source>Neural Processing Letters</source>. <year>1999</year>;<volume>9</volume>:<fpage>293</fpage>–<lpage>300</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1023/A:1018628609742" xlink:type="simple">10.1023/A:1018628609742</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref047">
<label>47</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Brooks</surname> <given-names>S</given-names></name>. <article-title>Markov chain Monte Carlo method and its application</article-title>. <source>The Statistician</source>. <year>1998</year>;<volume>47</volume>:<fpage>69</fpage>–<lpage>100</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref048">
<label>48</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Beaumont</surname> <given-names>MA</given-names></name>, <name name-style="western"><surname>Rannala</surname> <given-names>B</given-names></name>. <article-title>The Bayesian revolution in genetics</article-title>. <source>Nature Reviews Genetics</source>. <year>2004</year>;<volume>5</volume>:<fpage>251</fpage>–<lpage>261</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nrg1318" xlink:type="simple">10.1038/nrg1318</ext-link></comment> <object-id pub-id-type="pmid">15131649</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref049">
<label>49</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Wilkinson</surname> <given-names>DJ</given-names></name>. <article-title>Bayesian methods in bioinformatics and computational systems biology</article-title>. <source>Briefings in Bioinformatics</source>. <year>2007</year>;<volume>8</volume>:<fpage>109</fpage>–<lpage>116</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bib/bbm007" xlink:type="simple">10.1093/bib/bbm007</ext-link></comment> <object-id pub-id-type="pmid">17430978</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref050">
<label>50</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Liu</surname> <given-names>JS</given-names></name>, <name name-style="western"><surname>Chen</surname> <given-names>R</given-names></name>. <article-title>Sequential Monte Carlo methods for dynamic systems</article-title>. <source>Journal of the American Statistical Association</source>. <year>1998</year>;<volume>93</volume>:<fpage>1032</fpage>–<lpage>1044</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1080/01621459.1998.10473765" xlink:type="simple">10.1080/01621459.1998.10473765</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref051">
<label>51</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Chopin</surname> <given-names>N</given-names></name>. <article-title>A sequential particle filter method for static models</article-title>. <source>Biometrika</source>. <year>2002</year>;<volume>89</volume>:<fpage>539</fpage>–<lpage>552</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/biomet/89.3.539" xlink:type="simple">10.1093/biomet/89.3.539</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref052">
<label>52</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Doucet</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>De Freitas</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Gordon</surname> <given-names>N</given-names></name>. <chapter-title>An introduction to sequential Monte Carlo methods</chapter-title>. In: <source>Sequential Monte Carlo methods in practice</source>. <publisher-name>Springer</publisher-name>; <year>2001</year>. p. <fpage>3</fpage>–<lpage>14</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref053">
<label>53</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Murphy</surname> <given-names>KP</given-names></name>. <source>Machine learning: A probabilistic perspective</source>. <publisher-name>MIT Press</publisher-name>; <year>2012</year>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref054">
<label>54</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Tikhonov</surname> <given-names>AN</given-names></name>, <name name-style="western"><surname>Goncharsky</surname> <given-names>AV</given-names></name>, <name name-style="western"><surname>Stepanov</surname> <given-names>VV</given-names></name>, <name name-style="western"><surname>Yagola</surname> <given-names>AG</given-names></name>. <source>Numerical methods for the solution of ill-posed problems</source>. <volume>vol. 328</volume>. <publisher-name>Springer Science &amp; Business Media</publisher-name>; <year>2013</year>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref055">
<label>55</label>
<mixed-citation publication-type="other" xlink:type="simple">Kuntsevich A, Kappel F. SolvOpt: The solver for local nonlinear optimization problems. Institute for Mathematics, Karl-Franzens University of Graz. 1997.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref056">
<label>56</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Tierney</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Kadane</surname> <given-names>JB</given-names></name>. <article-title>Accurate approximations for posterior moments and marginal densities</article-title>. <source>Journal of the American Statistical Association</source>. <year>1986</year>;<volume>81</volume>:<fpage>82</fpage>–<lpage>86</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1080/01621459.1986.10478240" xlink:type="simple">10.1080/01621459.1986.10478240</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref057">
<label>57</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Long</surname> <given-names>Q</given-names></name>, <name name-style="western"><surname>Scavino</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Tempone</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Wang</surname> <given-names>S</given-names></name>. <article-title>Fast estimation of expected information gains for Bayesian experimental designs based on Laplace approximations</article-title>. <source>Computer Methods in Applied Mechanics and Engineering</source>. <year>2013</year>;<volume>259</volume>:<fpage>24</fpage>–<lpage>39</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.cma.2013.02.017" xlink:type="simple">10.1016/j.cma.2013.02.017</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref058">
<label>58</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Wang</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Bui-Thanh</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Ghattas</surname> <given-names>O</given-names></name>. <article-title>A randomized maximum a posteriori method for posterior sampling of high dimensional nonlinear Bayesian inverse problems</article-title>. <source>SIAM Journal on Scientific Computing</source>. <year>2018</year>;<volume>40</volume>:<fpage>A142</fpage>–<lpage>A171</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1137/16M1060625" xlink:type="simple">10.1137/16M1060625</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref059">
<label>59</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Konakli</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Sudret</surname> <given-names>B</given-names></name>. <article-title>Reliability analysis of high-dimensional models using low-rank tensor approximations</article-title>. <source>Probabilistic Engineering Mechanics</source>. <year>2016</year>;<volume>46</volume>:<fpage>18</fpage>–<lpage>36</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.probengmech.2016.08.002" xlink:type="simple">10.1016/j.probengmech.2016.08.002</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref060">
<label>60</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Deman</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Konakli</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Sudret</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Kerrou</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Perrochet</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Benabderrahmane</surname> <given-names>H</given-names></name>. <article-title>Using sparse polynomial chaos expansions for the global sensitivity analysis of groundwater lifetime expectancy in a multi-layered hydrogeological model</article-title>. <source>Reliability Engineering &amp; System Safety</source>. <year>2016</year>;<volume>147</volume>:<fpage>156</fpage>–<lpage>169</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.ress.2015.11.005" xlink:type="simple">10.1016/j.ress.2015.11.005</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref061">
<label>61</label>
<mixed-citation publication-type="other" xlink:type="simple">Lataniotis C, Marelli S, Sudret B. Extending classical surrogate modelling to ultrahigh dimensional problems through supervised dimensionality reduction: A data-driven approach. arXiv preprint arXiv:181206309. 2018.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref062">
<label>62</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Hampton</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Doostan</surname> <given-names>A</given-names></name>. <article-title>Coherence motivated sampling and convergence analysis of least squares polynomial chaos regression</article-title>. <source>Computer Methods in Applied Mechanics and Engineering</source>. <year>2015</year>;<volume>290</volume>:<fpage>73</fpage>–<lpage>97</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.cma.2015.02.006" xlink:type="simple">10.1016/j.cma.2015.02.006</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref063">
<label>63</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Rodriguez-Fernandez</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Egea</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Banga</surname> <given-names>JR</given-names></name>. <article-title>Novel metaheuristic for parameter estimation in nonlinear dynamic biological systems</article-title>. <source>BMC Bioinformatics</source>. <year>2006</year>;<volume>7</volume>(<issue>1</issue>):<fpage>483</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1186/1471-2105-7-483" xlink:type="simple">10.1186/1471-2105-7-483</ext-link></comment> <object-id pub-id-type="pmid">17081289</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref064">
<label>64</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Raue</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Kreutz</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Maiwald</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Bachmann</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Schilling</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Klingmüller</surname> <given-names>U</given-names></name>, <etal>et al</etal>. <article-title>Structural and practical identifiability analysis of partially observed dynamical models by exploiting the profile likelihood</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>:<fpage>1923</fpage>–<lpage>1929</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btp358" xlink:type="simple">10.1093/bioinformatics/btp358</ext-link></comment> <object-id pub-id-type="pmid">19505944</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref065">
<label>65</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Chis</surname> <given-names>O</given-names></name>, <name name-style="western"><surname>Banga</surname> <given-names>JR</given-names></name>, <name name-style="western"><surname>Balsa-Canto</surname> <given-names>E</given-names></name>. <article-title>Structural identifiability of systems biology models: A critical comparison of methods</article-title>. <source>PloS One</source>. <year>2011</year>;<volume>6</volume>:<fpage>e27755</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pone.0027755" xlink:type="simple">10.1371/journal.pone.0027755</ext-link></comment> <object-id pub-id-type="pmid">22132135</object-id></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref066">
<label>66</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Septier</surname> <given-names>F</given-names></name>, <name name-style="western"><surname>Peters</surname> <given-names>GW</given-names></name>. <chapter-title>An overview of recent advances in Monte Carlo methods for Bayesian filtering in high-dimensional spaces</chapter-title>. In: <source>Theoretical Aspects of Spatial-Temporal Modeling</source>. <publisher-name>Springer</publisher-name>; <year>2015</year>. p. <fpage>31</fpage>–<lpage>61</lpage>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref067">
<label>67</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Snyder</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Bengtsson</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Bickel</surname> <given-names>P</given-names></name>, <name name-style="western"><surname>Anderson</surname> <given-names>J</given-names></name>. <article-title>Obstacles to high-dimensional particle filtering</article-title>. <source>Monthly Weather Review</source>. <year>2008</year>;<volume>136</volume>:<fpage>4629</fpage>–<lpage>4640</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1175/2008MWR2529.1" xlink:type="simple">10.1175/2008MWR2529.1</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref068">
<label>68</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Gelfand</surname> <given-names>AE</given-names></name>, <name name-style="western"><surname>Sahu</surname> <given-names>SK</given-names></name>. <article-title>Identifiability, improper priors, and Gibbs sampling for generalized linear models</article-title>. <source>Journal of the American Statistical Association</source>. <year>1999</year>;<volume>94</volume>:<fpage>247</fpage>–<lpage>253</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1080/01621459.1999.10473840" xlink:type="simple">10.1080/01621459.1999.10473840</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref069">
<label>69</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Raue</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Kreutz</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Theis</surname> <given-names>FJ</given-names></name>, <name name-style="western"><surname>Timmer</surname> <given-names>J</given-names></name>. <article-title>Joining forces of Bayesian and frequentist methodology: A study for inference in the presence of non-identifiability</article-title>. <source>Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences</source>. <year>2013</year>;<volume>371</volume>:<fpage>20110544</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1098/rsta.2011.0544" xlink:type="simple">10.1098/rsta.2011.0544</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref070">
<label>70</label>
<mixed-citation publication-type="book" xlink:type="simple">
<name name-style="western"><surname>Atkinson</surname> <given-names>AC</given-names></name>, <name name-style="western"><surname>Donev</surname> <given-names>AN</given-names></name>. <source>Optimum experimental designs</source>. <publisher-loc>New York</publisher-loc>: <publisher-name>Oxford University Press</publisher-name>; <year>2007</year>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref071">
<label>71</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Mesbah</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Streif</surname> <given-names>S</given-names></name>. <article-title>A probabilistic approach to robust optimal experiment design with chance constraints</article-title>. <source>IFAC-PapersOnLine</source>. <year>2015</year>;<volume>48</volume>(<issue>8</issue>):<fpage>100</fpage>–<lpage>105</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.ifacol.2015.08.164" xlink:type="simple">10.1016/j.ifacol.2015.08.164</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref072">
<label>72</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Chaloner</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Verdinelli</surname> <given-names>I</given-names></name>. <article-title>Bayesian experimental design: A review</article-title>. <source>Statistical Science</source>. <year>1995</year>; p. <fpage>273</fpage>–<lpage>304</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1214/ss/1177009939" xlink:type="simple">10.1214/ss/1177009939</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref073">
<label>73</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Ryan</surname> <given-names>EG</given-names></name>, <name name-style="western"><surname>Drovandi</surname> <given-names>CC</given-names></name>, <name name-style="western"><surname>McGree</surname> <given-names>JM</given-names></name>, <name name-style="western"><surname>Pettitt</surname> <given-names>AN</given-names></name>. <article-title>A review of modern computational algorithms for Bayesian optimal design</article-title>. <source>International Statistical Review</source>. <year>2016</year>;<volume>84</volume>:<fpage>128</fpage>–<lpage>154</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1111/insr.12107" xlink:type="simple">10.1111/insr.12107</ext-link></comment></mixed-citation>
</ref>
<ref id="pcbi.1007308.ref074">
<label>74</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Paulson</surname> <given-names>JA</given-names></name>, <name name-style="western"><surname>Martin-Casas</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Mesbah</surname> <given-names>A</given-names></name>. <article-title>Optimal Bayesian experiment design for nonlinear dynamic systems with chance constraints</article-title>. <source>Journal of Process Control</source>. <year>2019</year>; <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jprocont.2019.01.010" xlink:type="simple">https://doi.org/10.1016/j.jprocont.2019.01.010</ext-link>.</mixed-citation>
</ref>
<ref id="pcbi.1007308.ref075">
<label>75</label>
<mixed-citation publication-type="journal" xlink:type="simple">
<name name-style="western"><surname>Huan</surname> <given-names>X</given-names></name>, <name name-style="western"><surname>Marzouk</surname> <given-names>Y</given-names></name>. <article-title>Simulation-based optimal Bayesian experimental design for nonlinear systems</article-title>. <source>Journal of Computational Physics</source>. <year>2013</year>;<volume>232</volume>:<fpage>288</fpage>–<lpage>317</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jcp.2012.08.013" xlink:type="simple">10.1016/j.jcp.2012.08.013</ext-link></comment></mixed-citation>
</ref>
</ref-list>
</back>
</article>