<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN" "http://jats.nlm.nih.gov/publishing/1.1d3/JATS-journalpublishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.1d3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">ploscomp</journal-id>
<journal-title-group>
<journal-title>PLOS Computational Biology</journal-title>
</journal-title-group>
<issn pub-type="ppub">1553-734X</issn>
<issn pub-type="epub">1553-7358</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, CA USA</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1371/journal.pcbi.1006086</article-id>
<article-id pub-id-type="publisher-id">PCOMPBIOL-D-17-00743</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Research Article</subject>
</subj-group>
<subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied mathematics</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Medicine and health sciences</subject><subj-group><subject>Epidemiology</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Medicine and health sciences</subject><subj-group><subject>Parasitic diseases</subject><subj-group><subject>Helminth infections</subject><subj-group><subject>Echinococcosis</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Medicine and health sciences</subject><subj-group><subject>Tropical diseases</subject><subj-group><subject>Neglected tropical diseases</subject><subj-group><subject>Echinococcosis</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied mathematics</subject><subj-group><subject>Algorithms</subject><subj-group><subject>Kernel methods</subject></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Research and analysis methods</subject><subj-group><subject>Simulation and modeling</subject><subj-group><subject>Algorithms</subject><subj-group><subject>Kernel methods</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Agriculture</subject><subj-group><subject>Farms</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Physical sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Operator theory</subject><subj-group><subject>Kernel functions</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Organisms</subject><subj-group><subject>Eukaryota</subject><subj-group><subject>Animals</subject><subj-group><subject>Vertebrates</subject><subj-group><subject>Amniotes</subject><subj-group><subject>Mammals</subject><subj-group><subject>Bovines</subject><subj-group><subject>Cattle</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v3"><subject>Biology and life sciences</subject><subj-group><subject>Organisms</subject><subj-group><subject>Eukaryota</subject><subj-group><subject>Animals</subject><subj-group><subject>Vertebrates</subject><subj-group><subject>Amniotes</subject><subj-group><subject>Mammals</subject><subj-group><subject>Ruminants</subject><subj-group><subject>Cattle</subject></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></subj-group></article-categories>
<title-group>
<article-title>Need for speed: An optimized gridding approach for spatially explicit disease simulations</article-title>
<alt-title alt-title-type="running-head">Accelerated computation of spatial disease simulations</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes" equal-contrib="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-5595-8780</contrib-id>
<name name-style="western">
<surname>Sellman</surname>
<given-names>Stefan</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Data curation</role>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Investigation</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Software</role>
<role content-type="http://credit.casrai.org/">Validation</role>
<role content-type="http://credit.casrai.org/">Visualization</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
<xref ref-type="corresp" rid="cor001">*</xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-5616-1888</contrib-id>
<name name-style="western">
<surname>Tsao</surname>
<given-names>Kimberly</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Investigation</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Tildesley</surname>
<given-names>Michael J.</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Funding acquisition</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff003"><sup>3</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Brommesson</surname>
<given-names>Peter</given-names>
</name>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Investigation</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Webb</surname>
<given-names>Colleen T.</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Funding acquisition</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Project administration</role>
<role content-type="http://credit.casrai.org/">Supervision</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff002"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Wennergren</surname>
<given-names>Uno</given-names>
</name>
<role content-type="http://credit.casrai.org/">Funding acquisition</role>
<role content-type="http://credit.casrai.org/">Project administration</role>
<role content-type="http://credit.casrai.org/">Supervision</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0003-4639-4765</contrib-id>
<name name-style="western">
<surname>Keeling</surname>
<given-names>Matt J.</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<xref ref-type="aff" rid="aff003"><sup>3</sup></xref>
</contrib>
<contrib contrib-type="author" xlink:type="simple">
<name name-style="western">
<surname>Lindström</surname>
<given-names>Tom</given-names>
</name>
<role content-type="http://credit.casrai.org/">Conceptualization</role>
<role content-type="http://credit.casrai.org/">Formal analysis</role>
<role content-type="http://credit.casrai.org/">Investigation</role>
<role content-type="http://credit.casrai.org/">Methodology</role>
<role content-type="http://credit.casrai.org/">Supervision</role>
<role content-type="http://credit.casrai.org/">Writing – original draft</role>
<role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
<xref ref-type="aff" rid="aff001"><sup>1</sup></xref>
</contrib>
</contrib-group>
<aff id="aff001"><label>1</label> <addr-line>Department of Physics, Chemistry and Biology, Division of Theoretical Biology, Linköping University, Linköping, Sweden</addr-line></aff>
<aff id="aff002"><label>2</label> <addr-line>Department of Biology, Colorado State University, Fort Collins, CO, United States of America</addr-line></aff>
<aff id="aff003"><label>3</label> <addr-line>Zeeman Institute (SBIDER), School of Life Sciences and Mathematics Institute, University of Warwick, Gibbet Hill Road, Coventry, CV4 7AL, UK</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple">
<name name-style="western">
<surname>Tanaka</surname>
<given-names>Mark M.</given-names>
</name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/>
</contrib>
</contrib-group>
<aff id="edit1"><addr-line>University of New South Wales, AUSTRALIA</addr-line></aff>
<author-notes>
<fn fn-type="conflict" id="coi001">
<p>The authors have declared that no competing interests exist.</p>
</fn>
<corresp id="cor001">* E-mail: <email xlink:type="simple">stefan.sellman@liu.se</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<day>6</day>
<month>4</month>
<year>2018</year>
</pub-date>
<pub-date pub-type="collection">
<month>4</month>
<year>2018</year>
</pub-date>
<volume>14</volume>
<issue>4</issue>
<elocation-id>e1006086</elocation-id>
<history>
<date date-type="received">
<day>10</day>
<month>5</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>12</day>
<month>3</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-year>2018</copyright-year>
<copyright-holder>Sellman et al</copyright-holder>
<license xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="info:doi/10.1371/journal.pcbi.1006086"/>
<abstract>
<p>Numerical models for simulating outbreaks of infectious diseases are powerful tools for informing surveillance and control strategy decisions. However, large-scale spatially explicit models can be limited by the amount of computational resources they require, which poses a problem when multiple scenarios need to be explored to provide policy recommendations. We introduce an easily implemented method that can reduce computation time in a standard Susceptible-Exposed-Infectious-Removed (SEIR) model without introducing any further approximations or truncations. It is based on a hierarchical infection process that operates on entire groups of spatially related nodes (cells in a grid) in order to efficiently filter out large volumes of susceptible nodes that would otherwise have required expensive calculations. After the filtering of the cells, only a subset of the nodes that were originally at risk are then evaluated for actual infection. The increase in efficiency is sensitive to the exact configuration of the grid, and we describe a simple method to find an estimate of the optimal configuration of a given landscape as well as a method to partition the landscape into a grid configuration. To investigate its efficiency, we compare the introduced methods to other algorithms and evaluate computation time, focusing on simulated outbreaks of foot-and-mouth disease (FMD) on the farm population of the USA, the UK and Sweden, as well as on three randomly generated populations with varying degree of clustering. The introduced method provided up to 500 times faster calculations than pairwise computation, and consistently performed as well or better than other available methods. This enables large scale, spatially explicit simulations such as for the entire continental USA without sacrificing realism or predictive power.</p>
</abstract>
<abstract abstract-type="summary">
<title>Author summary</title>
<p>Numerical models for simulating the outbreak of infectious disease are powerful tools that can be used to inform policy decisions by simulating outbreaks and control actions. However, they rely on considerable computational power to explore all outcomes and scenarios of interest. Focusing on model types commonly used for livestock diseases, we here introduce novel algorithms for efficient computation, alongside techniques to optimize them based on simplifying assumptions. Through simulations of FMD outbreak in the US, the UK and Sweden, as well as in computer generated landscapes, we test how these methods perform under realistic conditions. We find that our optimization techniques works well, and when the introduced algorithms are implemented with these optimizations, computation time can be reduced by more than two orders of magnitude compared to pairwise calculations. We propose that the considered algorithms—which are straight forward to implement—will be useful for simulation of a wide range of diseases, and will promote the use of simulation models for policy recommendation.</p>
</abstract>
<funding-group>
<award-group id="award001">
<funding-source>
<institution>Svenska Forskningsrådet Formas (SE)</institution>
</funding-source>
<award-id>ANR-13-ANWA-0007-03</award-id>
<principal-award-recipient>
<name name-style="western">
<surname>Wennergren</surname>
<given-names>Uno</given-names>
</name>
</principal-award-recipient>
</award-group>
<award-group id="award002">
<funding-source>
<institution-wrap>
<institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100008287</institution-id>
<institution>Science and Technology Directorate</institution>
</institution-wrap>
</funding-source>
<award-id>HSHQDC-13-C-B0028</award-id>
<principal-award-recipient>
<name name-style="western">
<surname>Webb</surname>
<given-names>Colleen T.</given-names>
</name>
</principal-award-recipient>
</award-group>
<funding-statement>Funding was provided by Foreign Animal Disease Modeling Program, Science and Technology Directorate, U.S. Department of Homeland Security (<ext-link ext-link-type="uri" xlink:href="https://www.dhs.gov/" xlink:type="simple">https://www.dhs.gov/</ext-link>), contract HSHQDC-13-C-B0028 (SS, KT, MT, PB, CW, UW, TL) and European research area: animal health and welfare (ANIHWA; <ext-link ext-link-type="uri" xlink:href="https://www.anihwa.eu" xlink:type="simple">https://www.anihwa.eu</ext-link>) contract No. ANR-13-ANWA-0007-03 (LIVEepi) (SS, UW). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
</funding-group>
<counts>
<fig-count count="6"/>
<table-count count="4"/>
<page-count count="27"/>
</counts>
<custom-meta-group>
<custom-meta>
<meta-name>PLOS Publication Stage</meta-name>
<meta-value>vor-update-to-uncorrected-proof</meta-value>
</custom-meta>
<custom-meta>
<meta-name>Publication Update</meta-name>
<meta-value>2018-04-18</meta-value>
</custom-meta>
<custom-meta id="data-availability">
<meta-name>Data Availability</meta-name>
<meta-value>The Swedish farm data is not publicly available and have been used under confidentially agreements with the Swedish Board of Agriculture. For access, contact <email xlink:type="simple">jordbruksverket@jordbruksverket.se</email>. The United Kingdom farm data available, subject to suitable confidentiality agreements, from Animal and Plant Health Agency (APHA),<email xlink:type="simple">RADAR@apha.gsi.gov.uk</email>. All other relevant data are within the paper and its Supporting Information files.</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<sec id="sec001" sec-type="intro">
<title>Introduction</title>
<p>Models of infectious diseases are powerful tools for studying outbreak dynamics. Mass action mixing models assume equal probability of infection among all individuals in a population and have provided important theoretical insights for epidemiology. However, the importance of deviations from this assumption is now largely recognized [<xref ref-type="bibr" rid="pcbi.1006086.ref001">1</xref>], and researchers are increasingly implementing stochastic simulation models that incorporate various levels of realism [<xref ref-type="bibr" rid="pcbi.1006086.ref002">2</xref>].</p>
<p>The effect of spatial heterogeneity can have a pronounced effect on outbreak dynamics [<xref ref-type="bibr" rid="pcbi.1006086.ref003">3</xref>] and is of particular concern when models are used to inform policy. Spatially explicit models can be used to identify geographical hotspots targeted for surveillance [<xref ref-type="bibr" rid="pcbi.1006086.ref004">4</xref>] or to compare control scenarios that are themselves spatially explicit (e.g. ring vaccination strategies or regional movement restrictions). Here we focus on livestock disease models, but emphasize that the proposed methods are very broadly applicable. Livestock models typically consider infections at the farm level [<xref ref-type="bibr" rid="pcbi.1006086.ref005">5</xref>], and since the farms have fixed spatial locations, spatially explicit models are appropriate. Distance dependent transmission is commonly modeled with a spatial kernel that describes how transmission risk varies with distance [<xref ref-type="bibr" rid="pcbi.1006086.ref005">5</xref>–<xref ref-type="bibr" rid="pcbi.1006086.ref007">7</xref>].</p>
<p>Large livestock disease outbreaks can have severe societal and economic implications, necessitating models that can simulate outbreaks at the national or even the continental scale [<xref ref-type="bibr" rid="pcbi.1006086.ref007">7</xref>–<xref ref-type="bibr" rid="pcbi.1006086.ref009">9</xref>]. With a large number of farms, computation time may be a limiting factor, particularly when stochastic simulation models are used to quantify uncertainty when comparing across multiple scenarios. In the absence of efficient algorithms to improve computational time, pairwise calculations must be implemented, whereby the distances between every pair of infectious and susceptible farms need to be calculated and the spatial, transmission kernel must be evaluated for those distances. When the spatial kernel is narrow compared to the spatial distribution of farms, there will be many farms that lie within the tail of the kernel where the risk of infection is low. Given this relatively low risk, it may be tempting to truncate the kernel at such large distances in order to dramatically reduce the computation time of the simulation. However, it is difficult to identify a spatial scale where such truncation does not influence the results and finding such a scale by trial and error may become a time consuming process. Rare long distance transmission, described by a fat tail of the spatial kernel, can have a pronounced effect on outbreak dynamics, sparking new infections in virgin areas of susceptible farms [<xref ref-type="bibr" rid="pcbi.1006086.ref005">5</xref>]. In addition, with two-dimensional space (and assuming homogeneous farm locations), the number of potential transmission events also grows linearly with distance. Thus, even if the likelihood of infection of individual farms is low at large distances, there are many farms that can be infected and the probability of a transmission event occurring is not necessarily small. We therefore argue that truncation should be avoided due to its inaccuracy and that effort should be made to create algorithms to model transmission that circumvent the excessive number of kernel evaluations required for pairwise evaluation while maintaining accuracy. Brand et al. [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>] introduced one such method, denoted the fast spectral rate recalculation (FSR). This approach utilizes fast Fourier transformation (FFT) of the spatial kernel, and with only slight approximation of the transmission rates, it can speed up simulations by two order of magnitudes.</p>
<p>Keeling and Rohani [<xref ref-type="bibr" rid="pcbi.1006086.ref011">11</xref>] introduced another technique, hereafter denoted the conditional entry algorithm, where the point pattern landscape of farm locations is overlaid with a grid, and the simulation of infections is split up into two steps:</p>
<list list-type="order">
<list-item><p>Does the infection possibly enter the grid cell?</p></list-item>
<list-item><p>If yes, which farms (if any) within the grid cell are actually infected?</p></list-item>
</list>
<p>Our study introduces a novel method, which we will refer to as the conditional subsample algorithm. It builds on the approach of Keeling and Rohani [<xref ref-type="bibr" rid="pcbi.1006086.ref011">11</xref>], and utilizes a similar gridding approach but with a different algorithm. Importantly, the conditional entry and conditional subsample methods do not approximate the epidemiological process (beyond the temporal discretization, which are typically implemented also in pairwise simulation) that is simulated; they merely speed up the computation by reducing the number of calculations, and hence preserve the accuracy of the simulation.</p>
<p>Implementing the conditional entry or conditional subsample method requires the specification and construction of a grid structure (<xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1</xref>), which raises a central question: how many farms should each grid cell contain in order to facilitate fast computation? At both very large and very small cell sizes, both the conditional entry and conditional subsample algorithms require (at least) as many kernel evaluations as the pairwise algorithm. Thus, some intermediate grid size should optimize the speed of both algorithms.</p>
<fig id="pcbi.1006086.g001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.g001</object-id>
<label>Fig 1</label>
<caption>
<title/>
<p><bold>Example of the regular (A) and the adaptive (B) grid construction methods applied to the UK farm population.</bold> Panel (C) shows a schematic representation of the grid-based infection transmission process. From the infectious farm <italic>i</italic> (red star) in infectious cell <italic>a</italic>, spread of infection is initially evaluated at the level of entire susceptible grid cells (<italic>b</italic><sub><italic>1</italic></sub>, <italic>b</italic><sub><italic>2</italic></sub>, <italic>b</italic><sub><italic>3</italic></sub>) and only occasionally evaluated for the individual susceptible nodes (green).</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.g001" xlink:type="simple"/>
</fig>
<p>This study has three aims. Firstly, we introduce a novel transmission algorithm for grid-based calculations: the conditional subsample algorithm. Secondly, we propose an optimal grid size estimation method for determining a grid size configuration for the conditional subsample and conditional entry algorithms that ensures fast computation, and evaluate its performance. Thirdly, we investigate how this algorithm compares to simulations based on both the pairwise algorithm, the conditional entry algorithm presented by Keeling and Rohani [<xref ref-type="bibr" rid="pcbi.1006086.ref011">11</xref>], and the FSR algorithm introduced by Brand et al. [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>]. To address these aims, we simulate outbreaks on computer-generated farm locations with different levels of spatial clustering, as well as empirical farm populations from the USA, the UK and Sweden. These spatially heterogeneous farm distributions offers more realistic challenges to the proposed methods than would homogeneous distributions.</p>
</sec>
<sec id="sec002" sec-type="materials|methods">
<title>Method</title>
<p>The methods of this study has several steps. We start by outlining the epidemic model, and present three primary transmission algorithms used for simulations: pairwise, conditional entry, and the novel conditional subsample algorithm. The two latter rely on similar gridding approaches, and we propose a straightforward optimal grid size estimation method that can be used for two of these algorithms. This estimation process formulates an equation that approximates the expected number of kernel evaluations for a particular average grid cell size, <italic>θ</italic> (expressed as farms per cell), and subsequently find the value of <italic>θ</italic> for which the fewest number of kernel calls are predicted. We denote the true unknown optimum <italic>θ</italic>* and the estimated equivalent <inline-formula id="pcbi.1006086.e001"><alternatives><graphic id="pcbi.1006086.e001g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e001" xlink:type="simple"/><mml:math display="inline" id="M1"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>. The estimation of <inline-formula id="pcbi.1006086.e002"><alternatives><graphic id="pcbi.1006086.e002g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e002" xlink:type="simple"/><mml:math display="inline" id="M2"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> was based on the simplified assumptions of homogenous spatial distribution of farms and animals. We therefore simulated outbreaks of FMD with a set of <italic>θ</italic>, including <inline-formula id="pcbi.1006086.e003"><alternatives><graphic id="pcbi.1006086.e003g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e003" xlink:type="simple"/><mml:math display="inline" id="M3"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, to explore how well the prediction holds when these assumptions are relaxed. The value of <italic>θ</italic> that performs best in the simulations is denoted by <inline-formula id="pcbi.1006086.e004"><alternatives><graphic id="pcbi.1006086.e004g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e004" xlink:type="simple"/><mml:math display="inline" id="M4"><mml:mrow><mml:msubsup><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">sim</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> and will be equal to <inline-formula id="pcbi.1006086.e005"><alternatives><graphic id="pcbi.1006086.e005g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e005" xlink:type="simple"/><mml:math display="inline" id="M5"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> if the proposed method performs well. The grids were constructed with two different methods that either retains equal cell sizes, or equal number of farms in each cell (<xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1</xref>). <xref ref-type="table" rid="pcbi.1006086.t001">Table 1</xref> provides an overview of the different methods and how they fit together.</p>
<table-wrap id="pcbi.1006086.t001" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.t001</object-id>
<label>Table 1</label> <caption><title>Methods and epidemic model considered in the study and how they relate to each other.</title></caption>
<alternatives>
<graphic id="pcbi.1006086.t001g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.t001" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left" style="background-color:#E7E6E6">Method/model</th>
<th align="left" style="background-color:#E7E6E6">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Epidemic model</td>
<td align="left">The epidemic process that is simulated.</td>
</tr>
<tr>
<td align="left">Transmission algorithms</td>
<td align="left">Algorithms used to simulate disease transmission of the epidemic model. Three algorithms are considered: pairwise, conditional entry (CE), and conditional subsample (CS).</td>
</tr>
<tr>
<td align="left">Estimation of optimal grid size</td>
<td align="left">Method used to an estimate of the optimal average grid size, <inline-formula id="pcbi.1006086.e006"><alternatives><graphic id="pcbi.1006086.e006g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e006" xlink:type="simple"/><mml:math display="inline" id="M6"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, for the CE and CS transmission algorithms.</td>
</tr>
<tr>
<td align="left">Grid construction method</td>
<td align="left">Methods used to overlay a spatial grid of square cells on top of a landscape, assigning each farm to a cell. Two construction methods are implemented, retaining either equal cell sizes (regular grid construction, <xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1A</xref>), or equal number of farms in each cell (adaptive grid construction, <xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1B</xref>).</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>To further evaluate the performance of the two gridding based algorithms, we compared them to an algorithm proposed by Brand et al. [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>]. We here simulated FMD outbreaks with kernel functions implemented in that study, and applied our introduced gridding optimization approach to the CE and CS algorithms. Thereby, we challenged the gridding based algorithms and the associated optimizations outside of the context used to initially explore their efficiency.</p>
<sec id="sec003">
<title>Epidemic model</title>
<p>We use a spatially explicit kernel model based on an approach developed for the FMD outbreak in the UK in 2001 [<xref ref-type="bibr" rid="pcbi.1006086.ref005">5</xref>]. This is a versatile and common modeling approach that has also been used to model FMD in other countries such as the Netherlands [<xref ref-type="bibr" rid="pcbi.1006086.ref012">12</xref>] and Japan [<xref ref-type="bibr" rid="pcbi.1006086.ref006">6</xref>]; as well as other diseases, such as avian influenza in the USA [<xref ref-type="bibr" rid="pcbi.1006086.ref013">13</xref>] and bluetongue virus in the UK [<xref ref-type="bibr" rid="pcbi.1006086.ref014">14</xref>]. Our formulation is a standard farm level Susceptible-Exposed-Infectious-Removed (SEIR) model with discrete daily time steps and a daily rate of infection, <italic>R</italic><sub><italic>ij</italic></sub>, between infectious farm <italic>i</italic> and susceptible farm <italic>j</italic>. This rate depends on the kernel <italic>K</italic>, which is a function of the Euclidean distance between <italic>i</italic> and <italic>j</italic> (<italic>d</italic><sub><italic>ij</italic></sub>), as well as the transmissibility of <italic>i</italic> (<italic>T</italic><sub><italic>i</italic></sub>) and the susceptibility of <italic>j</italic> (<italic>S</italic><sub><italic>j</italic></sub>). The daily infection rate is given by
<disp-formula id="pcbi.1006086.e007">
<alternatives>
<graphic id="pcbi.1006086.e007g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e007" xlink:type="simple"/>
<mml:math display="block" id="M7">
<mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(1)</label>
</disp-formula></p>
<p>The probability of a susceptible farm <italic>j</italic> becoming infected by farm <italic>i</italic> within a given span of days is obtained by discretizing Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e007">1</xref>)
<disp-formula id="pcbi.1006086.e008">
<alternatives>
<graphic id="pcbi.1006086.e008g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e008" xlink:type="simple"/>
<mml:math display="block" id="M8">
<mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">exp</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>δ</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow>
</mml:math>
</alternatives>
<label>(2)</label>
</disp-formula>
where <italic>δt</italic> is the time step. By setting <italic>δt</italic> to one, <italic>p</italic><sub><italic>ij</italic></sub> becomes the daily probability of transmission from <italic>i</italic> to <italic>j</italic>. Once a farm was infected, an incubation period of four days was assumed after which the farm’s entire animal population was considered infectious for a period of five days and at the end of the infectious period the farm was considered removed from the population.</p>
<p>Following Tildesley et al. [<xref ref-type="bibr" rid="pcbi.1006086.ref015">15</xref>], transmissibility and susceptibility of farms were modeled as a nonlinear function of the number of cattle and sheep present on the premises as
<disp-formula id="pcbi.1006086.e009">
<alternatives>
<graphic id="pcbi.1006086.e009g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e009" xlink:type="simple"/>
<mml:math display="block" id="M9">
<mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi mathvariant="normal">cattle</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi>z</mml:mi><mml:mrow><mml:mi mathvariant="normal">cattle</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi mathvariant="normal">cattle</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi mathvariant="normal">sheep</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi>z</mml:mi><mml:mrow><mml:mi mathvariant="normal">sheep</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi mathvariant="normal">sheep</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup></mml:mrow>
</mml:math>
</alternatives>
<label>(3)</label>
</disp-formula>
<disp-formula id="pcbi.1006086.e010">
<alternatives>
<graphic id="pcbi.1006086.e010g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e010" xlink:type="simple"/>
<mml:math display="block" id="M10">
<mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>ψ</mml:mi><mml:mrow><mml:mi mathvariant="normal">cattle</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi>z</mml:mi><mml:mrow><mml:mi mathvariant="normal">cattle</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi mathvariant="normal">cattle</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi>ψ</mml:mi><mml:mrow><mml:mi mathvariant="normal">sheep</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi>z</mml:mi><mml:mrow><mml:mi mathvariant="normal">sheep</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi mathvariant="normal">sheep</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(4)</label>
</disp-formula>
where all parameters are species-specific constants, and <italic>z</italic> is the number of animals of the respective species on the individual farms. For simplicity, we initially used the set of parameter values for <italic>τ</italic>, <italic>σ</italic>, <italic>Φ</italic> and <italic>Ψ</italic> fitted for Cumbria, England in [<xref ref-type="bibr" rid="pcbi.1006086.ref015">15</xref>] for all simulations (see <xref ref-type="table" rid="pcbi.1006086.t002">Table 2</xref> for parameter values). These parameters resulted in outbreaks large enough to enable exploration of the efficiency of different grid configurations for the UK, but yielded small outbreak sizes when simulating infection across the other landscapes (<xref ref-type="supplementary-material" rid="pcbi.1006086.s001">S1 Table</xref>). We were also interested in investigating the performance of the algorithms for large outbreaks, and therefore multiplied the <italic>ψ</italic><sub>cattle</sub> estimated for UK (Cumbria) by 200 when simulating outbreaks in all other landscapes, which resulted in substantially larger epidemics. The animal populations for these other landscapes contained only cattle, thus obviating the sheep terms in Eqs (<xref ref-type="disp-formula" rid="pcbi.1006086.e009">3</xref>) and (<xref ref-type="disp-formula" rid="pcbi.1006086.e010">4</xref>).</p>
<table-wrap id="pcbi.1006086.t002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.t002</object-id>
<label>Table 2</label> <caption><title>Infection kernel parameter values used in disease simulations.</title></caption>
<alternatives>
<graphic id="pcbi.1006086.t002g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.t002" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="center" colspan="3" style="background-color:#D9D9D9">Parameter</th>
<th align="right" style="background-color:#D9D9D9">Reference</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><italic>φ</italic><sub>sheep</sub></td>
<td align="center">0.00083</td>
<td align="center">Transmissibilty constant for sheep.</td>
<td align="right">[<xref ref-type="bibr" rid="pcbi.1006086.ref015">15</xref>]</td>
</tr>
<tr>
<td align="center"><italic>φ</italic><sub>cattle</sub></td>
<td align="center">0.00082</td>
<td align="center">Transm. constant for cattle.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>τ</italic><sub>sheep</sub></td>
<td align="center">0.49</td>
<td align="center">Transm. exponent for sheep.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>τ</italic><sub>cattle</sub></td>
<td align="center">0.42</td>
<td align="center">Transm. exponent for cattle.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>ψ</italic><sub>sheep</sub></td>
<td align="center">1.0</td>
<td align="center">Susceptibility constant for sheep.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>ψ</italic><sub>cattle</sub></td>
<td align="center">5.7</td>
<td align="center">Susc.constant for cattle.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>σ</italic><sub>sheep</sub></td>
<td align="center">0.20</td>
<td align="center">Susc. exponent for sheep.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>σ</italic><sub>cattle</sub></td>
<td align="center">0.41</td>
<td align="center">Susc. exponent for cattle.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>α</italic></td>
<td align="center">0.089</td>
<td align="center">Distance kernel normalization constant.</td>
<td align="right">[<xref ref-type="bibr" rid="pcbi.1006086.ref007">7</xref>]</td>
</tr>
<tr>
<td align="center"><italic>β</italic></td>
<td align="center">1600</td>
<td align="center">Distance kernel scale parameter.</td>
<td align="right">.</td>
</tr>
<tr>
<td align="center"><italic>γ</italic></td>
<td align="center">4.6</td>
<td align="center">Distance kernel shape parameter.</td>
<td align="right">.</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>The local spread kernel, <italic>K</italic>, models the change in infection risk with distance between <italic>i</italic> and <italic>j</italic>, and includes all possible routes of infection except the shipment of animals between farms. For the purpose of comparing CE and CS and different optimized gridding schemes, we used the functional form
<disp-formula id="pcbi.1006086.e011">
<alternatives>
<graphic id="pcbi.1006086.e011g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e011" xlink:type="simple"/>
<mml:math display="block" id="M11">
<mml:mrow><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mi>α</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>β</mml:mi></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>γ</mml:mi></mml:msup></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(5)</label>
</disp-formula>
parameterized as in [<xref ref-type="bibr" rid="pcbi.1006086.ref007">7</xref>], (<xref ref-type="table" rid="pcbi.1006086.t002">Table 2</xref>) and referred to as the <italic>Buhnerkempe</italic> kernel.</p>
</sec>
<sec id="sec004">
<title>Transmission algorithms</title>
<p>In this section, we consider three transmission algorithms: the pairwise (PW), the conditional entry (CE) and the conditional subsample (CS) algorithms. The CE algorithm has previously been published by Keeling and Rohani [<xref ref-type="bibr" rid="pcbi.1006086.ref011">11</xref>], whereas the CS algorithm is a novel approach. Example code for these three algorithms is provided as part of a C++ infection simulation model in the supplementary materials (<xref ref-type="supplementary-material" rid="pcbi.1006086.s003">S1 Appendix</xref> and <xref ref-type="supplementary-material" rid="pcbi.1006086.s004">S2 Appendix</xref>). The transmission algorithms were compared using simulation run times. However, since this is a measure that is both system dependent and also possibly influenced by other processes running simultaneously on the system we also determined the total number of calls made to the distance kernel function (<xref ref-type="disp-formula" rid="pcbi.1006086.e011">Eq. 5</xref>) during a simulation. We considered this a measure of computational complexity and a proxy for relative computational time. Making a call to the kernel function is usually a relatively costly operation in itself and in a naïve implementation it will constitute most of the activity during a simulation as it takes place every time an infection probability is evaluated. For small populations of farms, it may be feasible to store the evaluated kernel values for each pair of farms in order to reduce the number of calculations, but for models on the individual farm level on national scales this approach easily becomes limited by memory availability. For comparison, representing the distances between all unique pairs as 64 bit double precision floating point numbers in a population of <italic>n</italic> nodes and making use of the fact that such a matrix is symmetrical to only store the upper or lower triangle requires approximately 0.373 GiB for n = 10<sup>4</sup>; 37.3 GiB for n = 10<sup>5</sup> and 3725.3 GiB for n = 10<sup>6</sup> (2691.5 GiB for n = 850000, which is roughly the size of the US farm population used in this study). Although supercomputer systems generally have memory per node in the ranges of 32 to 256 GiB, the availability of nodes in the higher range is usually limited and going above the limit of what a single node can handle necessitates a code that can handle shared memory between nodes, making a relatively simple problem significantly more complex. Also, even if it would be possible to run a simulation requiring a large amount of memory, lowering the memory requirement may allow multiple such simulations to run in parallel on the same system. A large number of independent replicates are generally needed, making numerical models for disease simulation prime examples of problems subject to embarrassingly simple parallelization. For the general case, this means that parallelization can be performed over the different replicates with no need for specialized code or extra overhead due to thread or process management, and that there is little to gain from more complex forms of parallelization.</p>
<p>Throughout the explanation of the algorithms we will refer to the farms as nodes. A cell containing an infectious node is referred to as <italic>a</italic>, while a cell with susceptible nodes is referred to as <italic>b</italic> (<xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1C</xref>). The set of all cells that contain susceptible nodes is denoted <bold>B</bold>. An infectious node is referred to as <italic>i</italic>, a susceptible node as <italic>j</italic>. Sets of infectious and susceptible nodes are referred to as <bold>I</bold> and <bold>J</bold> respectively. These sets of nodes are sometimes subscripted with a cell to indicate a set of nodes within a cell. We use the notation of cardinality of the sets to refer to the number of elements in that set (e.g. |<bold>J</bold><sub><italic>b</italic></sub>|, the number of susceptible nodes of cell b).</p>
<sec id="sec005">
<title>Pairwise algorithm</title>
<p>The pairwise algorithm is a straightforward approach for simulating transmission between nodes. The probability of infection is calculated directly for each infectious-susceptible pair in the population by Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e008">2</xref>), and the probability of an infection occurring is evaluated as a Bernoulli process. While simple and easy to code, computational speed is a limiting issue for the pairwise algorithm. The method can be improved somewhat by pre-calculating distances or infection probabilities, but such an approach is instead very memory intensive for any but the smallest of populations, and here we provide the pairwise algorithm mostly for comparison, rather than a serious candidate for actual simulation work. The number of kernel function evaluations required per iteration (<inline-formula id="pcbi.1006086.e012"><alternatives><graphic id="pcbi.1006086.e012g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e012" xlink:type="simple"/><mml:math display="inline" id="M12"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mi mathvariant="normal">tot</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">PW</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>) for the pairwise algorithm follows a bilinear relationship with the number of infectious, |<bold>I</bold>|, and susceptible, |<bold>J</bold>|, nodes, given by
<disp-formula id="pcbi.1006086.e013">
<alternatives>
<graphic id="pcbi.1006086.e013g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e013" xlink:type="simple"/>
<mml:math display="block" id="M13">
<mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mi mathvariant="normal">tot</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">PW</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="bold">I</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="bold">J</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(6)</label>
</disp-formula></p>
<p><bold>Pseudocode 1. Pairwise algorithm.</bold> Probability <italic>p</italic><sub><italic>ij</italic></sub> as defined by Eq (<styled-content><xref ref-type="disp-formula" rid="pcbi.1006086.e008">2</xref></styled-content>).</p>
<p specific-use="line">for each infectious node i {</p>
<p specific-use="line">    for each susceptible node j {</p>
<p specific-use="line">        R = uniform random number (0, 1)</p>
<p specific-use="line">        if R &lt; p<sub>ij</sub> {</p>
<p specific-use="line">            j is infected</p>
<p specific-use="line">        }</p>
<p specific-use="line">    }</p>
<p specific-use="line">}</p>
<p>The CE and CS algorithms utilize gridding approaches to partition the spatial landscape into grids. Although this partitioning of the landscape adds some overhead, it is small compared to the runtimes of the simulations. This is especially true if the nodes in the landscape are constant between replicates, since one grid can then be reused between runs. Unless the number of grid cells is exceptionally high, modern computers have enough memory to store the pre-calculated shortest distances or evaluated kernel values between all cell pairs to further minimize the number of calculations. The grid construction methods used to partition the landscapes are described after the transmission algorithms and the optimal grid cell size estimation algorithm have been outlined.</p>
</sec>
<sec id="sec006">
<title>Conditional entry algorithm (CE)</title>
<p>With this method, the simulation of the infection process is separated into two steps:</p>
<list list-type="order">
<list-item><p>Calculate the maximum possible probability of infection between the infectious node <italic>i</italic> in cell <italic>a</italic> and the most susceptible node within cell <italic>b</italic>, <italic>υ</italic><sub><italic>ib</italic></sub>, using the minimum distance between the two cells. Based on this overestimated probability of infection, test if at least one susceptible node in cell <italic>b</italic> will be infected by <italic>i</italic>.</p></list-item>
<list-item><p>If yes, iterate over all susceptible nodes in <italic>b</italic> and test each individually to see which nodes (if any) actually become infected.</p></list-item>
</list>
<p>This approach has the benefit that if the outcome of step one is negative, only one evaluation of the kernel function will be required, thereby avoiding a large amount of computational operations. This is often the case at large distances, where the kernel predicts low transmission risk.</p>
<p>We denote the overestimated theoretical node-to-node level probability of step one as <italic>υ</italic><sub><italic>ib</italic></sub>, obtained by assuming that the node in <italic>b</italic> with the highest susceptibility (<inline-formula id="pcbi.1006086.e014"><alternatives><graphic id="pcbi.1006086.e014g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e014" xlink:type="simple"/><mml:math display="inline" id="M14"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>) is located at distance <italic>d</italic><sub><italic>ab</italic></sub>, defined as the shortest possible distance between any two points within <italic>a</italic> and <italic>b</italic>, respectively
<disp-formula id="pcbi.1006086.e015">
<alternatives>
<graphic id="pcbi.1006086.e015g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e015" xlink:type="simple"/>
<mml:math display="block" id="M15">
<mml:mrow><mml:msub><mml:mi>υ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(7)</label>
</disp-formula></p>
<p>Given <italic>υ</italic><sub><italic>ib</italic></sub> and assuming that all susceptible nodes in <italic>b</italic> become infected with this probability, the probability of at least one of the susceptible nodes in <italic>b</italic> becoming infected is given by
<disp-formula id="pcbi.1006086.e016">
<alternatives>
<graphic id="pcbi.1006086.e016g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e016" xlink:type="simple"/>
<mml:math display="block" id="M16">
<mml:mrow><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>υ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">J</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(8)</label>
</disp-formula></p>
<p>If a random draw <italic>r</italic><sub><italic>ib</italic></sub><italic>~U([0</italic>,<italic>1)) &gt; ω</italic><sub><italic>ib</italic></sub>, no further calculations are necessary to evaluate infections for nodes in <italic>b</italic> for the current infectious node <italic>i</italic> as not even one node became infected even with an overestimated infection probability. However, if <italic>r</italic><sub><italic>ib</italic></sub> <italic>&lt; ω</italic><sub><italic>ib</italic></sub>, there is a <italic>possibility</italic> of infection of each node in cell <italic>b</italic>, as evaluated in step two of the algorithm. Here, exact infection probability is evaluated for the nodes in <italic>b</italic>, based on actual distances and susceptibilities. However, the probability of infection needs to account for conditioning on the probability <italic>ω</italic><sub><italic>ib</italic></sub> of step one, that at least one hypothetical node at distance <italic>d</italic><sub><italic>ab</italic></sub> with susceptibility <inline-formula id="pcbi.1006086.e017"><alternatives><graphic id="pcbi.1006086.e017g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e017" xlink:type="simple"/><mml:math display="inline" id="M17"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> must become infected. This is achieved by iterating over all susceptible nodes <italic>j</italic> in <italic>b</italic>, <bold>J</bold><sub>b</sub>, and for each iteration calculate the probability of at least one of the remaining |<bold>J</bold><sub><italic>b</italic></sub>|<italic>-j</italic> hypothetical nodes becoming infected, <italic>χ</italic><sub><italic>j</italic></sub>:
<disp-formula id="pcbi.1006086.e018">
<alternatives>
<graphic id="pcbi.1006086.e018g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e018" xlink:type="simple"/>
<mml:math display="block" id="M18">
<mml:mrow><mml:msub><mml:mi>χ</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>υ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">J</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(9)</label>
</disp-formula></p>
<p>The probability of <italic>j</italic> becoming infected at <italic>d</italic><sub><italic>ab</italic></sub> with susceptibility <inline-formula id="pcbi.1006086.e019"><alternatives><graphic id="pcbi.1006086.e019g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e019" xlink:type="simple"/><mml:math display="inline" id="M19"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> conditional on <italic>χ</italic><sub><italic>j</italic></sub> is evaluated by comparing another random draw <italic>r</italic><sub><italic>j</italic></sub><italic>~U([0</italic>,<italic>1])</italic> to <italic>υ</italic><sub><italic>ib</italic></sub> <italic>/ χ</italic><sub><italic>j</italic></sub>. This ensures that the condition imposed in step one, that at least one node gets infected given the overestimated infection probability, will be fulfilled when <italic>j =</italic> |<bold>J</bold><sub><italic>b</italic></sub>|<italic>-1</italic>, since at that point <italic>χ</italic><sub><italic>j</italic></sub> <italic>= υ</italic><sub><italic>ib</italic></sub>. For every <italic>j</italic> where <italic>r</italic><sub><italic>j</italic></sub> <italic>&lt; υ</italic><sub><italic>ib</italic></sub> <italic>/ χ</italic><sub><italic>j</italic></sub>, the node would have become infected if it was at <italic>d</italic><sub><italic>ab</italic></sub> and had susceptibility <inline-formula id="pcbi.1006086.e020"><alternatives><graphic id="pcbi.1006086.e020g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e020" xlink:type="simple"/><mml:math display="inline" id="M20"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, so there is now also a risk of actual infection taking place. Furthermore, the first time this occurs, the condition from step one is fulfilled and <italic>χ</italic><sub><italic>j</italic></sub> for the subsequent |<bold>J</bold><sub><italic>b</italic></sub>|<italic>-j</italic> iterations is set to 1. The probability of actual infection is <italic>p</italic><sub><italic>ij</italic></sub>, given by Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e008">2</xref>), conditional on <italic>χ</italic><sub><italic>j</italic></sub> such, that <italic>j</italic> becomes infected if <italic>r</italic><sub><italic>j</italic></sub> <italic>&lt; p</italic><sub><italic>ij</italic></sub> <italic>/ χ</italic><sub><italic>j</italic></sub>. The same random number is reused in this step since the first test is essentially checking if infection can occur given the known upper bound of the probability (<italic>υ</italic><sub><italic>ib</italic></sub> <italic>/ χ</italic><sub><italic>j</italic></sub>), and then only calculating <italic>p</italic><sub><italic>ij</italic></sub> <italic>/ χ</italic><sub><italic>j</italic></sub> if necessary. For within-cell infections (when <italic>a = b</italic>) the pairwise algorithm was used. For a formal proof of the exactness of this method, see the supplementary material (<xref ref-type="supplementary-material" rid="pcbi.1006086.s005">S3 Appendix</xref>).</p>
<p><bold>Pseudocode 2. Conditional entry algorithm.</bold> Probabilities <italic>p</italic><sub><italic>ij</italic></sub>, <italic>υ</italic><sub><italic>ib</italic></sub> and <italic>ω</italic><sub><italic>ib</italic></sub> as defined by Eqs (<styled-content><xref ref-type="disp-formula" rid="pcbi.1006086.e008">2</xref></styled-content>), (<styled-content><xref ref-type="disp-formula" rid="pcbi.1006086.e015">7</xref></styled-content>) and (<styled-content><xref ref-type="disp-formula" rid="pcbi.1006086.e016">8</xref></styled-content>) respectively.</p>
<p specific-use="line">for each infectious node i {</p>
<p specific-use="line">    for each cell b {</p>
<p specific-use="line">        if i is not in b {</p>
<p specific-use="line">            R<sub>1</sub> = uniform random number (0, 1)</p>
<p specific-use="line">            if R<sub>1</sub> &lt; ω<sub>ib</sub> {</p>
<p specific-use="line">                N = set of susceptibles in b</p>
<p specific-use="line">                n = size of N</p>
<p specific-use="line">                over-estimated infection has occurred = false</p>
<p specific-use="line">                for j from j = 0 to j&lt;n {</p>
<p specific-use="line">                    if over-estimated infection has occurred {</p>
<p specific-use="line">                        q = 1</p>
<p specific-use="line">                    } else {</p>
<p specific-use="line">                        q = 1 –(1 - υ<sub>ib</sub>)<sup>n-j</sup></p>
<p specific-use="line">                    }</p>
<p specific-use="line">                    R<sub>2</sub> = uniform random number (0, 1)</p>
<p specific-use="line">                    if R<sub>2</sub> &lt; υ<sub>ib</sub> / q {</p>
<p specific-use="line">                        over-estimated infection has occurred = true</p>
<p specific-use="line">                        if R<sub>2</sub> &lt; p<sub>ij</sub> / q {</p>
<p specific-use="line">                            N[j] is infected</p>
<p specific-use="line">                        }</p>
<p specific-use="line">                }</p>
<p specific-use="line">            }</p>
<p specific-use="line">        }</p>
<p specific-use="line">    } else {</p>
<p specific-use="line">        pairwise algorithm</p>
<p specific-use="line">        }</p>
<p specific-use="line">    }</p>
<p specific-use="line">}</p>
</sec>
<sec id="sec007">
<title>Conditional subsample algorithm (CS)</title>
<p>Here, we introduce a novel transmission algorithm that shares several features with the CE algorithm. However, instead of either rejecting an entire cell or iterating through all the susceptible nodes of the cell, it selects a sub-sample of the cell’s population of susceptible nodes to be considered for infection. Similar to the CE method, it utilizes an overestimated probability of infection, <italic>ω</italic><sub><italic>ab</italic></sub>, describing an upper boundary for the probability of infection spreading from any of the infectious nodes in cell <italic>a</italic> to a susceptible node in cell <italic>b</italic> in one time step (in contrast to spreading from one single infectious node <italic>i</italic> in <italic>a</italic> to any of the susceptible nodes <italic>j</italic> in <italic>b</italic> as in the CE method). We first define the upper boundary for the probability of one infectious node <italic>i</italic> in cell <italic>a</italic> infecting one susceptible node <italic>j</italic> in cell <italic>b</italic> based on over-estimated transmission parameters. This is similar to Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e015">7</xref>) but not identical because we use the maximum transmissibility of any node in cell <italic>a</italic>, <inline-formula id="pcbi.1006086.e021"><alternatives><graphic id="pcbi.1006086.e021g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e021" xlink:type="simple"/><mml:math display="inline" id="M21"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>T</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, in addition to the maximum susceptibility of any node in cell b, <inline-formula id="pcbi.1006086.e022"><alternatives><graphic id="pcbi.1006086.e022g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e022" xlink:type="simple"/><mml:math display="inline" id="M22"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>:
<disp-formula id="pcbi.1006086.e023">
<alternatives>
<graphic id="pcbi.1006086.e023g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e023" xlink:type="simple"/>
<mml:math display="block" id="M23">
<mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>i</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>a</mml:mi></mml:msub><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>υ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>T</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>a</mml:mi></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow>
</mml:math>
</alternatives>
<label>(10)</label>
</disp-formula></p>
<p>Using only over-estimated transmission parameters means that <italic>υ</italic><sub><italic>ab</italic></sub> will be constant for a given combination of <italic>a</italic> and <italic>b</italic>, since the maximum transmission parameters <inline-formula id="pcbi.1006086.e024"><alternatives><graphic id="pcbi.1006086.e024g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e024" xlink:type="simple"/><mml:math display="inline" id="M24"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>T</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1006086.e025"><alternatives><graphic id="pcbi.1006086.e025g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e025" xlink:type="simple"/><mml:math display="inline" id="M25"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, as well as the distance that the calculation is based on remain unchanged throughout a simulation. Therefore, <italic>υ</italic><sub><italic>ab</italic></sub> can be pre-calculated for all cell pairs to improve performance. Now we define the probability that at least one of the infectious nodes in cell <italic>a</italic> infects one node in <italic>b</italic> given <inline-formula id="pcbi.1006086.e026"><alternatives><graphic id="pcbi.1006086.e026g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e026" xlink:type="simple"/><mml:math display="inline" id="M26"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>T</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1006086.e027"><alternatives><graphic id="pcbi.1006086.e027g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e027" xlink:type="simple"/><mml:math display="inline" id="M27"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> as
<disp-formula id="pcbi.1006086.e028">
<alternatives>
<graphic id="pcbi.1006086.e028g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e028" xlink:type="simple"/>
<mml:math display="block" id="M28">
<mml:mrow><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>υ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(11)</label>
</disp-formula></p>
<p>Based on <italic>ω</italic><sub><italic>ab</italic></sub>, the CS method simulates transmission by the following steps:</p>
<list list-type="order">
<list-item><p>For each cell <italic>a</italic> containing at least one infectious node, iterate over all other cells <italic>b</italic> and generate a random number <italic>n</italic><sub><italic>b</italic></sub> from a binomial distribution with number of trials |<bold><italic>J</italic></bold><sub><italic>b</italic></sub>| and probability <italic>ω</italic><sub><italic>ab</italic></sub>. This gives the number of nodes that can potentially become infected given the upper boundary to the probability of infection.</p></list-item>
<list-item><p>Randomly select a subset of <italic>n</italic><sub><italic>b</italic></sub> nodes from <italic>b</italic>, each with equal probability of being selected.</p></list-item>
<list-item><p>For each of the nodes <italic>j</italic> in the selected subset of nodes, calculate the cumulative true probability of the event that <italic>j</italic> is infected by one or more of the infectious nodes in <italic>a</italic> as
<disp-formula id="pcbi.1006086.e029">
<alternatives>
<graphic id="pcbi.1006086.e029g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e029" xlink:type="simple"/>
<mml:math display="block" id="M29">
<mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>→</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow>
</mml:math>
</alternatives>
<label>(12)</label>
</disp-formula>
where <italic>p</italic><sub><italic>ij</italic></sub> is the true probability of infection spreading from <italic>i</italic> to <italic>j</italic> as given by Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e008">2</xref>). Evaluate if infection actually takes place using the true probability conditional on the upper boundary of the probability used in step 1.</p></list-item>
</list>
<p>We treat the infection of node <italic>j</italic> by cell <italic>a</italic> as conditional on the event that it would be infected using the over-estimated transmission parameters,
<disp-formula id="pcbi.1006086.e030">
<alternatives>
<graphic id="pcbi.1006086.e030g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e030" xlink:type="simple"/>
<mml:math display="block" id="M30">
<mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>→</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>→</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(13)</label>
</disp-formula></p>
<p>In practice this becomes two separate Bernoulli trials with probability <inline-formula id="pcbi.1006086.e031"><alternatives><graphic id="pcbi.1006086.e031g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e031" xlink:type="simple"/><mml:math display="inline" id="M31"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1006086.e032"><alternatives><graphic id="pcbi.1006086.e032g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e032" xlink:type="simple"/><mml:math display="inline" id="M32"><mml:mrow><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>→</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula> respectively. Since the first of these two trials have equal probability regardless of which susceptible node <italic>j</italic> is being considered, their combined number of successes, <italic>n</italic><sub><italic>b</italic></sub>, can be expressed as a binomial random variate. Because <inline-formula id="pcbi.1006086.e033"><alternatives><graphic id="pcbi.1006086.e033g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e033" xlink:type="simple"/><mml:math display="inline" id="M33"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> is identical for all nodes <italic>j</italic>, all nodes have equal probability to pass the first Bernoulli trial where infection based on over-estimated transmission parameters is evaluated. Therefore, sample of <italic>n</italic><sub><italic>b</italic></sub> nodes from the susceptible population of cell <italic>b</italic>, where each susceptible node have equal probability of being selected yields the exact set of nodes to be tested for actual infection with probability <inline-formula id="pcbi.1006086.e034"><alternatives><graphic id="pcbi.1006086.e034g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e034" xlink:type="simple"/><mml:math display="inline" id="M34"><mml:mrow><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>→</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>→</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>j</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>. Thereby, the actual probability of infection <italic>p</italic><sub><italic>aj</italic></sub> only needs to be calculated for a subsample of susceptible nodes each time step.</p>
<p>We once again stress that the CS algorithm is not an approximation of the pairwise algorithm; it reduces the number of times that the true infection probability <italic>p</italic><sub><italic>ij</italic></sub> needs to be calculated by using a single step to filter out nodes that would not have become infected even with the overestimated probability <italic>ω</italic><sub><italic>ab</italic></sub>. Even though the operation of generating a binomially distributed random variable can be considered relatively costly, this extra complexity is small in relation to the number of evaluations of the kernel function that is avoided. A way to work around the computationally costly construction of binomial random generators each time a new <italic>n</italic><sub><italic>b</italic></sub> is drawn is to set up a number of generators for all combinations of range of fixed probabilities <bold><italic>P</italic></bold><sub>CS</sub> and all possible values of n between 1 and the largest number of nodes within any cell given the grid in use. To generate <italic>n</italic><sub><italic>b</italic></sub> from this set of binomial generators one simply rounds <italic>ω</italic><sub><italic>ab</italic></sub> up to the closest fixed p in <bold><italic>P</italic></bold><sub>CS</sub> this makes the over estimation of the actual infection probability even more crude giving a slightly larger <italic>n</italic><sub><italic>b</italic></sub> on average, but the time saved from not having to set up the generators will likely be much larger than the extra tests necessary. For the simulations in this work we used the set <bold><italic>P</italic></bold><sub>CS</sub> <italic>= {1</italic>.<italic>0</italic>, <italic>0</italic>.<italic>9</italic>, <italic>0</italic>.<italic>8</italic>, <italic>0</italic>.<italic>7</italic>, <italic>0</italic>.<italic>6</italic>, <italic>0</italic>.<italic>5</italic>, <italic>0</italic>.<italic>4</italic>, <italic>0</italic>.<italic>3</italic>, <italic>0</italic>.<italic>2</italic>, <italic>0</italic>.<italic>1</italic>, <italic>1</italic>.<italic>0e</italic><sup><italic>-2</italic></sup>, <italic>1</italic>.<italic>0e</italic><sup><italic>-3</italic></sup>, <italic>1</italic>.<italic>0e</italic><sup><italic>-4</italic></sup>, <italic>1</italic>.<italic>0e</italic><sup><italic>-5</italic></sup>, <italic>1</italic>.<italic>0e</italic><sup><italic>-6</italic></sup>, <italic>1</italic>.<italic>0e</italic><sup><italic>-7</italic></sup>, <italic>1</italic>.<italic>0e</italic><sup><italic>-8</italic></sup>, <italic>5</italic>.<italic>0e</italic><sup><italic>-9</italic></sup><italic>}</italic>. We point out that this approach simply makes the over-estimation of <italic>ω</italic><sub><italic>ab</italic></sub> slightly larger and does not introduce any approximation of the true probabilities of nodes becoming infected. The implementation of the binomial random number generator used will of course still impact the absolute speed of the algorithm and care should be taken to ensure that the most naïve implementations are avoided.</p>
<p>For within-cell infections (when <italic>a = b</italic>) the pairwise algorithm was used.</p>
<p><bold>Pseudocode 3. Conditional subsample algorithm.</bold> Probabilities <italic>p</italic><sub><italic>ij</italic></sub>, and <italic>ω</italic><sub><italic>ab</italic></sub> as defined by Eqs (<styled-content><xref ref-type="disp-formula" rid="pcbi.1006086.e008">2</xref></styled-content>) and (<styled-content><xref ref-type="disp-formula" rid="pcbi.1006086.e028">11</xref></styled-content>) respectively.</p>
<p specific-use="line">for each cell with infectious nodes a {</p>
<p specific-use="line">    for each cell with susceptible nodes b {</p>
<p specific-use="line">        if a is not b {</p>
<p specific-use="line">            N<sub>b</sub> = set of susceptibles in b</p>
<p specific-use="line">            n<sub>b</sub> = size of N<sub>b</sub></p>
<p specific-use="line">            n<sub>sample</sub> = binomial random variate(n<sub>b</sub>, ω<sub>ab</sub>)</p>
<p specific-use="line">            if(n<sub>sample</sub> &gt; 0) {</p>
<p specific-use="line">                N<sub>a</sub> = set of infectious in a</p>
<p specific-use="line">                N<sub>sample</sub> = random subsample of size n<sub>b</sub> from N<sub>b</sub></p>
<p specific-use="line">                for each j in N<sub>sample</sub> {</p>
<p specific-use="line">                    p<sub>aj</sub> = 1.0</p>
<p specific-use="line">                    for each i in N<sub>a</sub> {</p>
<p specific-use="line">                        p<sub>aj</sub> = p<sub>aj</sub> * (1.0—p<sub>ij</sub>)</p>
<p specific-use="line">                    }</p>
<p specific-use="line">                    R = uniform random number (0, 1)</p>
<p specific-use="line">                    if R &lt; (1 –p<sub>aj</sub>) / ω<sub>ab</sub> {</p>
<p specific-use="line">                        N<sub>sample</sub>[j] is infected</p>
<p specific-use="line">                    }</p>
<p specific-use="line">                }</p>
<p specific-use="line">            }</p>
<p specific-use="line">        } else {</p>
<p specific-use="line">            pairwise algorithm</p>
<p specific-use="line">        }</p>
<p specific-use="line">    }</p>
<p specific-use="line">}</p>
</sec>
</sec>
<sec id="sec008">
<title>Estimation of optimal grid cell size</title>
<p>The cell size (number of nodes contained in each cell) will have a large impact on the efficacy of both the CE and CS transmission algorithms. Conceptually, it is easy to see that either too small or too large cells will render the methods inefficient. At one extreme end, a single cell covering the entire landscape would equate the method to the pairwise algorithm. On the other hand, if each cell is so small that it only contains a single farm, the kernel similarly needs to be evaluated for every farm and iteration, plus an additional evaluation when a cell is entered. Clearly, some intermediate cell size is optimal.</p>
<p>In theory, the best cell configuration is one where the difference between the upper bound of the probability of infection (<italic>υ</italic><sub><italic>ib</italic></sub> or <italic>ω</italic><sub><italic>ab</italic></sub>) and the probability of infection itself is as small as possible because this will lead to fewer ‘false positives’ (times where the outcome of step 1 is true for the CE algorithm, or a larger than necessary binomial sample for the CS algorithm). The amount of overestimation of <italic>υ</italic><sub><italic>ib</italic></sub> and <italic>ω</italic><sub><italic>ab</italic></sub> can be reduced by using small cells with few nodes in each since that will minimize the difference between <italic>d</italic><sub><italic>ab</italic></sub> (the cell-to-cell distance) and <italic>d</italic><sub><italic>ij</italic></sub> (the actual distance between the infectious node <italic>i</italic> and the susceptible nodes <italic>j</italic>). Furthermore, having a cell in which the distribution of the nodes’ susceptibility, <italic>S</italic><sub><italic>j</italic></sub>, is as homogenous as possible also contributes to a smaller amount of overestimation. At the same time, the more small cells there are, the closer the behavior of the transmission algorithm will be to that of the pairwise algorithm in that there will be a larger amount of operations required just to evaluate part one of respective algorithm. Finding a grid configuration with an optimal balance between these factors for a landscape with a spatially heterogeneous node distribution is not a trivial problem. Also, any perfect solution will be dependent on where in the landscape the infectious node is, further complicating the task.</p>
<p>We propose a straightforward method to quickly find an approximation of the optimal average grid cell size, <inline-formula id="pcbi.1006086.e035"><alternatives><graphic id="pcbi.1006086.e035g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e035" xlink:type="simple"/><mml:math display="inline" id="M35"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, for a given landscape. The method relies on a set of simplifying assumptions, where all farms are assumed to have equal susceptibility and transmissibility, and distributed uniformly in a quadratic landscape. Also, we only estimate <inline-formula id="pcbi.1006086.e036"><alternatives><graphic id="pcbi.1006086.e036g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e036" xlink:type="simple"/><mml:math display="inline" id="M36"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> for the initial phase of the outbreak, where only one node is considered infectious and all other nodes are susceptible. Note, however, that we challenge these assumptions below when we evaluate the performance of the gridding methods. The method to identify an optimal grid size is:</p>
<list list-type="order">
<list-item><p>Starting out with the landscape of interest, determine the longest side <italic>x</italic> of the surface delimited by the outer bounds of the node population and consider a square of area <italic>x</italic><sup><italic>2</italic></sup>.</p></list-item>
<list-item><p>Overlay this square with a grid consisting of <italic>κ</italic><sup><italic>2</italic></sup> uniformly sized square cells and assign the nodes to the cells. This gives an average number of nodes per cell, <inline-formula id="pcbi.1006086.e037"><alternatives><graphic id="pcbi.1006086.e037g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e037" xlink:type="simple"/><mml:math display="inline" id="M37"><mml:mrow><mml:mi>θ</mml:mi><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mover accent="true"><mml:mi>κ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>.</p></list-item>
<list-item><p>For each grid cell calculate the expected number of kernel function calls that would be required to simulate infection spreading from a single infectious node in this cell <italic>a</italic> to all cells (including itself) in the landscape with the current grid configuration. For these calculations let the number of nodes in each cell be the average number of nodes per cell, and let susceptibility and transmissibility be the same respective parameter value for all nodes. In our study we based these on the median of the number of animals (<italic>z</italic><sub>sheep,<italic>i</italic></sub> and <italic>z</italic><sub>cattle,<italic>i</italic></sub>, Eqs (<xref ref-type="disp-formula" rid="pcbi.1006086.e009">3</xref>) and (<xref ref-type="disp-formula" rid="pcbi.1006086.e010">4</xref>)) within the farm populations, but stress that the approach could also be used when other demographic heterogeneities are considered.</p></list-item>
<list-item><p>Repeat step 2 and 3 with differently sized grid configurations.</p></list-item>
<list-item><p>Determine <inline-formula id="pcbi.1006086.e038"><alternatives><graphic id="pcbi.1006086.e038g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e038" xlink:type="simple"/><mml:math display="inline" id="M38"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> as the value of <italic>θ</italic> yielding the fewest average number of expected kernel function calls per cell <italic>a</italic>.</p></list-item>
</list>
<p>This procedure was performed for 100 different grid configurations, each with total number of cells <italic>κ</italic><sup><italic>2</italic></sup> where <italic>κ</italic> ∈ {1,…,100}. For <italic>κ</italic> = 1, a single cell overlays the landscape, and 100 was chosen as an upper bound that we determined to yield a large enough span of grid configurations to be sufficiently certain that the optima for the landscapes used in this study were found. The sum of expected number of kernel calls required for each evaluated cell was calculated as
<disp-formula id="pcbi.1006086.e039">
<alternatives>
<graphic id="pcbi.1006086.e039g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e039" xlink:type="simple"/>
<mml:math display="block" id="M39">
<mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mrow><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="bold-italic">C</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>b</mml:mi><mml:mo>≠</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:munder></mml:mstyle><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">J</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(14)</label>
</disp-formula>
where <bold>C</bold> is the set of all cells for the given configuration and <italic>N</italic><sub><italic>i</italic>,<italic>b</italic></sub> is the expected number of calls to the kernel function required to simulate infection spreading from one infectious node <italic>i</italic> in <italic>a</italic> to the nodes in <italic>b</italic> during one time step. For both the CE and CS transmission algorithms, there will always be one kernel call made for each cell that is checked in order to calculate the overestimated infection probability <italic>υ</italic><sub><italic>ib</italic></sub> or <italic>ω</italic><sub><italic>ab</italic></sub>, as well as |<bold>J</bold><sub><italic>a</italic></sub>|calls associated with the internal pairwise checks of the susceptible nodes within <italic>a</italic>. Note that since the distribution of animals is uniform over the nodes and the nodes are uniform within the landscape, the transmissibility parameters from Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e015">7</xref>) and Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e023">10</xref>), will have the same value (<inline-formula id="pcbi.1006086.e040"><alternatives><graphic id="pcbi.1006086.e040g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e040" xlink:type="simple"/><mml:math display="inline" id="M40"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>T</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>) and the number of infectious nodes in <italic>a</italic> is one, so <italic>υ</italic><sub><italic>ib</italic></sub> = <italic>ω</italic><sub><italic>ab</italic></sub>. After the initial overestimated probability <italic>υ</italic><sub><italic>ib</italic></sub> or <italic>ω</italic><sub><italic>ab</italic></sub> has been calculated, the expected number of kernel calls for a given pair of infectious node <italic>i</italic> (or cell <italic>a</italic>, it is the same in this context since there is only one infectious node in <italic>a</italic>) and grid cell <italic>b</italic> is
<disp-formula id="pcbi.1006086.e041">
<alternatives>
<graphic id="pcbi.1006086.e041g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e041" xlink:type="simple"/>
<mml:math display="block" id="M41">
<mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>υ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">J</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(15)</label>
</disp-formula></p>
<p>This is simply the expected value of the binomial distribution given |<bold>J</bold><sub><italic>b</italic></sub>| draws and probability <italic>υ</italic><sub><italic>ib</italic></sub> or <italic>ω</italic><sub><italic>ab</italic></sub>. Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e041">15</xref>) is intuitive for the CS algorithm because each node in the binomial sample, drawn from the population of susceptible nodes within a grid cell during the execution of the algorithm, will be evaluated exactly once. This adds one kernel call for each node in the sample. The proof is somewhat less apparent for the CE algorithm, requiring a more comprehensive derivation. This is provided in the supplementary material (<xref ref-type="supplementary-material" rid="pcbi.1006086.s006">S4 Appendix</xref>).</p>
<p>Due to <italic>ω</italic><sub><italic>ab</italic></sub> increasing with the number of infectious nodes within a cell it was expected that during actual simulations with the CS algorithm the probability <italic>ω</italic><sub><italic>ab</italic></sub> would be close to or equal to one more often than <italic>υ</italic><sub><italic>ib</italic></sub> would with the CE algorithm. This leads to the CS algorithm degenerating into the pairwise algorithm (when <italic>ω</italic><sub><italic>ab</italic></sub> = 1, <italic>n</italic><sub><italic>b</italic></sub> = |<bold>J</bold><sub>b</sub>|) more often than the CE algorithm which will still only occasionally enter the susceptible cell <italic>b</italic>, even when a cell contains a lot of infectious nodes. In order to make a fair comparison between the methods we therefore also calculated <inline-formula id="pcbi.1006086.e042"><alternatives><graphic id="pcbi.1006086.e042g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e042" xlink:type="simple"/><mml:math display="inline" id="M42"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> using the maximum number of animals on any farm in the landscape as well as the 75<sup>th</sup> percentile of the number of animals on the farms for transmission parameters rather than the median, and evaluated both using the CS and CE algorithms. With these higher transmission parameters, the cells become somewhat smaller which offsets this effect for the CS algorithm. The results showed mostly minute differences in run times for simulations depending on summary statistic used, but for the CS method using maximum number of animals was clearly optimal for the UK (3.2 and 2.9 times faster than 75<sup>th</sup> percentile and median, respectively). Based on this we chose to use maximum for all simulations with the CS algorithm and median for all simulations with the CE method.</p>
</sec>
<sec id="sec009">
<title>Grid construction</title>
<p>Two different methods were used to spatially divide the nodes of the landscapes into grids, each grid consisting of a set of square cells, <bold>C</bold>. The first such grid construction method, denoted regular grid construction, overlays the landscape with a set of uniformly sized square cells of predetermined spatial size (<xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1A</xref>), generated by selecting a number <italic>κ</italic>, describing the square root of the total number of cells (or the number of cells along one dimension) desired, and simply constructing <italic>κ</italic><sup><italic>2</italic></sup> square cells with side = <italic>l/κ</italic>, where <italic>l</italic> is the longest side of the rectangle bounding the landscape.</p>
<p>Secondly, we used an adaptive grid construction approach with similarities to the quad-tree data structure common in computer science, where a spatially heterogeneous grid is constructed (<xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1B</xref>), with the aim of having an equal number of nodes per cell. Starting with one large cell covering the entire landscape, we recursively divided cells (parents) into four smaller equal-sized cells (children), which in turn were divided into even smaller cells and so on. The process was continued for each cell as long as further subdivision satisfied the following condition:
<disp-formula id="pcbi.1006086.e043">
<alternatives>
<graphic id="pcbi.1006086.e043g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e043" xlink:type="simple"/>
<mml:math display="block" id="M43">
<mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="normal">log</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">L</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">log</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>λ</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>≥</mml:mo><mml:mfrac><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="bold">B</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="normal">log</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">L</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">log</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>λ</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="bold">B</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(16)</label>
</disp-formula></p>
<p>Here, <bold>L</bold><sub><italic>a</italic></sub> and <bold>L</bold><sub><bold>b</bold></sub> indicates the set of nodes within parent (<italic>a</italic>) and child (<italic>b</italic>) cells, respectively, <bold>B</bold> is the set of up to four child cells of <italic>a</italic> that contain nodes (depending on the spatial distribution of nodes inside the parent cell, some child cells can end up without nodes) and <italic>λ</italic> is the threshold number of nodes per cell. As such, the subdivision minimizes the squared difference on between log-number of nodes per cell and the specified log-<italic>λ</italic>.</p>
<p>At the end, all cells that did not contain any nodes were removed from the final grid for both the adaptive and the regular grid construction methods.</p>
<p>We applied the grid construction methods to farm landscapes that deviated from the underlying assumptions of the approximation in section <italic>Estimation of optimal grid cell size</italic> (uniform node distribution inside a square with equal susceptibility and transmissibility), using grids according to the optimized <inline-formula id="pcbi.1006086.e044"><alternatives><graphic id="pcbi.1006086.e044g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e044" xlink:type="simple"/><mml:math display="inline" id="M44"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> as well as both finer and coarser grid configurations. We specified
<disp-formula id="pcbi.1006086.e045">
<alternatives>
<graphic id="pcbi.1006086.e045g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e045" xlink:type="simple"/>
<mml:math display="block" id="M45">
<mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>η</mml:mi><mml:mi>i</mml:mi></mml:msup><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mo>−</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(17)</label>
</disp-formula></p>
<p>The constant <italic>η</italic> was set to 1.75 in order to give a large enough span of different grid configurations across all landscapes and the range of <italic>i</italic> was chosen as [<xref ref-type="bibr" rid="pcbi.1006086.ref006">6</xref>, <xref ref-type="bibr" rid="pcbi.1006086.ref006">6</xref>] to yield a manageable number of grid configurations with a sufficient level of detail as well as equal amount smaller and larger cell sizes in addition to <inline-formula id="pcbi.1006086.e046"><alternatives><graphic id="pcbi.1006086.e046g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e046" xlink:type="simple"/><mml:math display="inline" id="M46"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> itself. In order to make the regular grids somewhat comparable in size to the grids constructed with the adaptive method, the sets of values for <italic>κ</italic> were set to the integer values for which the average number of nodes per cell (<italic>n/κ</italic><sup><italic>2</italic></sup><italic>)</italic> was closest to the sets of values of <italic>λ</italic>.</p>
<p>For the landscape with uniform spatial distribution of nodes, the adaptive gridding approach generally resulted in configurations with cell sizes that deviated substantially from <italic>λ</italic>. Therefore, for this landscape, we used only the regular gridding method.</p>
</sec>
<sec id="sec010">
<title>Landscapes</title>
<p>The evaluation of the algorithms and the gridding schemes were performed on the empirical cattle and sheep farm population of the UK and the cattle farm populations of the 48 contiguous states of the USA (i.e. excluding Alaska and Hawaii) and Sweden, each with 177 855, 832 514 and 24 275 farms respectively; as well as on three generated landscapes with differing degrees of clustering. The generated landscapes were created with the method of [<xref ref-type="bibr" rid="pcbi.1006086.ref016">16</xref>] and each had one quarter of the number of farms of the USA data (208 129) and an area that was one tenth of that of the contiguous USA. This scaling of the random landscapes was found to provide consistently large outbreak sizes through high enough farm density, while keeping simulation runtimes with the pairwise method at a manageable level. The number of animals on the farms for the generated landscapes were sampled randomly from the USA farm size distribution. See <xref ref-type="supplementary-material" rid="pcbi.1006086.s002">S2 Table</xref> for clustering statistics of the landscapes.</p>
<p>The UK and Sweden keep detailed information about farms in central databases, including position and herd sizes. These data were made available for the study under confidentiality agreements and could be used when simulating outbreaks. There are however no equivalent data bases for the USA. Instead we used simulated demography data generated by the Farm Location and Agricultural Production Simulator (FLAPS). FLAPS simulates spatially-explicit farm locations and farm sizes, based on county level demography information from the National Agricultural Statistics Service (NASS), in combination with environmental features (e.g. topography and climate), and anthropogenic factors (e.g. roads and urban markets) [<xref ref-type="bibr" rid="pcbi.1006086.ref017">17</xref>]. While not a perfect representation of the geographical distribution and demography of the USA farm population, it offers the most realistic depiction available. As such, it is well suited for investigating the performance of the presented disease simulation algorithms.</p>
<p>The three randomized landscapes as well as the FLAPS realization for the USA farm population used in this study are available as supporting information (<xref ref-type="supplementary-material" rid="pcbi.1006086.s007">S1</xref>–<xref ref-type="supplementary-material" rid="pcbi.1006086.s010">S4</xref> Datasets).</p>
</sec>
<sec id="sec011">
<title>Simulations</title>
<p>The usefulness of <inline-formula id="pcbi.1006086.e047"><alternatives><graphic id="pcbi.1006086.e047g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e047" xlink:type="simple"/><mml:math display="inline" id="M47"><mml:mover accent="true"><mml:mi>κ</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1006086.e048"><alternatives><graphic id="pcbi.1006086.e048g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e048" xlink:type="simple"/><mml:math display="inline" id="M48"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> as indicators of the actual optimal grid size for the original landscape was tested by comparing them to a number of other configurations generated using the two different grid construction methods (regular and adaptive) through simulations. Each simulation was seeded with one random farm as the initial case and was run until the outbreak either died out or until 10,000 cumulative farms had become infected. The run time and total number of kernel operations depends heavily on the number of nodes infected over the course of the simulated outbreaks, making comparisons between replicates with different outbreak sizes difficult. To circumvent this problem, the number of kernel operations of the simulations were recorded at the end of the time step where 10, 100, 1,000 and 10,000 nodes became infected (we refer to these as outbreak stages).</p>
<p>To improve the speed of all simulations regardless of transmission algorithm the kernel was evaluated for every integer distance between 1 and the maximum possible distance within the given landscape (in meters) and the distances calculated during the simulations were rounded to nearest integer. This does not, however, mean that the number of kernel calls as a relative measure of complexity changes as it still indicates the number of operations made where the kernel is involved. Also, even though this can be seen as an approximation, we argue that the error introduced by this approach will be smaller than the error in a set of landscape coordinates at the one-meter level.</p>
<p>The simulations of the epidemic model using the grid construction methods and transmission algorithms, as well as the algorithm for finding <inline-formula id="pcbi.1006086.e049"><alternatives><graphic id="pcbi.1006086.e049g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e049" xlink:type="simple"/><mml:math display="inline" id="M49"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, were all implemented in C++ (<xref ref-type="supplementary-material" rid="pcbi.1006086.s003">S1 Appendix</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s004">S2 Appendix</xref>). All simulations were run at a supercomputer cluster consisting of 2.2GHz 8-core Intel Xeon E5-2660 processors.</p>
</sec>
<sec id="sec012">
<title>Comparison to existing algorithms</title>
<p>The CE and CS algorithms were compared to the fast spectral rate recalculation method (FSR) presented by Brand et al. [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>]. Simulations with the FSR method and the other algorithms was performed using the US farm population with parameters as described in the [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>]</p>
<p>We compared the two methods using the distance kernel from the evaluation of the FSR method on the US population in [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>] (referred to as <italic>Brand</italic> kernel; notation converted to match that already in this paper)
<disp-formula id="pcbi.1006086.e050">
<alternatives>
<graphic id="pcbi.1006086.e050g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e050" xlink:type="simple"/>
<mml:math display="block" id="M50">
<mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mi>γ</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>α</mml:mi><mml:msub><mml:mi>N</mml:mi><mml:mi>γ</mml:mi></mml:msub><mml:mi>β</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>β</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mi>γ</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow>
</mml:math>
</alternatives>
<label>(18)</label>
</disp-formula></p>
<p>As closely as possible we tried to replicate the simulations in the original study and tested the methods with three different sets of parameters corresponding to three different shapes of the kernel (<xref ref-type="table" rid="pcbi.1006086.t003">Table 3</xref>), <italic>N</italic><sub><italic>γ</italic></sub> being a normalization constant dependent on the choice of <italic>γ</italic>. In the comparison, the same node second closest to the center of Franklin County, Texas was seeded every replicate. The reason for choosing the node second closest to the center over the node closest to the center as in the original study, was that it had 19 animals in our data set as opposed to the central node which had only 1, increasing chances of outbreaks taking off. Estimation of optimum grid size (<inline-formula id="pcbi.1006086.e051"><alternatives><graphic id="pcbi.1006086.e051g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e051" xlink:type="simple"/><mml:math display="inline" id="M51"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>) for the CS and CE method was performed as described under section <italic>Estimation of optimal grid cell size</italic> using the relevant kernel (<xref ref-type="table" rid="pcbi.1006086.t003">Table 3</xref>). For these simulations, results were recorded at the time step when 10000 cumulative infected nodes was reached as well as at the point where the epidemic died out.</p>
<table-wrap id="pcbi.1006086.t003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.t003</object-id>
<label>Table 3</label> <caption><title>Parameters for infection kernels used in the comparison to FSR method.</title></caption>
<alternatives>
<graphic id="pcbi.1006086.t003g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.t003" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left"> </th>
<th align="center" colspan="4">Kernel</th>
</tr>
<tr>
<th align="left" style="background-color:#E7E6E6"> </th>
<th align="center" style="background-color:#E7E6E6"><italic>Brand</italic></th>
<th align="center" style="background-color:#E7E6E6"><italic>Brand</italic></th>
<th align="center" style="background-color:#E7E6E6"><italic>Brand</italic></th>
<th align="center" style="background-color:#E7E6E6"><italic>Buhnerkempe</italic></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><italic>α</italic></td>
<td align="center">0.12</td>
<td align="center">0.12</td>
<td align="center">0.12</td>
<td align="center">0.089</td>
</tr>
<tr>
<td align="center"><italic>β</italic></td>
<td align="center">10.0</td>
<td align="center">12.73</td>
<td align="center">20.0</td>
<td align="center">1.6</td>
</tr>
<tr>
<td align="center"><italic>γ</italic></td>
<td align="center">3.0</td>
<td align="center">4.0</td>
<td align="center">5.0</td>
<td align="center">4.6</td>
</tr>
<tr>
<td align="center"><italic>N</italic><sub><italic>γ</italic></sub></td>
<td align="center">0.16</td>
<td align="center">4.05</td>
<td align="center">190.99</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center"><italic>φ</italic><sub><italic>c</italic></sub></td>
<td align="center">1.0</td>
<td align="center">1.0</td>
<td align="center">1.0</td>
<td align="center">1140.0</td>
</tr>
<tr>
<td align="center"><italic>τ</italic><sub><italic>c</italic></sub></td>
<td align="center">0.2</td>
<td align="center">0.2</td>
<td align="center">0.2</td>
<td align="center">0.00082</td>
</tr>
<tr>
<td align="center"><italic>ψ</italic><sub><italic>s</italic></sub></td>
<td align="center">1.0</td>
<td align="center">1.0</td>
<td align="center">1.0</td>
<td align="center">0.41</td>
</tr>
<tr>
<td align="center"><italic>σ</italic><sub><italic>c</italic></sub></td>
<td align="center">0.2</td>
<td align="center">0.2</td>
<td align="center">0.2</td>
<td align="center">0.42</td>
</tr>
<tr>
<td align="center"><inline-formula id="pcbi.1006086.e052"><alternatives><graphic id="pcbi.1006086.e052g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e052" xlink:type="simple"/><mml:math display="inline" id="M52"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> (CS)</td>
<td align="center">411</td>
<td align="center">393</td>
<td align="center">450</td>
<td align="center">377</td>
</tr>
<tr>
<td align="center"><inline-formula id="pcbi.1006086.e053"><alternatives><graphic id="pcbi.1006086.e053g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e053" xlink:type="simple"/><mml:math display="inline" id="M53"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> (CE)</td>
<td align="center">925</td>
<td align="center">925</td>
<td align="center">925</td>
<td align="center">308</td>
</tr>
</tbody>
</table>
</alternatives>
<table-wrap-foot>
<fn id="t003fn001"><p><italic>Brand</italic> refers to the infection kernel used in [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>] which was implemented using three different values for the shape parameter γ as in the original work. <italic>Buhnerkempe</italic> refers to the infection kernel of [<xref ref-type="bibr" rid="pcbi.1006086.ref007">7</xref>].</p></fn>
</table-wrap-foot>
</table-wrap>
<p>A comparison to the FSR method was also attempted for the kernel and set of parameters used for the other analyses presented earlier in this paper (Eq (<xref ref-type="disp-formula" rid="pcbi.1006086.e011">5</xref>) and <xref ref-type="table" rid="pcbi.1006086.t003">Table 3</xref>). However, the very local nature of this kernel caused problems with the FSR method as the kernel shape necessitates a very fine resolution for the grid on which the image of infection is calculated in order to accurately capture the behavior of the kernel. For such fine resolutions, the efficiency of the algorithm drastically diminishes and made simulations until the end of the epidemic too long to be feasible. Thus, for this kernel, only the results from reaching 10000 cumulative infected farms was recorded before the simulations were terminated.</p>
<p>Please note that the kernels used in the comparison with FSR are parameterized for a distance unit of kilometers rather than meters as for the other analyses presented.</p>
</sec>
</sec>
<sec id="sec013" sec-type="results">
<title>Results</title>
<p>For all landscapes, outbreak stages and grid construction methods using conditional subsample and conditional entry algorithms, even the worst grid configuration tested provided an improvement over the pairwise method, and the simulations with optimal suggested grid configurations (<inline-formula id="pcbi.1006086.e054"><alternatives><graphic id="pcbi.1006086.e054g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e054" xlink:type="simple"/><mml:math display="inline" id="M54"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>) yielded improvements in the range of 2.9–500.0 times faster (Figs <xref ref-type="fig" rid="pcbi.1006086.g002">2</xref> and <xref ref-type="fig" rid="pcbi.1006086.g003">3</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s011">S1 Fig</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s012">S2 Fig</xref>). In almost all of those simulations the CS transmission algorithm consistently performed as well as or better than the CE method (<xref ref-type="fig" rid="pcbi.1006086.g004">Fig 4</xref>), and for that reason we present the results for the CS algorithm here and the results for the CE algorithm can be found in the supplementary material together with the result of the optimal grid estimation method for the six landscapes (<xref ref-type="supplementary-material" rid="pcbi.1006086.s013">S3 Fig</xref>).</p>
<fig id="pcbi.1006086.g002" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.g002</object-id>
<label>Fig 2</label>
<caption>
<title>Speed-up of estimated optimal grid configuration with the conditional subsample algorithm compared to the pairwise algorithm.</title>
<p>Comparison of simulations using the CS algorithm with <inline-formula id="pcbi.1006086.e055"><alternatives><graphic id="pcbi.1006086.e055g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e055" xlink:type="simple"/><mml:math display="inline" id="M55"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> as cell-size threshold, with the pairwise algorithm for different outbreak stages. The y-axis indicate how many times faster (based on run time) the simulations using the CS algorithm were compared to the pairwise simulations.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.g002" xlink:type="simple"/>
</fig>
<fig id="pcbi.1006086.g003" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.g003</object-id>
<label>Fig 3</label>
<caption>
<title>Results from outbreak simulations with the conditional subsample transmission algorithm.</title>
<p>Average run time in seconds for each tested grid cell size up to and including the outbreak stages 10 and 10000 (* indicates estimated optimal grid cell size <inline-formula id="pcbi.1006086.e056"><alternatives><graphic id="pcbi.1006086.e056g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e056" xlink:type="simple"/><mml:math display="inline" id="M56"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>). The 5th and 95th percentiles are indicated by the ranges (main panels). Each combination of landscape and grid configuration using the CS algorithm, as well as simulations with the pairwise algorithm for comparison was simulated with 500 replicates. The landscapes were (panels A-F): random uniform, random moderate clustering, random high clustering, USA, Sweden, UK. The regular grid construction method was used for the uniform random landscape and the adaptive grid construction method was used for the other landscapes. The black line indicates a unitless relative expected efficacy of the different grid sizes as indicated by the grid optimum estimation method.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.g003" xlink:type="simple"/>
</fig>
<fig id="pcbi.1006086.g004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.g004</object-id>
<label>Fig 4</label>
<caption>
<title>Transmission algorithm performance for estimated optimal grid size <inline-formula id="pcbi.1006086.e057"><alternatives><graphic id="pcbi.1006086.e057g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e057" xlink:type="simple"/><mml:math display="inline" id="M57"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>.</title>
<p>Run time in seconds for simulations reaching 10, 100, 1000 and 10000 cumulative infected nodes. The grids were constructed using the adaptive gridding method using the estimated optimal grid size <inline-formula id="pcbi.1006086.e058"><alternatives><graphic id="pcbi.1006086.e058g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e058" xlink:type="simple"/><mml:math display="inline" id="M58"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> for each of the six different landscapes.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.g004" xlink:type="simple"/>
</fig>
<p>The estimated optimal grid size, <inline-formula id="pcbi.1006086.e059"><alternatives><graphic id="pcbi.1006086.e059g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e059" xlink:type="simple"/><mml:math display="inline" id="M59"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, coincided with <inline-formula id="pcbi.1006086.e060"><alternatives><graphic id="pcbi.1006086.e060g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e060" xlink:type="simple"/><mml:math display="inline" id="M60"><mml:mrow><mml:msubsup><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">sim</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> for half of the combinations of landscapes and outbreak stages, meaning that the optimum grid estimation method worked well. However, for the situations where it was not the optimal grid size, it was generally very close to the optimal size, the most notable exception being for the uniformly random landscape at outbreak stage 10000 for which simulations using <inline-formula id="pcbi.1006086.e061"><alternatives><graphic id="pcbi.1006086.e061g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e061" xlink:type="simple"/><mml:math display="inline" id="M61"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> were 18.4% slower on average than for the optimal grid size <inline-formula id="pcbi.1006086.e062"><alternatives><graphic id="pcbi.1006086.e062g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e062" xlink:type="simple"/><mml:math display="inline" id="M62"><mml:mrow><mml:msubsup><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">sim</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula> (<xref ref-type="fig" rid="pcbi.1006086.g002">Fig 2</xref>, <xref ref-type="table" rid="pcbi.1006086.t004">Table 4</xref>).</p>
<table-wrap id="pcbi.1006086.t004" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.t004</object-id>
<label>Table 4</label> <caption><title>Comparison between predicted optimal grid size, <inline-formula id="pcbi.1006086.e063"><alternatives><graphic id="pcbi.1006086.e063g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e063" xlink:type="simple"/><mml:math display="inline" id="M63"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>, and best actual grid configuration apart from <inline-formula id="pcbi.1006086.e064"><alternatives><graphic id="pcbi.1006086.e064g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e064" xlink:type="simple"/><mml:math display="inline" id="M64"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>.</title></caption>
<alternatives>
<graphic id="pcbi.1006086.t004g" mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.t004" xlink:type="simple"/>
<table>
<colgroup>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
<col align="left" valign="middle"/>
</colgroup>
<thead>
<tr>
<th align="left"> </th>
<th align="center" colspan="4">Relative difference in run time.</th>
</tr>
<tr>
<th align="center" style="background-color:#E7E6E6">Outbreak stage (infected nodes)</th>
<th align="center" style="background-color:#E7E6E6">10</th>
<th align="center" style="background-color:#E7E6E6">100</th>
<th align="center" style="background-color:#E7E6E6">1000</th>
<th align="center" style="background-color:#E7E6E6">10000</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Random uniform</td>
<td align="center">-1.2%</td>
<td align="center">+1.2%</td>
<td align="center">-8.5%</td>
<td align="center">-18.4%</td>
</tr>
<tr>
<td align="left">Random mod. Clustering</td>
<td align="center">-6.0%</td>
<td align="center">-3.0%</td>
<td align="center">-3.5%</td>
<td align="center">+5.3%</td>
</tr>
<tr>
<td align="left">Random high clustering</td>
<td align="center">-0.3%</td>
<td align="center">+1.2%</td>
<td align="center">+7.1%</td>
<td align="center">+11.2%</td>
</tr>
<tr>
<td align="left">USA</td>
<td align="center">-4.9%</td>
<td align="center">-0.6%</td>
<td align="center">+1.4%</td>
<td align="center">+3.6%</td>
</tr>
<tr>
<td align="left">Sweden</td>
<td align="center">-14.4%</td>
<td align="center">+6.7%</td>
<td align="center">+20.6%</td>
<td align="center">+16.8%</td>
</tr>
<tr>
<td align="left">UK</td>
<td align="center">-8.6%</td>
<td align="center">-7.1%</td>
<td align="center">+3.2%</td>
<td align="center">+15.8%</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>For the different outbreak size thresholds and landscapes using the conditional subsample transmission algorithm with the adaptive grid construction method, the positive values indicate that <inline-formula id="pcbi.1006086.e065"><alternatives><graphic id="pcbi.1006086.e065g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e065" xlink:type="simple"/><mml:math display="inline" id="M65"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> performed best in the simulations. For these cases the numbers represent the relative increase in average run time when comparing <inline-formula id="pcbi.1006086.e066"><alternatives><graphic id="pcbi.1006086.e066g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e066" xlink:type="simple"/><mml:math display="inline" id="M66"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> to the second-to-optimal grid cell size. Negative values indicate that <inline-formula id="pcbi.1006086.e067"><alternatives><graphic id="pcbi.1006086.e067g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e067" xlink:type="simple"/><mml:math display="inline" id="M67"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> did not perform best in the simulations and show the relative decrease in average run time when comparing <inline-formula id="pcbi.1006086.e068"><alternatives><graphic id="pcbi.1006086.e068g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e068" xlink:type="simple"/><mml:math display="inline" id="M68"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> to the value of <italic>θ</italic> that gave the best performance.</p>
<p>No difference was evident in the number of time steps required in order to reach the different stages regardless of transmission algorithm and grid configuration, supporting our claim that the methods treat the dynamics of the outbreak equally (<xref ref-type="supplementary-material" rid="pcbi.1006086.s014">S4 Fig</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s015">S5 Fig</xref>). Incidence curves further supporting the identical behavior for the CE and CS method to the pairwise simulations using the estimated optimal grid size <inline-formula id="pcbi.1006086.e069"><alternatives><graphic id="pcbi.1006086.e069g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e069" xlink:type="simple"/><mml:math display="inline" id="M69"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> can be found as supplementary information (<xref ref-type="supplementary-material" rid="pcbi.1006086.s016">S6 Fig</xref>). Out of the 500 replicates for each of the 13 grid configurations, not all reached all outbreak stages. Information on the number of replicates that reached the different stages can be found in the supplementary material (<xref ref-type="supplementary-material" rid="pcbi.1006086.s001">S1 Table</xref>).</p>
<p>The regular grid construction method (<xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1A</xref>) is only suitable for creating a grid configuration for a landscape with uniform spatial node distribution. If the node distribution is heterogeneous (as is expected for most real landscapes), the estimated optimal grid configuration will not be close to the actual optimum. This is evident from <xref ref-type="supplementary-material" rid="pcbi.1006086.s017">S7 Fig</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s018">S8 Fig</xref> where the results of simulating outbreaks on the landscapes with heterogeneous node distribution using the regular gridding method are shown.</p>
<p>The comparison between the transmission algorithms presented in this paper with the FSR method presented in [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>] showed that the CS algorithm always performed best on outbreaks with up to 10000 cumulative infected nodes (<xref ref-type="fig" rid="pcbi.1006086.g005">Fig 5</xref>). For simulations that ran the entire course of outbreaks the FSR method performed better for <italic>Brand</italic> kernels with shape parameter <italic>a = 3</italic> and <italic>a = 4</italic>, while FSR and the CS algorithm was on par for shape <italic>a = 5</italic> (<xref ref-type="fig" rid="pcbi.1006086.g006">Fig 6</xref>).</p>
<fig id="pcbi.1006086.g005" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.g005</object-id>
<label>Fig 5</label>
<caption>
<title>Comparison of transmission algorithms to the FSR method for outbreaks of up to 10000 infected nodes.</title>
<p>Outliers represent the results from replicates where the epidemic died out early and consequently took considerably less time than larger outbreaks.</p>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.g005" xlink:type="simple"/>
</fig>
<fig id="pcbi.1006086.g006" position="float">
<object-id pub-id-type="doi">10.1371/journal.pcbi.1006086.g006</object-id>
<label>Fig 6</label>
<caption>
<title>Comparison of transmission algorithms to the FSR method for simulations of outbreaks that were allowed to run their full course.</title>
</caption>
<graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.g006" xlink:type="simple"/>
</fig>
</sec>
<sec id="sec014" sec-type="conclusions">
<title>Discussion</title>
<p>Stochastic disease simulation models are powerful tools for contingency planning and can be used to evaluate the efficiency of different control options [<xref ref-type="bibr" rid="pcbi.1006086.ref002">2</xref>,<xref ref-type="bibr" rid="pcbi.1006086.ref018">18</xref>,<xref ref-type="bibr" rid="pcbi.1006086.ref019">19</xref>]. However, a large number of replicates may have to be simulated to capture a representative range of possible outcomes; an issue that is amplified when different seeding conditions are included. Commonly, multiple control actions need to be considered [<xref ref-type="bibr" rid="pcbi.1006086.ref020">20</xref>,<xref ref-type="bibr" rid="pcbi.1006086.ref021">21</xref>], further inflating the number of simulations. Thus, computation time quickly becomes a limiting factor. We have introduced a novel algorithm for this purpose, denoted the conditional subsample method, and demonstrated that it yield substantial reduction of computational complexity. When compared to two other available optimization methods, it outperformed the conditional entry algorithm in almost all situations, and in most cases also the FSR algorithm.</p>
<p>We have in this study focused on spatially explicit simulation models, using as an application livestock disease models where farms are considered the infective unit. The introduced algorithm as well as the CE method [<xref ref-type="bibr" rid="pcbi.1006086.ref011">11</xref>] requires gridding of the spatial landscape (e.g. <xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1</xref>), making the potential for speed-up sensitive to the grid configuration. For this purpose, we have introduced a method for estimation of the optimal number of nodes per cell. The estimation is based on the simplifying assumption that nodes are distributed randomly in a unit square. As expected, the method performs well in identifying an optimal grid size when simulating outbreaks under such ideal conditions (<xref ref-type="fig" rid="pcbi.1006086.g003">Fig 3A</xref>).</p>
<p>However, this is far too crude an assumption for most instances, as node locations are usually not randomly distributed [<xref ref-type="bibr" rid="pcbi.1006086.ref016">16</xref>]. To see how well our optimal grid size estimation method holds when this assumption is violated, we also simulated outbreaks in two computer generated landscapes with different levels of clustering, as well as three empirical landscapes of farm locations: Sweden, the UK and the USA. The analysis showed that the simulations based on the approximated optimal grid size did not perform well on these landscapes using a regular grid configuration (<xref ref-type="fig" rid="pcbi.1006086.g001">Fig 1A</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s017">S7 Fig</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s017">S7 Fig</xref>). However, when using adaptive grid sizes, targeting equal numbers of farms per cell, the simulations based on the estimated optimum performed very well compared to the simulations with other grid configurations (<xref ref-type="fig" rid="pcbi.1006086.g003">Fig 3</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s011">S1 Fig</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s012">S2 Fig</xref>). This is encouraging, suggesting that our optimal grid size estimation method can be used to decide on the grid structure for a wide range of spatial configurations. Importantly, the simulations based on the estimated optimal grid size (<inline-formula id="pcbi.1006086.e070"><alternatives><graphic id="pcbi.1006086.e070g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e070" xlink:type="simple"/><mml:math display="inline" id="M70"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>) were substantially faster than the pairwise simulations, both during early and late stages of the outbreak (<xref ref-type="fig" rid="pcbi.1006086.g002">Fig 2</xref>, <xref ref-type="fig" rid="pcbi.1006086.g003">Fig 3</xref>, <xref ref-type="fig" rid="pcbi.1006086.g004">Fig 4</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s011">S1 Fig</xref>, <xref ref-type="supplementary-material" rid="pcbi.1006086.s012">S2 Fig</xref>). The observed speed-up when using the estimated optimal grid size ranged from a factor of 2.9 for the random high clustering landscape (161 nodes/cell, 10 infected nodes) to a factor of 500.0 for the USA (333 nodes/cell, 10000 infected nodes; <xref ref-type="fig" rid="pcbi.1006086.g002">Fig 2</xref>) with the CS algorithm.</p>
<p>The estimation of <inline-formula id="pcbi.1006086.e071"><alternatives><graphic id="pcbi.1006086.e071g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e071" xlink:type="simple"/><mml:math display="inline" id="M71"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula> was based on simplified representations of the landscapes. Specifically, for in order to achieve the best estimation the transmissibility and susceptibility of the nodes were based on the median or maximum farm size across the un-simplified landscape for the CE and CS algorithms, respectively. The reason for this difference is that in the CE algorithm the transmissibility used for evaluating the entry into a cell or not is based on a single infectious node which corresponds closer to the median than the maximum farm size. In the CS algorithm, however, the transmissibility used is that of the most transmissible farm in cell <italic>a</italic> for which maximum farm size is a better proxy than the median.</p>
<p>To further investigate the performance of the gridding algorithms and make comparisons to the FSR algorithm, we ran simulations with different spatial kernels, differing primarily in tail fatness [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>]. We focused on the USA demography because this is the system the FSR method was introduced for. It is also the largest farm population and therefore where computational gain is the most important. <xref ref-type="fig" rid="pcbi.1006086.g005">Fig 5</xref> shows that for all considered kernel shapes, the CS algorithm (using a grid configuration determined by the method described in section <italic>Estimation of optimal grid cell size</italic>) again outperformed the CE and pairwise methods. When comparing runtimes with the FSR method, the CS algorithm was consistently faster in terms of simulations to the first 10000 infected farms, whereas the results differed between kernel types in terms of computation time for entire outbreaks. One likely reason for this is that the FSR method works on susceptible farms and as they become fewer due to being infected and removed, the complexity of the algorithm decreases. The algorithms presented in this paper on the other hand has a complexity that grows with the number of infected farms and so, will be faster during the initial stages of the outbreak and lose relative speed as the epidemic grows. As such, there are instances where the FSR would be quicker, particularly if the simulated outbreaks are extremely large.</p>
<p>The FSR method introduces a slight approximation unless a suitable grid size for the image of infection can be found. No apparent difference in terms of precision is revealed in <xref ref-type="fig" rid="pcbi.1006086.g005">Fig 5</xref> for the <italic>Brand</italic> kernels; all simulation methods provide similar estimates of number of time steps to reach either 10000 infected farms (<xref ref-type="fig" rid="pcbi.1006086.g005">Fig 5</xref>) or end of outbreak (<xref ref-type="fig" rid="pcbi.1006086.g006">Fig 6</xref>). Thus, the issue of approximation is of less concern in terms of choosing algorithm for kernels such as these. However, for the <italic>Buhnerkempe</italic> kernel which is particularly local, the grid requires a very fine resolution something that increases the computational burden significantly. The effect of increasing the grid resolution can be seen in the lower right panel of <xref ref-type="fig" rid="pcbi.1006086.g005">Fig 5</xref> where the run time of FSR is markedly higher than for the other kernels. The grid resolution used for that simulation was high, but still too coarse to avoid introducing a slight error (upper right panel) and remedying that with an even finer grid would make the method even less competitive. It should be noted that the CS and CE algorithms are exact only beyond the discretizing into daily time steps. The Gillespie algorithm [<xref ref-type="bibr" rid="pcbi.1006086.ref022">22</xref>] can be used to model the continuous processes exactly, but to the knowledge of these authors, no optimization for this algorithm exists for the system considered here, and Brand et al. [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>] showed for simulation of FMD outbreaks in the USA that the Gillespie algorithm is computationally very expensive. Beyond computation time, the discretization can be justified by the fact many process are cyclical at a finer resolution than the time scale of discretization (i.e. daily discretization and diurnal cycles), or that data is typically available at discrete time scales [<xref ref-type="bibr" rid="pcbi.1006086.ref010">10</xref>].</p>
<p>To explore the efficiency of the set of methods described, we have applied them to outbreaks of FMD. This is a valuable approach, because we demonstrate the applicability of the method for relevant situations. Yet, a potential objection emerges–do the results hold outside of the context we have explored? It is infeasible to consider all possible applications of the methodology; stochastic simulations of spatially explicit kernel models are used for a wide range of diseases and questions (e.g. [<xref ref-type="bibr" rid="pcbi.1006086.ref006">6</xref>,<xref ref-type="bibr" rid="pcbi.1006086.ref012">12</xref>–<xref ref-type="bibr" rid="pcbi.1006086.ref014">14</xref>]). However, the study design along with the results provide some useful insight. We simulated outbreaks in a variable assortment of spatial landscapes with varying levels of clustering and farm densities, and found that our optimization method was efficient and constantly identified a grid configuration that sped up computations substantially, ranging from 100 to 500 times faster than the pairwise estimation for outbreaks of substantial size (10000 infected nodes). Next, we used the same optimization method to identify the optimal grid configuration for different kernels and found that in this novel context, the CS method improved computation time by a factor of 600 to 800, depending on kernel. Here it also holds an edge over the FSR method when considering infections up to 10000 farms and vary in terms of computation time for extreme outbreaks (<xref ref-type="fig" rid="pcbi.1006086.g006">Fig 6</xref>).</p>
<p>These simulations suggest that the CS method is a good candidate to consider for stochastic simulations of disease outbreak. Based on <xref ref-type="fig" rid="pcbi.1006086.g006">Fig 6</xref>, the FSR algorithm may be faster for some applications, particularly when the simulations are expected to result in very large outbreaks. However, we are encouraged that in the instances where the CS algorithm performs slower than FSR, the difference is not vast (approximately a factor of two; <xref ref-type="fig" rid="pcbi.1006086.g006">Fig 6</xref>). Also, the FSR method was found to have some issues with very local kernels such as the one used in this work, so for such cases the CS or even the CE method would be more suitable.</p>
<p>We argue that beyond the fast computation time, one strength of the CS algorithm lies in its simplicity. Because it does not approximate the epidemic model, it requires no tweaking to avoid loss of precision. As shown in the supplement (<xref ref-type="supplementary-material" rid="pcbi.1006086.s003">S1 Appendix</xref>), the algorithm requires little additional code compared to the pairwise computation. In addition, the code structure is easy to combine with other processes. For instance, we have in our own ongoing work found it straightforward to combine a local transmission process, implemented with the CS algorithm, with a model for animal movements that leads to transmission over large distances [<xref ref-type="bibr" rid="pcbi.1006086.ref023">23</xref>] (see supplement <xref ref-type="supplementary-material" rid="pcbi.1006086.s003">S1 Appendix</xref> for example code).</p>
<p>Thus, we conclude that the transmission algorithms considered in this study are suitable for epidemic modeling of diseases where local area spread, modeled with a spatial kernel, is an important factor. By using the CS gridding approach, together with the introduced optimal grid cell size estimation, the computation can be sped up by several orders of magnitude. This allows for exploration of more scenarios, facilitating the use of disease simulation models for policy recommendations.</p>
</sec>
<sec id="sec015">
<title>Supporting information</title>
<supplementary-material id="pcbi.1006086.s001" mimetype="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s001" xlink:type="simple">
<label>S1 Table</label>
<caption>
<title>Summary of outbreak sizes for simulations.</title>
<p>Summary of the amount of replicates that reached 10, 100, 1000 and 10000 cumulative infected nodes using the original parameter values fitted for Cumbria to the 2001 UK FMD outbreak in [<xref ref-type="bibr" rid="pcbi.1006086.ref015">15</xref>] as well as with susceptibility scaled up by a factor of 200. Initial simulation with original parameter values were only performed with the conditional subsample algorithm. Simulations with scaled parameters were performed with all three algorithms (conditional subsample algorithm, CS; conditional entry, CE; pairwise, PW). The Cumbria parameters were kept for the UK simulations but not for the other landscapes.</p>
<p>(XLSX)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s002" mimetype="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s002" xlink:type="simple">
<label>S2 Table</label>
<caption>
<title>Summary of landscapes.</title>
<p>Number of nodes (n) and spatial clustering measure Ripley’s L for different distances r. A value close to one indicates homogenous spatial distribution of nodes.</p>
<p>(XLSX)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s003" mimetype="application/zip" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s003" xlink:type="simple">
<label>S1 Appendix</label>
<caption>
<title>Disease simulation C++ code.</title>
<p>(ZIP)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s004" mimetype="application/zip" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s004" xlink:type="simple">
<label>S2 Appendix</label>
<caption>
<title>Optimum grid size algorithm C++ code.</title>
<p>(ZIP)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s005" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s005" xlink:type="simple">
<label>S3 Appendix</label>
<caption>
<title>Formal proof of the exactness of the CE algorithm.</title>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s006" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s006" xlink:type="simple">
<label>S4 Appendix</label>
<caption>
<title>Formal proof showing that the number of expected kernel calls are the same for the CE algorithm as for the CS algorithm.</title>
<p>(PDF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s007" mimetype="application/x-7z-compressed" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s007" xlink:type="simple">
<label>S1 Dataset</label>
<caption>
<title>An instance of the US cattle farm population as generated by FLAPS.</title>
<p>(7Z)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s008" mimetype="application/x-7z-compressed" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s008" xlink:type="simple">
<label>S2 Dataset</label>
<caption>
<title>Randomly generated farm population with high degree of clustering.</title>
<p>(7Z)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s009" mimetype="application/x-7z-compressed" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s009" xlink:type="simple">
<label>S3 Dataset</label>
<caption>
<title>Randomly generated farm population with moderate degree of clustering.</title>
<p>(7Z)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s010" mimetype="application/x-7z-compressed" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s010" xlink:type="simple">
<label>S4 Dataset</label>
<caption>
<title>Randomly generated farm population with uniform spatial distribution.</title>
<p>(7Z)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s011" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s011" xlink:type="simple">
<label>S1 Fig</label>
<caption>
<title>Results from outbreak simulations with the conditional subsample transmission algorithm.</title>
<p>Average run time in seconds for each tested grid cell size up to and including the given outbreak stages (* indicates estimated optimal grid cell size <inline-formula id="pcbi.1006086.e072"><alternatives><graphic id="pcbi.1006086.e072g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e072" xlink:type="simple"/><mml:math display="inline" id="M72"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>). The 5th and 95th percentiles are indicated by the ranges (main panels). Each combination of landscape and grid configuration using the CS algorithm, as well as simulations with the pairwise algorithm for comparison was simulated with 500 replicates. The landscapes were (panels A-F): random uniform, random moderate clustering, random high clustering, USA, Sweden, UK. The regular grid construction method was used for the uniform random landscape and the adaptive grid construction method was used for the other landscapes. The black line indicates a unitless relative expected efficacy of the different grid sizes as indicated by the grid optimum estimation method.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s012" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s012" xlink:type="simple">
<label>S2 Fig</label>
<caption>
<title>Results from outbreak simulations with the conditional entry algorithm and adaptive gridding.</title>
<p>Average run time in seconds for each tested grid cell size up to and including the given outbreak stages (* indicates estimated optimal grid cell size <inline-formula id="pcbi.1006086.e073"><alternatives><graphic id="pcbi.1006086.e073g" mimetype="image" position="anchor" xlink:href="info:doi/10.1371/journal.pcbi.1006086.e073" xlink:type="simple"/><mml:math display="inline" id="M73"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>). The 5th and 95th percentiles are indicated by the ranges (main panels). Each combination of landscape and grid configuration using the CE algorithm, as well as simulations with the pairwise algorithm for comparison was simulated with 500 replicates. The landscapes were (panels A-F): random uniform, random moderate clustering, random high clustering, USA, Sweden, UK. The regular grid construction method was used for the uniform random landscape and the adaptive grid construction method was used for the other landscapes. The black line indicates a unitless relative expected efficacy of the different grid sizes as indicated by the grid optimum estimation method.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s013" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s013" xlink:type="simple">
<label>S3 Fig</label>
<caption>
<title>Predicted optimal gridding configurations.</title>
<p>The estimated number of average kernel calls per cell required to simulate one time step of infection spreading from one infectious farm in each cell to all other cells on a simplified spatially uniform representation of the original landscapes. On the x-axis are the grid configurations as the square root of the total number of cells in the regular grid (κ). Results shown for the two different summary statistics median and max number of animals on each node used for calculating transmissibility and susceptibility in the estimation.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s014" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s014" xlink:type="simple">
<label>S4 Fig</label>
<caption>
<title>The cumulative number of infected nodes at the indicated outbreak stages for the different combinations of landscape and grid configurations for the CS algorithm as well as for the pairwise algorithm for comparison.</title>
<p>The CS algorithm consistently gives the same number of infected nodes as the pairwise algorithm.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s015" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s015" xlink:type="simple">
<label>S5 Fig</label>
<caption>
<title>The cumulative number of infected nodes at the indicated outbreak stages for the different combinations of landscape and grid configurations for the CE algorithm as well as for the pairwise algorithm for comparison.</title>
<p>The CE algorithm consistently gives the same number of infected nodes as the pairwise algorithm.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s016" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s016" xlink:type="simple">
<label>S6 Fig</label>
<caption>
<title>Incidence curves for simulations with the pairwise, conditional subsample and conditional entry algorithms.</title>
<p>The x-axis shows time step and the y-axis shows the mean cumulative number of infected nodes over all the replicates, including the replicates for where the epidemic had died out which is why the curve start to decline after some time.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s017" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s017" xlink:type="simple">
<label>S7 Fig</label>
<caption>
<title>Results from outbreak simulations with the conditional subsample transmission algorithm and regular grid construction method.</title>
<p>Average run time in seconds for each tested grid cell size up to and including the given outbreak stages (* indicates estimated optimal grid cell size). The 5th and 95th percentiles are indicated by the ranges (main panels). Each combination of landscape and grid configuration using the CS algorithm, as well as simulations with the pairwise algorithm for comparison using 500 replicates. Only the landscapes with heterogeneous node distribution are shown (panels A-E): random moderate clustering, random high clustering, USA, Sweden and UK. The black line indicates a unitless relative expected efficacy of the different grid sizes as indicated by the grid optimum estimation method, note the skew away from the predicted optimum.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
<supplementary-material id="pcbi.1006086.s018" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1006086.s018" xlink:type="simple">
<label>S8 Fig</label>
<caption>
<title>Results from outbreak simulations with the conditional entry algorithm and regular gridding.</title>
<p>Average run time in seconds for each tested grid cell size up to and including the given outbreak stages (* indicates estimated optimal grid cell size). The 5th and 95th percentile are indicated by the ranges (main panels). Each combination of landscape and grid configuration using the CE algorithm, as well as simulations with the pairwise algorithm for comparison was simulated with 500 replicates. Only the landscapes with heterogeneous node distribution are shown (panels A-E): random moderate clustering, random high clustering, USA, Sweden, UK. The black line indicates a unitless relative expected efficacy of the different grid sizes as indicated by the grid optimum estimation method, note the skew away from the predicted optimum.</p>
<p>(TIF)</p>
</caption>
</supplementary-material>
</sec>
</body>
<back>
<ack>
<p>The authors thank Sam Brand for supplying the FSR code and for valuable input on its implementation. We also thank Chris Burdett for providing the data of the US farm population, as well as the Swedish Board of Agriculture, and the Department for Environment, Food and Rural Affairs for providing the data of the Swedish and the UK farm populations respectively.</p>
<p>Simulations were performed on resources provided by the Swedish National Infrastructure for Computing (SNIC).</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1006086.ref001"><label>1</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gates</surname> <given-names>MC</given-names></name>, <name name-style="western"><surname>Woolhouse</surname> <given-names>MEJ</given-names></name>. <article-title>Controlling infectious disease through the targeted manipulation of contact network structure</article-title>. <source>Epidemics</source>. <year>2015</year>;<volume>12</volume>: <fpage>11</fpage>–<lpage>19</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.epidem.2015.02.008" xlink:type="simple">10.1016/j.epidem.2015.02.008</ext-link></comment> <object-id pub-id-type="pmid">26342238</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref002"><label>2</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Woolhouse</surname> <given-names>M</given-names></name>. <article-title>How to make predictions about future infectious disease risks</article-title>. <source>Philos Trans R Soc Lond B Biol Sci</source>. <year>2011</year>;<volume>366</volume>: <fpage>2045</fpage>–<lpage>2054</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1098/rstb.2010.0387" xlink:type="simple">10.1098/rstb.2010.0387</ext-link></comment> <object-id pub-id-type="pmid">21624924</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref003"><label>3</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lindström</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Lewerin</surname> <given-names>SS</given-names></name>, <name name-style="western"><surname>Wennergren</surname> <given-names>U</given-names></name>. <article-title>Influence on disease spread dynamics of herd characteristics in a structured livestock industry</article-title>. <source>J R Soc Interface</source>. <year>2012</year>;<volume>9</volume>: <fpage>1287</fpage>–<lpage>1294</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1098/rsif.2011.0625" xlink:type="simple">10.1098/rsif.2011.0625</ext-link></comment> <object-id pub-id-type="pmid">22112656</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref004"><label>4</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kraemer</surname> <given-names>MUG</given-names></name>, <name name-style="western"><surname>Faria</surname> <given-names>NR</given-names></name>, <name name-style="western"><surname>Reiner</surname> <given-names>RC</given-names> <suffix>Jr</suffix></name>, <name name-style="western"><surname>Golding</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Nikolay</surname> <given-names>B</given-names></name>, <name name-style="western"><surname>Stasse</surname> <given-names>S</given-names></name>, <etal>et al</etal>. <article-title>Spread of yellow fever virus outbreak in Angola and the Democratic Republic of the Congo 2015–16: a modelling study</article-title>. <source>Lancet Infect Dis</source>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/S1473-3099(16)30513-8" xlink:type="simple">10.1016/S1473-3099(16)30513-8</ext-link></comment> <object-id pub-id-type="pmid">28017559</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref005"><label>5</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Keeling</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Woolhouse</surname> <given-names>MEJ</given-names></name>, <name name-style="western"><surname>Shaw</surname> <given-names>DJ</given-names></name>, <name name-style="western"><surname>Matthews</surname> <given-names>L</given-names></name>, <name name-style="western"><surname>Chase-Topping</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Haydon</surname> <given-names>DT</given-names></name>, <etal>et al</etal>. <article-title>Dynamics of the 2001 UK Foot and Mouth Epidemic: Stochastic Dispersal in a Heterogeneous Landscape</article-title>. <source>Science</source>. <year>2001</year>;<volume>294</volume>: <fpage>813</fpage>–<lpage>817</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1126/science.1065973" xlink:type="simple">10.1126/science.1065973</ext-link></comment> <object-id pub-id-type="pmid">11679661</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref006"><label>6</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hayama</surname> <given-names>Y</given-names></name>, <name name-style="western"><surname>Yamamoto</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Kobayashi</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Muroga</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Tsutsui</surname> <given-names>T</given-names></name>. <article-title>Mathematical model of the 2010 foot-and-mouth disease epidemic in Japan and evaluation of control measures</article-title>. <source>Prev Vet Med</source>. <year>2013</year>;<volume>112</volume>: <fpage>183</fpage>–<lpage>193</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.prevetmed.2013.08.010" xlink:type="simple">10.1016/j.prevetmed.2013.08.010</ext-link></comment> <object-id pub-id-type="pmid">24034814</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref007"><label>7</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Buhnerkempe</surname> <given-names>MG</given-names></name>, <name name-style="western"><surname>Tildesley</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Lindström</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Grear</surname> <given-names>DA</given-names></name>, <name name-style="western"><surname>Portacci</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Miller</surname> <given-names>RS</given-names></name>, <etal>et al</etal>. <article-title>The impact of movements and animal density on continental scale cattle disease outbreaks in the United States</article-title>. <source>PLoS ONE</source>. <year>2014</year>;<volume>9</volume>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pone.0091724" xlink:type="simple">10.1371/journal.pone.0091724</ext-link></comment> <object-id pub-id-type="pmid">24670977</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref008"><label>8</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Guis</surname> <given-names>H</given-names></name>, <name name-style="western"><surname>Caminade</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Calvete</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Morse</surname> <given-names>AP</given-names></name>, <name name-style="western"><surname>Tran</surname> <given-names>A</given-names></name>, <name name-style="western"><surname>Baylis</surname> <given-names>M</given-names></name>. <article-title>Modelling the effects of past and future climate on the risk of bluetongue emergence in Europe</article-title>. <source>J R Soc Interface</source>. <year>2012</year>;<volume>9</volume>: <fpage>339</fpage>–<lpage>350</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1098/rsif.2011.0255" xlink:type="simple">10.1098/rsif.2011.0255</ext-link></comment> <object-id pub-id-type="pmid">21697167</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref009"><label>9</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gubbins</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Richardson</surname> <given-names>J</given-names></name>, <name name-style="western"><surname>Baylis</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Wilson</surname> <given-names>AJ</given-names></name>, <name name-style="western"><surname>Abrahantes</surname> <given-names>JC</given-names></name>. <article-title>Modelling the continental-scale spread of Schmallenberg virus in Europe: Approaches and challenges</article-title>. <source>Prev Vet Med</source>. <year>2014</year>;<volume>116</volume>: <fpage>404</fpage>–<lpage>411</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.prevetmed.2014.02.004" xlink:type="simple">10.1016/j.prevetmed.2014.02.004</ext-link></comment> <object-id pub-id-type="pmid">24630403</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref010"><label>10</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Brand</surname> <given-names>SPC</given-names></name>, <name name-style="western"><surname>Tildesley</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Keeling</surname> <given-names>MJ</given-names></name>. <article-title>Rapid simulation of spatial epidemics: A spectral method</article-title>. <source>J Theor Biol</source>. <year>2015</year>;<volume>370</volume>: <fpage>121</fpage>–<lpage>134</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.jtbi.2015.01.027" xlink:type="simple">10.1016/j.jtbi.2015.01.027</ext-link></comment> <object-id pub-id-type="pmid">25659478</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref011"><label>11</label><mixed-citation publication-type="book" xlink:type="simple"><name name-style="western"><surname>Keeling</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Rohani</surname> <given-names>P</given-names></name>. <chapter-title>Modeling infectious diseases in humans and animals</chapter-title>. <edition>1st ed</edition>. <publisher-name>Princeton University Press</publisher-name>; <year>2008</year>.</mixed-citation></ref>
<ref id="pcbi.1006086.ref012"><label>12</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Boender</surname> <given-names>GJ</given-names></name>, <name name-style="western"><surname>van Roermund</surname> <given-names>HJW</given-names></name>, <name name-style="western"><surname>de Jong</surname> <given-names>MCM</given-names></name>, <name name-style="western"><surname>Hagenaars</surname> <given-names>TJ</given-names></name>. <article-title>Transmission risks and control of foot-and-mouth disease in The Netherlands: Spatial patterns</article-title>. <source>Epidemics</source>. <year>2010</year>;<volume>2</volume>: <fpage>36</fpage>–<lpage>47</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.epidem.2010.03.001" xlink:type="simple">10.1016/j.epidem.2010.03.001</ext-link></comment> <object-id pub-id-type="pmid">21352775</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref013"><label>13</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Rorres</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Pelletier</surname> <given-names>STK</given-names></name>, <name name-style="western"><surname>Smith</surname> <given-names>G</given-names></name>. <article-title>Stochastic modeling of animal epidemics using data collected over three different spatial scales</article-title>. <source>Epidemics</source>. <year>2011</year>;<volume>3</volume>: <fpage>61</fpage>–<lpage>70</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.epidem.2011.02.003" xlink:type="simple">10.1016/j.epidem.2011.02.003</ext-link></comment> <object-id pub-id-type="pmid">21552370</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref014"><label>14</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Szmaragd</surname> <given-names>C</given-names></name>, <name name-style="western"><surname>Wilson</surname> <given-names>AJ</given-names></name>, <name name-style="western"><surname>Carpenter</surname> <given-names>S</given-names></name>, <name name-style="western"><surname>Wood</surname> <given-names>JLN</given-names></name>, <name name-style="western"><surname>Mellor</surname> <given-names>PS</given-names></name>, <name name-style="western"><surname>Gubbins</surname> <given-names>S</given-names></name>. <article-title>A Modeling Framework to Describe the Transmission of Bluetongue Virus within and between Farms in Great Britain</article-title>. <source>PLOS ONE</source>. <year>2009</year>;<volume>4</volume>: <fpage>e7741</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pone.0007741" xlink:type="simple">10.1371/journal.pone.0007741</ext-link></comment> <object-id pub-id-type="pmid">19890400</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref015"><label>15</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tildesley</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Deardon</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Savill</surname> <given-names>NJ</given-names></name>, <name name-style="western"><surname>Bessell</surname> <given-names>PR</given-names></name>, <name name-style="western"><surname>Brooks</surname> <given-names>SP</given-names></name>, <name name-style="western"><surname>Woolhouse</surname> <given-names>MEJ</given-names></name>, <etal>et al</etal>. <article-title>Accuracy of models for the 2001 foot-and-mouth epidemic</article-title>. <source>Proc R Soc Lond B Biol Sci</source>. <year>2008</year>;<volume>275</volume>: <fpage>1459</fpage>–<lpage>1468</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1098/rspb.2008.0006" xlink:type="simple">10.1098/rspb.2008.0006</ext-link></comment> <object-id pub-id-type="pmid">18364313</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref016"><label>16</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lindström</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Håkansson</surname> <given-names>N</given-names></name>, <name name-style="western"><surname>Wennergren</surname> <given-names>U</given-names></name>. <article-title>The shape of the spatial kernel and its implications for biological invasions in patchy environments</article-title>. <source>Proc R Soc Lond B Biol Sci</source>. <year>2011</year>;<volume>278</volume>: <fpage>1564</fpage>–<lpage>1571</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1098/rspb.2010.1902" xlink:type="simple">10.1098/rspb.2010.1902</ext-link></comment> <object-id pub-id-type="pmid">21047854</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref017"><label>17</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Burdett</surname> <given-names>CL</given-names></name>, <name name-style="western"><surname>Kraus</surname> <given-names>BR</given-names></name>, <name name-style="western"><surname>Garza</surname> <given-names>SJ</given-names></name>, <name name-style="western"><surname>Miller</surname> <given-names>RS</given-names></name>, <name name-style="western"><surname>Bjork</surname> <given-names>KE</given-names></name>. <article-title>Simulating the Distribution of Individual Livestock Farms and Their Populations in the United States: An Example Using Domestic Swine (Sus scrofa domesticus) Farms</article-title>. <source>PLOS ONE</source>. <year>2015</year>;<volume>10</volume>: <fpage>e0140338</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pone.0140338" xlink:type="simple">10.1371/journal.pone.0140338</ext-link></comment> <object-id pub-id-type="pmid">26571497</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref018"><label>18</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Keeling</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Woolhouse</surname> <given-names>MEJ</given-names></name>, <name name-style="western"><surname>May</surname> <given-names>RM</given-names></name>, <name name-style="western"><surname>Davies</surname> <given-names>G</given-names></name>, <name name-style="western"><surname>Grenfell</surname> <given-names>BT</given-names></name>. <article-title>Modelling vaccination strategies against foot-and-mouth disease</article-title>. <source>Nature</source>. <year>2003</year>;<volume>421</volume>: <fpage>136</fpage>–<lpage>142</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nature01343" xlink:type="simple">10.1038/nature01343</ext-link></comment> <object-id pub-id-type="pmid">12508120</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref019"><label>19</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Shea</surname> <given-names>K</given-names></name>, <name name-style="western"><surname>Tildesley</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Runge</surname> <given-names>MC</given-names></name>, <name name-style="western"><surname>Fonnesbeck</surname> <given-names>CJ</given-names></name>, <name name-style="western"><surname>Ferrari</surname> <given-names>MJ</given-names></name>. <article-title>Adaptive Management and the Value of Information: Learning Via Intervention in Epidemiology</article-title>. <source>PLOS Biol</source>. <year>2014</year>;<volume>12</volume>: <fpage>e1001970</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pbio.1001970" xlink:type="simple">10.1371/journal.pbio.1001970</ext-link></comment> <object-id pub-id-type="pmid">25333371</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref020"><label>20</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tildesley</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Savill</surname> <given-names>NJ</given-names></name>, <name name-style="western"><surname>Shaw</surname> <given-names>DJ</given-names></name>, <name name-style="western"><surname>Deardon</surname> <given-names>R</given-names></name>, <name name-style="western"><surname>Brooks</surname> <given-names>SP</given-names></name>, <name name-style="western"><surname>Woolhouse</surname> <given-names>MEJ</given-names></name>, <etal>et al</etal>. <article-title>Optimal reactive vaccination strategies for a foot-and-mouth outbreak in the UK</article-title>. <source>Nature</source>. <year>2006</year>;<volume>440</volume>: <fpage>83</fpage>–<lpage>86</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/nature04324" xlink:type="simple">10.1038/nature04324</ext-link></comment> <object-id pub-id-type="pmid">16511494</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref021"><label>21</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tildesley</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Bessell</surname> <given-names>PR</given-names></name>, <name name-style="western"><surname>Keeling</surname> <given-names>MJ</given-names></name>, <name name-style="western"><surname>Woolhouse</surname> <given-names>MEJ</given-names></name>. <article-title>The role of pre-emptive culling in the control of foot-and-mouth disease</article-title>. <source>Proc R Soc Lond B Biol Sci</source>. <year>2009</year>;<volume>276</volume>: <fpage>3239</fpage>–<lpage>3248</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1098/rspb.2009.0427" xlink:type="simple">10.1098/rspb.2009.0427</ext-link></comment> <object-id pub-id-type="pmid">19570791</object-id></mixed-citation></ref>
<ref id="pcbi.1006086.ref022"><label>22</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gillespie</surname> <given-names>DT</given-names></name>. <article-title>Exact stochastic simulation of coupled chemical reactions</article-title>. <source>J Phys Chem</source>. <year>1977</year>;<volume>81</volume>: <fpage>2340</fpage>–<lpage>2361</lpage>.</mixed-citation></ref>
<ref id="pcbi.1006086.ref023"><label>23</label><mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Lindström</surname> <given-names>T</given-names></name>, <name name-style="western"><surname>Grear</surname> <given-names>DA</given-names></name>, <name name-style="western"><surname>Buhnerkempe</surname> <given-names>M</given-names></name>, <name name-style="western"><surname>Webb</surname> <given-names>CT</given-names></name>, <name name-style="western"><surname>Miller</surname> <given-names>RS</given-names></name>, <name name-style="western"><surname>Portacci</surname> <given-names>K</given-names></name>, <etal>et al</etal>. <article-title>A Bayesian Approach for Modeling Cattle Movements in the United States: Scaling up a Partially Observed Network</article-title>. <source>PLOS ONE</source>. <year>2013</year>;<volume>8</volume>: <fpage>e53432</fpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pone.0053432" xlink:type="simple">10.1371/journal.pone.0053432</ext-link></comment> <object-id pub-id-type="pmid">23308223</object-id></mixed-citation></ref>
</ref-list>
</back>
</article>